[
  {
    "comment": "/**\n * Mixin. Provide Row Level Security based on Access Control List\n * @mixin\n */",
    "meta": {
      "range": [
        6863,
        6876
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 256,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008821",
        "name": "aclRls",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin. Provide Row Level Security based on Access Control List",
    "kind": "mixin",
    "name": "aclRls",
    "longname": "aclRls",
    "scope": "global",
    "params": [],
    "___id": "T000002R000864",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Provide Attribute Level Security\n * @mixin\n */",
    "meta": {
      "range": [
        6945,
        7327
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 264,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008825",
        "name": "als",
        "type": "ObjectExpression",
        "value": "{\"getallroles\":\"\",\"getallstates\":\"\"}"
      }
    },
    "description": "Mixin. Provide Attribute Level Security",
    "kind": "mixin",
    "name": "als",
    "longname": "als",
    "scope": "global",
    "params": [],
    "___id": "T000002R000865",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in entity. Method should return all possible roles\n   * @published\n   * @abstract\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7107,
        7137
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 271,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008828",
        "name": "getallroles",
        "type": "FunctionExpression"
      }
    },
    "description": "Must be implemented in entity. Method should return all possible roles",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "getallroles",
    "longname": "als.getallroles",
    "kind": "function",
    "memberof": "als",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000866",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in entity. Method should return all possible states\n   * @published\n   * @abstract\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7294,
        7325
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 278,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008832",
        "name": "getallstates",
        "type": "FunctionExpression"
      }
    },
    "description": "Must be implemented in entity. Method should return all possible states",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "getallstates",
    "longname": "als.getallstates",
    "kind": "function",
    "memberof": "als",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000867",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Singleton instance of UnityBase application. Allow direct access to the database connections, blob stores,\n * HTTP endpoints (full control on HTTP request & response) registration, read domain and server config.\n *\n * Mixes EventEmitter, and server will emit:\n *\n *  - `endpointName + ':before'` event before endpoint handler  execution\n *  - `endpointName + ':after'` event in case neither exception is raised nor App.preventDefault()\n *  is called inside endpoint handler\n *\n *\n     const App = require('@unitybase/ub').App\n     // Register public (accessible without authentication) endpoint\n     App.registerEndpoint('echoToFile', echoToFile, false)\n\n     // write custom request body to file FIXTURES/req and echo file back to client\n     // @param {THTTPRequest} req\n     // @param {THTTPResponse} resp\n     function echoToFile (req, resp) {\n       var fs = require('fs')\n       fs.writeFileSync(path.join(FIXTURES, 'req'), req.read('bin'))\n       resp.statusCode = 200\n       resp.writeEnd(fs.readFileSync(path.join(FIXTURES, 'req'), {encoding: 'bin'}))\n     }\n\n     //Before getDocument requests\n     //@param {THTTPRequest} req\n     //@param {THTTPResponse} resp\n     function doSomethingBeforeGetDocumentCall(req, resp){\n       console.log('User with ID', Session.userID, 'try to get document')\n     }\n     // Adds hook called before each call to getDocument endpoint\n     App.on('getDocument:before', doSomethingBeforeGetDocumentCall)\n\n     const querystring = require('querystring')\n     //\n     //After getDocument requests\n     //@param {THTTPRequest} req\n     //@param {THTTPResponse} resp\n     function doSomethingAfterGetDocumentCall(req, resp){\n       params = querystring.parse(req.parameters)\n       console.log('User with ID', Session.userID, 'obtain document using params',  params)\n     }\n     App.on('getDocument:after', doSomethingAfterGetDocumentCall)\n\n *\n * To prevent endpoint handler execution App.preventDefault() can be used inside `:before` handler.\n *\n * @class App\n * @mixes EventEmitter\n */",
    "meta": {
      "filename": "App.js",
      "lineno": 14,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "classdesc": "<p>Singleton instance of UnityBase application. Allow direct access to the database connections, blob stores,\nHTTP endpoints (full control on HTTP request &amp; response) registration, read domain and server config.</p>\n<p>Mixes EventEmitter, and server will emit:</p>\n<ul>\n<li><code>endpointName + ':before'</code> event before endpoint handler  execution</li>\n<li><code>endpointName + ':after'</code> event in case neither exception is raised nor App.preventDefault()\nis called inside endpoint handler</li>\n</ul>\n<pre class=\"prettyprint source\"><code> const App = require('@unitybase/ub').App\n // Register public (accessible without authentication) endpoint\n App.registerEndpoint('echoToFile', echoToFile, false)\n\n // write custom request body to file FIXTURES/req and echo file back to client\n // @param {THTTPRequest} req\n // @param {THTTPResponse} resp\n function echoToFile (req, resp) {\n   var fs = require('fs')\n   fs.writeFileSync(path.join(FIXTURES, 'req'), req.read('bin'))\n   resp.statusCode = 200\n   resp.writeEnd(fs.readFileSync(path.join(FIXTURES, 'req'), {encoding: 'bin'}))\n }\n\n //Before getDocument requests\n //@param {THTTPRequest} req\n //@param {THTTPResponse} resp\n function doSomethingBeforeGetDocumentCall(req, resp){\n   console.log('User with ID', Session.userID, 'try to get document')\n }\n // Adds hook called before each call to getDocument endpoint\n App.on('getDocument:before', doSomethingBeforeGetDocumentCall)\n\n const querystring = require('querystring')\n //\n //After getDocument requests\n //@param {THTTPRequest} req\n //@param {THTTPResponse} resp\n function doSomethingAfterGetDocumentCall(req, resp){\n   params = querystring.parse(req.parameters)\n   console.log('User with ID', Session.userID, 'obtain document using params',  params)\n }\n App.on('getDocument:after', doSomethingAfterGetDocumentCall)</code></pre><p>To prevent endpoint handler execution App.preventDefault() can be used inside <code>:before</code> handler.</p>",
    "kind": "class",
    "name": "App",
    "mixes": [
      "EventEmitter"
    ],
    "longname": "App",
    "scope": "global",
    "___id": "T000002R005726",
    "___s": true
  },
  {
    "comment": "/**\n * @method addAppLevelMethod\n * @deprecated Use {@link class:App.registerEndpoint App.registerEndpoint} instead\n * @memberOf App\n */",
    "meta": {
      "filename": "App.js",
      "lineno": 183,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "function",
    "name": "addAppLevelMethod",
    "deprecated": "Use {@link class:App.registerEndpoint App.registerEndpoint} instead",
    "memberof": "App",
    "scope": "static",
    "longname": "App.addAppLevelMethod",
    "___id": "T000002R005740",
    "___s": true
  },
  {
    "comment": "/**\n * Try retrieve  or create new session from request headers.\n * Return `true` if success, `false` if more auth handshakes is required.\n * In case of invalid credential throw security exception.\n * @param {boolean} noHTTPBodyInResp If true do not write a uData to the HTTP response\n * @param {boolean} doSetOutCookie If true set a out authorization cookie on success response (Negotiate only)\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        15078,
        15227
      ],
      "filename": "App.js",
      "lineno": 452,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060419",
        "name": "App.authFromRequest",
        "type": "FunctionExpression",
        "paramnames": [
          "noHTTPBodyInResp",
          "doSetOutCookie"
        ]
      }
    },
    "description": "Try retrieve  or create new session from request headers.\nReturn <code>true</code> if success, <code>false</code> if more auth handshakes is required.\nIn case of invalid credential throw security exception.",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If true do not write a uData to the HTTP response",
        "name": "noHTTPBodyInResp"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "If true set a out authorization cookie on success response (Negotiate only)",
        "name": "doSetOutCookie"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "authFromRequest",
    "longname": "App.authFromRequest",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005779",
    "___s": true
  },
  {
    "comment": "/**\n * BLOB stores methods. Usage:\n *  - {@link module:@unitybase/blob-stores~getContent App.blobStores.getContent} to get BLOB content\n *  - {@link module:@unitybase/blob-stores~putContent App.blobStores.putContent} to put BLOB content\n *  - {@link module:@unitybase/blob-stores~markRevisionAsPermanent App.blobStores.markRevisionAsPermanent} to mark revision as permanent\n */",
    "meta": {
      "range": [
        16749,
        16905
      ],
      "filename": "App.js",
      "lineno": 507,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060493",
        "name": "App.blobStores",
        "type": "ObjectExpression",
        "value": "{\"getContent\":\"\",\"putContent\":\"\",\"markRevisionAsPermanent\":\"\"}",
        "paramnames": []
      }
    },
    "description": "<p>BLOB stores methods. Usage:</p>\n<ul>\n<li>{@link module:@unitybase/blob-stores~getContent App.blobStores.getContent} to get BLOB content</li>\n<li>{@link module:@unitybase/blob-stores~putContent App.blobStores.putContent} to put BLOB content</li>\n<li>{@link module:@unitybase/blob-stores~markRevisionAsPermanent App.blobStores.markRevisionAsPermanent} to mark revision as permanent</li>\n</ul>",
    "name": "blobStores",
    "longname": "App.blobStores",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005785",
    "___s": true
  },
  {
    "comment": "/**\n * Commit active database transaction if any.\n * In case `connectionName` is not passed will commit all active transactions for all connections.\n * Return `true` if transaction is committed, or `false` if database not in use or no active transaction.\n * @param {String} [connectionName]\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        13560,
        13678
      ],
      "filename": "App.js",
      "lineno": 416,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060365",
        "name": "App.dbCommit",
        "type": "FunctionExpression",
        "paramnames": [
          "connectionName"
        ]
      }
    },
    "description": "Commit active database transaction if any.\nIn case <code>connectionName</code> is not passed will commit all active transactions for all connections.\nReturn <code>true</code> if transaction is committed, or <code>false</code> if database not in use or no active transaction.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "connectionName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "dbCommit",
    "longname": "App.dbCommit",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005776",
    "___s": true
  },
  {
    "comment": "/**\n * Databases connections\n * @type {Object<string, DBConnection>}\n */",
    "meta": {
      "range": [
        12955,
        12988
      ],
      "filename": "App.js",
      "lineno": 399,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060345",
        "name": "App.dbConnections",
        "type": "Identifier",
        "value": "dbConnections",
        "paramnames": []
      }
    },
    "description": "Databases connections",
    "type": {
      "names": [
        "Object.<string, DBConnection>"
      ]
    },
    "name": "dbConnections",
    "longname": "App.dbConnections",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005774",
    "___s": true
  },
  {
    "comment": "/**\n * Check database are used in current endpoint context and DB transaction is already active.\n * @param {String} connectionName\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        13146,
        13243
      ],
      "filename": "App.js",
      "lineno": 406,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060351",
        "name": "App.dbInTransaction",
        "type": "FunctionExpression",
        "paramnames": [
          "connectionName"
        ]
      }
    },
    "description": "Check database are used in current endpoint context and DB transaction is already active.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "connectionName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "dbInTransaction",
    "longname": "App.dbInTransaction",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005775",
    "___s": true
  },
  {
    "comment": "/**\n * Rollback active database transaction if any.\n * In case `connectionName` is not passed will rollback all active transactions for all connections.\n * Return `true` if transaction is rollback'ed, or `false` if database not in use or no active transaction.\n * @param {String} [connectionName]\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        14001,
        14125
      ],
      "filename": "App.js",
      "lineno": 426,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060385",
        "name": "App.dbRollback",
        "type": "FunctionExpression",
        "paramnames": [
          "connectionName"
        ]
      }
    },
    "description": "Rollback active database transaction if any.\nIn case <code>connectionName</code> is not passed will rollback all active transactions for all connections.\nReturn <code>true</code> if transaction is rollback'ed, or <code>false</code> if database not in use or no active transaction.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "connectionName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "dbRollback",
    "longname": "App.dbRollback",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005777",
    "___s": true
  },
  {
    "comment": "/**\n * Start a transaction for a specified database. If database is not used in this context will\n * create a connection to the database and start transaction.\n *\n * For Oracle with DBLink first statement to DBLink'ed table must be\n * either update/insert/delete or you MUST manually start transaction\n * to prevent \"ORA-01453: SET TRANSACTION be first statement\"\n *\n * @param {String} connectionName\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        14552,
        14655
      ],
      "filename": "App.js",
      "lineno": 440,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060405",
        "name": "App.dbStartTransaction",
        "type": "FunctionExpression",
        "paramnames": [
          "connectionName"
        ]
      }
    },
    "description": "Start a transaction for a specified database. If database is not used in this context will\ncreate a connection to the database and start transaction.</p>\n<p>For Oracle with DBLink first statement to DBLink'ed table must be\neither update/insert/delete or you MUST manually start transaction\nto prevent &quot;ORA-01453: SET TRANSACTION be first statement&quot;",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "connectionName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "dbStartTransaction",
    "longname": "App.dbStartTransaction",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005778",
    "___s": true
  },
  {
    "comment": "/**\n * Application default language\n * @type {String}\n * @readonly\n */",
    "meta": {
      "range": [
        8415,
        8473
      ],
      "filename": "App.js",
      "lineno": 249,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060078",
        "name": "App.defaultLang",
        "type": "MemberExpression",
        "value": "App.serverConfig.application.defaultLang",
        "paramnames": []
      }
    },
    "description": "Application default language",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "defaultLang",
    "longname": "App.defaultLang",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005752",
    "___s": true
  },
  {
    "comment": "/**\n * Delete row from FTS index for exemplar with `instanceID` of entity `entityName` (mixin `fts` must be enabled for entity)\n * @param {String} entityName\n * @param {Number} instanceID\n */",
    "meta": {
      "range": [
        12398,
        12510
      ],
      "filename": "App.js",
      "lineno": 381,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060313",
        "name": "App.deleteFromFTSIndex",
        "type": "FunctionExpression",
        "paramnames": [
          "entityName",
          "instanceID"
        ]
      }
    },
    "description": "Delete row from FTS index for exemplar with <code>instanceID</code> of entity <code>entityName</code> (mixin <code>fts</code> must be enabled for entity)",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "instanceID"
      }
    ],
    "name": "deleteFromFTSIndex",
    "longname": "App.deleteFromFTSIndex",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005772",
    "___s": true
  },
  {
    "comment": "/**\n * Extended information about application domain (metadata)\n * @memberOf App\n * @member {UBDomain} domainInfo\n */",
    "meta": {
      "filename": "App.js",
      "lineno": 341,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Extended information about application domain (metadata)",
    "memberof": "App",
    "kind": "member",
    "name": "domainInfo",
    "type": {
      "names": [
        "UBDomain"
      ]
    },
    "scope": "static",
    "longname": "App.domainInfo",
    "___id": "T000002R005766",
    "___s": true
  },
  {
    "comment": "/**\n * Check Entity-Level-Security for specified entity/method\n *\n *      if App.els('uba_user', 'insert'){\n   *          // do something\n   *      }\n *\n * @param {String} entityCode\n * @param {String} methodCode\n * @return {boolean}\n */",
    "meta": {
      "range": [
        15803,
        15892
      ],
      "filename": "App.js",
      "lineno": 479,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060463",
        "name": "App.els",
        "type": "FunctionExpression",
        "paramnames": [
          "entityCode",
          "methodCode"
        ]
      }
    },
    "description": "<p>Check Entity-Level-Security for specified entity/method</p>\n<pre class=\"prettyprint source\"><code> if App.els('uba_user', 'insert'){\n     // do something\n }</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "entityCode"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "methodCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "els",
    "longname": "App.els",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005782",
    "___s": true
  },
  {
    "comment": "/**\n * Is event emitter enabled for App singleton. Default is `false`\n * @deprecated Starting from 1.11 this property ignored (always TRUE)\n * @type {Boolean}\n */",
    "meta": {
      "range": [
        16057,
        16082
      ],
      "filename": "App.js",
      "lineno": 488,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060479",
        "name": "App.emitterEnabled",
        "type": "Literal",
        "value": true,
        "paramnames": []
      }
    },
    "description": "Is event emitter enabled for App singleton. Default is <code>false</code>",
    "deprecated": "Starting from 1.11 this property ignored (always TRUE)",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "emitterEnabled",
    "longname": "App.emitterEnabled",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005783",
    "___s": true
  },
  {
    "comment": "/**\n * URL that the User from the internet will use to access your server. To be used in case server is behind a reverse proxy\n * @type {String}\n * @readonly\n */",
    "meta": {
      "range": [
        9613,
        9687
      ],
      "filename": "App.js",
      "lineno": 286,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060156",
        "name": "App.externalURL",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "URL that the User from the internet will use to access your server. To be used in case server is behind a reverse proxy",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "externalURL",
    "longname": "App.externalURL",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005757",
    "___s": true
  },
  {
    "comment": "/**\n * First check in global cache for a entry \"UB_GLOBAL_CACHE_CHECKSUM + filePath\"\n * and if not exists - calculate a checksum using algorithm defined in\n * CONTROLLER.serverConfig.HTTPServer.watchFileChanges.hashingStrategy\n * if server in dev mode always return current timestamp\n * values from cache will be cleared in directoryNotifiers\n * @param {String} pathToFile\n * @returns {string}\n */",
    "meta": {
      "range": [
        10640,
        10723
      ],
      "filename": "App.js",
      "lineno": 314,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060194",
        "name": "App.fileChecksum",
        "type": "FunctionExpression",
        "paramnames": [
          "pathToFile"
        ]
      }
    },
    "description": "First check in global cache for a entry &quot;UB_GLOBAL_CACHE_CHECKSUM + filePath&quot;\nand if not exists - calculate a checksum using algorithm defined in\nCONTROLLER.serverConfig.HTTPServer.watchFileChanges.hashingStrategy\nif server in dev mode always return current timestamp\nvalues from cache will be cleared in directoryNotifiers",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "pathToFile"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "fileChecksum",
    "longname": "App.fileChecksum",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005760",
    "___s": true
  },
  {
    "comment": "/**\n * A folder checksum (see fileChecksum for algorithm details)\n * @param {string} pathToFolder\n * @returns {string}\n */",
    "meta": {
      "range": [
        10848,
        10939
      ],
      "filename": "App.js",
      "lineno": 323,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060208",
        "name": "App.folderChecksum",
        "type": "FunctionExpression",
        "paramnames": [
          "pathToFolder"
        ]
      }
    },
    "description": "A folder checksum (see fileChecksum for algorithm details)",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "pathToFolder"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "folderChecksum",
    "longname": "App.folderChecksum",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005761",
    "___s": true
  },
  {
    "comment": "/**\n * Return stringified JSON specified in serverConfig.uiSettings\n * @deprecated Use App.serverConfig.uiSettings: Object instead\n * @return {string}\n */",
    "meta": {
      "range": [
        9080,
        9267
      ],
      "filename": "App.js",
      "lineno": 269,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060121",
        "name": "App.getUISettings",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return stringified JSON specified in serverConfig.uiSettings",
    "deprecated": "Use App.serverConfig.uiSettings: Object instead",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getUISettings",
    "longname": "App.getUISettings",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005755",
    "___s": true
  },
  {
    "comment": "/**\n * Get value from global cache. Global cache shared between all threads.\n *\n * Return '' (empty string) in case key not present in cache.\n *\n * @param {String} key Key to retrive\n * @return {String}\n */",
    "meta": {
      "range": [
        11866,
        11939
      ],
      "filename": "App.js",
      "lineno": 364,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060283",
        "name": "App.globalCacheGet",
        "type": "FunctionExpression",
        "paramnames": [
          "key"
        ]
      }
    },
    "description": "Get value from global cache. Global cache shared between all threads.</p>\n<p>Return '' (empty string) in case key not present in cache.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Key to retrive",
        "name": "key"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "globalCacheGet",
    "longname": "App.globalCacheGet",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005770",
    "___s": true
  },
  {
    "comment": "/**\n * Put value to global cache.\n * @param {String} key  Key to put into\n * @param {String|null} value Value to put into this key. If === null then key will be remover from cache\n */",
    "meta": {
      "range": [
        12124,
        12204
      ],
      "filename": "App.js",
      "lineno": 372,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060297",
        "name": "App.globalCachePut",
        "type": "FunctionExpression",
        "paramnames": [
          "key",
          "value"
        ]
      }
    },
    "description": "Put value to global cache.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Key to put into",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "String",
            "null"
          ]
        },
        "description": "Value to put into this key. If === null then key will be remover from cache",
        "name": "value"
      }
    ],
    "name": "globalCachePut",
    "longname": "App.globalCachePut",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005771",
    "___s": true
  },
  {
    "comment": "/**\n * List of a local server IP addresses CRLF (or CR for non-windows) separated\n */",
    "meta": {
      "range": [
        9775,
        9803
      ],
      "filename": "App.js",
      "lineno": 291,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060172",
        "name": "App.localIPs",
        "type": "MemberExpression",
        "value": "_App.localIPs",
        "paramnames": []
      }
    },
    "description": "List of a local server IP addresses CRLF (or CR for non-windows) separated",
    "name": "localIPs",
    "longname": "App.localIPs",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005758",
    "___s": true
  },
  {
    "comment": "/**\n * Logout (kill stored Sessions) current session user\n */",
    "meta": {
      "range": [
        15513,
        15564
      ],
      "filename": "App.js",
      "lineno": 465,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060451",
        "name": "App.logout",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Logout (kill stored Sessions) current session user",
    "name": "logout",
    "longname": "App.logout",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005781",
    "___s": true
  },
  {
    "comment": "/**\n * Logout (kill stored Sessions) all users with the same as\n * currently logged (except currently logged user)\n */",
    "meta": {
      "range": [
        15347,
        15450
      ],
      "filename": "App.js",
      "lineno": 459,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060439",
        "name": "App.logoutAllWithTheSameNameExceptMe",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Logout (kill stored Sessions) all users with the same as\ncurrently logged (except currently logged user)",
    "name": "logoutAllWithTheSameNameExceptMe",
    "longname": "App.logoutAllWithTheSameNameExceptMe",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005780",
    "___s": true
  },
  {
    "comment": "/**\n * Application `package.json` content (parsed)\n * @type {Object}\n */",
    "meta": {
      "range": [
        7916,
        7936
      ],
      "filename": "App.js",
      "lineno": 228,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060010",
        "name": "App.package",
        "type": "Identifier",
        "value": "appPkg",
        "paramnames": []
      }
    },
    "description": "Application <code>package.json</code> content (parsed)",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "package",
    "longname": "App.package",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005748",
    "___s": true
  },
  {
    "comment": "/**\n * Accessible inside app-level `:before` event handler. Call to prevent default method handler.\n * In this case developer are responsible to fill response object, otherwise HTTP 400 is returned.\n * @memberOf App\n */",
    "meta": {
      "range": [
        3956,
        4018
      ],
      "filename": "App.js",
      "lineno": 113,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100059824",
        "name": "App.preventDefault",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "__preventDefault": "App.preventDefault~__preventDefault"
      }
    },
    "description": "Accessible inside app-level <code>:before</code> event handler. Call to prevent default method handler.\nIn this case developer are responsible to fill response object, otherwise HTTP 400 is returned.",
    "memberof": "App",
    "name": "preventDefault",
    "longname": "App.preventDefault",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R005731",
    "___s": true
  },
  {
    "comment": "/**\n * Register a server endpoint.\n * One of the endpoints can be default endpoint - it will be used as a fallback\n * in case URL do not start with any of known endpoints name.\n *\n * Exceptions inside endpoint handler are intercepted by UB server. In case exception is occurred\n * server will rollback any active DB transactions and serialize an exception message\n * to response depending on server execution mode:\n *  - for `dev` mode - original exception text will be serialized (for debugging purpose)\n *  - for production mode - in case exception message is wrapped into `<<<..>>>` then this message will be serialized,\n *  if not - text will be always `Internal server error` (for security reason)\n *\n *  Recommended way to throw an handled error inside endpoint handler is `throw new UB.UBAbort('.....')`\n *\n * @example\n\n // Write a custom request body to file FIXTURES/req and echo file back to client\n // @param {THTTPRequest} req\n // @param {THTTPResponse} resp\n //\n function echoToFile(req, resp) {\n   var fs = require('fs');\n   fs.writeFileSync(FIXTURES + 'req', req.read('bin'));\n   resp.statusCode = 200;\n   resp.writeEnd(fs.readFileSync(FIXTURES + 'req', {encoding: 'bin'}));\n }\n App.registerEndpoint('echoToFile', echoToFile);\n\n *\n * @param {String} endpointName\n * @param {Function} handler\n * @param {boolean} [authorizationRequired=true] If `true` UB will check for valid Authorization header before\n *  execute endpoint handler\n * @param {boolean} [isDefault=false]\n * @memberOf App\n */",
    "meta": {
      "range": [
        6046,
        6402
      ],
      "filename": "App.js",
      "lineno": 172,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100059898",
        "name": "App.registerEndpoint",
        "type": "FunctionExpression",
        "paramnames": [
          "endpointName",
          "handler",
          "authorizationRequired",
          "isDefault"
        ]
      },
      "vars": {
        "appBinding.endpoints[undefined]": "appBinding.endpoints[undefined]"
      }
    },
    "description": "<p>Register a server endpoint.\nOne of the endpoints can be default endpoint - it will be used as a fallback\nin case URL do not start with any of known endpoints name.</p>\n<p>Exceptions inside endpoint handler are intercepted by UB server. In case exception is occurred\nserver will rollback any active DB transactions and serialize an exception message\nto response depending on server execution mode:</p>\n<ul>\n<li>for <code>dev</code> mode - original exception text will be serialized (for debugging purpose)</li>\n<li><p>for production mode - in case exception message is wrapped into <code>&lt;&lt;&lt;..&gt;&gt;&gt;</code> then this message will be serialized,\nif not - text will be always <code>Internal server error</code> (for security reason)</p>\n<p>Recommended way to throw an handled error inside endpoint handler is <code>throw new UB.UBAbort('.....')</code></p>\n</li>\n</ul>",
    "examples": [
      "// Write a custom request body to file FIXTURES/req and echo file back to client\n // @param {THTTPRequest} req\n // @param {THTTPResponse} resp\n //\n function echoToFile(req, resp) {\n   var fs = require('fs');\n   fs.writeFileSync(FIXTURES + 'req', req.read('bin'));\n   resp.statusCode = 200;\n   resp.writeEnd(fs.readFileSync(FIXTURES + 'req', {encoding: 'bin'}));\n }\n App.registerEndpoint('echoToFile', echoToFile);"
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "endpointName"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "handler"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "If <code>true</code> UB will check for valid Authorization header before\n execute endpoint handler",
        "name": "authorizationRequired"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "isDefault"
      }
    ],
    "memberof": "App",
    "name": "registerEndpoint",
    "longname": "App.registerEndpoint",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R005738",
    "___s": true
  },
  {
    "comment": "/**\n *  Resolve aRequestedFile to real file path.\n *  Internally analyse request and if it start with `model/` - resolve it to model public folder\n *  else - to `inetPub` folder.\n *  Will return '' in case of error (filePath not under `inetPub` or `model/`) to prevent ../../ attack\n * @param {String} aRequestedFile\n * @returns {String}\n */",
    "meta": {
      "range": [
        10147,
        10240
      ],
      "filename": "App.js",
      "lineno": 301,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060180",
        "name": "App.resolveStatic",
        "type": "FunctionExpression",
        "paramnames": [
          "aRequestedFile"
        ]
      }
    },
    "description": "Resolve aRequestedFile to real file path.\n Internally analyse request and if it start with <code>model/</code> - resolve it to model public folder\n else - to <code>inetPub</code> folder.\n Will return '' in case of error (filePath not under <code>inetPub</code> or <code>model/</code>) to prevent ../../ attack",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "aRequestedFile"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "resolveStatic",
    "longname": "App.resolveStatic",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005759",
    "___s": true
  },
  {
    "comment": "/**\n * Server configuration - result of {@link module:argv~getServerConfiguration argv.getServerConfiguration}\n * @readonly\n * @type {Object}\n * @property {Object} httpServer HTTP server config\n * @property {Object} application\n * @property {string} application.name\n * @property {string} application.defaultLang\n * @property {Object} application.domain\n * @property {Array} application.domain.models\n * @property {Array<string>} application.domain.supportedLanguages\n * @property {Object} application.customSettings\n * @property {Object} uiSettings Section `uiSettings` of ubConfig\n * @property {Object} security\n */",
    "meta": {
      "range": [
        7603,
        7631
      ],
      "filename": "App.js",
      "lineno": 215,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100059962",
        "name": "App.serverConfig",
        "type": "Identifier",
        "value": "undefined",
        "paramnames": []
      }
    },
    "description": "Server configuration - result of {@link module:argv~getServerConfiguration argv.getServerConfiguration}",
    "readonly": true,
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "<p>HTTP server config</p>",
        "name": "httpServer"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "application"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "application.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "application.defaultLang"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "application.domain"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "application.domain.models"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "application.domain.supportedLanguages"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "application.customSettings"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "<p>Section <code>uiSettings</code> of ubConfig</p>",
        "name": "uiSettings"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "security"
      }
    ],
    "name": "serverConfig",
    "longname": "App.serverConfig",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005744",
    "___s": true
  },
  {
    "comment": "/**\n * Defense edition only,\n * Base64 encoded public server certificate\n *\n * Contains non empty value in case `security.dstu.trafficEncryption` === `true` and\n * key name defined in `security.dstu.novaLib.keyName`\n *\n * @type {string}\n */",
    "meta": {
      "range": [
        16325,
        16369
      ],
      "filename": "App.js",
      "lineno": 499,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060485",
        "name": "App.serverPublicCert",
        "type": "MemberExpression",
        "value": "_App.serverPublicCert",
        "paramnames": []
      }
    },
    "description": "Defense edition only,\nBase64 encoded public server certificate</p>\n<p>Contains non empty value in case <code>security.dstu.trafficEncryption</code> === <code>true</code> and\nkey name defined in <code>security.dstu.novaLib.keyName</code>",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "serverPublicCert",
    "longname": "App.serverPublicCert",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005784",
    "___s": true
  },
  {
    "comment": "/**\n * Full URl HTTP server is listen on (if HTTP server enabled, else - empty string)\n * @type {String}\n * @readonly\n */",
    "meta": {
      "range": [
        9391,
        9449
      ],
      "filename": "App.js",
      "lineno": 279,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060144",
        "name": "App.serverURL",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Full URl HTTP server is listen on (if HTTP server enabled, else - empty string)",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "serverURL",
    "longname": "App.serverURL",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005756",
    "___s": true
  },
  {
    "comment": "/**\n * @method serviceMethodByPassAuthentication\n * @deprecated Use {@link class:App.registerEndpoint App.registerEndpoint} instead\n * @memberOf App\n */",
    "meta": {
      "filename": "App.js",
      "lineno": 191,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "function",
    "name": "serviceMethodByPassAuthentication",
    "deprecated": "Use {@link class:App.registerEndpoint App.registerEndpoint} instead",
    "memberof": "App",
    "scope": "static",
    "longname": "App.serviceMethodByPassAuthentication",
    "___id": "T000002R005742",
    "___s": true
  },
  {
    "comment": "/**\n * Full path to application static folder if any, '' if static folder not set\n * @type {String}\n * @readonly\n */",
    "meta": {
      "range": [
        8055,
        8074
      ],
      "filename": "App.js",
      "lineno": 235,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060016",
        "name": "App.staticPath",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Full path to application static folder if any, '' if static folder not set",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "staticPath",
    "longname": "App.staticPath",
    "kind": "member",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005749",
    "___s": true
  },
  {
    "comment": "/**\n * Update FTS index for for exemplar with `instanceID` of entity `entityName` (mixin `fts` must be enabled for entity).\n * In case row dose not exist in FTS perform insert action automatically.\n *\n * @param {String} entityName\n * @param {Number} instanceID\n */",
    "meta": {
      "range": [
        12776,
        12880
      ],
      "filename": "App.js",
      "lineno": 391,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060329",
        "name": "App.updateFTSIndex",
        "type": "FunctionExpression",
        "paramnames": [
          "entityName",
          "instanceID"
        ]
      }
    },
    "description": "Update FTS index for for exemplar with <code>instanceID</code> of entity <code>entityName</code> (mixin <code>fts</code> must be enabled for entity).\nIn case row dose not exist in FTS perform insert action automatically.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "instanceID"
      }
    ],
    "name": "updateFTSIndex",
    "longname": "App.updateFTSIndex",
    "kind": "function",
    "memberof": "App",
    "scope": "static",
    "___id": "T000002R005773",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Enabled by default. All insert/update/delete low level operation will be logged to `uba_auditTrail`\n * @mixin\n */",
    "meta": {
      "range": [
        5566,
        5578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 199,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008793",
        "name": "audit",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin. Enabled by default. All insert/update/delete low level operation will be logged to <code>uba_auditTrail</code>",
    "kind": "mixin",
    "name": "audit",
    "longname": "audit",
    "scope": "global",
    "params": [],
    "___id": "T000002R000857",
    "___s": true
  },
  {
    "comment": "/**\n * @return {string[]}\n */",
    "meta": {
      "range": [
        1337,
        1601
      ],
      "filename": "tokenIssuer.js",
      "lineno": 47,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097545",
        "name": "availableEntityTopics",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "name": "availableEntityTopics",
    "longname": "availableEntityTopics",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R010294",
    "___s": true
  },
  {
    "comment": "/**\n   * @param {Object} storeConfig\n   * @param {App} appInstance\n   * @param {UBSession} sessionInstance\n   */",
    "meta": {
      "range": [
        597,
        1452
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046378",
        "name": "BlobStoreCustom",
        "type": "MethodDefinition",
        "paramnames": [
          "storeConfig",
          "appInstance",
          "sessionInstance"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "storeConfig"
      },
      {
        "type": {
          "names": [
            "App"
          ]
        },
        "name": "appInstance"
      },
      {
        "type": {
          "names": [
            "UBSession"
          ]
        },
        "name": "sessionInstance"
      }
    ],
    "name": "BlobStoreCustom",
    "longname": "BlobStoreCustom",
    "kind": "class",
    "scope": "global",
    "___id": "T000002R004119",
    "___s": true
  },
  {
    "comment": "/** @type {App} */",
    "meta": {
      "range": [
        682,
        704
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 26,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046386",
        "name": "this.App",
        "type": "Identifier",
        "value": "appInstance",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "App"
      ]
    },
    "name": "App",
    "longname": "BlobStoreCustom#App",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004120",
    "___s": true
  },
  {
    "comment": "/**\n     * Store parameters as defined in ubConfig\n     */",
    "meta": {
      "range": [
        1051,
        1095
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 34,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046430",
        "name": "this.config",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Store parameters as defined in ubConfig",
    "name": "config",
    "longname": "BlobStoreCustom#config",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004124",
    "___s": true
  },
  {
    "comment": "/**\n   * Do something with BLOB content during archiving. For example - move to slow drive etc.\n   * Default implementation do nothing.\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} blobInfo\n   * @returns {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        3311,
        3372
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 102,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046502",
        "name": "BlobStoreCustom#doArchive",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "blobInfo"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Do something with BLOB content during archiving. For example - move to slow drive etc.\nDefault implementation do nothing.",
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobInfo"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "doArchive",
    "longname": "BlobStoreCustom#doArchive",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004132",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete persisted BLOB content\n   * @abstract\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} blobInfo\n   */",
    "meta": {
      "range": [
        3540,
        3580
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 112,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046511",
        "name": "BlobStoreCustom#doDeletion",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "blobInfo"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Delete persisted BLOB content",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobInfo"
      }
    ],
    "name": "doDeletion",
    "longname": "BlobStoreCustom#doDeletion",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004133",
    "___s": true
  },
  {
    "comment": "/**\n   * Fill HTTP response for getDocument request\n   * @abstract\n   * @param {BlobStoreRequest} requestParams\n   * @param {BlobStoreItem} blobInfo\n   * @param {THTTPRequest} req\n   * @param {THTTPResponse} resp\n   * @return {Boolean}\n   */",
    "meta": {
      "range": [
        2568,
        2621
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 81,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046486",
        "name": "BlobStoreCustom#fillResponse",
        "type": "MethodDefinition",
        "paramnames": [
          "requestParams",
          "blobInfo",
          "req",
          "resp"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Fill HTTP response for getDocument request",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "requestParams"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobInfo"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "fillResponse",
    "longname": "BlobStoreCustom#fillResponse",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004130",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve BLOB content from blob store.\n   * @abstract\n   * @param {BlobStoreRequest} request\n   * @param {BlobStoreItem} blobInfo JSON retrieved from a DB.\n   * @param {Object} [options]\n   * @param {String|Null} [options.encoding] Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n   *   If `undefined` UB will send query to entity anf get it from DB.\n   *   At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB\n   * @returns {String|ArrayBuffer}\n   */",
    "meta": {
      "range": [
        2279,
        2321
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 71,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046479",
        "name": "BlobStoreCustom#getContent",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "blobInfo",
          "options"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve BLOB content from blob store.",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "description": "JSON retrieved from a DB.",
        "name": "blobInfo"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String",
            "Null"
          ]
        },
        "optional": true,
        "description": "Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n  If <code>undefined</code> UB will send query to entity anf get it from DB.\n  At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB",
        "name": "options.encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer"
          ]
        }
      }
    ],
    "name": "getContent",
    "longname": "BlobStoreCustom#getContent",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004129",
    "___s": true
  },
  {
    "comment": "/**\n   * Get path to temporary file and it's name\n   * @protected\n   * @param {BlobStoreRequest} request\n   * @returns {string}\n   */",
    "meta": {
      "range": [
        3719,
        3918
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 119,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046518",
        "name": "BlobStoreCustom#getTempFileName",
        "type": "MethodDefinition",
        "paramnames": [
          "request"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Get path to temporary file and it's name",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getTempFileName",
    "longname": "BlobStoreCustom#getTempFileName",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004134",
    "___s": true
  },
  {
    "comment": "/**\n     * How many previous revision is stored\n     * @type {number}\n     */",
    "meta": {
      "range": [
        1399,
        1448
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 49,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046461",
        "name": "this.historyDepth",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "How many previous revision is stored",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "historyDepth",
    "longname": "BlobStoreCustom#historyDepth",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004127",
    "___s": true
  },
  {
    "comment": "/**\n     * Name of store (from app config)\n     */",
    "meta": {
      "range": [
        1155,
        1183
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 38,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046441",
        "name": "this.name",
        "type": "MemberExpression",
        "value": "this.config.name",
        "paramnames": []
      }
    },
    "description": "Name of store (from app config)",
    "name": "name",
    "longname": "BlobStoreCustom#name",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004125",
    "___s": true
  },
  {
    "comment": "/**\n   * Move content defined by `dirtyItem` from temporary to permanent store.\n   * Return a new attribute content which describe a place of BLOB in permanent store\n   * @abstract\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} dirtyItem\n   * @param {number} newRevision\n   * @return {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        2979,
        3030
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 92,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046494",
        "name": "BlobStoreCustom#persist",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "dirtyItem",
          "newRevision"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Move content defined by <code>dirtyItem</code> from temporary to permanent store.\nReturn a new attribute content which describe a place of BLOB in permanent store",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "dirtyItem"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "newRevision"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "persist",
    "longname": "BlobStoreCustom#persist",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004131",
    "___s": true
  },
  {
    "comment": "/**\n   * Implementation must save file content to temporary store\n   * @abstract\n   * @param {BlobStoreRequest} request Request params\n   * @param {UBEntityAttribute} attribute\n   * @param {ArrayBuffer} content\n   * @returns {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        1704,
        1759
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 59,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046472",
        "name": "BlobStoreCustom#saveContentToTempStore",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "attribute",
          "content"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Implementation must save file content to temporary store",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "description": "Request params",
        "name": "request"
      },
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "content"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "saveContentToTempStore",
    "longname": "BlobStoreCustom#saveContentToTempStore",
    "kind": "function",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004128",
    "___s": true
  },
  {
    "comment": "/** @type {UBSession} */",
    "meta": {
      "range": [
        738,
        768
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 28,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046392",
        "name": "this.Session",
        "type": "Identifier",
        "value": "sessionInstance",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "UBSession"
      ]
    },
    "name": "Session",
    "longname": "BlobStoreCustom#Session",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004121",
    "___s": true
  },
  {
    "comment": "/**\n     * Path to temp folder\n     * @type {String}\n     * @protected\n     */",
    "meta": {
      "range": [
        1271,
        1312
      ],
      "filename": "blobStoreCustom.js",
      "lineno": 44,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100046451",
        "name": "this.tempFolder",
        "type": "MemberExpression",
        "value": "this.config['tempPath']",
        "paramnames": []
      }
    },
    "description": "Path to temp folder",
    "type": {
      "names": [
        "String"
      ]
    },
    "access": "protected",
    "name": "tempFolder",
    "longname": "BlobStoreCustom#tempFolder",
    "kind": "member",
    "memberof": "BlobStoreCustom",
    "scope": "instance",
    "___id": "T000002R004126",
    "___s": true
  },
  {
    "comment": "/**\n * Sending message to all existing clients\n *\n * @param {string} topic\n *   Message topic.\n *   name of the notification source\n *   this should be unique name to be able for client to distinguish the source of notification message\n * @param {object} message\n *   the message to send\n *   any value is converted to JSON string before sending\n * @return {number} Event ID\n */",
    "meta": {
      "range": [
        1558,
        1860
      ],
      "filename": "userNotifier.js",
      "lineno": 50,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097899",
        "name": "broadcast",
        "type": "FunctionDeclaration",
        "paramnames": [
          "topic",
          "message"
        ]
      },
      "vars": {
        "message.eventID": "message.eventID"
      }
    },
    "description": "Sending message to all existing clients",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Message topic.\n  name of the notification source\n  this should be unique name to be able for client to distinguish the source of notification message",
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the message to send\n  any value is converted to JSON string before sending",
        "name": "message"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Event ID</p>"
      }
    ],
    "name": "broadcast",
    "longname": "broadcast",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010330",
    "___s": true
  },
  {
    "comment": "/**\n * Search for subjects contact values.\n * @method getSubjectsContacts\n * @memberOf cdn_contact_ns.prototype\n * @memberOfModule @unitybase/cdn\n * @param {Number|Array.<number>} subjects Either subject ID or array of subject IDs to search\n * @param {String} contactCode Contact type code ('phone', 'email', e.t.c - one of cdn_contacttype.code value\n * @returns {Array.<string>}\n */",
    "meta": {
      "filename": "cdn_contact.js",
      "lineno": 7,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {}
    },
    "description": "Search for subjects contact values.",
    "kind": "function",
    "name": "getSubjectsContacts",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/cdn",
        "value": "@unitybase/cdn"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "Number",
            "Array.<number>"
          ]
        },
        "description": "Either subject ID or array of subject IDs to search",
        "name": "subjects"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Contact type code ('phone', 'email', e.t.c - one of cdn_contacttype.code value",
        "name": "contactCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "longname": "cdn_contact_ns#getSubjectsContacts",
    "scope": "instance",
    "___id": "T000002R008985",
    "___s": true
  },
  {
    "comment": "/**\n * Search for contact type ID by code. Use cache for quick lookup. Return 0 in case no such contact type.\n * @method getContactTypeByCode\n * @memberOf cdn_contacttype_ns.prototype\n * @memberOfModule @unitybase/cdn\n * @param {string} contactCode\n * @returns {number}\n */",
    "meta": {
      "filename": "cdn_contacttype.js",
      "lineno": 14,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {}
    },
    "description": "Search for contact type ID by code. Use cache for quick lookup. Return 0 in case no such contact type.",
    "kind": "function",
    "name": "getContactTypeByCode",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/cdn",
        "value": "@unitybase/cdn"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "contactCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "longname": "cdn_contacttype_ns#getContactTypeByCode",
    "scope": "instance",
    "___id": "T000002R008997",
    "___s": true
  },
  {
    "comment": "/**\n * Updates all multilingual captions for org_department\n * @method setCaption\n * @memberOf cdn_organization_ns.prototype\n * @memberOfModule @unitybase/org\n * @param {ubMethodParams} ctx\n * @param {string} mode One on 'INS', 'UPD'\n */",
    "meta": {
      "filename": "org_department.js",
      "lineno": 10,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {}
    },
    "description": "Updates all multilingual captions for org_department",
    "kind": "function",
    "name": "setCaption",
    "memberof": "module:@unitybase/org~cdn_organization_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/org",
        "value": "@unitybase/org"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "One on 'INS', 'UPD'",
        "name": "mode"
      }
    ],
    "longname": "cdn_organization_ns#setCaption",
    "scope": "instance",
    "___id": "T000002R009817",
    "___s": true
  },
  {
    "comment": "/**\n * Updates all multilingual captions for cdn_organization\n * @method updateOrganizationCaption\n * @memberOf cdn_organization_ns.prototype\n * @memberOfModule @unitybase/cdn\n * @param {ubMethodParams} ctx\n */",
    "meta": {
      "filename": "cdn_organization.js",
      "lineno": 11,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {}
    },
    "description": "Updates all multilingual captions for cdn_organization",
    "kind": "function",
    "name": "updateOrganizationCaption",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/cdn",
        "value": "@unitybase/cdn"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "longname": "cdn_organization_ns#updateOrganizationCaption",
    "scope": "instance",
    "___id": "T000002R009065",
    "___s": true
  },
  {
    "comment": "/**\n * Check mime type of uploaded photo is in mimeTypes array\n * @method checkPhotoMimeType\n * @memberOf cdn_person_ns.prototype\n * @memberOfModule @unitybase/cdn\n * @param {ubMethodParams} ctxt\n * @param {Array<string>} mimeTypes\n */",
    "meta": {
      "filename": "cdn_person.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {}
    },
    "description": "Check mime type of uploaded photo is in mimeTypes array",
    "kind": "function",
    "name": "checkPhotoMimeType",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/cdn",
        "value": "@unitybase/cdn"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "mimeTypes"
      }
    ],
    "longname": "cdn_person_ns#checkPhotoMimeType",
    "scope": "instance",
    "___id": "T000002R009108",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin for truncate `clob` field data to short string (mostly for Oracle)\n *\n * @mixin\n */",
    "meta": {
      "range": [
        8246,
        8265
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 330,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008861",
        "name": "clobTruncate",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin for truncate <code>clob</code> field data to short string (mostly for Oracle)",
    "kind": "mixin",
    "name": "clobTruncate",
    "longname": "clobTruncate",
    "scope": "global",
    "params": [],
    "___id": "T000002R000874",
    "___s": true
  },
  {
    "comment": "/**\r\n * Put something to log with log levels depending on method\r\n * @global\r\n * @type {Console}\r\n */",
    "meta": {
      "range": [
        659,
        687
      ],
      "filename": "UB.js",
      "lineno": 25,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008387",
        "name": "console",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Put something to log with log levels depending on method",
    "scope": "global",
    "type": {
      "names": [
        "Console"
      ]
    },
    "name": "console",
    "longname": "console",
    "kind": "member",
    "___id": "T000002R000784",
    "___s": true
  },
  {
    "comment": "/**\n * Create GUID\n * @returns {string} GUID\n */",
    "meta": {
      "range": [
        1702,
        1738
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 54,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008438",
        "name": "createGuid",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Create GUID",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>GUID</p>"
      }
    ],
    "name": "createGuid",
    "longname": "createGuid",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R000791",
    "___s": true
  },
  {
    "comment": "/**\n * Ancestor for Browser/NodeJS ClientRepository and server side ServerRepository.\n *\n * Do not use it directly, use {@link module:@unitybase/ub.Repository UB.Repository} on server side\n */",
    "meta": {
      "range": [
        846,
        28324
      ],
      "filename": "CustomRepository.js",
      "lineno": 25,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039130",
        "name": "CustomRepository",
        "type": "ClassDeclaration",
        "paramnames": [
          "entityName"
        ]
      }
    },
    "classdesc": "<p>Ancestor for Browser/NodeJS ClientRepository and server side ServerRepository.</p>\n<p>Do not use it directly, use {@link module:@unitybase/ub.Repository UB.Repository} on server side</p>",
    "name": "CustomRepository",
    "longname": "CustomRepository",
    "kind": "class",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "name of Entity we create for",
        "name": "entityName"
      }
    ],
    "___id": "T000002R003361",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds attribute(s) or expression(s).\n   *\n   * Can take expression as a field. In this case entity attribute name must be wrapped into [] brackets.\n   * In case of client-side execution the only valid expression is one of:\n   *\n   * - **'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE'**\n   *\n   * @example\n\n // chaining\n UB.Repository('uba_user').attrs('ID').attrs('name', 'firstName').attrs('disabled').selectAsObject()\n\n // calculate sum over some attribute\n UB.Repository('uba_user').attrs('SUM([disabled])').where('disabled', '=', true).selectScalar()\n\n // In case of server-side execution any valid SQL expression is accepted by attr:\n UB.Repository('uba_user').attrs('[ID] / 100 + 1').selectAsArray()\n\n // JOIN `uba_userrole.roleID` is a attribute of type Entity. ORM choose `left join` in case attribute is `allowNull: true`\n UB.Repository('uba_userrole').attrs(['userID', 'userID.name']).selectAsObject()\n\n // todo Define a way to join for UNITY (@)\n\n // get values for attribute of type MANY\n UB.Repository('tst_maindata')\n   .attrs('ID', 'manyValue', 'manyValue.caption')\n   .where('code', '=', 'Код1')\n   .selectAsObject({'manyValue.caption': 'captions'})\n // result is `[{\"ID\":331947938939292,\"manyValue\":\"1,2\",\"captions\":\"caption 10,caption 20\"}]`\n\n // Get attribute value for multilaguage (\"isMultiLang\": true in meta file) attribute other when current session language\n UB.Repository('org_employee').attrs(['ID', 'lastName_en^']).selectAsObject()\n\n   * @param {string|Array<string>} attrs\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        3815,
        4075
      ],
      "filename": "CustomRepository.js",
      "lineno": 136,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039217",
        "name": "CustomRepository#attrs",
        "type": "MethodDefinition",
        "paramnames": [
          "attrs"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds attribute(s) or expression(s).</p>\n<p>Can take expression as a field. In this case entity attribute name must be wrapped into [] brackets.\nIn case of client-side execution the only valid expression is one of:</p>\n<ul>\n<li><strong>'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE'</strong></li>\n</ul>",
    "examples": [
      "// chaining\n UB.Repository('uba_user').attrs('ID').attrs('name', 'firstName').attrs('disabled').selectAsObject()\n\n // calculate sum over some attribute\n UB.Repository('uba_user').attrs('SUM([disabled])').where('disabled', '=', true).selectScalar()\n\n // In case of server-side execution any valid SQL expression is accepted by attr:\n UB.Repository('uba_user').attrs('[ID] / 100 + 1').selectAsArray()\n\n // JOIN `uba_userrole.roleID` is a attribute of type Entity. ORM choose `left join` in case attribute is `allowNull: true`\n UB.Repository('uba_userrole').attrs(['userID', 'userID.name']).selectAsObject()\n\n // todo Define a way to join for UNITY (@)\n\n // get values for attribute of type MANY\n UB.Repository('tst_maindata')\n   .attrs('ID', 'manyValue', 'manyValue.caption')\n   .where('code', '=', 'Код1')\n   .selectAsObject({'manyValue.caption': 'captions'})\n // result is `[{\"ID\":331947938939292,\"manyValue\":\"1,2\",\"captions\":\"caption 10,caption 20\"}]`\n\n // Get attribute value for multilaguage (\"isMultiLang\": true in meta file) attribute other when current session language\n UB.Repository('org_employee').attrs(['ID', 'lastName_en^']).selectAsObject()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "name": "attrs",
        "variable": true
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "attrs",
    "longname": "CustomRepository#attrs",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003376",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#attrs CustomRepository.attrs}.\n   * Calls `attrs` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @example\n\n   let isPessimisticLock = !!UB.connection.domain.get('uba_user').attributes.mi_modifyDate\n   // with whereIf\n   let repo = UB.Repository('uba_user').attrs('ID').attrsIf(isPessimisticLock, 'mi_modifyDate')\n   //without whereIf\n   let repo = UB.Repository('uba_user').attrs('ID')\n   if (isPessimisticLock) repo = repo.attrs('mi_modifyDate')\n\n   * @param {*} addingCondition Attributes will be added only in case addingCondition is truthy\n   * @param {string|Array<string>} attrs\n   * @return {CustomRepository}attrs\n   */",
    "meta": {
      "range": [
        4832,
        4951
      ],
      "filename": "CustomRepository.js",
      "lineno": 165,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039276",
        "name": "CustomRepository#attrsIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "attrs"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#attrs CustomRepository.attrs}.\nCalls <code>attrs</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "examples": [
      "let isPessimisticLock = !!UB.connection.domain.get('uba_user').attributes.mi_modifyDate\n   // with whereIf\n   let repo = UB.Repository('uba_user').attrs('ID').attrsIf(isPessimisticLock, 'mi_modifyDate')\n   //without whereIf\n   let repo = UB.Repository('uba_user').attrs('ID')\n   if (isPessimisticLock) repo = repo.attrs('mi_modifyDate')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Attributes will be added only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "name": "attrs",
        "variable": true
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "<p>attrs</p>"
      }
    ],
    "name": "attrsIf",
    "longname": "CustomRepository#attrsIf",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003380",
    "___s": true
  },
  {
    "comment": "/**\n   * Creates a clone of this repository\n   * @example\n\n   let repo1 = UB.Repository('uba_user').attrs('ID', 'code').where('ID', '>', 15, 'byID')\n   let repo2 = repo1.clone()\n   repo1.orderBy('code')\n   repo2.attrs('name').where('ID', '>', 100, 'byID')\n   repo1.selectAsObject() // return ordered users with ID > 15\n   repo2.selectAsObject() // return unordered users with their names and ID > 100\n\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        28279,
        28322
      ],
      "filename": "CustomRepository.js",
      "lineno": 803,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040340",
        "name": "CustomRepository#clone",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Creates a clone of this repository",
    "examples": [
      "let repo1 = UB.Repository('uba_user').attrs('ID', 'code').where('ID', '>', 15, 'byID')\n   let repo2 = repo1.clone()\n   repo1.orderBy('code')\n   repo2.attrs('name').where('ID', '>', 100, 'byID')\n   repo1.selectAsObject() // return ordered users with ID > 15\n   repo2.selectAsObject() // return unordered users with their names and ID > 100"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "clone",
    "longname": "CustomRepository#clone",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "params": [],
    "___id": "T000002R003473",
    "___s": true
  },
  {
    "comment": "/**\n   * If current repository is used as a sub-query for `exists`, `notExists`, `in` or `notIn` conditions\n   * [correlation](https://en.wikipedia.org/wiki/Correlated_subquery) with a master repository will added\n   *\n   * @param {string} subQueryAttribute\n   * @param {string} masterAttribute\n   * @param {WhereCondition|String} [condition=eq] A subset from WhereCondition list applicable for correlation join\n   * @param {string} [clauseName] Optional clause name to be used in {@link class:CustomRepository#logic logic}.\n   *   If not passed unique clause names ('c1', 'c2', ...) where will be generated\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        14421,
        14768
      ],
      "filename": "CustomRepository.js",
      "lineno": 379,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039763",
        "name": "CustomRepository#correlation",
        "type": "MethodDefinition",
        "paramnames": [
          "subQueryAttribute",
          "masterAttribute",
          "condition",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "If current repository is used as a sub-query for <code>exists</code>, <code>notExists</code>, <code>in</code> or <code>notIn</code> conditions\n<a href=\"https://en.wikipedia.org/wiki/Correlated_subquery\">correlation</a> with a master repository will added",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "subQueryAttribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "masterAttribute"
      },
      {
        "type": {
          "names": [
            "WhereCondition",
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "eq",
        "description": "A subset from WhereCondition list applicable for correlation join",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {@link class:CustomRepository#logic logic}.\n  If not passed unique clause names ('c1', 'c2', ...) where will be generated",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "correlation",
    "longname": "CustomRepository#correlation",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003424",
    "___s": true
  },
  {
    "comment": "/**\n   *  Adds where condition with `EXISTS` sub-query. Inside a sub-query there are two macros:\n   *\n   *  - `{master}` will be replaced by master entity alias\n   *  - `{self}` will be replaced by sub-query entity alias\n   *\n   * @example\n\nUB.Repository('uba_user').attrs(['ID', 'name']) //select users\n  // who are not disabled\n  .where('disabled', '=', 0)\n  // which allowed access from Kiev\n  .where('trustedIP', 'in',\n   UB.Repository('geo_ip').attrs('IPAddr')\n     .where('city', '=', 'Kiev')\n  )\n  // who do not login during this year\n  .notExists(\n   UB.Repository('uba_audit')\n     .correlation('actionUser', 'name')  // here we link to uba_user.name\n     .where('actionTime', '>', new Date(2016, 1, 1))\n     .where('actionType', '=', 'LOGIN')\n  )\n  // but modify some data\n  .exists(\n   UB.Repository('uba_auditTrail')\n     .correlation('actionUser', 'ID') // here we link to uba_user.ID\n     .where('actionTime', '>', new Date(2016, 1, 1))\n  )\n  .select()\n\n   * @param {CustomRepository} subRepository  Repository, what represent a sub-query to be execute inside EXISTS statement\n   * @param {string} [clauseName] Optional clause name\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        13232,
        13335
      ],
      "filename": "CustomRepository.js",
      "lineno": 353,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039733",
        "name": "CustomRepository#exists",
        "type": "MethodDefinition",
        "paramnames": [
          "subRepository",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds where condition with <code>EXISTS</code> sub-query. Inside a sub-query there are two macros:</p>\n<ul>\n<li><code>{master}</code> will be replaced by master entity alias</li>\n<li><code>{self}</code> will be replaced by sub-query entity alias</li>\n</ul>",
    "examples": [
      "UB.Repository('uba_user').attrs(['ID', 'name']) //select users\n  // who are not disabled\n  .where('disabled', '=', 0)\n  // which allowed access from Kiev\n  .where('trustedIP', 'in',\n   UB.Repository('geo_ip').attrs('IPAddr')\n     .where('city', '=', 'Kiev')\n  )\n  // who do not login during this year\n  .notExists(\n   UB.Repository('uba_audit')\n     .correlation('actionUser', 'name')  // here we link to uba_user.name\n     .where('actionTime', '>', new Date(2016, 1, 1))\n     .where('actionType', '=', 'LOGIN')\n  )\n  // but modify some data\n  .exists(\n   UB.Repository('uba_auditTrail')\n     .correlation('actionUser', 'ID') // here we link to uba_user.ID\n     .where('actionTime', '>', new Date(2016, 1, 1))\n  )\n  .select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "Repository, what represent a sub-query to be execute inside EXISTS statement",
        "name": "subRepository"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "exists",
    "longname": "CustomRepository#exists",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003422",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds grouping\n   * @example\n\nUB.Repository('my_entity').attrs('ID')\n .groupBy('code')\nUB.Repository('uba_user').attrs('disabled')\n .groupBy('disabled').select()\nUB.Repository('uba_user').attrs(['disabled','uPassword','COUNT([ID])'])\n .groupBy(['disabled','uPassword']).select()\n\n   * @param {string|Array<string>} attr Grouped attribute(s)\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        19289,
        19480
      ],
      "filename": "CustomRepository.js",
      "lineno": 524,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039973",
        "name": "CustomRepository#groupBy",
        "type": "MethodDefinition",
        "paramnames": [
          "attr"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds grouping",
    "examples": [
      "UB.Repository('my_entity').attrs('ID')\n .groupBy('code')\nUB.Repository('uba_user').attrs('disabled')\n .groupBy('disabled').select()\nUB.Repository('uba_user').attrs(['disabled','uPassword','COUNT([ID])'])\n .groupBy(['disabled','uPassword']).select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "description": "Grouped attribute(s)",
        "name": "attr"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "groupBy",
    "longname": "CustomRepository#groupBy",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003440",
    "___s": true
  },
  {
    "comment": "/**\n   * Force `where expressions` to be used in join part of SQL statement instead of where part. Applicable only for not cached entities\n   * @exapmle\n\n// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)\n\n   * @param {string} whereItemName name of where item to use in join.\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        16446,
        16524
      ],
      "filename": "CustomRepository.js",
      "lineno": 432,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039826",
        "name": "CustomRepository#join",
        "type": "MethodDefinition",
        "paramnames": [
          "whereItemName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Force <code>where expressions</code> to be used in join part of SQL statement instead of where part. Applicable only for not cached entities",
    "tags": [
      {
        "originalTitle": "exapmle",
        "title": "exapmle",
        "text": "// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)",
        "value": "// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "name of where item to use in join.",
        "name": "whereItemName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "join",
    "longname": "CustomRepository#join",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003428",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds join condition. Fix some known issues\n   *\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in [].\n   * @param {CustomRepository.WhereCondition} condition    Any value from WhereCondition list.\n   * @param {*} [values] Condition value. In case expression is complex can take {Object} as value.\n   *   In case values === undefined no values property passed to where list\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}.\n   *   If not passed where will generate unique clause named 'c1', 'c2', ......\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        17236,
        17590
      ],
      "filename": "CustomRepository.js",
      "lineno": 449,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039841",
        "name": "CustomRepository#joinCondition",
        "type": "MethodDefinition",
        "paramnames": [
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds join condition. Fix some known issues",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in [].",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition"
          ]
        },
        "description": "Any value from WhereCondition list.",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. In case expression is complex can take {Object} as value.\n  In case values === undefined no values property passed to where list",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}.\n  If not passed where will generate unique clause named 'c1', 'c2', ......",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "joinCondition",
    "longname": "CustomRepository#joinCondition",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003429",
    "___s": true
  },
  {
    "comment": "/**\n   * How many rows to select\n   * @example\n\n// will return first two ID's from my_entity\nlet store = UB.Repository('my_entity').attrs('id').limit(2).selectAsObject()\n\n   * @param {number} rowsLimit\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        20032,
        20106
      ],
      "filename": "CustomRepository.js",
      "lineno": 559,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040029",
        "name": "CustomRepository#limit",
        "type": "MethodDefinition",
        "paramnames": [
          "rowsLimit"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "How many rows to select",
    "examples": [
      "// will return first two ID's from my_entity\nlet store = UB.Repository('my_entity').attrs('id').limit(2).selectAsObject()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "rowsLimit"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "limit",
    "longname": "CustomRepository#limit",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003444",
    "___s": true
  },
  {
    "comment": "/**\n   * Arrange named `where expressions` in logical order. By default `where expressions` are joined by AND logical predicate.\n   * It is possible to join it in custom order using `logic`.\n   * Pay attention to condition name we pass as a 4-th parameter to `.where()`\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('id')\n // code in ('1', '2', '3')\n .where('code', 'in', ['1', '2', '3'], 'byCode')\n // name like '%homer%'\n .where('name', 'contains', 'Homer', 'byName')\n //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n .where('birtday', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n // (age + 10 >= 15)\n .where('[age] -10', '>=', {age: 15}, 'byAge')\n // (byCode OR byName) AND (all where items, not included in logic)\n .logic('(([byCode]) OR ([byName]))')\n\n   * @param {string} predicate logical predicate.\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        15651,
        15733
      ],
      "filename": "CustomRepository.js",
      "lineno": 408,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039811",
        "name": "CustomRepository#logic",
        "type": "MethodDefinition",
        "paramnames": [
          "predicate"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Arrange named <code>where expressions</code> in logical order. By default <code>where expressions</code> are joined by AND logical predicate.\nIt is possible to join it in custom order using <code>logic</code>.\nPay attention to condition name we pass as a 4-th parameter to <code>.where()</code>",
    "examples": [
      "UB.Repository('my_entity').attrs('id')\n // code in ('1', '2', '3')\n .where('code', 'in', ['1', '2', '3'], 'byCode')\n // name like '%homer%'\n .where('name', 'contains', 'Homer', 'byName')\n //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n .where('birtday', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n // (age + 10 >= 15)\n .where('[age] -10', '>=', {age: 15}, 'byAge')\n // (byCode OR byName) AND (all where items, not included in logic)\n .logic('(([byCode]) OR ([byName]))')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "logical predicate.",
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "logic",
    "longname": "CustomRepository#logic",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003427",
    "___s": true
  },
  {
    "comment": "/**\n   * Apply miscellaneous options to resulting UBQL\n   * @example\n\n  // this server-side call will select all currency, including deleted\n  UB.Repository('cdn_currency').attrs(['ID'])\n    .misc({__allowSelectSafeDeleted: true}).selectAsArray();\n\n   * @param {Object} flags\n   * @param {Date} [flags.__mip_ondate] Specify date on which to select data for entities with `dataHistory` mixin. Default to Now()\n   * @param {Boolean} [flags.__mip_recordhistory=false] Select only record history data for specified ID (for entities with `dataHistory` mixin)\n   * @param {Boolean} [flags.__mip_recordhistory_all=false] Ignore __mip_ondate and select all data (acts as select for entities without `dataHistory` mixin)\n   * @param {Boolean} [flags.__mip_disablecache=false] For entities with cacheType in [\"Session\", \"SessionEntity\"] not check is data modified and always return result\n   * @param {Boolean} [flags.__skipOptimisticLock=false] Skip optimistic lock for entities with `mStorage.simpleAudit = true`\n   * @param {Boolean} [flags.__allowSelectSafeDeleted=false] Include softly deleted rows to the result\n   * @param {Boolean} [flags.__skipSelectAfterUpdate=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipSelectAfterInsert=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipRls=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipAclRls=false] **Server-side only.**\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        26232,
        26476
      ],
      "filename": "CustomRepository.js",
      "lineno": 738,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040264",
        "name": "CustomRepository#misc",
        "type": "MethodDefinition",
        "paramnames": [
          "flags"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Apply miscellaneous options to resulting UBQL",
    "examples": [
      "// this server-side call will select all currency, including deleted\n  UB.Repository('cdn_currency').attrs(['ID'])\n    .misc({__allowSelectSafeDeleted: true}).selectAsArray();"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "flags"
      },
      {
        "type": {
          "names": [
            "Date"
          ]
        },
        "optional": true,
        "description": "Specify date on which to select data for entities with <code>dataHistory</code> mixin. Default to Now()",
        "name": "flags.__mip_ondate"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Select only record history data for specified ID (for entities with <code>dataHistory</code> mixin)",
        "name": "flags.__mip_recordhistory"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Ignore __mip_ondate and select all data (acts as select for entities without <code>dataHistory</code> mixin)",
        "name": "flags.__mip_recordhistory_all"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "For entities with cacheType in [&quot;Session&quot;, &quot;SessionEntity&quot;] not check is data modified and always return result",
        "name": "flags.__mip_disablecache"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Skip optimistic lock for entities with <code>mStorage.simpleAudit = true</code>",
        "name": "flags.__skipOptimisticLock"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Include softly deleted rows to the result",
        "name": "flags.__allowSelectSafeDeleted"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipSelectAfterUpdate"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipSelectAfterInsert"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipRls"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipAclRls"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "misc",
    "longname": "CustomRepository#misc",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003467",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#misc CustomRepository.misc}.\n   * Calls `misc` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @param {*} addingCondition flags will be applied only in case addingCondition is truthy\n   * @param {Object} flags\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        26852,
        26983
      ],
      "filename": "CustomRepository.js",
      "lineno": 759,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040308",
        "name": "CustomRepository#miscIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "flags"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#misc CustomRepository.misc}.\nCalls <code>misc</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "flags will be applied only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "flags"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "miscIf",
    "longname": "CustomRepository#miscIf",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003470",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds where condition with `NOT EXISTS` sub-query. See CustomRepository.exists for sample\n   *\n   * @param {CustomRepository} subRepository  Repository, what represent a sub-query to be execute inside EXISTS statement\n   * @param {string} [clauseName] Optional clause name\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        13660,
        13769
      ],
      "filename": "CustomRepository.js",
      "lineno": 364,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039748",
        "name": "CustomRepository#notExists",
        "type": "MethodDefinition",
        "paramnames": [
          "subRepository",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds where condition with <code>NOT EXISTS</code> sub-query. See CustomRepository.exists for sample",
    "params": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "Repository, what represent a sub-query to be execute inside EXISTS statement",
        "name": "subRepository"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "notExists",
    "longname": "CustomRepository#notExists",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003423",
    "___s": true
  },
  {
    "comment": "/**\n   * Sorting\n   * @example\n\n   let repo = UB.Repository('my_entity').attrs('ID').orderBy('code')\n   let orderedData = await repo.selectAsObject() // ordered. await is for client-side only\n   repo.orderBy('code', null) // remove order by code\n   let unorderedData = await repo.selectAsObject() // NOT ordered\n\n   * @param {string} attr Sorted attribute\n   * @param {string|null} [direction='asc'] Sort direction ('asc'|'desc'). If `null` - remove sorting by this attr\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        18105,
        18443
      ],
      "filename": "CustomRepository.js",
      "lineno": 474,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039892",
        "name": "CustomRepository#orderBy",
        "type": "MethodDefinition",
        "paramnames": [
          "attr",
          "direction"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Sorting",
    "examples": [
      "let repo = UB.Repository('my_entity').attrs('ID').orderBy('code')\n   let orderedData = await repo.selectAsObject() // ordered. await is for client-side only\n   repo.orderBy('code', null) // remove order by code\n   let unorderedData = await repo.selectAsObject() // NOT ordered"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Sorted attribute",
        "name": "attr"
      },
      {
        "type": {
          "names": [
            "string",
            "null"
          ]
        },
        "optional": true,
        "defaultvalue": "'asc'",
        "description": "Sort direction ('asc'|'desc'). If <code>null</code> - remove sorting by this attr",
        "name": "direction"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "orderBy",
    "longname": "CustomRepository#orderBy",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003432",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds descend sorting. The same as orderBy(attr, 'desc')\n   *\n   * To remove such sorting call orderBy(attr, null)\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('ID')\n  // ORDER BY code, date_create DESC\n  .orderBy('code').orderByDesc('date_create')\n\n   * @param {string} attr\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        18779,
        18896
      ],
      "filename": "CustomRepository.js",
      "lineno": 502,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039954",
        "name": "CustomRepository#orderByDesc",
        "type": "MethodDefinition",
        "paramnames": [
          "attr"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds descend sorting. The same as orderBy(attr, 'desc')</p>\n<p>To remove such sorting call orderBy(attr, null)",
    "examples": [
      "UB.Repository('my_entity').attrs('ID')\n  // ORDER BY code, date_create DESC\n  .orderBy('code').orderByDesc('date_create')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attr"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "orderByDesc",
    "longname": "CustomRepository#orderByDesc",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003437",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in descendants as a alias to the most appropriate method\n   *\n   * @abstract\n   * @param {Object} [storeConfig] optional config passed to store constructor\n   */",
    "meta": {
      "range": [
        22958,
        23016
      ],
      "filename": "CustomRepository.js",
      "lineno": 657,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040228",
        "name": "CustomRepository#select",
        "type": "MethodDefinition",
        "paramnames": [
          "storeConfig"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Must be implemented in descendants as a alias to the most appropriate method",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "optional config passed to store constructor",
        "name": "storeConfig"
      }
    ],
    "name": "select",
    "longname": "CustomRepository#select",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003463",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in descendants and return (or resolved for async clients)\n   * to `array of array` representation of result, like this\n   *\n   *      {\"resultData\":{\"fields\":[\"ID\",\"name\",\"ID.name\"],\"rowCount\":1,\"data\":[[10,\"admin\",\"admin\"]]},\"total\":1,\"__totalRecCount\": totolRecCountIfWithTotalRequest}\n   *\n   * @abstract\n   */",
    "meta": {
      "range": [
        22096,
        22150
      ],
      "filename": "CustomRepository.js",
      "lineno": 631,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040211",
        "name": "CustomRepository#selectAsArray",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Must be implemented in descendants and return (or resolved for async clients)\nto <code>array of array</code> representation of result, like this</p>\n<pre class=\"prettyprint source\"><code> {&quot;resultData&quot;:{&quot;fields&quot;:[&quot;ID&quot;,&quot;name&quot;,&quot;ID.name&quot;],&quot;rowCount&quot;:1,&quot;data&quot;:[[10,&quot;admin&quot;,&quot;admin&quot;]]},&quot;total&quot;:1,&quot;__totalRecCount&quot;: totolRecCountIfWithTotalRequest}</code></pre>",
    "virtual": true,
    "name": "selectAsArray",
    "longname": "CustomRepository#selectAsArray",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "params": [],
    "___id": "T000002R003461",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in descendants and return (or resolved for async clients)\n   * to `array of object` representation of result, like this\n   *\n   *      [{\"ID\":3000000000004,\"code\":\"uba_user\"},{\"ID\":3000000000039,\"code\":\"uba_auditTrail\"}]\n   *\n   * @abstract\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute\n   *  names during transform array to object\n   * @return {Array.<object>}\n   */",
    "meta": {
      "range": [
        21643,
        21710
      ],
      "filename": "CustomRepository.js",
      "lineno": 619,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040202",
        "name": "CustomRepository#selectAsObject",
        "type": "MethodDefinition",
        "paramnames": [
          "fieldAliases"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Must be implemented in descendants and return (or resolved for async clients)\nto <code>array of object</code> representation of result, like this</p>\n<pre class=\"prettyprint source\"><code> [{&quot;ID&quot;:3000000000004,&quot;code&quot;:&quot;uba_user&quot;},{&quot;ID&quot;:3000000000039,&quot;code&quot;:&quot;uba_auditTrail&quot;}]</code></pre>",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute\n names during transform array to object",
        "name": "fieldAliases"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<object>"
          ]
        }
      }
    ],
    "name": "selectAsObject",
    "longname": "CustomRepository#selectAsObject",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003460",
    "___s": true
  },
  {
    "comment": "/**\n   * Must be implemented in descendants and return (or resolved for async clients)\n   * to `DataSet` class instance, implemented in caller level. It can be:\n   *\n   *  - {TubDataStore} for in-server context\n   *  - {UB.ux.data.UBStore} for UnityBase `adminUI` client\n   *  - `array of array` data representation for UnityBase remote connection\n   *  - etc.\n   *\n   * @abstract\n   * @param {Object} [storeConfig] optional config passed to store constructor\n   */",
    "meta": {
      "range": [
        22659,
        22724
      ],
      "filename": "CustomRepository.js",
      "lineno": 647,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040219",
        "name": "CustomRepository#selectAsStore",
        "type": "MethodDefinition",
        "paramnames": [
          "storeConfig"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Must be implemented in descendants and return (or resolved for async clients)\nto <code>DataSet</code> class instance, implemented in caller level. It can be:</p>\n<ul>\n<li>{TubDataStore} for in-server context</li>\n<li>{UB.ux.data.UBStore} for UnityBase <code>adminUI</code> client</li>\n<li><code>array of array</code> data representation for UnityBase remote connection</li>\n<li>etc.</li>\n</ul>",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "optional config passed to store constructor",
        "name": "storeConfig"
      }
    ],
    "name": "selectAsStore",
    "longname": "CustomRepository#selectAsStore",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003462",
    "___s": true
  },
  {
    "comment": "/**\n   * Select a single row by ID. If result is empty - returns `undefined`\n   * If result is not empty - returns a object\n   * @example\n\n  UB.Repository('uba_user').attrs('name', 'ID').selectById(10).then(UB.logDebug)\n  // will output: {name: \"admin\", ID: 10}\n\n   * @abstract\n   * @param {Number} ID Row identifier\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute names\n   *   during transform array to object. See {@link selectAsObject}\n   * @return {Object|undefined}\n   */",
    "meta": {
      "range": [
        24710,
        24777
      ],
      "filename": "CustomRepository.js",
      "lineno": 713,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040254",
        "name": "CustomRepository#selectById",
        "type": "MethodDefinition",
        "paramnames": [
          "ID",
          "fieldAliases"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Select a single row by ID. If result is empty - returns <code>undefined</code>\nIf result is not empty - returns a object",
    "examples": [
      "UB.Repository('uba_user').attrs('name', 'ID').selectById(10).then(UB.logDebug)\n  // will output: {name: \"admin\", ID: 10}"
    ],
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Row identifier",
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute names\n  during transform array to object. See {@link selectAsObject}",
        "name": "fieldAliases"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectById",
    "longname": "CustomRepository#selectById",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003466",
    "___s": true
  },
  {
    "comment": "/**\n   * Execute select and returns a value of the first attribute from the first row\n   * @example\n\n  UB.Repository('uba_user')\n    .attrs('name')\n    .where('ID', '=', 10)\n    .selectScalar().then(UB.logDebug) // will output `admin`\n\n   * **WARNING** does not check if result contains the single row\n   * @abstract\n   * @return {Number|String|undefined}\n   */",
    "meta": {
      "range": [
        24096,
        24149
      ],
      "filename": "CustomRepository.js",
      "lineno": 694,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040246",
        "name": "CustomRepository#selectScalar",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Execute select and returns a value of the first attribute from the first row",
    "examples": [
      "UB.Repository('uba_user')\n    .attrs('name')\n    .where('ID', '=', 10)\n    .selectScalar().then(UB.logDebug) // will output `admin`\n**WARNING** does not check if result contains the single row"
    ],
    "virtual": true,
    "returns": [
      {
        "type": {
          "names": [
            "Number",
            "String",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectScalar",
    "longname": "CustomRepository#selectScalar",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "params": [],
    "___id": "T000002R003465",
    "___s": true
  },
  {
    "comment": "/**\n   * Select a single row. If ubql result is empty - return `undefined`\n   * @example\n\n  UB.Repository('uba_user').attrs('name', 'ID').where('ID', '=', 10)\n   .selectSingle().then(UB.logDebug)\n  // will output: {name: \"admin\", ID: 10}\n\n   * **WARNING** method does not check if result contains the single row and always returns a first row from result\n   * @abstract\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute names\n   *   during transform array to object. See {@link selectAsObject}\n   * @return {*|undefined}\n   */",
    "meta": {
      "range": [
        23625,
        23690
      ],
      "filename": "CustomRepository.js",
      "lineno": 676,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040237",
        "name": "CustomRepository#selectSingle",
        "type": "MethodDefinition",
        "paramnames": [
          "fieldAliases"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Select a single row. If ubql result is empty - return <code>undefined</code>",
    "examples": [
      "UB.Repository('uba_user').attrs('name', 'ID').where('ID', '=', 10)\n   .selectSingle().then(UB.logDebug)\n  // will output: {name: \"admin\", ID: 10}\n**WARNING** method does not check if result contains the single row and always returns a first row from result"
    ],
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute names\n  during transform array to object. See {@link selectAsObject}",
        "name": "fieldAliases"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectSingle",
    "longname": "CustomRepository#selectSingle",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003464",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve first `start` rows\n   * @example\n\nlet store = UB.Repository('my_entity').attrs('id')\n //will return ID's from 15 to 25\n .start(15).limit(10).select()\n\n   * @param {Number} start\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        19720,
        19786
      ],
      "filename": "CustomRepository.js",
      "lineno": 544,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040014",
        "name": "CustomRepository#start",
        "type": "MethodDefinition",
        "paramnames": [
          "start"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve first <code>start</code> rows",
    "examples": [
      "let store = UB.Repository('my_entity').attrs('id')\n //will return ID's from 15 to 25\n .start(15).limit(10).select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "start"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "start",
    "longname": "CustomRepository#start",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003442",
    "___s": true
  },
  {
    "comment": "/**\n   * Construct a UBQL JSON\n   * @example\n\nlet repo = UB.Repository('my_entity').attrs('ID').where('code', '=', 'a')\nlet inst = UB.DataStore(my_entity)\ninst.run('select', repo.ubql())\n\n   * @return {UBQL}\n   */",
    "meta": {
      "range": [
        20326,
        21160
      ],
      "filename": "CustomRepository.js",
      "lineno": 574,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040044",
        "name": "CustomRepository#ubql",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Construct a UBQL JSON",
    "examples": [
      "let repo = UB.Repository('my_entity').attrs('ID').where('code', '=', 'a')\nlet inst = UB.DataStore(my_entity)\ninst.run('select', repo.ubql())"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBQL"
          ]
        }
      }
    ],
    "name": "ubql",
    "longname": "CustomRepository#ubql",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "params": [],
    "___id": "T000002R003446",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve a data from server using `methodName` entity method.\n   * By default `select` method will be used.\n   * @param {string} methodName\n   */",
    "meta": {
      "range": [
        2182,
        2251
      ],
      "filename": "CustomRepository.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039204",
        "name": "CustomRepository#using",
        "type": "MethodDefinition",
        "paramnames": [
          "methodName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve a data from server using <code>methodName</code> entity method.\nBy default <code>select</code> method will be used.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "methodName"
      }
    ],
    "name": "using",
    "longname": "CustomRepository#using",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003374",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds where expression\n   *\n   *  - the expression may contain one of the following functions: 'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE',\n   *    'LENGTH', 'LOWER', 'UPPER', 'DAY', 'MONTH', 'YEAR', 'ROUND', 'FLOOR', 'CEILING'\n   *\n   *  - for a Date/DateTime attributes special macros `#maxdate` or `#currentdate` can be used as a value:\n   *\n   *        .where('dateValue', '=', '#maxdate')\n   *        .where('dateTimeValue', '<', '#currentdate')\n   *\n   *  - `in` and 'notIn` conditions can take a sub-repository as a values parameter value.\n   *  See {@link class:CustomRepository#exists CustomRepository.exists} for sample\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('id')\n  // code in ('1', '2', '3')\n  .where('code', 'in', ['1', '2', '3'])\n  // code in (select code from my_codes where id = 10)\n  .where('code', 'in', UB.Repository('my_codes').attr('code').where('ID', '<', 10)\n  // name like '%homer%'\n  .where('[name]', 'contains', 'Homer').\n  //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n  .where('[birtday]', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n  // (age + 10 >= 15)\n  .where('[age] -10', '>=', {age: 15}, 'byAge')\n  .where('LENGTH([code]), '<', 5)\n  // for condition match expression not need\n  .where('', 'match', 'myvalue')\n\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in []\n   * @param {CustomRepository.WhereCondition|String} condition  Any value from {@link CustomRepository#WhereCondition WhereCondition}\n   * @param {*} [values] Condition value. If `undefined` values not passed to ubql\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}\n   *   If not passed unique clause name will be generated ('_1', '_2', ..).\n   *   In case a condition with the same name exists, it will be overwritten.\n   *\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        6896,
        10635
      ],
      "filename": "CustomRepository.js",
      "lineno": 211,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039295",
        "name": "CustomRepository#where",
        "type": "MethodDefinition",
        "paramnames": [
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds where expression</p>\n<ul>\n<li><p>the expression may contain one of the following functions: 'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE',\n'LENGTH', 'LOWER', 'UPPER', 'DAY', 'MONTH', 'YEAR', 'ROUND', 'FLOOR', 'CEILING'</p>\n</li>\n<li><p>for a Date/DateTime attributes special macros <code>#maxdate</code> or <code>#currentdate</code> can be used as a value:</p>\n<pre class=\"prettyprint source\"><code>.where('dateValue', '=', '#maxdate')\n.where('dateTimeValue', '&lt;', '#currentdate')</code></pre></li>\n<li><p><code>in</code> and 'notIn` conditions can take a sub-repository as a values parameter value.\nSee {@link class:CustomRepository#exists CustomRepository.exists} for sample</p>\n</li>\n</ul>",
    "examples": [
      "UB.Repository('my_entity').attrs('id')\n  // code in ('1', '2', '3')\n  .where('code', 'in', ['1', '2', '3'])\n  // code in (select code from my_codes where id = 10)\n  .where('code', 'in', UB.Repository('my_codes').attr('code').where('ID', '<', 10)\n  // name like '%homer%'\n  .where('[name]', 'contains', 'Homer').\n  //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n  .where('[birtday]', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n  // (age + 10 >= 15)\n  .where('[age] -10', '>=', {age: 15}, 'byAge')\n  .where('LENGTH([code]), '<', 5)\n  // for condition match expression not need\n  .where('', 'match', 'myvalue')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in []",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition",
            "String"
          ]
        },
        "description": "Any value from {@link CustomRepository#WhereCondition WhereCondition}",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. If <code>undefined</code> values not passed to ubql",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}\n  If not passed unique clause name will be generated ('_1', '_2', ..).\n  In case a condition with the same name exists, it will be overwritten.",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "where",
    "longname": "CustomRepository#where",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003381",
    "___s": true
  },
  {
    "comment": "/**\n * Enumeration of all condition types. This enumeration defines a set of String values.\n * It exists primarily for documentation purposes - in code use the actual string values like '>', don't reference them through this class like WhereCondition.more.\n *\n * We define several aliases for the same condition. In case of direct HTTP request (without Repository) use only non-aliased values (i.e. `more` instead of '>' or 'gt')\n * @memberOf CustomRepository\n * @enum {string}\n */",
    "meta": {
      "range": [
        29319,
        33064
      ],
      "filename": "CustomRepository.js",
      "lineno": 832,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040375",
        "name": "CustomRepository.prototype.WhereCondition",
        "type": "ObjectExpression",
        "value": "{\"undefined\":\"custom\"}",
        "paramnames": []
      }
    },
    "description": "Enumeration of all condition types. This enumeration defines a set of String values.\nIt exists primarily for documentation purposes - in code use the actual string values like '&gt;', don't reference them through this class like WhereCondition.more.</p>\n<p>We define several aliases for the same condition. In case of direct HTTP request (without Repository) use only non-aliased values (i.e. <code>more</code> instead of '&gt;' or 'gt')",
    "memberof": "CustomRepository",
    "kind": "member",
    "isEnum": true,
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "WhereCondition",
    "longname": "CustomRepository#WhereCondition",
    "scope": "instance",
    "properties": [
      {
        "comment": "/** @description Alias for `more` */",
        "meta": {
          "range": [
            29406,
            29418
          ],
          "filename": "CustomRepository.js",
          "lineno": 834,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040382",
            "name": "gt",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Alias for <code>more</code>",
        "name": "gt",
        "longname": "CustomRepository#WhereCondition.gt",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more",
        "___id": "T000002R003477",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `more` */",
        "meta": {
          "range": [
            29461,
            29472
          ],
          "filename": "CustomRepository.js",
          "lineno": 836,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040384",
            "name": "\">\"",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Alias for <code>more</code>",
        "name": "\">\"",
        "longname": "CustomRepository#WhereCondition.\">\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more",
        "___id": "T000002R003478",
        "___s": true
      },
      {
        "comment": "/** @description Greater than */",
        "meta": {
          "range": [
            29511,
            29525
          ],
          "filename": "CustomRepository.js",
          "lineno": 838,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040386",
            "name": "more",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Greater than",
        "name": "more",
        "longname": "CustomRepository#WhereCondition.more",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more",
        "___id": "T000002R003479",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `less` */",
        "meta": {
          "range": [
            29568,
            29580
          ],
          "filename": "CustomRepository.js",
          "lineno": 840,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040388",
            "name": "lt",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Alias for <code>less</code>",
        "name": "lt",
        "longname": "CustomRepository#WhereCondition.lt",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less",
        "___id": "T000002R003480",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `less` */",
        "meta": {
          "range": [
            29623,
            29634
          ],
          "filename": "CustomRepository.js",
          "lineno": 842,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040390",
            "name": "\"<\"",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Alias for <code>less</code>",
        "name": "\"<\"",
        "longname": "CustomRepository#WhereCondition.\"<\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less",
        "___id": "T000002R003481",
        "___s": true
      },
      {
        "comment": "/** @description Less than */",
        "meta": {
          "range": [
            29670,
            29684
          ],
          "filename": "CustomRepository.js",
          "lineno": 844,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040392",
            "name": "less",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Less than",
        "name": "less",
        "longname": "CustomRepository#WhereCondition.less",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less",
        "___id": "T000002R003482",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `equal` */",
        "meta": {
          "range": [
            29729,
            29742
          ],
          "filename": "CustomRepository.js",
          "lineno": 847,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040394",
            "name": "eq",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Alias for <code>equal</code>",
        "name": "eq",
        "longname": "CustomRepository#WhereCondition.eq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal",
        "___id": "T000002R003483",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `equal` */",
        "meta": {
          "range": [
            29786,
            29798
          ],
          "filename": "CustomRepository.js",
          "lineno": 849,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040396",
            "name": "\"=\"",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Alias for <code>equal</code>",
        "name": "\"=\"",
        "longname": "CustomRepository#WhereCondition.\"=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal",
        "___id": "T000002R003484",
        "___s": true
      },
      {
        "comment": "/** @description Equal to */",
        "meta": {
          "range": [
            29833,
            29849
          ],
          "filename": "CustomRepository.js",
          "lineno": 851,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040398",
            "name": "equal",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Equal to",
        "name": "equal",
        "longname": "CustomRepository#WhereCondition.equal",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal",
        "___id": "T000002R003485",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `moreEqual` */",
        "meta": {
          "range": [
            29898,
            29915
          ],
          "filename": "CustomRepository.js",
          "lineno": 854,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040400",
            "name": "ge",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "ge",
        "longname": "CustomRepository#WhereCondition.ge",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual",
        "___id": "T000002R003486",
        "___s": true
      },
      {
        "comment": "/** @description  Alias for `moreEqual` */",
        "meta": {
          "range": [
            29964,
            29982
          ],
          "filename": "CustomRepository.js",
          "lineno": 856,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040402",
            "name": "geq",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "geq",
        "longname": "CustomRepository#WhereCondition.geq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual",
        "___id": "T000002R003487",
        "___s": true
      },
      {
        "comment": "/** @description  Alias for `moreEqual` */",
        "meta": {
          "range": [
            30031,
            30048
          ],
          "filename": "CustomRepository.js",
          "lineno": 858,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040404",
            "name": "\">=\"",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "\">=\"",
        "longname": "CustomRepository#WhereCondition.\">=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual",
        "___id": "T000002R003488",
        "___s": true
      },
      {
        "comment": "/** @description  Greater than or equal */",
        "meta": {
          "range": [
            30097,
            30121
          ],
          "filename": "CustomRepository.js",
          "lineno": 860,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040406",
            "name": "moreEqual",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Greater than or equal",
        "name": "moreEqual",
        "longname": "CustomRepository#WhereCondition.moreEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual",
        "___id": "T000002R003489",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30170,
            30187
          ],
          "filename": "CustomRepository.js",
          "lineno": 863,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040408",
            "name": "le",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "le",
        "longname": "CustomRepository#WhereCondition.le",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual",
        "___id": "T000002R003490",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30235,
            30253
          ],
          "filename": "CustomRepository.js",
          "lineno": 865,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040410",
            "name": "leq",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "leq",
        "longname": "CustomRepository#WhereCondition.leq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual",
        "___id": "T000002R003491",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30301,
            30318
          ],
          "filename": "CustomRepository.js",
          "lineno": 867,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040412",
            "name": "\"<=\"",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "\"<=\"",
        "longname": "CustomRepository#WhereCondition.\"<=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual",
        "___id": "T000002R003492",
        "___s": true
      },
      {
        "comment": "/** @description Less than or equal */",
        "meta": {
          "range": [
            30363,
            30387
          ],
          "filename": "CustomRepository.js",
          "lineno": 869,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040414",
            "name": "lessEqual",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Less than or equal",
        "name": "lessEqual",
        "longname": "CustomRepository#WhereCondition.lessEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual",
        "___id": "T000002R003493",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30435,
            30451
          ],
          "filename": "CustomRepository.js",
          "lineno": 872,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040416",
            "name": "ne",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "ne",
        "longname": "CustomRepository#WhereCondition.ne",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003494",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30498,
            30515
          ],
          "filename": "CustomRepository.js",
          "lineno": 874,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040418",
            "name": "neq",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "neq",
        "longname": "CustomRepository#WhereCondition.neq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003495",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30562,
            30578
          ],
          "filename": "CustomRepository.js",
          "lineno": 876,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040420",
            "name": "\"<>\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"<>\"",
        "longname": "CustomRepository#WhereCondition.\"<>\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003496",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30625,
            30641
          ],
          "filename": "CustomRepository.js",
          "lineno": 878,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040422",
            "name": "\"!=\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"!=\"",
        "longname": "CustomRepository#WhereCondition.\"!=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003497",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30688,
            30705
          ],
          "filename": "CustomRepository.js",
          "lineno": 880,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040424",
            "name": "\"!==\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"!==\"",
        "longname": "CustomRepository#WhereCondition.\"!==\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003498",
        "___s": true
      },
      {
        "comment": "/** @description Not equal */",
        "meta": {
          "range": [
            30741,
            30763
          ],
          "filename": "CustomRepository.js",
          "lineno": 882,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040426",
            "name": "notEqual",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Not equal",
        "name": "notEqual",
        "longname": "CustomRepository#WhereCondition.notEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual",
        "___id": "T000002R003499",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `like` */",
        "meta": {
          "range": [
            30807,
            30825
          ],
          "filename": "CustomRepository.js",
          "lineno": 885,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040428",
            "name": "contains",
            "type": "Literal",
            "value": "like"
          }
        },
        "description": "Alias for <code>like</code>",
        "name": "contains",
        "longname": "CustomRepository#WhereCondition.contains",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "like",
        "___id": "T000002R003500",
        "___s": true
      },
      {
        "comment": "/** @description Like condition. For attributes of type `String` only */",
        "meta": {
          "range": [
            30904,
            30918
          ],
          "filename": "CustomRepository.js",
          "lineno": 887,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040430",
            "name": "like",
            "type": "Literal",
            "value": "like"
          }
        },
        "description": "Like condition. For attributes of type <code>String</code> only",
        "name": "like",
        "longname": "CustomRepository#WhereCondition.like",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "like",
        "___id": "T000002R003501",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notLike` */",
        "meta": {
          "range": [
            30965,
            30989
          ],
          "filename": "CustomRepository.js",
          "lineno": 890,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040432",
            "name": "notContains",
            "type": "Literal",
            "value": "notLike"
          }
        },
        "description": "Alias for <code>notLike</code>",
        "name": "notContains",
        "longname": "CustomRepository#WhereCondition.notContains",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notLike",
        "___id": "T000002R003502",
        "___s": true
      },
      {
        "comment": "/** @description Not like condition. For attributes of type `String` only */",
        "meta": {
          "range": [
            31072,
            31092
          ],
          "filename": "CustomRepository.js",
          "lineno": 892,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040434",
            "name": "notLike",
            "type": "Literal",
            "value": "notLike"
          }
        },
        "description": "Not like condition. For attributes of type <code>String</code> only",
        "name": "notLike",
        "longname": "CustomRepository#WhereCondition.notLike",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notLike",
        "___id": "T000002R003503",
        "___s": true
      },
      {
        "comment": "/** @description Is null */",
        "meta": {
          "range": [
            31127,
            31145
          ],
          "filename": "CustomRepository.js",
          "lineno": 895,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040436",
            "name": "isNull",
            "type": "Literal",
            "value": "isNull"
          }
        },
        "description": "Is null",
        "name": "isNull",
        "longname": "CustomRepository#WhereCondition.isNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "isNull",
        "___id": "T000002R003504",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `isNull` */",
        "meta": {
          "range": [
            31190,
            31206
          ],
          "filename": "CustomRepository.js",
          "lineno": 897,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040438",
            "name": "null",
            "type": "Literal",
            "value": "isNull"
          }
        },
        "description": "Alias for <code>isNull</code>",
        "name": "null",
        "longname": "CustomRepository#WhereCondition.null",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "isNull",
        "___id": "T000002R003505",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notIsNull` */",
        "meta": {
          "range": [
            31255,
            31277
          ],
          "filename": "CustomRepository.js",
          "lineno": 900,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040440",
            "name": "notNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Alias for <code>notIsNull</code>",
        "name": "notNull",
        "longname": "CustomRepository#WhereCondition.notNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull",
        "___id": "T000002R003506",
        "___s": true
      },
      {
        "comment": "/** @description Not is null */",
        "meta": {
          "range": [
            31315,
            31339
          ],
          "filename": "CustomRepository.js",
          "lineno": 902,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040442",
            "name": "notIsNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Not is null",
        "name": "notIsNull",
        "longname": "CustomRepository#WhereCondition.notIsNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull",
        "___id": "T000002R003507",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notIsNull` */",
        "meta": {
          "range": [
            31387,
            31411
          ],
          "filename": "CustomRepository.js",
          "lineno": 904,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040444",
            "name": "isNotNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Alias for <code>notIsNull</code>",
        "name": "isNotNull",
        "longname": "CustomRepository#WhereCondition.isNotNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull",
        "___id": "T000002R003508",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31460,
            31484
          ],
          "filename": "CustomRepository.js",
          "lineno": 907,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040446",
            "name": "beginWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "beginWith",
        "longname": "CustomRepository#WhereCondition.beginWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith",
        "___id": "T000002R003509",
        "___s": true
      },
      {
        "comment": "/** @description Start with. For attributes of type `String` only */",
        "meta": {
          "range": [
            31559,
            31583
          ],
          "filename": "CustomRepository.js",
          "lineno": 909,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040448",
            "name": "startWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Start with. For attributes of type <code>String</code> only",
        "name": "startWith",
        "longname": "CustomRepository#WhereCondition.startWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith",
        "___id": "T000002R003510",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31631,
            31656
          ],
          "filename": "CustomRepository.js",
          "lineno": 911,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040450",
            "name": "startsWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "startsWith",
        "longname": "CustomRepository#WhereCondition.startsWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith",
        "___id": "T000002R003511",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31704,
            31729
          ],
          "filename": "CustomRepository.js",
          "lineno": 913,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040452",
            "name": "startswith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "startswith",
        "longname": "CustomRepository#WhereCondition.startswith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith",
        "___id": "T000002R003512",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notStartWith` */",
        "meta": {
          "range": [
            31781,
            31811
          ],
          "filename": "CustomRepository.js",
          "lineno": 916,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040454",
            "name": "notBeginWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Alias for <code>notStartWith</code>",
        "name": "notBeginWith",
        "longname": "CustomRepository#WhereCondition.notBeginWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith",
        "___id": "T000002R003513",
        "___s": true
      },
      {
        "comment": "/** @description Not start with. For attributes of type `String` only */",
        "meta": {
          "range": [
            31890,
            31920
          ],
          "filename": "CustomRepository.js",
          "lineno": 918,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040456",
            "name": "notStartWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Not start with. For attributes of type <code>String</code> only",
        "name": "notStartWith",
        "longname": "CustomRepository#WhereCondition.notStartWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith",
        "___id": "T000002R003514",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notStartWith` */",
        "meta": {
          "range": [
            31971,
            32002
          ],
          "filename": "CustomRepository.js",
          "lineno": 920,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040458",
            "name": "notStartsWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Alias for <code>notStartWith</code>",
        "name": "notStartsWith",
        "longname": "CustomRepository#WhereCondition.notStartsWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith",
        "___id": "T000002R003515",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `in` */",
        "meta": {
          "range": [
            32044,
            32060
          ],
          "filename": "CustomRepository.js",
          "lineno": 923,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040460",
            "name": "includes",
            "type": "Literal",
            "value": "in"
          }
        },
        "description": "Alias for <code>in</code>",
        "name": "includes",
        "longname": "CustomRepository#WhereCondition.includes",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "in",
        "___id": "T000002R003516",
        "___s": true
      },
      {
        "comment": "/** @description One of. Can accept array of string on array of Int/Int64 as values depending on attribute type. */",
        "meta": {
          "range": [
            32182,
            32192
          ],
          "filename": "CustomRepository.js",
          "lineno": 925,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040462",
            "name": "in",
            "type": "Literal",
            "value": "in"
          }
        },
        "description": "One of. Can accept array of string on array of Int/Int64 as values depending on attribute type.",
        "name": "in",
        "longname": "CustomRepository#WhereCondition.in",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "in",
        "___id": "T000002R003517",
        "___s": true
      },
      {
        "comment": "/** @description Alias for `notIn` */",
        "meta": {
          "range": [
            32237,
            32259
          ],
          "filename": "CustomRepository.js",
          "lineno": 928,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040464",
            "name": "notIncludes",
            "type": "Literal",
            "value": "notIn"
          }
        },
        "description": "Alias for <code>notIn</code>",
        "name": "notIncludes",
        "longname": "CustomRepository#WhereCondition.notIncludes",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIn",
        "___id": "T000002R003518",
        "___s": true
      },
      {
        "comment": "/** @description Not one of. See WhereCondition.in for details */",
        "meta": {
          "range": [
            32331,
            32347
          ],
          "filename": "CustomRepository.js",
          "lineno": 930,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040466",
            "name": "notIn",
            "type": "Literal",
            "value": "notIn"
          }
        },
        "description": "Not one of. See WhereCondition.in for details",
        "name": "notIn",
        "longname": "CustomRepository#WhereCondition.notIn",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIn",
        "___id": "T000002R003519",
        "___s": true
      },
      {
        "comment": "/** @description For entities with FTS mixin enabled. TODO - expand */",
        "meta": {
          "range": [
            32425,
            32441
          ],
          "filename": "CustomRepository.js",
          "lineno": 933,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040468",
            "name": "match",
            "type": "Literal",
            "value": "match"
          }
        },
        "description": "For entities with FTS mixin enabled. TODO - expand",
        "name": "match",
        "longname": "CustomRepository#WhereCondition.match",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "match",
        "___id": "T000002R003520",
        "___s": true
      },
      {
        "comment": "/** @description Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method */",
        "meta": {
          "range": [
            32609,
            32631
          ],
          "filename": "CustomRepository.js",
          "lineno": 936,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040470",
            "name": "subquery",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method",
        "name": "subquery",
        "longname": "CustomRepository#WhereCondition.subquery",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery",
        "___id": "T000002R003521",
        "___s": true
      },
      {
        "comment": "/** @description Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method */",
        "meta": {
          "range": [
            32748,
            32768
          ],
          "filename": "CustomRepository.js",
          "lineno": 938,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040472",
            "name": "exists",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method",
        "name": "exists",
        "longname": "CustomRepository#WhereCondition.exists",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery",
        "___id": "T000002R003522",
        "___s": true
      },
      {
        "comment": "/** @description Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method */",
        "meta": {
          "range": [
            32892,
            32915
          ],
          "filename": "CustomRepository.js",
          "lineno": 940,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040474",
            "name": "notExists",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method",
        "name": "notExists",
        "longname": "CustomRepository#WhereCondition.notExists",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery",
        "___id": "T000002R003523",
        "___s": true
      },
      {
        "comment": "/** @description Custom condition. For Server-side call only. For this condition `expression` can be any SQL statement */",
        "meta": {
          "range": [
            33044,
            33062
          ],
          "filename": "CustomRepository.js",
          "lineno": 943,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040476",
            "name": "custom",
            "type": "Literal",
            "value": "custom"
          }
        },
        "description": "Custom condition. For Server-side call only. For this condition <code>expression</code> can be any SQL statement",
        "name": "custom",
        "longname": "CustomRepository#WhereCondition.custom",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "custom",
        "___id": "T000002R003524",
        "___s": true
      }
    ],
    "___id": "T000002R003476",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notEqual` */",
    "meta": {
      "range": [
        30625,
        30641
      ],
      "filename": "CustomRepository.js",
      "lineno": 878,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040422",
        "name": "\"!=\"",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Alias for <code>notEqual</code>",
    "name": "\"!=\"",
    "longname": "CustomRepository#WhereCondition.\"!=\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003497",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notEqual` */",
    "meta": {
      "range": [
        30688,
        30705
      ],
      "filename": "CustomRepository.js",
      "lineno": 880,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040424",
        "name": "\"!==\"",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Alias for <code>notEqual</code>",
    "name": "\"!==\"",
    "longname": "CustomRepository#WhereCondition.\"!==\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003498",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `less` */",
    "meta": {
      "range": [
        29623,
        29634
      ],
      "filename": "CustomRepository.js",
      "lineno": 842,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040390",
        "name": "\"<\"",
        "type": "Literal",
        "value": "less"
      }
    },
    "description": "Alias for <code>less</code>",
    "name": "\"<\"",
    "longname": "CustomRepository#WhereCondition.\"<\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "less",
    "___id": "T000002R003481",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `lessEqual` */",
    "meta": {
      "range": [
        30301,
        30318
      ],
      "filename": "CustomRepository.js",
      "lineno": 867,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040412",
        "name": "\"<=\"",
        "type": "Literal",
        "value": "lessEqual"
      }
    },
    "description": "Alias for <code>lessEqual</code>",
    "name": "\"<=\"",
    "longname": "CustomRepository#WhereCondition.\"<=\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "lessEqual",
    "___id": "T000002R003492",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notEqual` */",
    "meta": {
      "range": [
        30562,
        30578
      ],
      "filename": "CustomRepository.js",
      "lineno": 876,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040420",
        "name": "\"<>\"",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Alias for <code>notEqual</code>",
    "name": "\"<>\"",
    "longname": "CustomRepository#WhereCondition.\"<>\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003496",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `equal` */",
    "meta": {
      "range": [
        29786,
        29798
      ],
      "filename": "CustomRepository.js",
      "lineno": 849,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040396",
        "name": "\"=\"",
        "type": "Literal",
        "value": "equal"
      }
    },
    "description": "Alias for <code>equal</code>",
    "name": "\"=\"",
    "longname": "CustomRepository#WhereCondition.\"=\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "equal",
    "___id": "T000002R003484",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `more` */",
    "meta": {
      "range": [
        29461,
        29472
      ],
      "filename": "CustomRepository.js",
      "lineno": 836,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040384",
        "name": "\">\"",
        "type": "Literal",
        "value": "more"
      }
    },
    "description": "Alias for <code>more</code>",
    "name": "\">\"",
    "longname": "CustomRepository#WhereCondition.\">\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "more",
    "___id": "T000002R003478",
    "___s": true
  },
  {
    "comment": "/** @description  Alias for `moreEqual` */",
    "meta": {
      "range": [
        30031,
        30048
      ],
      "filename": "CustomRepository.js",
      "lineno": 858,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040404",
        "name": "\">=\"",
        "type": "Literal",
        "value": "moreEqual"
      }
    },
    "description": "Alias for <code>moreEqual</code>",
    "name": "\">=\"",
    "longname": "CustomRepository#WhereCondition.\">=\"",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "moreEqual",
    "___id": "T000002R003488",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `startWith` */",
    "meta": {
      "range": [
        31460,
        31484
      ],
      "filename": "CustomRepository.js",
      "lineno": 907,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040446",
        "name": "beginWith",
        "type": "Literal",
        "value": "startWith"
      }
    },
    "description": "Alias for <code>startWith</code>",
    "name": "beginWith",
    "longname": "CustomRepository#WhereCondition.beginWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "startWith",
    "___id": "T000002R003509",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `like` */",
    "meta": {
      "range": [
        30807,
        30825
      ],
      "filename": "CustomRepository.js",
      "lineno": 885,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040428",
        "name": "contains",
        "type": "Literal",
        "value": "like"
      }
    },
    "description": "Alias for <code>like</code>",
    "name": "contains",
    "longname": "CustomRepository#WhereCondition.contains",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "like",
    "___id": "T000002R003500",
    "___s": true
  },
  {
    "comment": "/** @description Custom condition. For Server-side call only. For this condition `expression` can be any SQL statement */",
    "meta": {
      "range": [
        33044,
        33062
      ],
      "filename": "CustomRepository.js",
      "lineno": 943,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040476",
        "name": "custom",
        "type": "Literal",
        "value": "custom"
      }
    },
    "description": "Custom condition. For Server-side call only. For this condition <code>expression</code> can be any SQL statement",
    "name": "custom",
    "longname": "CustomRepository#WhereCondition.custom",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "custom",
    "___id": "T000002R003524",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `equal` */",
    "meta": {
      "range": [
        29729,
        29742
      ],
      "filename": "CustomRepository.js",
      "lineno": 847,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040394",
        "name": "eq",
        "type": "Literal",
        "value": "equal"
      }
    },
    "description": "Alias for <code>equal</code>",
    "name": "eq",
    "longname": "CustomRepository#WhereCondition.eq",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "equal",
    "___id": "T000002R003483",
    "___s": true
  },
  {
    "comment": "/** @description Equal to */",
    "meta": {
      "range": [
        29833,
        29849
      ],
      "filename": "CustomRepository.js",
      "lineno": 851,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040398",
        "name": "equal",
        "type": "Literal",
        "value": "equal"
      }
    },
    "description": "Equal to",
    "name": "equal",
    "longname": "CustomRepository#WhereCondition.equal",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "equal",
    "___id": "T000002R003485",
    "___s": true
  },
  {
    "comment": "/** @description Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method */",
    "meta": {
      "range": [
        32748,
        32768
      ],
      "filename": "CustomRepository.js",
      "lineno": 938,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040472",
        "name": "exists",
        "type": "Literal",
        "value": "subquery"
      }
    },
    "description": "Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method",
    "name": "exists",
    "longname": "CustomRepository#WhereCondition.exists",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "subquery",
    "___id": "T000002R003522",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `moreEqual` */",
    "meta": {
      "range": [
        29898,
        29915
      ],
      "filename": "CustomRepository.js",
      "lineno": 854,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040400",
        "name": "ge",
        "type": "Literal",
        "value": "moreEqual"
      }
    },
    "description": "Alias for <code>moreEqual</code>",
    "name": "ge",
    "longname": "CustomRepository#WhereCondition.ge",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "moreEqual",
    "___id": "T000002R003486",
    "___s": true
  },
  {
    "comment": "/** @description  Alias for `moreEqual` */",
    "meta": {
      "range": [
        29964,
        29982
      ],
      "filename": "CustomRepository.js",
      "lineno": 856,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040402",
        "name": "geq",
        "type": "Literal",
        "value": "moreEqual"
      }
    },
    "description": "Alias for <code>moreEqual</code>",
    "name": "geq",
    "longname": "CustomRepository#WhereCondition.geq",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "moreEqual",
    "___id": "T000002R003487",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `more` */",
    "meta": {
      "range": [
        29406,
        29418
      ],
      "filename": "CustomRepository.js",
      "lineno": 834,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040382",
        "name": "gt",
        "type": "Literal",
        "value": "more"
      }
    },
    "description": "Alias for <code>more</code>",
    "name": "gt",
    "longname": "CustomRepository#WhereCondition.gt",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "more",
    "___id": "T000002R003477",
    "___s": true
  },
  {
    "comment": "/** @description One of. Can accept array of string on array of Int/Int64 as values depending on attribute type. */",
    "meta": {
      "range": [
        32182,
        32192
      ],
      "filename": "CustomRepository.js",
      "lineno": 925,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040462",
        "name": "in",
        "type": "Literal",
        "value": "in"
      }
    },
    "description": "One of. Can accept array of string on array of Int/Int64 as values depending on attribute type.",
    "name": "in",
    "longname": "CustomRepository#WhereCondition.in",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "in",
    "___id": "T000002R003517",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `in` */",
    "meta": {
      "range": [
        32044,
        32060
      ],
      "filename": "CustomRepository.js",
      "lineno": 923,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040460",
        "name": "includes",
        "type": "Literal",
        "value": "in"
      }
    },
    "description": "Alias for <code>in</code>",
    "name": "includes",
    "longname": "CustomRepository#WhereCondition.includes",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "in",
    "___id": "T000002R003516",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notIsNull` */",
    "meta": {
      "range": [
        31387,
        31411
      ],
      "filename": "CustomRepository.js",
      "lineno": 904,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040444",
        "name": "isNotNull",
        "type": "Literal",
        "value": "notIsNull"
      }
    },
    "description": "Alias for <code>notIsNull</code>",
    "name": "isNotNull",
    "longname": "CustomRepository#WhereCondition.isNotNull",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notIsNull",
    "___id": "T000002R003508",
    "___s": true
  },
  {
    "comment": "/** @description Is null */",
    "meta": {
      "range": [
        31127,
        31145
      ],
      "filename": "CustomRepository.js",
      "lineno": 895,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040436",
        "name": "isNull",
        "type": "Literal",
        "value": "isNull"
      }
    },
    "description": "Is null",
    "name": "isNull",
    "longname": "CustomRepository#WhereCondition.isNull",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "isNull",
    "___id": "T000002R003504",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `lessEqual` */",
    "meta": {
      "range": [
        30170,
        30187
      ],
      "filename": "CustomRepository.js",
      "lineno": 863,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040408",
        "name": "le",
        "type": "Literal",
        "value": "lessEqual"
      }
    },
    "description": "Alias for <code>lessEqual</code>",
    "name": "le",
    "longname": "CustomRepository#WhereCondition.le",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "lessEqual",
    "___id": "T000002R003490",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `lessEqual` */",
    "meta": {
      "range": [
        30235,
        30253
      ],
      "filename": "CustomRepository.js",
      "lineno": 865,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040410",
        "name": "leq",
        "type": "Literal",
        "value": "lessEqual"
      }
    },
    "description": "Alias for <code>lessEqual</code>",
    "name": "leq",
    "longname": "CustomRepository#WhereCondition.leq",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "lessEqual",
    "___id": "T000002R003491",
    "___s": true
  },
  {
    "comment": "/** @description Less than */",
    "meta": {
      "range": [
        29670,
        29684
      ],
      "filename": "CustomRepository.js",
      "lineno": 844,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040392",
        "name": "less",
        "type": "Literal",
        "value": "less"
      }
    },
    "description": "Less than",
    "name": "less",
    "longname": "CustomRepository#WhereCondition.less",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "less",
    "___id": "T000002R003482",
    "___s": true
  },
  {
    "comment": "/** @description Less than or equal */",
    "meta": {
      "range": [
        30363,
        30387
      ],
      "filename": "CustomRepository.js",
      "lineno": 869,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040414",
        "name": "lessEqual",
        "type": "Literal",
        "value": "lessEqual"
      }
    },
    "description": "Less than or equal",
    "name": "lessEqual",
    "longname": "CustomRepository#WhereCondition.lessEqual",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "lessEqual",
    "___id": "T000002R003493",
    "___s": true
  },
  {
    "comment": "/** @description Like condition. For attributes of type `String` only */",
    "meta": {
      "range": [
        30904,
        30918
      ],
      "filename": "CustomRepository.js",
      "lineno": 887,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040430",
        "name": "like",
        "type": "Literal",
        "value": "like"
      }
    },
    "description": "Like condition. For attributes of type <code>String</code> only",
    "name": "like",
    "longname": "CustomRepository#WhereCondition.like",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "like",
    "___id": "T000002R003501",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `less` */",
    "meta": {
      "range": [
        29568,
        29580
      ],
      "filename": "CustomRepository.js",
      "lineno": 840,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040388",
        "name": "lt",
        "type": "Literal",
        "value": "less"
      }
    },
    "description": "Alias for <code>less</code>",
    "name": "lt",
    "longname": "CustomRepository#WhereCondition.lt",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "less",
    "___id": "T000002R003480",
    "___s": true
  },
  {
    "comment": "/** @description For entities with FTS mixin enabled. TODO - expand */",
    "meta": {
      "range": [
        32425,
        32441
      ],
      "filename": "CustomRepository.js",
      "lineno": 933,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040468",
        "name": "match",
        "type": "Literal",
        "value": "match"
      }
    },
    "description": "For entities with FTS mixin enabled. TODO - expand",
    "name": "match",
    "longname": "CustomRepository#WhereCondition.match",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "match",
    "___id": "T000002R003520",
    "___s": true
  },
  {
    "comment": "/** @description Greater than */",
    "meta": {
      "range": [
        29511,
        29525
      ],
      "filename": "CustomRepository.js",
      "lineno": 838,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040386",
        "name": "more",
        "type": "Literal",
        "value": "more"
      }
    },
    "description": "Greater than",
    "name": "more",
    "longname": "CustomRepository#WhereCondition.more",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "more",
    "___id": "T000002R003479",
    "___s": true
  },
  {
    "comment": "/** @description  Greater than or equal */",
    "meta": {
      "range": [
        30097,
        30121
      ],
      "filename": "CustomRepository.js",
      "lineno": 860,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040406",
        "name": "moreEqual",
        "type": "Literal",
        "value": "moreEqual"
      }
    },
    "description": "Greater than or equal",
    "name": "moreEqual",
    "longname": "CustomRepository#WhereCondition.moreEqual",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "moreEqual",
    "___id": "T000002R003489",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notEqual` */",
    "meta": {
      "range": [
        30435,
        30451
      ],
      "filename": "CustomRepository.js",
      "lineno": 872,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040416",
        "name": "ne",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Alias for <code>notEqual</code>",
    "name": "ne",
    "longname": "CustomRepository#WhereCondition.ne",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003494",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notEqual` */",
    "meta": {
      "range": [
        30498,
        30515
      ],
      "filename": "CustomRepository.js",
      "lineno": 874,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040418",
        "name": "neq",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Alias for <code>notEqual</code>",
    "name": "neq",
    "longname": "CustomRepository#WhereCondition.neq",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003495",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notStartWith` */",
    "meta": {
      "range": [
        31781,
        31811
      ],
      "filename": "CustomRepository.js",
      "lineno": 916,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040454",
        "name": "notBeginWith",
        "type": "Literal",
        "value": "notStartWith"
      }
    },
    "description": "Alias for <code>notStartWith</code>",
    "name": "notBeginWith",
    "longname": "CustomRepository#WhereCondition.notBeginWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notStartWith",
    "___id": "T000002R003513",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notLike` */",
    "meta": {
      "range": [
        30965,
        30989
      ],
      "filename": "CustomRepository.js",
      "lineno": 890,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040432",
        "name": "notContains",
        "type": "Literal",
        "value": "notLike"
      }
    },
    "description": "Alias for <code>notLike</code>",
    "name": "notContains",
    "longname": "CustomRepository#WhereCondition.notContains",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notLike",
    "___id": "T000002R003502",
    "___s": true
  },
  {
    "comment": "/** @description Not equal */",
    "meta": {
      "range": [
        30741,
        30763
      ],
      "filename": "CustomRepository.js",
      "lineno": 882,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040426",
        "name": "notEqual",
        "type": "Literal",
        "value": "notEqual"
      }
    },
    "description": "Not equal",
    "name": "notEqual",
    "longname": "CustomRepository#WhereCondition.notEqual",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notEqual",
    "___id": "T000002R003499",
    "___s": true
  },
  {
    "comment": "/** @description Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method */",
    "meta": {
      "range": [
        32892,
        32915
      ],
      "filename": "CustomRepository.js",
      "lineno": 940,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040474",
        "name": "notExists",
        "type": "Literal",
        "value": "subquery"
      }
    },
    "description": "Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method",
    "name": "notExists",
    "longname": "CustomRepository#WhereCondition.notExists",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "subquery",
    "___id": "T000002R003523",
    "___s": true
  },
  {
    "comment": "/** @description Not one of. See WhereCondition.in for details */",
    "meta": {
      "range": [
        32331,
        32347
      ],
      "filename": "CustomRepository.js",
      "lineno": 930,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040466",
        "name": "notIn",
        "type": "Literal",
        "value": "notIn"
      }
    },
    "description": "Not one of. See WhereCondition.in for details",
    "name": "notIn",
    "longname": "CustomRepository#WhereCondition.notIn",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notIn",
    "___id": "T000002R003519",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notIn` */",
    "meta": {
      "range": [
        32237,
        32259
      ],
      "filename": "CustomRepository.js",
      "lineno": 928,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040464",
        "name": "notIncludes",
        "type": "Literal",
        "value": "notIn"
      }
    },
    "description": "Alias for <code>notIn</code>",
    "name": "notIncludes",
    "longname": "CustomRepository#WhereCondition.notIncludes",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notIn",
    "___id": "T000002R003518",
    "___s": true
  },
  {
    "comment": "/** @description Not is null */",
    "meta": {
      "range": [
        31315,
        31339
      ],
      "filename": "CustomRepository.js",
      "lineno": 902,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040442",
        "name": "notIsNull",
        "type": "Literal",
        "value": "notIsNull"
      }
    },
    "description": "Not is null",
    "name": "notIsNull",
    "longname": "CustomRepository#WhereCondition.notIsNull",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notIsNull",
    "___id": "T000002R003507",
    "___s": true
  },
  {
    "comment": "/** @description Not like condition. For attributes of type `String` only */",
    "meta": {
      "range": [
        31072,
        31092
      ],
      "filename": "CustomRepository.js",
      "lineno": 892,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040434",
        "name": "notLike",
        "type": "Literal",
        "value": "notLike"
      }
    },
    "description": "Not like condition. For attributes of type <code>String</code> only",
    "name": "notLike",
    "longname": "CustomRepository#WhereCondition.notLike",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notLike",
    "___id": "T000002R003503",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notIsNull` */",
    "meta": {
      "range": [
        31255,
        31277
      ],
      "filename": "CustomRepository.js",
      "lineno": 900,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040440",
        "name": "notNull",
        "type": "Literal",
        "value": "notIsNull"
      }
    },
    "description": "Alias for <code>notIsNull</code>",
    "name": "notNull",
    "longname": "CustomRepository#WhereCondition.notNull",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notIsNull",
    "___id": "T000002R003506",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `notStartWith` */",
    "meta": {
      "range": [
        31971,
        32002
      ],
      "filename": "CustomRepository.js",
      "lineno": 920,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040458",
        "name": "notStartsWith",
        "type": "Literal",
        "value": "notStartWith"
      }
    },
    "description": "Alias for <code>notStartWith</code>",
    "name": "notStartsWith",
    "longname": "CustomRepository#WhereCondition.notStartsWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notStartWith",
    "___id": "T000002R003515",
    "___s": true
  },
  {
    "comment": "/** @description Not start with. For attributes of type `String` only */",
    "meta": {
      "range": [
        31890,
        31920
      ],
      "filename": "CustomRepository.js",
      "lineno": 918,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040456",
        "name": "notStartWith",
        "type": "Literal",
        "value": "notStartWith"
      }
    },
    "description": "Not start with. For attributes of type <code>String</code> only",
    "name": "notStartWith",
    "longname": "CustomRepository#WhereCondition.notStartWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "notStartWith",
    "___id": "T000002R003514",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `isNull` */",
    "meta": {
      "range": [
        31190,
        31206
      ],
      "filename": "CustomRepository.js",
      "lineno": 897,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040438",
        "name": "null",
        "type": "Literal",
        "value": "isNull"
      }
    },
    "description": "Alias for <code>isNull</code>",
    "name": "null",
    "longname": "CustomRepository#WhereCondition.null",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "isNull",
    "___id": "T000002R003505",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `startWith` */",
    "meta": {
      "range": [
        31631,
        31656
      ],
      "filename": "CustomRepository.js",
      "lineno": 911,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040450",
        "name": "startsWith",
        "type": "Literal",
        "value": "startWith"
      }
    },
    "description": "Alias for <code>startWith</code>",
    "name": "startsWith",
    "longname": "CustomRepository#WhereCondition.startsWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "startWith",
    "___id": "T000002R003511",
    "___s": true
  },
  {
    "comment": "/** @description Alias for `startWith` */",
    "meta": {
      "range": [
        31704,
        31729
      ],
      "filename": "CustomRepository.js",
      "lineno": 913,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040452",
        "name": "startswith",
        "type": "Literal",
        "value": "startWith"
      }
    },
    "description": "Alias for <code>startWith</code>",
    "name": "startswith",
    "longname": "CustomRepository#WhereCondition.startswith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "startWith",
    "___id": "T000002R003512",
    "___s": true
  },
  {
    "comment": "/** @description Start with. For attributes of type `String` only */",
    "meta": {
      "range": [
        31559,
        31583
      ],
      "filename": "CustomRepository.js",
      "lineno": 909,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040448",
        "name": "startWith",
        "type": "Literal",
        "value": "startWith"
      }
    },
    "description": "Start with. For attributes of type <code>String</code> only",
    "name": "startWith",
    "longname": "CustomRepository#WhereCondition.startWith",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "startWith",
    "___id": "T000002R003510",
    "___s": true
  },
  {
    "comment": "/** @description Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method */",
    "meta": {
      "range": [
        32609,
        32631
      ],
      "filename": "CustomRepository.js",
      "lineno": 936,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040470",
        "name": "subquery",
        "type": "Literal",
        "value": "subquery"
      }
    },
    "description": "Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method",
    "name": "subquery",
    "longname": "CustomRepository#WhereCondition.subquery",
    "kind": "member",
    "memberof": "CustomRepository#WhereCondition",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "subquery",
    "___id": "T000002R003521",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#where CustomRepository.where}.\n   * Calls `where` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @example\n\n   let filterString = 'foundAllLikeThis' // or may be empty string\n   // with whereIf\n   let repo = UB.Repository('my_entity').attrs('ID').whereIf(filterString, 'myAttr', 'like', filterString)\n\n   //without whereIf\n   let repo = UB.Repository('my_entity').attrs('ID')\n   if (filterString) repo = repo.where('myAttr', 'like', filterString)\n\n   * @param {*} addingCondition Where expression will be added only in case addingCondition is truthy\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in []\n   * @param {CustomRepository.WhereCondition|String} condition  Any value from {@link CustomRepository#WhereCondition WhereCondition}\n   * @param {*} [values] Condition value. If `undefined` values not passed to ubql\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}\n   *   If not passed where will generate unique clause named 'c1', 'c2', ......\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        11866,
        12042
      ],
      "filename": "CustomRepository.js",
      "lineno": 312,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039712",
        "name": "CustomRepository#whereIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#where CustomRepository.where}.\nCalls <code>where</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "examples": [
      "let filterString = 'foundAllLikeThis' // or may be empty string\n   // with whereIf\n   let repo = UB.Repository('my_entity').attrs('ID').whereIf(filterString, 'myAttr', 'like', filterString)\n\n   //without whereIf\n   let repo = UB.Repository('my_entity').attrs('ID')\n   if (filterString) repo = repo.where('myAttr', 'like', filterString)"
    ],
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Where expression will be added only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in []",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition",
            "String"
          ]
        },
        "description": "Any value from {@link CustomRepository#WhereCondition WhereCondition}",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. If <code>undefined</code> values not passed to ubql",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}\n  If not passed where will generate unique clause named 'c1', 'c2', ......",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "whereIf",
    "longname": "CustomRepository#whereIf",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "___id": "T000002R003421",
    "___s": true
  },
  {
    "comment": "/**\n   * Calculate total row number. WARNING!! This is VERY slow operation on DB level in case of many record\n   *\n   * Result of calculation is returned in __totalRecCount parameter value in case `selectAsArray()` client call:\n   *\n        let result = UB.Repository('uba_user').attrs(['ID', 'description'])\n           .withTotal().selectAsArray();\n        console.log('Total count is:', result.__totalRecCount)\n   *\n   * Or into TubDataStore.totalRowCount in case of server side `selectAsStore()` call:\n   *\n         let store = UB.Repository('uba_user').attrs(['ID', 'description'])\n           .withTotal().selectAsStore();\n         console.log('Total count is:', store.totalRowCount);\n   *\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        27761,
        27833
      ],
      "filename": "CustomRepository.js",
      "lineno": 785,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040326",
        "name": "CustomRepository#withTotal",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Calculate total row number. WARNING!! This is VERY slow operation on DB level in case of many record</p>\n<p>Result of calculation is returned in __totalRecCount parameter value in case <code>selectAsArray()</code> client call:</p>\n<pre class=\"prettyprint source\"><code>    let result = UB.Repository('uba_user').attrs(['ID', 'description'])\n       .withTotal().selectAsArray();\n    console.log('Total count is:', result.__totalRecCount)</code></pre><p>Or into TubDataStore.totalRowCount in case of server side <code>selectAsStore()</code> call:</p>\n<pre class=\"prettyprint source\"><code>     let store = UB.Repository('uba_user').attrs(['ID', 'description'])\n       .withTotal().selectAsStore();\n     console.log('Total count is:', store.totalRowCount);</code></pre>",
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "withTotal",
    "longname": "CustomRepository#withTotal",
    "kind": "function",
    "memberof": "CustomRepository",
    "scope": "instance",
    "params": [],
    "___id": "T000002R003471",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Provide historical data storage\n * @mixin\n */",
    "meta": {
      "range": [
        7395,
        7549
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 285,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008837",
        "name": "dataHistory",
        "type": "ObjectExpression",
        "value": "{\"newversion\":\"\"}"
      }
    },
    "description": "Mixin. Provide historical data storage",
    "kind": "mixin",
    "name": "dataHistory",
    "longname": "dataHistory",
    "scope": "global",
    "params": [],
    "___id": "T000002R000868",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "dataHistory.newversion",
    "kind": "function",
    "memberof": "dataHistory",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000869",
    "___s": true
  },
  {
    "comment": "/**\n * Class for database access. Databases are defined in config file\n */",
    "meta": {
      "range": [
        696,
        8294
      ],
      "filename": "DBConnections.js",
      "lineno": 36,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060612",
        "name": "DBConnection",
        "type": "ClassDeclaration",
        "paramnames": [
          "index"
        ]
      }
    },
    "classdesc": "<p>Class for database access. Databases are defined in config file</p>",
    "name": "DBConnection",
    "longname": "DBConnection",
    "kind": "class",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "index"
      }
    ],
    "___id": "T000002R005813",
    "___s": true
  },
  {
    "comment": "/**\n   * Commit transaction. If transaction is not started return false\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        1360,
        1417
      ],
      "filename": "DBConnections.js",
      "lineno": 66,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060654",
        "name": "DBConnection#commit",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Commit transaction. If transaction is not started return false",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "commit",
    "longname": "DBConnection#commit",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005818",
    "___s": true
  },
  {
    "comment": "/**\n   * Execute sql\n   * @param {string} sql\n   * @param {Object} params\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        1979,
        2135
      ],
      "filename": "DBConnections.js",
      "lineno": 92,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060707",
        "name": "DBConnection#exec",
        "type": "MethodDefinition",
        "paramnames": [
          "sql",
          "params"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Execute sql",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "sql"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "exec",
    "longname": "DBConnection#exec",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "___id": "T000002R005823",
    "___s": true
  },
  {
    "comment": "/**\n   * Generate ID for entity\n   * @param {string} entity\n   * @returns {number}\n   */",
    "meta": {
      "range": [
        2229,
        2282
      ],
      "filename": "DBConnections.js",
      "lineno": 101,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060736",
        "name": "DBConnection#genID",
        "type": "MethodDefinition",
        "paramnames": [
          "entity"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Generate ID for entity",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entity"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "name": "genID",
    "longname": "DBConnection#genID",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "___id": "T000002R005826",
    "___s": true
  },
  {
    "comment": "/**\n   * Is database in transaction\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        991,
        1066
      ],
      "filename": "DBConnections.js",
      "lineno": 52,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060630",
        "name": "DBConnection#inTransaction",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Is database in transaction",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "inTransaction",
    "longname": "DBConnection#inTransaction",
    "kind": "member",
    "memberof": "DBConnection",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005816",
    "___s": true
  },
  {
    "comment": "/**\n   * Rollback transaction. If transaction is not started return false\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        1526,
        1587
      ],
      "filename": "DBConnections.js",
      "lineno": 73,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060666",
        "name": "DBConnection#rollback",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Rollback transaction. If transaction is not started return false",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "rollback",
    "longname": "DBConnection#rollback",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005819",
    "___s": true
  },
  {
    "comment": "/**\n   * Run select sql and return result\n   * @param {string} sql\n   * @param {Object} params\n   * @returns {string}\n   */",
    "meta": {
      "range": [
        1716,
        1870
      ],
      "filename": "DBConnections.js",
      "lineno": 82,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060678",
        "name": "DBConnection#run",
        "type": "MethodDefinition",
        "paramnames": [
          "sql",
          "params"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Run select sql and return result",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "sql"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "run",
    "longname": "DBConnection#run",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "___id": "T000002R005820",
    "___s": true
  },
  {
    "comment": "/**\n   * Start transaction. If transaction is already started return false\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        1176,
        1253
      ],
      "filename": "DBConnections.js",
      "lineno": 59,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100060642",
        "name": "DBConnection#startTransaction",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Start transaction. If transaction is already started return false",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "startTransaction",
    "longname": "DBConnection#startTransaction",
    "kind": "function",
    "memberof": "DBConnection",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005817",
    "___s": true
  },
  {
    "comment": "/**\n * Send a notification about change to client\n * @param {string} entityName\n * @param {number} instanceID\n * @param {object} message\n * @param {UBNotifyEntityEventOptions} [options]\n * @return {number}\n */",
    "meta": {
      "range": [
        4445,
        5290
      ],
      "filename": "userNotifier.js",
      "lineno": 133,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100098110",
        "name": "entityEvent",
        "type": "FunctionDeclaration",
        "paramnames": [
          "entityName",
          "instanceID",
          "message",
          "options"
        ]
      },
      "vars": {
        "message.eventID": "message.eventID",
        "message.ID": "message.ID",
        "message.entity": "message.entity",
        "mainTopic": "entityEvent~mainTopic",
        "topic": "entityEvent~topic"
      }
    },
    "description": "Send a notification about change to client",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "instanceID"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "message"
      },
      {
        "type": {
          "names": [
            "UBNotifyEntityEventOptions"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "name": "entityEvent",
    "longname": "entityEvent",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010343",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * During initialization phrase UnityBase load application domain {@link UBDomain} and create a global\n * variable for each entity from domain. Name of such global variable equal to entity name.\n * `EntityNamespace` pseudo class is a accessor for such namespaces.\n *\n * The main task of this class is to provide a code insight in IDEs like WebStorm or VSCode.\n * `ubcli createCodeInsightHelper` command will create a stubs for all entities in model.\n *\n * @extends EventEmitter\n */",
    "meta": {
      "range": [
        3493,
        3683
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 128,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008746",
        "name": "EntityNamespace",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>During initialization phrase UnityBase load application domain {@link UBDomain} and create a global\nvariable for each entity from domain. Name of such global variable equal to entity name.\n<code>EntityNamespace</code> pseudo class is a accessor for such namespaces.</p>\n<p>The main task of this class is to provide a code insight in IDEs like WebStorm or VSCode.\n<code>ubcli createCodeInsightHelper</code> command will create a stubs for all entities in model.</p>",
    "augments": [
      "EventEmitter"
    ],
    "name": "EntityNamespace",
    "longname": "EntityNamespace",
    "kind": "class",
    "scope": "global",
    "params": [],
    "___id": "T000002R000847",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "EntityNamespace#entity",
    "kind": "member",
    "memberof": "EntityNamespace",
    "scope": "instance",
    "___id": "T000002R000849",
    "___s": true
  },
  {
    "comment": "/**\n       * Emited for {@link JsonMessagesProtocol} just after client is connected\n       * @event connect\n       */",
    "meta": {
      "filename": "web-sockets.js",
      "lineno": 205,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Emited for {@link JsonMessagesProtocol} just after client is connected",
    "kind": "event",
    "name": "connect",
    "longname": "event:connect",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "___id": "T000002R006421",
    "___s": true
  },
  {
    "comment": "/**\n       * Emited for {@link JsonMessagesProtocol} just after client is disconnected\n       * @event disconnect\n       */",
    "meta": {
      "filename": "web-sockets.js",
      "lineno": 222,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Emited for {@link JsonMessagesProtocol} just after client is disconnected",
    "kind": "event",
    "name": "disconnect",
    "longname": "event:disconnect",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "___id": "T000002R006426",
    "___s": true
  },
  {
    "comment": "/**\n * Fires in every thread for the {@link process} instance just before application stops\n *\n *      process.on('exit', function(){\n *          console.log('thread is terminated');\n *      });\n *\n * @event exit\n */",
    "meta": {
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 255,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>Fires in every thread for the {@link process} instance just before application stops</p>\n<pre class=\"prettyprint source\"><code> process.on('exit', function(){\n     console.log('thread is terminated');\n });</code></pre>",
    "kind": "event",
    "name": "exit",
    "longname": "event:exit",
    "scope": "global",
    "___id": "T000002R000819",
    "___s": true
  },
  {
    "comment": "/**\n *  @classdesc\n *  Blob store implementation for storing content inside models `public` folders.\n *  Key conceptions:\n *\n *    - relative path created in format modelName|relativePathFromModelDir to hide real file place from client\n *    - OS user temp folder used for store temporary content\n *    - delete operation is forbidden since models must be under version control\n *\n *  Used in:\n *\n *    - ubm_form for store form def & js inside /public/forms\n *    - ubm_diagrams for store diagram inside /public/erdiagrams\n *    - ubs_report for store report template inside /public/reports\n *    - e.t.c.\n *\n * @singleton\n */",
    "meta": {
      "range": [
        950,
        12050
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 31,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048292",
        "name": "FileSystemBlobStore",
        "type": "ClassDeclaration",
        "paramnames": [
          "storeConfig",
          "appInstance",
          "sessionInstance"
        ]
      }
    },
    "classdesc": "<p>Blob store implementation for storing content inside models <code>public</code> folders.\n Key conceptions:</p>\n<ul>\n<li>relative path created in format modelName|relativePathFromModelDir to hide real file place from client</li>\n<li>OS user temp folder used for store temporary content</li>\n<li><p>delete operation is forbidden since models must be under version control</p>\n<p>Used in:</p>\n</li>\n<li><p>ubm_form for store form def &amp; js inside /public/forms</p>\n</li>\n<li>ubm_diagrams for store diagram inside /public/erdiagrams</li>\n<li>ubs_report for store report template inside /public/reports</li>\n<li>e.t.c.</li>\n</ul>",
    "tags": [
      {
        "originalTitle": "singleton",
        "title": "singleton",
        "text": ""
      }
    ],
    "name": "FileSystemBlobStore",
    "longname": "FileSystemBlobStore",
    "kind": "class",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "storeConfig"
      },
      {
        "type": {
          "names": [
            "App"
          ]
        },
        "name": "appInstance"
      },
      {
        "type": {
          "names": [
            "UBSession"
          ]
        },
        "name": "sessionInstance"
      }
    ],
    "___id": "T000002R004307",
    "___s": true
  },
  {
    "comment": "/**\n   * @override\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} blobInfo\n   */",
    "meta": {
      "range": [
        7789,
        8057
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 219,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049024",
        "name": "FileSystemBlobStore#doDeletion",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "blobInfo"
        ]
      },
      "vars": {
        "": null
      }
    },
    "override": true,
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobInfo"
      }
    ],
    "name": "doDeletion",
    "longname": "FileSystemBlobStore#doDeletion",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004378",
    "___s": true
  },
  {
    "comment": "/**\n   * Fill HTTP response for getDocument request\n   * @param {BlobStoreRequest} requestParams\n   * @param {BlobStoreItem} blobInfo Document metadata. Not used for dirty requests\n   * @param {THTTPRequest} req\n   * @param {THTTPResponse} resp\n   * @return {Boolean}\n   */",
    "meta": {
      "range": [
        4430,
        5843
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048635",
        "name": "FileSystemBlobStore#fillResponse",
        "type": "MethodDefinition",
        "paramnames": [
          "requestParams",
          "blobInfo",
          "req",
          "resp"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Fill HTTP response for getDocument request",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "requestParams"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "description": "Document metadata. Not used for dirty requests",
        "name": "blobInfo"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "fillResponse",
    "longname": "FileSystemBlobStore#fillResponse",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004338",
    "___s": true
  },
  {
    "comment": "/**\n     * Normalized path to the store root\n     */",
    "meta": {
      "range": [
        1637,
        1667
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 48,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048362",
        "name": "this.fullStorePath",
        "type": "Identifier",
        "value": "storePath",
        "paramnames": []
      }
    },
    "description": "Normalized path to the store root",
    "name": "fullStorePath",
    "longname": "FileSystemBlobStore#fullStorePath",
    "kind": "member",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004311",
    "___s": true
  },
  {
    "comment": "/**\n   * Calculate a relative path & file name for a new BLOB item.\n   * If new folder dose not exists - create it\n   * @protected\n   * @param {UBEntityAttribute} attribute\n   * @param {BlobStoreItem} dirtyItem\n   * @param {Number} ID\n   * @return {{fn: string, ext: string, relPath: string, fullFn: string}}\n   */",
    "meta": {
      "range": [
        8378,
        10713
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 238,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049073",
        "name": "FileSystemBlobStore#genNewPlacement",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "dirtyItem",
          "ID"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Calculate a relative path &amp; file name for a new BLOB item.\nIf new folder dose not exists - create it",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "dirtyItem"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "genNewPlacement",
    "longname": "FileSystemBlobStore#genNewPlacement",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004381",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve BLOB content from blob store.\n   * @param {BlobStoreRequest} request\n   * @param {BlobStoreItem} blobInfo JSON retrieved from a DB.\n   * @param {Object} [options]\n   * @param {String|Null} [options.encoding] Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n   *   If `undefined` UB will send query to entity anf get it from DB.\n   *   At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB\n   * @returns {String|ArrayBuffer}\n   */",
    "meta": {
      "range": [
        3923,
        4151
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 109,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048600",
        "name": "FileSystemBlobStore#getContent",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "blobInfo",
          "options"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve BLOB content from blob store.",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "description": "JSON retrieved from a DB.",
        "name": "blobInfo"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String",
            "Null"
          ]
        },
        "optional": true,
        "description": "Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n  If <code>undefined</code> UB will send query to entity anf get it from DB.\n  At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB",
        "name": "options.encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer"
          ]
        }
      }
    ],
    "name": "getContent",
    "longname": "FileSystemBlobStore#getContent",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004336",
    "___s": true
  },
  {
    "comment": "/**\n   * For file based store:\n   *   - store.path + relativePath  + fileName\n   * @protected\n   * @param {BlobStoreItem} blobItem\n   * @param {BlobStoreRequest} [request] Optional request to get a revision\n   * @return {String} In case of item not exists - return empty string ''\n   */",
    "meta": {
      "range": [
        11005,
        12048
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 304,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049481",
        "name": "FileSystemBlobStore#getPermanentFileName",
        "type": "MethodDefinition",
        "paramnames": [
          "blobItem",
          "request"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>For file based store:</p>\n<ul>\n<li>store.path + relativePath  + fileName</li>\n</ul>",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobItem"
      },
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "optional": true,
        "description": "Optional request to get a revision",
        "name": "request"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>In case of item not exists - return empty string ''</p>"
      }
    ],
    "name": "getPermanentFileName",
    "longname": "FileSystemBlobStore#getPermanentFileName",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004413",
    "___s": true
  },
  {
    "comment": "/**\n   * Move content defined by `dirtyItem` from temporary to permanent store.\n   * TIPS: in v0 (UB<5) if file updated then implementation takes a store from old item.\n   *   This raise a problem - old store may be in archive state (readonly)\n   * So in UB5 we change implementation to use a store defined in the attribute for new items\n   *\n   * Return a new attribute content which describe a place of BLOB in permanent store\n   *\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} dirtyItem\n   * @param {number} newRevision\n   * @return {BlobStoreItem|null}\n   */",
    "meta": {
      "range": [
        6459,
        7496
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 172,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048840",
        "name": "FileSystemBlobStore#persist",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "dirtyItem",
          "newRevision"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Move content defined by <code>dirtyItem</code> from temporary to permanent store.\nTIPS: in v0 (UB&lt;5) if file updated then implementation takes a store from old item.\n  This raise a problem - old store may be in archive state (readonly)\nSo in UB5 we change implementation to use a store defined in the attribute for new items</p>\n<p>Return a new attribute content which describe a place of BLOB in permanent store",
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "dirtyItem"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "newRevision"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem",
            "null"
          ]
        }
      }
    ],
    "name": "persist",
    "longname": "FileSystemBlobStore#persist",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004352",
    "___s": true
  },
  {
    "comment": "/**\n   * @inheritDoc\n   * @param {BlobStoreRequest} request Request params\n   * @param {UBEntityAttribute} attribute\n   * @param {ArrayBuffer} content\n   * @returns {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        2872,
        3418
      ],
      "filename": "fileSystemBlobStore.js",
      "lineno": 78,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048516",
        "name": "FileSystemBlobStore#saveContentToTempStore",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "attribute",
          "content"
        ]
      },
      "vars": {
        "": null
      }
    },
    "inheritdoc": "",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "description": "Request params",
        "name": "request"
      },
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "content"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "saveContentToTempStore",
    "longname": "FileSystemBlobStore#saveContentToTempStore",
    "kind": "function",
    "memberof": "FileSystemBlobStore",
    "scope": "instance",
    "___id": "T000002R004325",
    "___s": true
  },
  {
    "comment": "/**\n *  @classdesc\n * File store with automatic conversion MS Word, MS Excel and MS Power Point documents into \\*.pdf format.\n *\n * Require MS Office installed on the server - see\n * <a href=\"https://enviance.softline.kiev.ua/confluence/pages/viewpage.action?pageId=65274525#Installation(requirements)-UsingMicrosoftWordasservice\"> requirement</a>\n *\n * @singleton\n */",
    "meta": {
      "range": [
        520,
        1257
      ],
      "filename": "fileSystemPDFBlobStore.js",
      "lineno": 15,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049614",
        "name": "FileSystemPDFBlobStore",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>File store with automatic conversion MS Word, MS Excel and MS Power Point documents into *.pdf format.</p>\n<p>Require MS Office installed on the server - see\n<a href=\"https://enviance.softline.kiev.ua/confluence/pages/viewpage.action?pageId=65274525#Installation(requirements)-UsingMicrosoftWordasservice\"> requirement</a></p>",
    "tags": [
      {
        "originalTitle": "singleton",
        "title": "singleton",
        "text": ""
      }
    ],
    "name": "FileSystemPDFBlobStore",
    "longname": "FileSystemPDFBlobStore",
    "kind": "class",
    "scope": "global",
    "___id": "T000002R004426",
    "___s": true
  },
  {
    "comment": "/**\n   * @inheritDoc\n   * @param {BlobStoreRequest} request Request params\n   * @param {UBEntityAttribute} attribute\n   * @param {ArrayBuffer} content\n   * @returns {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        770,
        1255
      ],
      "filename": "fileSystemPDFBlobStore.js",
      "lineno": 23,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049618",
        "name": "FileSystemPDFBlobStore#saveContentToTempStore",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "attribute",
          "content"
        ]
      },
      "vars": {
        "": null
      }
    },
    "inheritdoc": "",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "description": "Request params",
        "name": "request"
      },
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "content"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "saveContentToTempStore",
    "longname": "FileSystemPDFBlobStore#saveContentToTempStore",
    "kind": "function",
    "memberof": "FileSystemPDFBlobStore",
    "scope": "instance",
    "___id": "T000002R004427",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Full Text Search. See {@tutorial mixins_fts} for details\n *\n * @mixin\n */",
    "meta": {
      "range": [
        7892,
        8141
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 310,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008849",
        "name": "fts",
        "type": "ObjectExpression",
        "value": "{\"fts\":\"\",\"ftsreindex\":\"\"}"
      }
    },
    "description": "Mixin. Full Text Search. See {@tutorial mixins_fts} for details",
    "kind": "mixin",
    "name": "fts",
    "longname": "fts",
    "scope": "global",
    "params": [],
    "___id": "T000002R000871",
    "___s": true
  },
  {
    "comment": "/**\n   * Full text search query\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7991,
        8013
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 316,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008852",
        "name": "fts",
        "type": "FunctionExpression"
      }
    },
    "description": "Full text search query",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "fts",
    "longname": "fts.fts",
    "kind": "function",
    "memberof": "fts",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000872",
    "___s": true
  },
  {
    "comment": "/**\n   * Ce-create entity FTS index\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        8110,
        8139
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 322,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008856",
        "name": "ftsreindex",
        "type": "FunctionExpression"
      }
    },
    "description": "Ce-create entity FTS index",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "ftsreindex",
    "longname": "fts.ftsreindex",
    "kind": "function",
    "memberof": "fts",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000873",
    "___s": true
  },
  {
    "comment": "/**\n * Perform Garbage collection for current scripting context. Use it if you know WHAT you do!\n * @global\n */",
    "meta": {
      "range": [
        2371,
        2388
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 80,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008456",
        "name": "gc",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Perform Garbage collection for current scripting context. Use it if you know WHAT you do!",
    "scope": "global",
    "name": "gc",
    "longname": "gc",
    "kind": "function",
    "params": [],
    "___id": "T000002R000795",
    "___s": true
  },
  {
    "comment": "/**\n * Unique message number, assuming messages cannot be sent faster than ticks go.\n * In order to make message IDs unique between server restarts, seed the counter with current timestamp.\n * @type {number}\n */",
    "meta": {
      "range": [
        918,
        1177
      ],
      "filename": "userNotifier.js",
      "lineno": 24,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097860",
        "name": "generateEventNumber",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "eventID": "generateEventNumber~eventID"
      }
    },
    "description": "Unique message number, assuming messages cannot be sent faster than ticks go.\nIn order to make message IDs unique between server restarts, seed the counter with current timestamp.",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "generateEventNumber",
    "longname": "generateEventNumber",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R010327",
    "___s": true
  },
  {
    "comment": "/**\n * @param {string} entityName\n */",
    "meta": {
      "range": [
        3883,
        4232
      ],
      "filename": "userNotifier.js",
      "lineno": 114,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100098065",
        "name": "getEntityTopic",
        "type": "FunctionDeclaration",
        "paramnames": [
          "entityName"
        ]
      },
      "vars": {
        "entityInfo": "getEntityTopic~entityInfo",
        "notificationMixin": "getEntityTopic~notificationMixin"
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      }
    ],
    "name": "getEntityTopic",
    "longname": "getEntityTopic",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010339",
    "___s": true
  },
  {
    "comment": "/** @type {UBNotificationMixin|undefined} */",
    "meta": {
      "range": [
        4046,
        4076
      ],
      "filename": "userNotifier.js",
      "lineno": 116,
      "columnno": 73,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100098082",
        "name": "entityInfo.mixins.notification",
        "type": "MemberExpression"
      }
    },
    "type": {
      "names": [
        "UBNotificationMixin",
        "undefined"
      ]
    },
    "name": "mixins.notification",
    "longname": "getEntityTopic~entityInfo.mixins.notification",
    "kind": "member",
    "memberof": "getEntityTopic~entityInfo",
    "scope": "static",
    "___id": "T000002R010342",
    "___s": true
  },
  {
    "comment": "/**\n * Get message handler function by message type\n * @param {string} messageType\n * @return {function}\n */",
    "meta": {
      "range": [
        507,
        592
      ],
      "filename": "messageHandlers.js",
      "lineno": 25,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/exchange",
      "code": {
        "id": "astnode100097136",
        "name": "getMessageHandler",
        "type": "FunctionDeclaration",
        "paramnames": [
          "messageType"
        ]
      }
    },
    "description": "Get message handler function by message type",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "messageType"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "name": "getMessageHandler",
    "longname": "getMessageHandler",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010252",
    "___s": true
  },
  {
    "comment": "/**\n * Return message types to subscribe by UB.\n * Used by RabbitMQ to UB router service, to know which topics to subscribe to.\n * @return {string[]}\n */",
    "meta": {
      "range": [
        324,
        396
      ],
      "filename": "messageHandlers.js",
      "lineno": 16,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/exchange",
      "code": {
        "id": "astnode100097127",
        "name": "getMessageTypes",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Return message types to subscribe by UB.\nUsed by RabbitMQ to UB router service, to know which topics to subscribe to.",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "name": "getMessageTypes",
    "longname": "getMessageTypes",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R010251",
    "___s": true
  },
  {
    "comment": "/**\n * Check logged in user have `admin` role\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        1474,
        1559
      ],
      "filename": "uba_common.js",
      "lineno": 81,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007972",
        "name": "haveAdminRole",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Check logged in user have <code>admin</code> role",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "haveAdminRole",
    "longname": "haveAdminRole",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R000748",
    "___s": true
  },
  {
    "comment": "/**\n * @param {UBEntity} entity\n * @param {UBNotificationMixin} mixin\n */",
    "meta": {
      "range": [
        364,
        820
      ],
      "filename": "notificationMixin.js",
      "lineno": 17,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097300",
        "name": "initialize",
        "type": "FunctionDeclaration",
        "paramnames": [
          "entity",
          "mixin"
        ]
      },
      "vars": {
        "global[undefined].notify": "global[undefined].notify",
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "UBEntity"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "UBNotificationMixin"
          ]
        },
        "name": "mixin"
      }
    ],
    "name": "initialize",
    "longname": "initialize",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010273",
    "___s": true
  },
  {
    "comment": "/**\n * Change uba_user.uData JSON key to value\n * @param {string} key\n * @param {*} value\n */",
    "meta": {
      "range": [
        8054,
        8649
      ],
      "filename": "uba_user.js",
      "lineno": 245,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100056683",
        "name": "internalSetUDataKey",
        "type": "FunctionDeclaration",
        "paramnames": [
          "key",
          "value"
        ]
      },
      "vars": {
        "userID": "internalSetUDataKey~userID",
        "user": "internalSetUDataKey~user",
        "newUData": "internalSetUDataKey~newUData",
        "newUData[undefined]": "internalSetUDataKey~newUData.undefined]"
      }
    },
    "description": "Change uba_user.uData JSON key to value",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "key"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "value"
      }
    ],
    "name": "internalSetUDataKey",
    "longname": "internalSetUDataKey",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R005341",
    "___s": true
  },
  {
    "comment": "/** @type {JwtPayload} */",
    "meta": {
      "range": [
        1878,
        2446
      ],
      "filename": "tokenIssuer.js",
      "lineno": 66,
      "columnno": 8,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097605",
        "name": "data",
        "type": "ObjectExpression",
        "value": "{\"user\":\"\",\"rules\":\"\"}"
      }
    },
    "type": {
      "names": [
        "JwtPayload"
      ]
    },
    "name": "data",
    "longname": "issueToken~data",
    "kind": "constant",
    "memberof": "issueToken",
    "scope": "inner",
    "params": [],
    "___id": "T000002R010298",
    "___s": true
  },
  {
    "comment": "/**\n * Check logged in user is a superuser (either `admin` or `root`)\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        1279,
        1400
      ],
      "filename": "uba_common.js",
      "lineno": 72,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007945",
        "name": "isSuperUser",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "uID": "isSuperUser~uID"
      }
    },
    "description": "Check logged in user is a superuser (either <code>admin</code> or <code>root</code>)",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isSuperUser",
    "longname": "isSuperUser",
    "kind": "function",
    "scope": "global",
    "params": [],
    "___id": "T000002R000746",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} JwtPayload\n * @property {string} user\n * @property {string[]} rules\n */",
    "meta": {
      "filename": "tokenIssuer.js",
      "lineno": 13,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "kind": "typedef",
    "name": "JwtPayload",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "user"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "rules"
      }
    ],
    "longname": "JwtPayload",
    "scope": "global",
    "___id": "T000002R010287",
    "___s": true
  },
  {
    "comment": "/**\n *  @classdesc\n *  Blob store implementation for storing content inside models `public` folders.\n *  Key conceptions:\n *\n *    - relative path created in format modelName|relativePathFromModelDir to hide real file place from client\n *    - OS user temp folder used for store temporary content\n *    - delete operation is forbidden since models must be under version control\n *\n *  Used in:\n *\n *    - ubm_form for store form def & js inside /public/forms\n *    - ubm_diagrams for store diagram inside /public/erdiagrams\n *    - ubs_report for store report template inside /public/reports\n *    - e.t.c.\n *\n * @singleton\n */",
    "meta": {
      "range": [
        893,
        5855
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 26,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049708",
        "name": "MdbBlobStore",
        "type": "ClassDeclaration",
        "paramnames": [
          "storeConfig",
          "appInstance",
          "sessionInstance"
        ]
      }
    },
    "classdesc": "<p>Blob store implementation for storing content inside models <code>public</code> folders.\n Key conceptions:</p>\n<ul>\n<li>relative path created in format modelName|relativePathFromModelDir to hide real file place from client</li>\n<li>OS user temp folder used for store temporary content</li>\n<li><p>delete operation is forbidden since models must be under version control</p>\n<p>Used in:</p>\n</li>\n<li><p>ubm_form for store form def &amp; js inside /public/forms</p>\n</li>\n<li>ubm_diagrams for store diagram inside /public/erdiagrams</li>\n<li>ubs_report for store report template inside /public/reports</li>\n<li>e.t.c.</li>\n</ul>",
    "tags": [
      {
        "originalTitle": "singleton",
        "title": "singleton",
        "text": ""
      }
    ],
    "name": "MdbBlobStore",
    "longname": "MdbBlobStore",
    "kind": "class",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "storeConfig"
      },
      {
        "type": {
          "names": [
            "App"
          ]
        },
        "name": "appInstance"
      },
      {
        "type": {
          "names": [
            "UBSession"
          ]
        },
        "name": "sessionInstance"
      }
    ],
    "___id": "T000002R004443",
    "___s": true
  },
  {
    "comment": "/**\n   * @override\n   */",
    "meta": {
      "range": [
        4919,
        5061
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 138,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100050035",
        "name": "MdbBlobStore#doDeletion",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "blobInfo"
        ]
      },
      "vars": {
        "": null
      }
    },
    "override": true,
    "name": "doDeletion",
    "longname": "MdbBlobStore#doDeletion",
    "kind": "function",
    "memberof": "MdbBlobStore",
    "scope": "instance",
    "params": [],
    "___id": "T000002R004477",
    "___s": true
  },
  {
    "comment": "/**\n   * Fill HTTP response for getDocument request\n   * @param {BlobStoreRequest} requestParams\n   * @param {BlobStoreItem} blobItem\n   * @param {THTTPRequest} req\n   * @param {THTTPResponse} resp\n   * @return {Boolean}\n   */",
    "meta": {
      "range": [
        3081,
        3881
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 86,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049837",
        "name": "MdbBlobStore#fillResponse",
        "type": "MethodDefinition",
        "paramnames": [
          "requestParams",
          "blobItem",
          "req",
          "resp"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Fill HTTP response for getDocument request",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "requestParams"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "blobItem"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "fillResponse",
    "longname": "MdbBlobStore#fillResponse",
    "kind": "function",
    "memberof": "MdbBlobStore",
    "scope": "instance",
    "___id": "T000002R004457",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve BLOB content from blob store.\n   * @abstract\n   * @param {BlobStoreRequest} request\n   * @param {BlobStoreItem} blobInfo JSON retrieved from a DB.\n   * @param {Object} [options]\n   * @param {String|Null} [options.encoding] Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n   *   If `undefined` UB will send query to entity anf get it from DB.\n   *   At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB\n   * @returns {String|ArrayBuffer}\n   */",
    "meta": {
      "range": [
        2653,
        2849
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 74,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049806",
        "name": "MdbBlobStore#getContent",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "blobInfo",
          "options"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve BLOB content from blob store.",
    "virtual": true,
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "description": "JSON retrieved from a DB.",
        "name": "blobInfo"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String",
            "Null"
          ]
        },
        "optional": true,
        "description": "Default to 'bin'. Possible values: 'bin'|'ascii'|'utf-8'\n  If <code>undefined</code> UB will send query to entity anf get it from DB.\n  At last one parameter {store: storeName} should be defined to prevent loading actual JSON from DB",
        "name": "options.encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer"
          ]
        }
      }
    ],
    "name": "getContent",
    "longname": "MdbBlobStore#getContent",
    "kind": "function",
    "memberof": "MdbBlobStore",
    "scope": "instance",
    "___id": "T000002R004455",
    "___s": true
  },
  {
    "comment": "/**\n   * Move content defined by `dirtyItem` from temporary to permanent store.\n   * In case `oldItem` is present store implementation & parameters should be taken from oldItem.store.\n   * Return a new attribute content which describe a place of BLOB in permanent store\n   *\n   * @param {UBEntityAttribute} attribute\n   * @param {Number} ID\n   * @param {BlobStoreItem} dirtyItem\n   * @param {number} newRevision\n   * @return {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        4333,
        4889
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 116,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049958",
        "name": "MdbBlobStore#persist",
        "type": "MethodDefinition",
        "paramnames": [
          "attribute",
          "ID",
          "dirtyItem",
          "newRevision"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Move content defined by <code>dirtyItem</code> from temporary to permanent store.\nIn case <code>oldItem</code> is present store implementation &amp; parameters should be taken from oldItem.store.\nReturn a new attribute content which describe a place of BLOB in permanent store",
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        },
        "name": "dirtyItem"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "newRevision"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "persist",
    "longname": "MdbBlobStore#persist",
    "kind": "function",
    "memberof": "MdbBlobStore",
    "scope": "instance",
    "___id": "T000002R004463",
    "___s": true
  },
  {
    "comment": "/**\n   * @inheritDoc\n   * @param {BlobStoreRequest} request Request params\n   * @param {UBEntityAttribute} attribute\n   * @param {ArrayBuffer} content\n   * @returns {BlobStoreItem}\n   */",
    "meta": {
      "range": [
        1699,
        2133
      ],
      "filename": "mdbBlobStore.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100049753",
        "name": "MdbBlobStore#saveContentToTempStore",
        "type": "MethodDefinition",
        "paramnames": [
          "request",
          "attribute",
          "content"
        ]
      },
      "vars": {
        "": null
      }
    },
    "inheritdoc": "",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "description": "Request params",
        "name": "request"
      },
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "content"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "saveContentToTempStore",
    "longname": "MdbBlobStore#saveContentToTempStore",
    "kind": "function",
    "memberof": "MdbBlobStore",
    "scope": "instance",
    "___id": "T000002R004446",
    "___s": true
  },
  {
    "comment": "/**\n   * REST endpoint for Report test purpose. Available in `-dev` mode only.\n   * Expect POST request with JSON on body {reportCode: 'reportCode', responseType: 'pdf'|'html', reportParams: {paramName: paramValue, ...}}\n   * Return a HTML/PDF\n   * @param {null} ctxt\n   * @param {THTTPRequest} req\n   * @param {THTTPResponse} resp\n   */",
    "meta": {
      "range": [
        11997,
        12638
      ],
      "filename": "ubs_report.js",
      "lineno": 375,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100084193",
        "name": "me.testServerRendering",
        "type": "FunctionExpression",
        "paramnames": [
          "ctxt",
          "req",
          "resp"
        ]
      },
      "vars": {
        "body": "me.testServerRendering~body",
        "params": "me.testServerRendering~params",
        "UBServerReport": "me.testServerRendering~UBServerReport",
        "result": "me.testServerRendering~result",
        "resp.statusCode": "resp.statusCode"
      }
    },
    "description": "REST endpoint for Report test purpose. Available in <code>-dev</code> mode only.\nExpect POST request with JSON on body {reportCode: 'reportCode', responseType: 'pdf'|'html', reportParams: {paramName: paramValue, ...}}\nReturn a HTML/PDF",
    "params": [
      {
        "type": {
          "names": [
            "null"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "testServerRendering",
    "longname": "me.testServerRendering",
    "kind": "function",
    "memberof": "me",
    "scope": "static",
    "___id": "T000002R008403",
    "___s": true
  },
  {
    "comment": "/**\n * Merge two meta file definitions.\n * Named collections (attributes , mapping) in both files should be in array-of-object format\n *\n * @param originalEntityPath\n * @param descendantEntityPath\n * @return {string}\n */",
    "meta": {
      "range": [
        1748,
        2205
      ],
      "filename": "metaMerge.js",
      "lineno": 61,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065544",
        "name": "mergeMeta",
        "type": "FunctionDeclaration",
        "paramnames": [
          "originalEntityPath",
          "descendantEntityPath"
        ]
      },
      "vars": {
        "txt": "mergeMeta~txt",
        "e1": "mergeMeta~e1",
        "e2": "mergeMeta~e2"
      }
    },
    "description": "Merge two meta file definitions.\nNamed collections (attributes , mapping) in both files should be in array-of-object format",
    "params": [
      {
        "name": "originalEntityPath"
      },
      {
        "name": "descendantEntityPath"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "mergeMeta",
    "longname": "mergeMeta",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R006259",
    "___s": true
  },
  {
    "comment": "/**\n * Abstract Custom repository (extended by serverRepository & ClientRepository)\n * @type {CustomRepository}\n */",
    "meta": {
      "range": [
        33182,
        33215
      ],
      "filename": "CustomRepository.js",
      "lineno": 950,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040479",
        "name": "module.exports",
        "type": "Identifier",
        "value": "CustomRepository",
        "paramnames": []
      }
    },
    "description": "Abstract Custom repository (extended by serverRepository &amp; ClientRepository)",
    "type": {
      "names": [
        "CustomRepository"
      ]
    },
    "name": "exports",
    "longname": "module.exports",
    "kind": "member",
    "memberof": "module",
    "scope": "static",
    "___id": "T000002R003525",
    "___s": true
  },
  {
    "comment": "/**\n * MPV - pure fake!!!!!!\n */",
    "meta": {
      "range": [
        35,
        54
      ],
      "filename": "net.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100022696",
        "name": "module.exports",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "MPV - pure fake!!!!!!",
    "name": "exports",
    "longname": "module.exports",
    "kind": "member",
    "memberof": "module",
    "scope": "static",
    "___id": "T000002R002017",
    "___s": true
  },
  {
    "comment": "/**\n*  MPV - fake implementation of node.js timer\n*  Just for xml2js work\n*/",
    "meta": {
      "range": [
        77,
        133
      ],
      "filename": "timers.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100031543",
        "name": "module.exports",
        "type": "ObjectExpression",
        "value": "{\"setImmediate\":\"\"}",
        "paramnames": []
      }
    },
    "description": "MPV - fake implementation of node.js timer\n Just for xml2js work",
    "name": "exports",
    "longname": "module.exports",
    "kind": "member",
    "memberof": "module",
    "scope": "static",
    "___id": "T000002R002723",
    "___s": true
  },
  {
    "comment": "/**\n   * Name of topic exchange, MUST be created on RabbitMQ.\n   * Is used to:\n   * - issue JWT tokens for RabbitMQ\n   * - send messages to clients\n   * @type {string}\n   */",
    "meta": {
      "range": [
        6807,
        6820
      ],
      "filename": "userNotifier.js",
      "lineno": 202,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100098321",
        "name": "EXCHANGE_NAME",
        "type": "Identifier",
        "value": "EXCHANGE_NAME"
      }
    },
    "description": "<p>Name of topic exchange, MUST be created on RabbitMQ.\nIs used to:</p>\n<ul>\n<li>issue JWT tokens for RabbitMQ</li>\n<li>send messages to clients</li>\n</ul>",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "EXCHANGE_NAME",
    "longname": "module.exports.EXCHANGE_NAME",
    "kind": "member",
    "memberof": "module.exports",
    "scope": "static",
    "___id": "T000002R010354",
    "___s": true
  },
  {
    "comment": "/**\n * Classes, common for CLI and server side\n * @module @unitybase/base\n */",
    "meta": {
      "filename": "base.js",
      "lineno": 12,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/base",
    "longname": "module:@unitybase/base",
    "readme": "<p>﻿<a href=\"http://standardjs.com/\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\" alt=\"JavaScript Style Guide\"></a></p>\n<h1>UnityBase command line helpers</h1><p>CLI classes for working with command line args,\nconnecting to UnityBase server, bulk data loading.</p>",
    "___id": "T000002R000452",
    "___s": true
  },
  {
    "comment": "/**\n   * Command-line utils for connecting to a UnityBase server\n   * @type {module:argv}\n   * @type {argv}\n   */",
    "meta": {
      "range": [
        643,
        653
      ],
      "filename": "base.js",
      "lineno": 22,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005079",
        "name": "argv",
        "type": "Identifier",
        "value": "argv"
      }
    },
    "description": "Command-line utils for connecting to a UnityBase server",
    "type": {
      "names": [
        "module:argv"
      ]
    },
    "name": "argv",
    "longname": "module:@unitybase/base.argv",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000454",
    "___s": true
  },
  {
    "comment": "/**\n   * CSV data parser\n   * @type {module:csv1}\n   */",
    "meta": {
      "range": [
        1042,
        1051
      ],
      "filename": "base.js",
      "lineno": 42,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005087",
        "name": "csv",
        "type": "Identifier",
        "value": "csv1"
      }
    },
    "description": "CSV data parser",
    "type": {
      "names": [
        "module:csv1"
      ]
    },
    "name": "csv",
    "longname": "module:@unitybase/base.csv",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000458",
    "___s": true
  },
  {
    "comment": "/**\n   * Bulk data loader from CSV/arrays\n   * @type {module:dataLoader}\n   * @type {dataLoader}\n   */",
    "meta": {
      "range": [
        1160,
        1182
      ],
      "filename": "base.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005089",
        "name": "dataLoader",
        "type": "Identifier",
        "value": "dataLoader"
      }
    },
    "description": "Bulk data loader from CSV/arrays",
    "type": {
      "names": [
        "module:dataLoader"
      ]
    },
    "name": "dataLoader",
    "longname": "module:@unitybase/base.dataLoader",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000459",
    "___s": true
  },
  {
    "comment": "/**\n   * ORM **select** method implementation using files as a data source.\n   * Used for loading files & transforming it content to {@link module:LocalDataStore.TubCachedData TubCachedData} format\n   * @type {module:FileBasedStoreLoader}\n   */",
    "meta": {
      "range": [
        1433,
        1453
      ],
      "filename": "base.js",
      "lineno": 54,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005091",
        "name": "FileBasedStoreLoader",
        "type": "Identifier",
        "value": "FileBasedStoreLoader"
      }
    },
    "description": "ORM <strong>select</strong> method implementation using files as a data source.\nUsed for loading files &amp; transforming it content to {@link module:LocalDataStore.TubCachedData TubCachedData} format",
    "type": {
      "names": [
        "module:FileBasedStoreLoader"
      ]
    },
    "name": "FileBasedStoreLoader",
    "longname": "module:@unitybase/base.FileBasedStoreLoader",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000460",
    "___s": true
  },
  {
    "comment": "/**\n   * Well known keys used to store data in the App.globalCache\n   */",
    "meta": {
      "range": [
        2659,
        3985
      ],
      "filename": "base.js",
      "lineno": 93,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005128",
        "name": "GC_KEYS",
        "type": "ObjectExpression",
        "value": "{\"MODELS_MODIFY_DATE\":\"UB_STATIC.modelsModifyDate\",\"COMPILED_INDEX_\":\"UB_STATIC.compiled_index_\",\"COMPILED_INDEX_NONCE\":\"UB_STATIC.index_cspNonce\",\"UB_MODELS_REQ_\":\"UB.MODELS_REQ_\",\"UB_CLIENT_REQ_\":\"UB.CLIENT_REQ_\",\"UB_LOCALE_REQ_\":\"UB.LOCALE_\",\"UBQ_TASK_RUNNING_\":\"UBQ.TASK_RUNNING_\",\"UBQ_SCHEDULER_INITIALIZED\":\"UBQ.schedulersInitialized\"}"
      }
    },
    "description": "Well known keys used to store data in the App.globalCache",
    "name": "GC_KEYS",
    "longname": "module:@unitybase/base.GC_KEYS",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000466",
    "___s": true
  },
  {
    "comment": "/** Key prefix for storing a compiled index.html (used by adminui-reg). Actual index name added after this text */",
    "meta": {
      "range": [
        3145,
        3189
      ],
      "filename": "base.js",
      "lineno": 101,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005132",
        "name": "COMPILED_INDEX_",
        "type": "Literal",
        "value": "UB_STATIC.compiled_index_"
      }
    },
    "description": "Key prefix for storing a compiled index.html (used by adminui-reg). Actual index name added after this text",
    "name": "COMPILED_INDEX_",
    "longname": "module:@unitybase/base.GC_KEYS.COMPILED_INDEX_",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000468",
    "___s": true
  },
  {
    "comment": "/** Key for storing CSP NONCE generated for compiled index.html */",
    "meta": {
      "range": [
        3266,
        3314
      ],
      "filename": "base.js",
      "lineno": 103,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005134",
        "name": "COMPILED_INDEX_NONCE",
        "type": "Literal",
        "value": "UB_STATIC.index_cspNonce"
      }
    },
    "description": "Key for storing CSP NONCE generated for compiled index.html",
    "name": "COMPILED_INDEX_NONCE",
    "longname": "module:@unitybase/base.GC_KEYS.COMPILED_INDEX_NONCE",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000469",
    "___s": true
  },
  {
    "comment": "/**\n     * Key for storing last modification date-time of the models files.\n     * Used by ubm_form / ubs_report virtual entities to refresh a server-side in-memory form/report cache.\n     * Virtual entities what depends on file system should refresh this value on insert/update/delete\n     */",
    "meta": {
      "range": [
        2972,
        3020
      ],
      "filename": "base.js",
      "lineno": 99,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005130",
        "name": "MODELS_MODIFY_DATE",
        "type": "Literal",
        "value": "UB_STATIC.modelsModifyDate"
      }
    },
    "description": "Key for storing last modification date-time of the models files.\nUsed by ubm_form / ubs_report virtual entities to refresh a server-side in-memory form/report cache.\nVirtual entities what depends on file system should refresh this value on insert/update/delete",
    "name": "MODELS_MODIFY_DATE",
    "longname": "module:@unitybase/base.GC_KEYS.MODELS_MODIFY_DATE",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000467",
    "___s": true
  },
  {
    "comment": "/** Key prefix for cache actual file path & type for success request to `clientRequire` endpoint */",
    "meta": {
      "range": [
        3561,
        3593
      ],
      "filename": "base.js",
      "lineno": 107,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005138",
        "name": "UB_CLIENT_REQ_",
        "type": "Literal",
        "value": "UB.CLIENT_REQ_"
      }
    },
    "description": "Key prefix for cache actual file path &amp; type for success request to <code>clientRequire</code> endpoint",
    "name": "UB_CLIENT_REQ_",
    "longname": "module:@unitybase/base.GC_KEYS.UB_CLIENT_REQ_",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000471",
    "___s": true
  },
  {
    "comment": "/** Key prefix for cache `allLocales` endpoint. Suffix is a language */",
    "meta": {
      "range": [
        3675,
        3703
      ],
      "filename": "base.js",
      "lineno": 109,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005140",
        "name": "UB_LOCALE_REQ_",
        "type": "Literal",
        "value": "UB.LOCALE_"
      }
    },
    "description": "Key prefix for cache <code>allLocales</code> endpoint. Suffix is a language",
    "name": "UB_LOCALE_REQ_",
    "longname": "module:@unitybase/base.GC_KEYS.UB_LOCALE_REQ_",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000472",
    "___s": true
  },
  {
    "comment": "/** Key prefix for storing actual file path & type for success request to `models` endpoint */",
    "meta": {
      "range": [
        3419,
        3451
      ],
      "filename": "base.js",
      "lineno": 105,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005136",
        "name": "UB_MODELS_REQ_",
        "type": "Literal",
        "value": "UB.MODELS_REQ_"
      }
    },
    "description": "Key prefix for storing actual file path &amp; type for success request to <code>models</code> endpoint",
    "name": "UB_MODELS_REQ_",
    "longname": "module:@unitybase/base.GC_KEYS.UB_MODELS_REQ_",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000470",
    "___s": true
  },
  {
    "comment": "/** In case schedulers Worker is initialized value is `yes` */",
    "meta": {
      "range": [
        3927,
        3981
      ],
      "filename": "base.js",
      "lineno": 114,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005144",
        "name": "UBQ_SCHEDULER_INITIALIZED",
        "type": "Literal",
        "value": "UBQ.schedulersInitialized"
      }
    },
    "description": "In case schedulers Worker is initialized value is <code>yes</code>",
    "name": "UBQ_SCHEDULER_INITIALIZED",
    "longname": "module:@unitybase/base.GC_KEYS.UBQ_SCHEDULER_INITIALIZED",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000474",
    "___s": true
  },
  {
    "comment": "/** Key prefix for storing flags for running schedulers tasks; Value === 1 in case task in running */",
    "meta": {
      "range": [
        3816,
        3854
      ],
      "filename": "base.js",
      "lineno": 112,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005142",
        "name": "UBQ_TASK_RUNNING_",
        "type": "Literal",
        "value": "UBQ.TASK_RUNNING_"
      }
    },
    "description": "Key prefix for storing flags for running schedulers tasks; Value === 1 in case task in running",
    "name": "UBQ_TASK_RUNNING_",
    "longname": "module:@unitybase/base.GC_KEYS.UBQ_TASK_RUNNING_",
    "kind": "member",
    "memberof": "module:@unitybase/base.GC_KEYS",
    "scope": "static",
    "___id": "T000002R000473",
    "___s": true
  },
  {
    "comment": "/**\n *\n * Command-line utils for connecting to a UnityBase server\n * @example\n *\n * const argv = require('@unitybase/base').argv\n * // connect to server\n * let session = argv.establishConnectionFromCmdLineAttributes()\n * console.log('Session.uData:', session.uData, typeof session.uData, session.uData.lang)\n *\n * let userLang = session.uData.lang\n * let conn = session.connection\n * // obtain domain information\n * const domainInfo = conn.getDomainInfo()\n *\n * @module argv\n * @memberOf module:@unitybase/base\n */",
    "meta": {
      "filename": "argv.js",
      "lineno": 9,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "Command-line utils for connecting to a UnityBase server",
    "examples": [
      "const argv = require('@unitybase/base').argv\n// connect to server\nlet session = argv.establishConnectionFromCmdLineAttributes()\nconsole.log('Session.uData:', session.uData, typeof session.uData, session.uData.lang)\n\nlet userLang = session.uData.lang\nlet conn = session.connection\n// obtain domain information\nconst domainInfo = conn.getDomainInfo()"
    ],
    "kind": "module",
    "name": "argv",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "longname": "module:@unitybase/base.module:argv",
    "___id": "T000002R000295",
    "___s": true
  },
  {
    "comment": "/**\n   * @deprecated Use `options.switchIndex` instead.\n   * @param {string} switchName\n   * @returns {Number} switch index if found or -1 otherwise\n   */",
    "meta": {
      "range": [
        960,
        998
      ],
      "filename": "argv.js",
      "lineno": 34,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003413",
        "name": "findCmdLineSwitch",
        "type": "MemberExpression",
        "value": "options.switchIndex"
      }
    },
    "deprecated": "Use `options.switchIndex` instead.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "switchName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>switch index if found or -1 otherwise</p>"
      }
    ],
    "name": "findCmdLineSwitch",
    "longname": "module:@unitybase/base.module:argv.findCmdLineSwitch",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv",
    "scope": "static",
    "___id": "T000002R000298",
    "___s": true
  },
  {
    "comment": "/**\n   * @deprecated Use `options.switchValue` instead.\n   * @param {string} switchName\n   * @returns {String} switch value or `undefined` in case switch not found or switch not have value\n   */",
    "meta": {
      "range": [
        1199,
        1242
      ],
      "filename": "argv.js",
      "lineno": 40,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003417",
        "name": "findCmdLineSwitchValue",
        "type": "MemberExpression",
        "value": "options.switchValue"
      }
    },
    "deprecated": "Use `options.switchValue` instead.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "switchName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>switch value or <code>undefined</code> in case switch not found or switch not have value</p>"
      }
    ],
    "name": "findCmdLineSwitchValue",
    "longname": "module:@unitybase/base.module:argv.findCmdLineSwitchValue",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv",
    "scope": "static",
    "___id": "T000002R000299",
    "___s": true
  },
  {
    "comment": "/**\n * Perform check somebody listen on URL\n * @param {String} URL\n * @return {boolean}\n */",
    "meta": {
      "range": [
        7607,
        7997
      ],
      "filename": "argv.js",
      "lineno": 230,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003980",
        "name": "checkServerStarted",
        "type": "FunctionDeclaration",
        "paramnames": [
          "URL"
        ]
      },
      "vars": {
        "http": "module:@unitybase/base.module:argv~checkServerStarted~http",
        "resp": "module:@unitybase/base.module:argv~checkServerStarted~resp"
      }
    },
    "description": "Perform check somebody listen on URL",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "URL"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "checkServerStarted",
    "longname": "module:@unitybase/base.module:argv~checkServerStarted",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000373",
    "___s": true
  },
  {
    "comment": "/**\n * Service function for establish UnityBase server connection from client-side command line script.\n * Parse command line attributes for switches `host`, `u`, `p` and:\n *\n *  - Check specified server is started (simple request to `host`) and if not started then\n *      start server locally with local config\n *  - Establish connection to specified host\n *  - Retrieve application information and in case authorization is required then call login method using `u` and `p` params\n *  - Return serverSession object with connection in case of success or throw assertion error\n * @param {Object} [config]\n * @param {String} [config.host]\n * @param {String} [config.user]\n * @param {String} [config.pwd]\n * @param {Boolean} [config.forceStartServer=false] If we sure local server not started - start it without checking. Faster because check take near 2 sec.\n * @param {number} [config.timeout=30000] Receive timeout in ms\n * @return {ServerSession}\n */",
    "meta": {
      "range": [
        4771,
        6749
      ],
      "filename": "argv.js",
      "lineno": 159,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003682",
        "name": "establishConnectionFromCmdLineAttributes",
        "type": "FunctionDeclaration",
        "paramnames": [
          "config"
        ]
      },
      "vars": {
        "config": "module:@unitybase/base.module:argv~config",
        "serverSession": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~serverSession",
        "serverSession.__serverStartedByMe": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~serverSession.__serverStartedByMe",
        "serverStarted": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~serverStarted",
        "conn": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~conn",
        "serverSession.connection": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~serverSession.connection",
        "appInfo": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~appInfo",
        "conn.onRequestAuthParams": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~conn.onRequestAuthParams",
        "": null,
        "serverSession.appInfo": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes~serverSession.appInfo"
      }
    },
    "description": "<p>Service function for establish UnityBase server connection from client-side command line script.\nParse command line attributes for switches <code>host</code>, <code>u</code>, <code>p</code> and:</p>\n<ul>\n<li>Check specified server is started (simple request to <code>host</code>) and if not started then\n  start server locally with local config</li>\n<li>Establish connection to specified host</li>\n<li>Retrieve application information and in case authorization is required then call login method using <code>u</code> and <code>p</code> params</li>\n<li>Return serverSession object with connection in case of success or throw assertion error</li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "config"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "config.host"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "config.user"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "config.pwd"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If we sure local server not started - start it without checking. Faster because check take near 2 sec.",
        "name": "config.forceStartServer"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Receive timeout in ms",
        "name": "config.timeout"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ServerSession"
          ]
        }
      }
    ],
    "name": "establishConnectionFromCmdLineAttributes",
    "longname": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000327",
    "___s": true
  },
  {
    "comment": "/**\n * Options config for establishing connection from command line parameters\n * @type {Array<Object>}\n */",
    "meta": {
      "range": [
        6859,
        7513
      ],
      "filename": "argv.js",
      "lineno": 217,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003914",
        "name": "establishConnectionFromCmdLineAttributes._cmdLineParams",
        "type": "ArrayExpression",
        "value": "[\"{\\\"short\\\":\\\"host\\\",\\\"long\\\":\\\"host\\\",\\\"param\\\":\\\"fullServerURL\\\",\\\"defaultValue\\\":\\\"http://localhost:8881\\\",\\\"searchInEnv\\\":true,\\\"help\\\":\\\"Full server URL\\\"}\",\"{\\\"short\\\":\\\"u\\\",\\\"long\\\":\\\"user\\\",\\\"param\\\":\\\"userName\\\",\\\"searchInEnv\\\":true,\\\"help\\\":\\\"User name\\\"}\",\"{\\\"short\\\":\\\"p\\\",\\\"long\\\":\\\"pwd\\\",\\\"param\\\":\\\"password\\\",\\\"searchInEnv\\\":true,\\\"help\\\":\\\"User password\\\"}\",\"{\\\"short\\\":\\\"cfg\\\",\\\"long\\\":\\\"cfg\\\",\\\"param\\\":\\\"localServerConfig\\\",\\\"defaultValue\\\":\\\"ubConfig.json\\\",\\\"searchInEnv\\\":true,\\\"help\\\":\\\"Path to UB server config\\\"}\",\"{\\\"short\\\":\\\"timeout\\\",\\\"long\\\":\\\"timeout\\\",\\\"param\\\":\\\"timeout\\\",\\\"defaultValue\\\":120000,\\\"searchInEnv\\\":true,\\\"help\\\":\\\"HTTP Receive timeout in ms\\\"}\"]",
        "paramnames": []
      }
    },
    "description": "Options config for establishing connection from command line parameters",
    "type": {
      "names": [
        "Array.<Object>"
      ]
    },
    "name": "_cmdLineParams",
    "longname": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes._cmdLineParams",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~establishConnectionFromCmdLineAttributes",
    "scope": "static",
    "___id": "T000002R000344",
    "___s": true
  },
  {
    "comment": "/**\n * Get config file name. if -cfg switch passed then use this switch value, else use default\n * @return {String}\n */",
    "meta": {
      "range": [
        1740,
        2427
      ],
      "filename": "argv.js",
      "lineno": 55,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003433",
        "name": "getConfigFileName",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "cfgFile": "module:@unitybase/base.module:argv~cfgFile"
      }
    },
    "description": "Get config file name. if -cfg switch passed then use this switch value, else use default",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "getConfigFileName",
    "longname": "module:@unitybase/base.module:argv~getConfigFileName",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "params": [],
    "___id": "T000002R000306",
    "___s": true
  },
  {
    "comment": "/**\n * Read server configuration from file, resolved by {@link getConfigFileName}\n * parse it in safe mode, replace environment variables by it values and return parsed config\n * @param {boolean} [forFutureSave=false] If true will return config ready to save back as new ubConfig\n *  (do not add props model.browser & model.version)\n * @return {Object}\n */",
    "meta": {
      "range": [
        10407,
        14461
      ],
      "filename": "argv.js",
      "lineno": 311,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100004259",
        "name": "getServerConfiguration",
        "type": "FunctionDeclaration",
        "paramnames": [
          "forFutureSave"
        ]
      },
      "vars": {
        "cfgFileName": "module:@unitybase/base.module:argv~getServerConfiguration~cfgFileName",
        "result": "module:@unitybase/base.module:argv~getServerConfiguration~result",
        "": null,
        "result.application": "module:@unitybase/base.module:argv~getServerConfiguration~result.application",
        "result.application.name": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.name",
        "result.application.defaultLang": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.defaultLang",
        "result.application.domain": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.domain",
        "result.application.blobStores": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.blobStores",
        "connections": "module:@unitybase/base.module:argv~getServerConfiguration~connections",
        "result.application.domain.supportedLanguages": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.domain.supportedLanguages",
        "result.application.customSettings": "module:@unitybase/base.module:argv~getServerConfiguration~result.application.customSettings",
        "result.uiSettings": "module:@unitybase/base.module:argv~getServerConfiguration~result.uiSettings",
        "result.security": "module:@unitybase/base.module:argv~getServerConfiguration~result.security",
        "result.httpServer": "module:@unitybase/base.module:argv~getServerConfiguration~result.httpServer",
        "result.httpServer.externalURL": "module:@unitybase/base.module:argv~getServerConfiguration~result.httpServer.externalURL",
        "result.httpServer.reverseProxy": "module:@unitybase/base.module:argv~getServerConfiguration~result.httpServer.reverseProxy",
        "rp": "module:@unitybase/base.module:argv~getServerConfiguration~rp",
        "rp.remoteIPHeader": "module:@unitybase/base.module:argv~getServerConfiguration~rp.remoteIPHeader",
        "rp.remoteConnIDHeader": "module:@unitybase/base.module:argv~getServerConfiguration~rp.remoteConnIDHeader",
        "rp.sendFileHeader": "module:@unitybase/base.module:argv~getServerConfiguration~rp.sendFileHeader",
        "rp.sendFileLocationRoot": "module:@unitybase/base.module:argv~getServerConfiguration~rp.sendFileLocationRoot"
      }
    },
    "description": "Read server configuration from file, resolved by {@link getConfigFileName}\nparse it in safe mode, replace environment variables by it values and return parsed config",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true will return config ready to save back as new ubConfig\n (do not add props model.browser &amp; model.version)",
        "name": "forFutureSave"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "getServerConfiguration",
    "longname": "module:@unitybase/base.module:argv~getServerConfiguration",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000391",
    "___s": true
  },
  {
    "comment": "/**\n * JSON file parsing, allow to parse semi-JSON files with comments. In case of errors inside JSON show detailed error description\n * @param {String} fileName\n * @param {Boolean} [allowMultiLineString=false] Replace `\\n` before parse (not compatible with JSON format, but multiline string is useful)\n * @param {Function} [preprocessor] Optional function accept file content transform it and return new content\n * @return {Object}\n */",
    "meta": {
      "range": [
        15444,
        15987
      ],
      "filename": "argv.js",
      "lineno": 425,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100004940",
        "name": "safeParseJSONfile",
        "type": "FunctionDeclaration",
        "paramnames": [
          "fileName",
          "allowMultiLineString",
          "preprocessor"
        ]
      },
      "vars": {
        "content": "module:@unitybase/base.module:argv~content"
      }
    },
    "description": "JSON file parsing, allow to parse semi-JSON files with comments. In case of errors inside JSON show detailed error description",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Replace <code>\\n</code> before parse (not compatible with JSON format, but multiline string is useful)",
        "name": "allowMultiLineString"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Optional function accept file content transform it and return new content",
        "name": "preprocessor"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "safeParseJSONfile",
    "longname": "module:@unitybase/base.module:argv~safeParseJSONfile",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000439",
    "___s": true
  },
  {
    "comment": "/**\n * @class ServerSession\n */",
    "meta": {
      "filename": "argv.js",
      "lineno": 79,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "kind": "class",
    "name": "ServerSession",
    "longname": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000315",
    "___s": true
  },
  {
    "comment": "/**\n   * Result of `getAppInfo` endpoint execution\n   * @type {Object}\n   */",
    "meta": {
      "range": [
        3435,
        3452
      ],
      "filename": "argv.js",
      "lineno": 127,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003647",
        "name": "this.appInfo",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Result of <code>getAppInfo</code> endpoint execution",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "appInfo",
    "longname": "module:@unitybase/base.module:argv~ServerSession#appInfo",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000324",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {SyncConnection}\n   */",
    "meta": {
      "range": [
        2966,
        2988
      ],
      "filename": "argv.js",
      "lineno": 108,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003610",
        "name": "this.connection",
        "type": "Literal",
        "value": null,
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "SyncConnection"
      ]
    },
    "name": "connection",
    "longname": "module:@unitybase/base.module:argv~ServerSession#connection",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000322",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2600,
        2623
      ],
      "filename": "argv.js",
      "lineno": 87,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003574",
        "name": "this.HOST",
        "type": "MemberExpression",
        "value": "config.host",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "HOST",
    "longname": "module:@unitybase/base.module:argv~ServerSession#HOST",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000317",
    "___s": true
  },
  {
    "comment": "/**\n   * Shut down server in case it started during connection establish or logout from remote server\n   * @method\n   */",
    "meta": {
      "range": [
        3114,
        3312
      ],
      "filename": "argv.js",
      "lineno": 113,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003616",
        "name": "this.logout",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Shut down server in case it started during connection establish or logout from remote server",
    "kind": "function",
    "name": "logout",
    "longname": "module:@unitybase/base.module:argv~ServerSession#logout",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000323",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2746,
        2767
      ],
      "filename": "argv.js",
      "lineno": 97,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003590",
        "name": "this.PWD",
        "type": "MemberExpression",
        "value": "config.pwd",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "PWD",
    "longname": "module:@unitybase/base.module:argv~ServerSession#PWD",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000319",
    "___s": true
  },
  {
    "comment": "/**\n   * Custom user data returned by server login method\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2871,
        2888
      ],
      "filename": "argv.js",
      "lineno": 103,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003598",
        "name": "this.uData",
        "type": "Literal",
        "value": null,
        "paramnames": []
      }
    },
    "description": "Custom user data returned by server login method",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "uData",
    "longname": "module:@unitybase/base.module:argv~ServerSession#uData",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000320",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2673,
        2696
      ],
      "filename": "argv.js",
      "lineno": 92,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003582",
        "name": "this.USER",
        "type": "MemberExpression",
        "value": "config.user",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "USER",
    "longname": "module:@unitybase/base.module:argv~ServerSession#USER",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:argv~ServerSession",
    "scope": "instance",
    "___id": "T000002R000318",
    "___s": true
  },
  {
    "comment": "/**\n * Parse cmd line and environment variables for command line parameters expected by UnityBase `cmd` mode\n * @return {ServerSession}\n */",
    "meta": {
      "range": [
        3596,
        3816
      ],
      "filename": "argv.js",
      "lineno": 134,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003652",
        "name": "serverSessionFromCmdLineAttributes",
        "type": "FunctionDeclaration",
        "paramnames": [
          "config"
        ]
      },
      "vars": {
        "config": "module:@unitybase/base.module:argv~config"
      }
    },
    "description": "Parse cmd line and environment variables for command line parameters expected by UnityBase <code>cmd</code> mode",
    "returns": [
      {
        "type": {
          "names": [
            "ServerSession"
          ]
        }
      }
    ],
    "name": "serverSessionFromCmdLineAttributes",
    "longname": "module:@unitybase/base.module:argv~serverSessionFromCmdLineAttributes",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "params": [],
    "___id": "T000002R000325",
    "___s": true
  },
  {
    "comment": "/**\n * Return a URL server actually listen on\n * @param {Object} config Server configuration\n */",
    "meta": {
      "range": [
        14560,
        15005
      ],
      "filename": "argv.js",
      "lineno": 408,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100004867",
        "name": "serverURLFromConfig",
        "type": "FunctionDeclaration",
        "paramnames": [
          "config"
        ]
      },
      "vars": {
        "httpCfg": "module:@unitybase/base.module:argv~serverURLFromConfig~httpCfg",
        "rUrl": "module:@unitybase/base.module:argv~rUrl"
      }
    },
    "description": "Return a URL server actually listen on",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Server configuration",
        "name": "config"
      }
    ],
    "name": "serverURLFromConfig",
    "longname": "module:@unitybase/base.module:argv~serverURLFromConfig",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:argv",
    "___id": "T000002R000433",
    "___s": true
  },
  {
    "comment": "/**\n * CSV-JS - A Comma-Separated Values parser for JS\n *\n * Built to rfc4180 standard, with options for adjusting strictness:\n *\n *    - optional carriage returns for non-microsoft sources\n *    - automatically type-cast numeric an boolean values\n *    - relaxed mode which: ignores blank lines, ignores gargabe following quoted tokens, does not enforce a consistent record length\n *\n * Adopted for UnityBase by pavel.mash\n *\n * @example\n *\n * var csv = require('@unitybase/base').csv;\n * // simple\n * var rows = csv.parse('one,two,three\\nfour,five,six', ',')\n * // rows equals [[\"one\",\"two\",\"three\"],[\"four\",\"five\",\"six\"]]\n * // or read from file system\n * var fs = require('fs'), f = fs.readFileSync('c:/csv.txt');\n * var rows = csv.parse(f);\n * for( var i =0; i < rows.length; i++){\n *    console.log(rows[i]);\n * }\n *\n * @module csv1\n * @memberOf module:@unitybase/base\n */",
    "meta": {
      "filename": "csv1.js",
      "lineno": 17,
      "columnno": 1,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "CSV-JS - A Comma-Separated Values parser for JS</p>\n<p>Built to rfc4180 standard, with options for adjusting strictness:</p>\n<ul>\n<li>optional carriage returns for non-microsoft sources</li>\n<li>automatically type-cast numeric an boolean values</li>\n<li>relaxed mode which: ignores blank lines, ignores gargabe following quoted tokens, does not enforce a consistent record length</li>\n</ul>\n<p>Adopted for UnityBase by pavel.mash",
    "examples": [
      "var csv = require('@unitybase/base').csv;\n// simple\nvar rows = csv.parse('one,two,three\\nfour,five,six', ',')\n// rows equals [[\"one\",\"two\",\"three\"],[\"four\",\"five\",\"six\"]]\n// or read from file system\nvar fs = require('fs'), f = fs.readFileSync('c:/csv.txt');\nvar rows = csv.parse(f);\nfor( var i =0; i < rows.length; i++){\n   console.log(rows[i]);\n}"
    ],
    "kind": "module",
    "name": "csv1",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "longname": "module:@unitybase/base.module:csv1",
    "___id": "T000002R000475",
    "___s": true
  },
  {
    "comment": "/**\n * <a href=\"http://www.ietf.org/rfc/rfc4180.txt\">rfc4180</a> standard csv parse\n * with options for strictness and data type conversion.\n * By default, will automatically type-cast numeric an boolean values.\n *\n * @method parse\n * @param {String} str A CSV string\n * @param {String} [comma=\";\"] column separator\n * @return {Array} An array records, each of which is an array of scalar values.\n */",
    "meta": {
      "filename": "csv1.js",
      "lineno": 75,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "<a href=\"http://www.ietf.org/rfc/rfc4180.txt\">rfc4180</a> standard csv parse\nwith options for strictness and data type conversion.\nBy default, will automatically type-cast numeric an boolean values.",
    "kind": "function",
    "name": "parse",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "A CSV string",
        "name": "str"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\";\"",
        "description": "column separator",
        "name": "comma"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "<p>An array records, each of which is an array of scalar values.</p>"
      }
    ],
    "longname": "module:@unitybase/base.module:csv1~parse",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:csv1",
    "___id": "T000002R000501",
    "___s": true
  },
  {
    "comment": "/**\n * Utils for load data from different formats. You can find many examples of the use inside models `_initialData` folders.\n *\n * @example\n *\nconst csvLoader = require('@unitybase/base').dataLoader\nconn = session.connection;\ncsvLoader.loadSimpleCSVData(conn, path.join(__dirname, 'ubm_enum-CDN.csv'),\n'ubm_enum', 'eGroup;code;name;sortOrder'.split(';'), [0, 1, 2, 3]\n)\n\n * @example\n *\n//data transformation - in this case we pass transformation function to mapping array instead of CSV column index:\nvar ukraineID = conn.lookup('cdn_country', 'ID',\n  {expression: 'code', condition: 'equal', values: {code: 'UKR'}}\n);\nif (!ukraineID) {\n     throw new Error('Country with code UKR not found');\n }\n\n// CSV columns: code,regionType,name,fullName\n// we map:\n//  - parentAdminUnitID to id of Ukraine (constant)\n//  - regionTypeID fo function what lookup region ID using region code from CSV file\ncsvLoader.loadSimpleCSVData(conn, __dirname + '/cdn_region_ukraine.csv', 'cdn_region',\n   ['parentAdminUnitID', 'code', 'regionTypeID', 'name', 'caption', 'fullName'],\n   [\n       function(){return ukraineID;},\n       0,\n       function(row){\n           var regionType;\n           regionType = conn.lookup('cdn_regiontype', 'ID', {expression: 'code', condition: 'equal', values: {code: row[1]}});\n           if (!regionType){\n               throw new Error('Unknown region type ' + row[1]);\n           }\n           return regionType;\n       },\n       2, 2, 3\n   ],\n   1, ','\n)\n\n * @module dataLoader\n * @memberOf module:@unitybase/base\n * @author pavel.mash\n */",
    "meta": {
      "filename": "dataLoader.js",
      "lineno": 7,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "Utils for load data from different formats. You can find many examples of the use inside models <code>_initialData</code> folders.",
    "examples": [
      "const csvLoader = require('@unitybase/base').dataLoader\nconn = session.connection;\ncsvLoader.loadSimpleCSVData(conn, path.join(__dirname, 'ubm_enum-CDN.csv'),\n'ubm_enum', 'eGroup;code;name;sortOrder'.split(';'), [0, 1, 2, 3]\n)",
      "//data transformation - in this case we pass transformation function to mapping array instead of CSV column index:\nvar ukraineID = conn.lookup('cdn_country', 'ID',\n  {expression: 'code', condition: 'equal', values: {code: 'UKR'}}\n);\nif (!ukraineID) {\n     throw new Error('Country with code UKR not found');\n }\n\n// CSV columns: code,regionType,name,fullName\n// we map:\n//  - parentAdminUnitID to id of Ukraine (constant)\n//  - regionTypeID fo function what lookup region ID using region code from CSV file\ncsvLoader.loadSimpleCSVData(conn, __dirname + '/cdn_region_ukraine.csv', 'cdn_region',\n   ['parentAdminUnitID', 'code', 'regionTypeID', 'name', 'caption', 'fullName'],\n   [\n       function(){return ukraineID;},\n       0,\n       function(row){\n           var regionType;\n           regionType = conn.lookup('cdn_regiontype', 'ID', {expression: 'code', condition: 'equal', values: {code: row[1]}});\n           if (!regionType){\n               throw new Error('Unknown region type ' + row[1]);\n           }\n           return regionType;\n       },\n       2, 2, 3\n   ],\n   1, ','\n)"
    ],
    "kind": "module",
    "name": "dataLoader",
    "memberof": "module:@unitybase/base",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/base.module:dataLoader",
    "___id": "T000002R000560",
    "___s": true
  },
  {
    "comment": "/**\n * Load data from a array (rows) of array (columns data).\n * @param {SyncConnection} conn Connection to UnityBase server\n * @param {Array} dataArray - array to load\n * @param {String} entityName Entity code to load data into\n * @param {Array<string>} ettAttributes Array of attribute codes\n * @param {Array<Number|Object|Function>} [mapping] Mapping of CSV file columns to attributes. Can be one of:\n *   - numeric (zero based) index of column is CSV file\n *   - lookup configuration\n *   - function (currentRowAsArray, newRecordID) what take a array representing current row in CSV file & new RecordID on input and return a attribute value to be inserted\n *\n *   If argument is not passed, it defaults to all ettAttributes passed \"as is\".\n *\n * @param {Number} [transLen=1000] Maximum rows count to be inserted on the single database transaction\n */",
    "meta": {
      "range": [
        4591,
        6136
      ],
      "filename": "dataLoader.js",
      "lineno": 116,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100006419",
        "name": "loadArrayData",
        "type": "FunctionDeclaration",
        "paramnames": [
          "conn",
          "dataArray",
          "entityName",
          "ettAttributes",
          "mapping",
          "transLen"
        ]
      },
      "vars": {
        "attrCnt": "module:@unitybase/base.module:dataLoader~loadArrayData~attrCnt",
        "curTransCnt": "module:@unitybase/base.module:dataLoader~curTransCnt",
        "cmdArray": "module:@unitybase/base.module:dataLoader~cmdArray",
        "currentRecord": "module:@unitybase/base.module:dataLoader~currentRecord",
        "cmd": "module:@unitybase/base.module:dataLoader~cmd",
        "valToInsert": "module:@unitybase/base.module:dataLoader~valToInsert",
        "cmdIdx": "module:@unitybase/base.module:dataLoader~cmdIdx",
        "idList": "module:@unitybase/base.module:dataLoader~idList",
        "a": "module:@unitybase/base.module:dataLoader~a",
        "curMapObj": "module:@unitybase/base.module:dataLoader~curMapObj",
        "dataLength": "module:@unitybase/base.module:dataLoader~loadArrayData~dataLength",
        "transLen": "module:@unitybase/base.module:dataLoader~transLen",
        "mapping": "module:@unitybase/base.module:dataLoader~mapping",
        "": null,
        "i": "module:@unitybase/base.module:dataLoader~loadArrayData~i",
        "cmd.execParams[undefined]": "module:@unitybase/base.module:dataLoader~cmd.execParams[undefined]"
      }
    },
    "description": "Load data from a array (rows) of array (columns data).",
    "params": [
      {
        "type": {
          "names": [
            "SyncConnection"
          ]
        },
        "description": "Connection to UnityBase server",
        "name": "conn"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "description": "array to load",
        "name": "dataArray"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Entity code to load data into",
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Array of attribute codes",
        "name": "ettAttributes"
      },
      {
        "type": {
          "names": [
            "Array.<(Number|Object|function())>"
          ]
        },
        "optional": true,
        "description": "<p>Mapping of CSV file columns to attributes. Can be one of:</p>\n<ul>\n<li>numeric (zero based) index of column is CSV file</li>\n<li>lookup configuration</li>\n<li><p>function (currentRowAsArray, newRecordID) what take a array representing current row in CSV file &amp; new RecordID on input and return a attribute value to be inserted</p>\n<p>If argument is not passed, it defaults to all ettAttributes passed &quot;as is&quot;.</p>\n</li>\n</ul>",
        "name": "mapping"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 1000,
        "description": "Maximum rows count to be inserted on the single database transaction",
        "name": "transLen"
      }
    ],
    "name": "loadArrayData",
    "longname": "module:@unitybase/base.module:dataLoader~loadArrayData",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:dataLoader",
    "___id": "T000002R000574",
    "___s": true
  },
  {
    "comment": "/**\n * Load data from CSV with delimiter (\";\" by default)\n * @param {SyncConnection} conn Connection to UnityBase server\n * @param {String} fileName Full path to file\n * @param {String} entityName Entity code to load data into\n * @param {Array<string>} ettAttributes Array of attribute codes\n * @param {Array<Number|Object|Function>} [mapping] Mapping of CSV file columns to attributes. Can be one of:\n *   - either numeric (zero based) index of column is CSV file\n *   - or lookup configuration\n *   - or function what take a array representing current row in CSW file on input and return a attribute value to bi inserted\n *\n *   If argument is not passed, it defaults to all ettAttributes passed \"as is\".\n *\n * @param {Number} [startRow=0] Start from this CSV file row\n * @param {String} [delimiter=';'] CSV file delimiter\n * @param {Number} [transLen=1000] Maximum rows count to be inserted on the single database transaction\n */",
    "meta": {
      "range": [
        2745,
        3734
      ],
      "filename": "dataLoader.js",
      "lineno": 78,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100006271",
        "name": "loadSimpleCSVData",
        "type": "FunctionDeclaration",
        "paramnames": [
          "conn",
          "fileName",
          "entityName",
          "ettAttributes",
          "mapping",
          "startRow",
          "delimiter",
          "transLen"
        ]
      },
      "vars": {
        "mapping": "module:@unitybase/base.module:dataLoader~mapping",
        "": null,
        "delimiter": "module:@unitybase/base.module:dataLoader~delimiter",
        "transLen": "module:@unitybase/base.module:dataLoader~transLen",
        "startRow": "module:@unitybase/base.module:dataLoader~startRow",
        "fContent": "module:@unitybase/base.module:dataLoader~fContent",
        "csvData": "module:@unitybase/base.module:dataLoader~loadSimpleCSVData~csvData"
      }
    },
    "description": "Load data from CSV with delimiter (&quot;;&quot; by default)",
    "params": [
      {
        "type": {
          "names": [
            "SyncConnection"
          ]
        },
        "description": "Connection to UnityBase server",
        "name": "conn"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Full path to file",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Entity code to load data into",
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Array of attribute codes",
        "name": "ettAttributes"
      },
      {
        "type": {
          "names": [
            "Array.<(Number|Object|function())>"
          ]
        },
        "optional": true,
        "description": "<p>Mapping of CSV file columns to attributes. Can be one of:</p>\n<ul>\n<li>either numeric (zero based) index of column is CSV file</li>\n<li>or lookup configuration</li>\n<li><p>or function what take a array representing current row in CSW file on input and return a attribute value to bi inserted</p>\n<p>If argument is not passed, it defaults to all ettAttributes passed &quot;as is&quot;.</p>\n</li>\n</ul>",
        "name": "mapping"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Start from this CSV file row",
        "name": "startRow"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "';'",
        "description": "CSV file delimiter",
        "name": "delimiter"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 1000,
        "description": "Maximum rows count to be inserted on the single database transaction",
        "name": "transLen"
      }
    ],
    "name": "loadSimpleCSVData",
    "longname": "module:@unitybase/base.module:dataLoader~loadSimpleCSVData",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:dataLoader",
    "___id": "T000002R000566",
    "___s": true
  },
  {
    "comment": "/**\n * Perform localization of entities data based on config & locale. See *.js in models `_initialData/locale` folder for usage samples.\n * @example\n const loader = require('@unitybase/base').dataLoader\n let localizationConfig = {\n    entity: 'ubm_enum',\n    keyAttribute: 'eGroup;code',\n    localization: [\n      {keyValue: 'UBS_MESSAGE_TYPE;user',  execParams: {name: 'Користувачів'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;system',  execParams: {name: 'Система'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;warning',  execParams: {name: 'Попереждення'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;information',  execParams: {name: 'Інформація'}}\n    ]\n }\n loader.localizeEntity(session, localizationConfig, __filename)\n\n * @param {ServerSession} session\n * @param {Object} config\n * @param {String} config.entity Entity to localize\n * @param {String} config.keyAttribute Unique key attribute (language independent) we search row for localize. If the key is a component that values should be separated by a \";\"\n * @param {Array.<Object>} config.localization Array of object {keyValue: valueOfKeyAttribute}, execParams: {attrToLocalize1: 'localized value', ...}} If config.keyAttribute is complex, key value must be a ; separated string\n * @param {String} locale Locale to localize to. Either locale file name (contain file start with locale^ (uk^my_data.js)) or locale (\"uk\")\n */",
    "meta": {
      "range": [
        7504,
        9119
      ],
      "filename": "dataLoader.js",
      "lineno": 178,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100006671",
        "name": "localizeEntity",
        "type": "FunctionDeclaration",
        "paramnames": [
          "session",
          "config",
          "locale"
        ]
      },
      "vars": {
        "command": "module:@unitybase/base.module:dataLoader~localizeEntity~command",
        "conn": "module:@unitybase/base.module:dataLoader~localizeEntity~conn",
        "defaultLang": "module:@unitybase/base.module:dataLoader~localizeEntity~defaultLang",
        "lang": "module:@unitybase/base.module:dataLoader~localizeEntity~lang",
        "keys": "module:@unitybase/base.module:dataLoader~localizeEntity~keys",
        "isMultyKey": "module:@unitybase/base.module:dataLoader~localizeEntity~isMultyKey",
        "idValue": "module:@unitybase/base.module:dataLoader~localizeEntity~idValue",
        "": null
      }
    },
    "description": "Perform localization of entities data based on config &amp; locale. See *.js in models <code>_initialData/locale</code> folder for usage samples.",
    "examples": [
      "const loader = require('@unitybase/base').dataLoader\n let localizationConfig = {\n    entity: 'ubm_enum',\n    keyAttribute: 'eGroup;code',\n    localization: [\n      {keyValue: 'UBS_MESSAGE_TYPE;user',  execParams: {name: 'Користувачів'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;system',  execParams: {name: 'Система'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;warning',  execParams: {name: 'Попереждення'}},\n      {keyValue: 'UBS_MESSAGE_TYPE;information',  execParams: {name: 'Інформація'}}\n    ]\n }\n loader.localizeEntity(session, localizationConfig, __filename)"
    ],
    "params": [
      {
        "type": {
          "names": [
            "ServerSession"
          ]
        },
        "name": "session"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Entity to localize",
        "name": "config.entity"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Unique key attribute (language independent) we search row for localize. If the key is a component that values should be separated by a &quot;;&quot;",
        "name": "config.keyAttribute"
      },
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "Array of object {keyValue: valueOfKeyAttribute}, execParams: {attrToLocalize1: 'localized value', ...}} If config.keyAttribute is complex, key value must be a ; separated string",
        "name": "config.localization"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Locale to localize to. Either locale file name (contain file start with locale^ (uk^my_data.js)) or locale (&quot;uk&quot;)",
        "name": "locale"
      }
    ],
    "name": "localizeEntity",
    "longname": "module:@unitybase/base.module:dataLoader~localizeEntity",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:dataLoader",
    "___id": "T000002R000610",
    "___s": true
  },
  {
    "comment": "/**\n * A helper for dataLoader.  Resolves code to ID.\n * Supports combined keys, in that case, both \"attributeName\" and \"colIndex\" parameters shall be arrays.\n *\n * @example\n\n  loader.loadArrayData(\n    conn,\n    [\n      ['employee1@example.com', 'users'],\n      ['employee2@example.com', 'users'],\n      ['manager1@example.com', 'users'],\n      ['manager2@example.com', 'users']\n    ],\n    'uba_userrole',\n    ['userID', 'roleID'],\n    [\n      lookup(conn, 'uba_user', 'name', 0),\n      lookup(conn, 'uba_role', 'name', 1)\n    ],\n    1000\n  )\n\n * @param {SyncConnection} conn\n * @param {string} entityName\n * @param {string|Array<string>} attributeName  Attribute name or array of names\n * @param {number|Array<number>} colIndex      Column index or indexes\n * @param {boolean} [doNotUseCache] Option to skip using cache on lookup.  Use, when entity refer itself and next rows may use previous.\n * @returns {Function}\n */",
    "meta": {
      "range": [
        10044,
        11233
      ],
      "filename": "dataLoader.js",
      "lineno": 263,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100006924",
        "name": "lookup",
        "type": "FunctionDeclaration",
        "paramnames": [
          "conn",
          "entityName",
          "attributeName",
          "colIndex",
          "doNotUseCache"
        ]
      },
      "vars": {
        "doLookup": "module:@unitybase/base.module:dataLoader~lookup~doLookup"
      }
    },
    "description": "A helper for dataLoader.  Resolves code to ID.\nSupports combined keys, in that case, both &quot;attributeName&quot; and &quot;colIndex&quot; parameters shall be arrays.",
    "examples": [
      "loader.loadArrayData(\n    conn,\n    [\n      ['employee1@example.com', 'users'],\n      ['employee2@example.com', 'users'],\n      ['manager1@example.com', 'users'],\n      ['manager2@example.com', 'users']\n    ],\n    'uba_userrole',\n    ['userID', 'roleID'],\n    [\n      lookup(conn, 'uba_user', 'name', 0),\n      lookup(conn, 'uba_role', 'name', 1)\n    ],\n    1000\n  )"
    ],
    "params": [
      {
        "type": {
          "names": [
            "SyncConnection"
          ]
        },
        "name": "conn"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "description": "Attribute name or array of names",
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "number",
            "Array.<number>"
          ]
        },
        "description": "Column index or indexes",
        "name": "colIndex"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Option to skip using cache on lookup.  Use, when entity refer itself and next rows may use previous.",
        "name": "doNotUseCache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "name": "lookup",
    "longname": "module:@unitybase/base.module:dataLoader~lookup",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:dataLoader",
    "___id": "T000002R000638",
    "___s": true
  },
  {
    "comment": "/**\n  * A function which lookup a value for dataLoader.\n  * @param {SyncConnection} conn\n  * @param {string} entityName\n  * @param {string|Array<string>} attributeName  Attribute name or array of names\n  * @param {number|Array<number>} colIndex      Column index or indexes\n  * @param {Array<Array>} row\n  * @returns {number|null}\n  */",
    "meta": {
      "range": [
        10461,
        11158
      ],
      "filename": "dataLoader.js",
      "lineno": 273,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100006932",
        "name": "doLookup",
        "type": "FunctionDeclaration",
        "paramnames": [
          "conn",
          "entityName",
          "attributeName",
          "colIndex",
          "row"
        ]
      },
      "vars": {
        "buildWhereList": "module:@unitybase/base.module:dataLoader~lookup~doLookup~buildWhereList",
        "isMultiKeys": "module:@unitybase/base.module:dataLoader~lookup~doLookup~isMultiKeys",
        "": null,
        "whereList": "module:@unitybase/base.module:dataLoader~lookup~doLookup~whereList"
      }
    },
    "description": "A function which lookup a value for dataLoader.",
    "params": [
      {
        "type": {
          "names": [
            "SyncConnection"
          ]
        },
        "name": "conn"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "description": "Attribute name or array of names",
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "number",
            "Array.<number>"
          ]
        },
        "description": "Column index or indexes",
        "name": "colIndex"
      },
      {
        "type": {
          "names": [
            "Array.<Array>"
          ]
        },
        "name": "row"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number",
            "null"
          ]
        }
      }
    ],
    "name": "doLookup",
    "longname": "module:@unitybase/base.module:dataLoader~lookup~doLookup",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:dataLoader~lookup",
    "scope": "inner",
    "___id": "T000002R000639",
    "___s": true
  },
  {
    "comment": "/**\n * UnityBase file-system based virtual store **select**. Able to load files & transform it content to {@link TubCachedData} format.\n *\n * Good sample of usage can be found in `ubm_form.loadAllForm`\n *\n * For work with data, loaded by FileBasedStoreLoader you can use {@link LocalDataStore} class.\n * @module FileBasedStoreLoader\n * @memberOf module:@unitybase/base\n */",
    "meta": {
      "filename": "FileBasedStoreLoader.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "UnityBase file-system based virtual store <strong>select</strong>. Able to load files &amp; transform it content to {@link TubCachedData} format.</p>\n<p>Good sample of usage can be found in <code>ubm_form.loadAllForm</code></p>\n<p>For work with data, loaded by FileBasedStoreLoader you can use {@link LocalDataStore} class.",
    "kind": "module",
    "name": "FileBasedStoreLoader",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader",
    "___id": "T000002R000007",
    "___s": true
  },
  {
    "comment": "/**\n * @example\n\nconst FileBasedStoreLoader = require('@unitybase/base').FileBasedStoreLoader\nlet loader = new FileBasedStoreLoader({\n  entity: me.entity,\n  foldersConfig: folders,\n  fileMask: /-fm\\.def$/,\n  onBeforeRowAdd: postProcessing\n})\nlet resultDataCache = loader.load()\n\n * @class\n * @param {Object}    config\n * @param {TubEntity|UBEntity} config.entity\n * @param {Array.<{path: string}>} config.foldersConfig   Array of folder configuration to scan for files.\n *                                              Necessary param is path - path to folder. You can also pass additional information\n *                                              for use in  `onBeforeRowAdd` and `onNewFolder` callbacks.\n *                                              Currently processed root folder accessible from FileBasedStoreLoader.processingRootFolder\n * @param {Boolean}   config.zipToArray     Transform result from array of object to array-of-array representation. Default true\n * @param {Boolean}   config.uniqueID       Result data must contain ID attribute and values must be unique. Default true.\n * @param {RegExp}    [config.fileMask]     Regular expression to filter folder files. Each fileName (without path) will be tested by this regExp\n * @param {String}    [config.attributeRegExpString] String representation of regular expression to found attribute and it value in input content.\n *                                                   Default is '^\\\\/\\\\/@(\\\\w+)\\\\s\"(.*?)\"' what mean find all string like: //@attribute \"value\"\n *                                                   You can pass empty string to disable attribute parsing by regExp and do it manually in `onBeforeRowAdd` handler.\n * @param {Function}  [config.onBeforeRowAdd] Callback called for each row BEFORE it added to store. In case it return false row not added.\n *                          Called with args (this: FileBasedStoreLoader, fullFilePath: string, fileContent: string, oneRow: Object);\n * @param {Function}  [config.onNewFolder] Callback called for each new folder in case of recursive folder.\n *                          In case callback return false or not defined - folder not processed.\n *                          Called with args (this: FileBasedStoreLoader, fullFolderPath: string, recursionLevel: integer);\n */",
    "meta": {
      "range": [
        2916,
        4631
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 49,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000038",
        "name": "FileBasedStoreLoader",
        "type": "FunctionDeclaration",
        "paramnames": [
          "config"
        ]
      },
      "vars": {
        "entityAttributes": "module:@unitybase/base.module:FileBasedStoreLoader~entityAttributes",
        "this.config": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#config",
        "this.config.attributeRegExpString": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#config.attributeRegExpString",
        "this.config.uniqueID": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#config.uniqueID",
        "this.config.zipToArray": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#config.zipToArray",
        "this.attributes": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#attributes",
        "attrName": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader~attrName",
        "attr": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader~attr",
        "this.haveModifyDate": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#haveModifyDate",
        "": null,
        "this.haveCreateDate": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#haveCreateDate",
        "this.processingRootFolder": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#processingRootFolder"
      }
    },
    "examples": [
      "const FileBasedStoreLoader = require('@unitybase/base').FileBasedStoreLoader\nlet loader = new FileBasedStoreLoader({\n  entity: me.entity,\n  foldersConfig: folders,\n  fileMask: /-fm\\.def$/,\n  onBeforeRowAdd: postProcessing\n})\nlet resultDataCache = loader.load()"
    ],
    "kind": "class",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "TubEntity",
            "UBEntity"
          ]
        },
        "name": "config.entity"
      },
      {
        "type": {
          "names": [
            "Array.<{path: string}>"
          ]
        },
        "description": "Array of folder configuration to scan for files.\n                                             Necessary param is path - path to folder. You can also pass additional information\n                                             for use in  <code>onBeforeRowAdd</code> and <code>onNewFolder</code> callbacks.\n                                             Currently processed root folder accessible from FileBasedStoreLoader.processingRootFolder",
        "name": "config.foldersConfig"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "Transform result from array of object to array-of-array representation. Default true",
        "name": "config.zipToArray"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "Result data must contain ID attribute and values must be unique. Default true.",
        "name": "config.uniqueID"
      },
      {
        "type": {
          "names": [
            "RegExp"
          ]
        },
        "optional": true,
        "description": "Regular expression to filter folder files. Each fileName (without path) will be tested by this regExp",
        "name": "config.fileMask"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "String representation of regular expression to found attribute and it value in input content.\n                                                  Default is '^\\/\\/@(\\w+)\\s&quot;(.*?)&quot;' what mean find all string like: //@attribute &quot;value&quot;\n                                                  You can pass empty string to disable attribute parsing by regExp and do it manually in <code>onBeforeRowAdd</code> handler.",
        "name": "config.attributeRegExpString"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Callback called for each row BEFORE it added to store. In case it return false row not added.\n                         Called with args (this: FileBasedStoreLoader, fullFilePath: string, fileContent: string, oneRow: Object);",
        "name": "config.onBeforeRowAdd"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "Callback called for each new folder in case of recursive folder.\n                         In case callback return false or not defined - folder not processed.\n                         Called with args (this: FileBasedStoreLoader, fullFolderPath: string, recursionLevel: integer);",
        "name": "config.onNewFolder"
      }
    ],
    "name": "FileBasedStoreLoader",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader",
    "___id": "T000002R000009",
    "___s": true
  },
  {
    "comment": "/**\n   * Entity attributes array\n   * @type {Array.<Object>}\n   * @readonly\n   */",
    "meta": {
      "range": [
        3774,
        3794
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 77,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000161",
        "name": "this.attributes",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Entity attributes array",
    "type": {
      "names": [
        "Array.<Object>"
      ]
    },
    "readonly": true,
    "name": "attributes",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#attributes",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000017",
    "___s": true
  },
  {
    "comment": "/**\n   * Configuration\n   * @type {Object}\n   */",
    "meta": {
      "range": [
        3222,
        3251
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 61,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000080",
        "name": "this.config",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Configuration",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "config",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#config",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000013",
    "___s": true
  },
  {
    "comment": "/**\n   * Is `mStore.simpleAudit` enabled for current entity (exist `mi_createDate` attribute)\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4421,
        4514
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 98,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000224",
        "name": "this.haveCreateDate",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Is <code>mStore.simpleAudit</code> enabled for current entity (exist <code>mi_createDate</code> attribute)",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "haveCreateDate",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#haveCreateDate",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000025",
    "___s": true
  },
  {
    "comment": "/**\n   * Is `mStore.simpleAudit` enabled for current entity (exist `mi_modifyDate` attribute)\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4187,
        4280
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 92,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000203",
        "name": "this.haveModifyDate",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Is <code>mStore.simpleAudit</code> enabled for current entity (exist <code>mi_modifyDate</code> attribute)",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "haveModifyDate",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#haveModifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000024",
    "___s": true
  },
  {
    "comment": "/**\n * Perform actual loading.\n * @return {TubCachedData}\n */",
    "meta": {
      "range": [
        4849,
        6488
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000263",
        "name": "FileBasedStoreLoader.prototype.load",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "me": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#load~me",
        "result": "module:@unitybase/base.module:FileBasedStoreLoader~result",
        "this.resultCollection": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#resultCollection",
        "": null,
        "result.fields": "module:@unitybase/base.module:FileBasedStoreLoader~result.fields",
        "result.data": "module:@unitybase/base.module:FileBasedStoreLoader~result.data",
        "result.rowCount": "module:@unitybase/base.module:FileBasedStoreLoader~result.rowCount",
        "l": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#load~l",
        "dataVersion": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#load~dataVersion",
        "result.version": "module:@unitybase/base.module:FileBasedStoreLoader~result.version",
        "me.resultCollection": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#load~me.resultCollection"
      }
    },
    "description": "Perform actual loading.",
    "returns": [
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        }
      }
    ],
    "name": "load",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#load",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000029",
    "___s": true
  },
  {
    "comment": "/**\n   * Currently processed root folder\n   * @type {*}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4597,
        4629
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 105,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000245",
        "name": "this.processingRootFolder",
        "type": "Literal",
        "value": null,
        "paramnames": []
      }
    },
    "description": "Currently processed root folder",
    "type": {
      "names": [
        "*"
      ]
    },
    "readonly": true,
    "name": "processingRootFolder",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#processingRootFolder",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000026",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of Object representing dirty result\n   * @type {Array.<Object>}\n   * @protected\n   */",
    "meta": {
      "range": [
        5036,
        5062
      ],
      "filename": "FileBasedStoreLoader.js",
      "lineno": 124,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100000279",
        "name": "this.resultCollection",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Array of Object representing dirty result",
    "type": {
      "names": [
        "Array.<Object>"
      ]
    },
    "access": "protected",
    "name": "resultCollection",
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader#resultCollection",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader~FileBasedStoreLoader",
    "scope": "instance",
    "___id": "T000002R000032",
    "___s": true
  },
  {
    "comment": "/**\n * @method parseFolder\n * @protected\n * @param {String} folderPath Folder to parse\n * @param {Number} recursionLevel current level of folder recursion\n */",
    "meta": {
      "filename": "FileBasedStoreLoader.js",
      "lineno": 167,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "kind": "function",
    "name": "parseFolder",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Folder to parse",
        "name": "folderPath"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "current level of folder recursion",
        "name": "recursionLevel"
      }
    ],
    "longname": "module:@unitybase/base.module:FileBasedStoreLoader~parseFolder",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:FileBasedStoreLoader",
    "___id": "T000002R000049",
    "___s": true
  },
  {
    "comment": "/**\n * Parse a command line options & environment variables and create a configuration object.\n *\n * @example\n * const cmdLineOpt = require('@unitybase/base').options\n * const argv = require('@unitybase/base').argv\n *\n * let paramsDescription = cmdLineOpt.describe('cmd/generateDDL',\n *  'Check database structure for application domain. ' +\n *  'Generate DDL (both create and alter) if need and optionally run it'\n * ).add(\n *    argv.establishConnectionFromCmdLineAttributes._cmdLineParams\n * ).add({\n *   short: 'm',  long: 'models', param: 'modelsList', defaultValue: '*',\n *   help: 'Comma separated model names for DDL generation. If -e specified this options is ignored'\n * }).add({\n *   short: 'e',  long: 'entities', param: 'entitiesList', defaultValue: '*',\n *   help: 'Comma separated entity names list for DDL generation'\n * }).add({\n *   short: 'out',  long: 'out', param: 'outputPath', defaultValue: process.cwd(),\n *   help: 'Folder to output generated DDLs (one file per connection)'\n * }).add({\n *   short: 'autorun',  long: 'autorun', defaultValue: false,\n *   help: 'execute DDL statement after generation. BE CAREFUL! DO NOT USE ON PRODUCTION'\n * })\n * let passedOptions = paramsDescription.parseVerbose({}, true)\n\n * @module options\n * @memberOf module:@unitybase/base\n * @author pavel.mash\n */",
    "meta": {
      "filename": "options.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "Parse a command line options &amp; environment variables and create a configuration object.",
    "examples": [
      "const cmdLineOpt = require('@unitybase/base').options\nconst argv = require('@unitybase/base').argv\n\nlet paramsDescription = cmdLineOpt.describe('cmd/generateDDL',\n 'Check database structure for application domain. ' +\n 'Generate DDL (both create and alter) if need and optionally run it'\n).add(\n   argv.establishConnectionFromCmdLineAttributes._cmdLineParams\n).add({\n  short: 'm',  long: 'models', param: 'modelsList', defaultValue: '*',\n  help: 'Comma separated model names for DDL generation. If -e specified this options is ignored'\n}).add({\n  short: 'e',  long: 'entities', param: 'entitiesList', defaultValue: '*',\n  help: 'Comma separated entity names list for DDL generation'\n}).add({\n  short: 'out',  long: 'out', param: 'outputPath', defaultValue: process.cwd(),\n  help: 'Folder to output generated DDLs (one file per connection)'\n}).add({\n  short: 'autorun',  long: 'autorun', defaultValue: false,\n  help: 'execute DDL statement after generation. BE CAREFUL! DO NOT USE ON PRODUCTION'\n})\nlet passedOptions = paramsDescription.parseVerbose({}, true)"
    ],
    "kind": "module",
    "name": "options",
    "memberof": "module:@unitybase/base",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/base.module:options",
    "___id": "T000002R000643",
    "___s": true
  },
  {
    "comment": "/**\n * Create a new options definition.\n * @example\n\n const cmdLineOpt = require('cmd/options')\n let paramsDescription = cmdLineOpt.describe('cmd/createStore',\n 'Create internal store structure (folders) for specifies FileSystem store'\n ).add({\n   short: 'cfg',  long: 'cfg', param: 'serverConfig', defaultValue: 'ubConfig.json',\n   help: 'Server config'\n }).add({\n   short: 'store',  long: 'store', param: 'storesList', defaultValue: '*',\n   help: 'Comma separated blob stores list'\n })\n let options = paramsDescription.parseVerbose({}, true);\n\n * @param {String} commandName Name of a command then executed from a command line\n * @param {String} [commandDescription] Command description for help (-help switch)\n * @param {String} [cli] Command line interpretator\n * @return {Options}\n */",
    "meta": {
      "range": [
        8086,
        8241
      ],
      "filename": "options.js",
      "lineno": 218,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007713",
        "name": "exports.describe",
        "type": "FunctionExpression",
        "value": "describe",
        "paramnames": [
          "commandName",
          "commandDescription",
          "cli"
        ]
      }
    },
    "description": "Create a new options definition.",
    "examples": [
      "const cmdLineOpt = require('cmd/options')\n let paramsDescription = cmdLineOpt.describe('cmd/createStore',\n 'Create internal store structure (folders) for specifies FileSystem store'\n ).add({\n   short: 'cfg',  long: 'cfg', param: 'serverConfig', defaultValue: 'ubConfig.json',\n   help: 'Server config'\n }).add({\n   short: 'store',  long: 'store', param: 'storesList', defaultValue: '*',\n   help: 'Comma separated blob stores list'\n })\n let options = paramsDescription.parseVerbose({}, true);"
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Name of a command then executed from a command line",
        "name": "commandName"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Command description for help (-help switch)",
        "name": "commandDescription"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Command line interpretator",
        "name": "cli"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Options"
          ]
        }
      }
    ],
    "name": "describe",
    "longname": "module:@unitybase/base.module:options.describe",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options",
    "scope": "static",
    "___id": "T000002R000684",
    "___s": true
  },
  {
    "comment": "/**\n * Determines whether a switchName was passed as a command-line argument to the application\n * Switch may be specified in the following ways on the command line:\n *      -switchName\n *      or\n *      /switchName\n * @param {string} switchName\n * @returns {Number} switch index if found or -1 otherwise\n */",
    "meta": {
      "range": [
        8553,
        8732
      ],
      "filename": "options.js",
      "lineno": 231,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007736",
        "name": "exports.switchIndex",
        "type": "FunctionExpression",
        "value": "switchIndex",
        "paramnames": [
          "switchName"
        ]
      },
      "vars": {
        "res": "module:@unitybase/base.module:options.switchIndex~res"
      }
    },
    "description": "Determines whether a switchName was passed as a command-line argument to the application\nSwitch may be specified in the following ways on the command line:\n     -switchName\n     or\n     /switchName",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "switchName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>switch index if found or -1 otherwise</p>"
      }
    ],
    "name": "switchIndex",
    "longname": "module:@unitybase/base.module:options.switchIndex",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options",
    "scope": "static",
    "___id": "T000002R000685",
    "___s": true
  },
  {
    "comment": "/**\n * Determines whether a switchName was passed as a command-line argument to the application and have VALUE\n * Switch values may be specified in the following ways on the command line:\n *      -switchName Value\n *      or\n *      /switchName Value\n * @param {string} switchName\n * @returns {String|undefined} switch value or `undefined` in case switch not found or switch not have value\n */",
    "meta": {
      "range": [
        9167,
        9396
      ],
      "filename": "options.js",
      "lineno": 245,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007779",
        "name": "exports.switchValue",
        "type": "FunctionExpression",
        "value": "switchValue",
        "paramnames": [
          "switchName"
        ]
      },
      "vars": {
        "idx": "module:@unitybase/base.module:options.switchValue~idx",
        "val": "module:@unitybase/base.module:options~val"
      }
    },
    "description": "Determines whether a switchName was passed as a command-line argument to the application and have VALUE\nSwitch values may be specified in the following ways on the command line:\n     -switchName Value\n     or\n     /switchName Value",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "switchName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "undefined"
          ]
        },
        "description": "<p>switch value or <code>undefined</code> in case switch not found or switch not have value</p>"
      }
    ],
    "name": "switchValue",
    "longname": "module:@unitybase/base.module:options.switchValue",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options",
    "scope": "static",
    "___id": "T000002R000688",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {Object} Option\n * @property {String} short - a short option name\n * @property {String} long - a long option name. This name are used in `parse` result\n * @property {String} [param] - if parameter has a value - help string for a parameter name `-short param`\n * @property {*} [defaultValue] - a default value for a property. For a string properties what allow empty value set it to `*`\n * @property {Boolean} [searchInEnv=false] - if property do not passed as a cmd line switch then\n *    perform search of `UB_`+long.toUpperCase() in environment variables\n * @property {String} help - a help string for a `usage()` call\n */",
    "meta": {
      "filename": "options.js",
      "lineno": 50,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "kind": "typedef",
    "name": "Option",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>a short option name</p>",
        "name": "short"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>a long option name. This name are used in <code>parse</code> result</p>",
        "name": "long"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "<p>if parameter has a value - help string for a parameter name <code>-short param</code></p>",
        "name": "param"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>a default value for a property. For a string properties what allow empty value set it to <code>*</code></p>",
        "name": "defaultValue"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>if property do not passed as a cmd line switch then\n   perform search of <code>UB_</code>+long.toUpperCase() in environment variables</p>",
        "name": "searchInEnv"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>a help string for a <code>usage()</code> call</p>",
        "name": "help"
      }
    ],
    "longname": "module:@unitybase/base.module:options~Option",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:options",
    "___id": "T000002R000649",
    "___s": true
  },
  {
    "comment": "/**\n * Internal class for parsing command line options. Created by {@link options#describe options.describe} method\n * @class\n * @access package\n * @param {string} commandName\n * @param {string} commandDescription\n * @param {String} [cli='ub'] An executable used to execute a command `commandName`. For example: `ubcli`\n * @constructor\n */",
    "meta": {
      "range": [
        1790,
        1978
      ],
      "filename": "options.js",
      "lineno": 43,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007040",
        "name": "Options",
        "type": "FunctionDeclaration",
        "paramnames": [
          "commandName",
          "commandDescription",
          "cli"
        ]
      },
      "vars": {
        "this.commandName": "module:@unitybase/base.module:options~Options#commandName",
        "this.commandDescription": "module:@unitybase/base.module:options~Options#commandDescription",
        "this.cli": "module:@unitybase/base.module:options~Options#cli",
        "this.options": "module:@unitybase/base.module:options~Options#options"
      }
    },
    "description": "Internal class for parsing command line options. Created by {@link options#describe options.describe} method",
    "kind": "class",
    "access": "package",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "commandName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "commandDescription"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'ub'",
        "description": "An executable used to execute a command <code>commandName</code>. For example: <code>ubcli</code>",
        "name": "cli"
      }
    ],
    "name": "Options",
    "longname": "module:@unitybase/base.module:options~Options",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:options",
    "___id": "T000002R000644",
    "___s": true
  },
  {
    "comment": "/**\n * Add a option(s) definition.\n * @param {Option|Array.<Option>} otherOptions\n * @return {Options}\n */",
    "meta": {
      "range": [
        2728,
        2938
      ],
      "filename": "options.js",
      "lineno": 65,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007075",
        "name": "Options.prototype.add",
        "type": "FunctionExpression",
        "value": "add",
        "paramnames": [
          "otherOptions"
        ]
      },
      "vars": {
        "this.options": "module:@unitybase/base.module:options~Options#options"
      }
    },
    "description": "Add a option(s) definition.",
    "params": [
      {
        "type": {
          "names": [
            "Option",
            "Array.<Option>"
          ]
        },
        "name": "otherOptions"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Options"
          ]
        }
      }
    ],
    "name": "add",
    "longname": "module:@unitybase/base.module:options~Options#add",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options~Options",
    "scope": "instance",
    "___id": "T000002R000650",
    "___s": true
  },
  {
    "comment": "/**\n *\n * Parse a command line & env variables for a options and create a configuration object.\n * Return `undefined` in case options is not valid or a object with keys - options.long & values\n * @param {Object} [defaults] Override for a command line attributes. If any - this one will be used\n * @param {Array} [errors] If passed will bw filled by a errors in passed parameters\n */",
    "meta": {
      "range": [
        3323,
        4867
      ],
      "filename": "options.js",
      "lineno": 81,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007116",
        "name": "Options.prototype.parse",
        "type": "FunctionExpression",
        "value": "parse",
        "paramnames": [
          "defaults",
          "errors"
        ]
      },
      "vars": {
        "result": "module:@unitybase/base.module:options~Options#parse~result",
        "valid": "module:@unitybase/base.module:options~Options#parse~valid",
        "": null
      }
    },
    "description": "Parse a command line &amp; env variables for a options and create a configuration object.\nReturn <code>undefined</code> in case options is not valid or a object with keys - options.long &amp; values",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Override for a command line attributes. If any - this one will be used",
        "name": "defaults"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "If passed will bw filled by a errors in passed parameters",
        "name": "errors"
      }
    ],
    "name": "parse",
    "longname": "module:@unitybase/base.module:options~Options#parse",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options~Options",
    "scope": "instance",
    "___id": "T000002R000652",
    "___s": true
  },
  {
    "comment": "/**\n * In case `-help` or '-?' command line switch found or passed options not match a options set\n * will output a usage help to console and return `undefined`, else - return a parsed options\n *\n * @param {Object} [defaults] - Override passed parameter values by this one\n * @param {Boolean} [outputParsed=false] output a parsed parameters to a log\n */",
    "meta": {
      "range": [
        5223,
        5806
      ],
      "filename": "options.js",
      "lineno": 131,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007339",
        "name": "Options.prototype.parseVerbose",
        "type": "FunctionExpression",
        "value": "parseVerbose",
        "paramnames": [
          "defaults",
          "outputParsed"
        ]
      },
      "vars": {
        "result": "module:@unitybase/base.module:options~result",
        "errors": "module:@unitybase/base.module:options~Options#parseVerbose~errors"
      }
    },
    "description": "In case <code>-help</code> or '-?' command line switch found or passed options not match a options set\nwill output a usage help to console and return <code>undefined</code>, else - return a parsed options",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Override passed parameter values by this one",
        "name": "defaults"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "output a parsed parameters to a log",
        "name": "outputParsed"
      }
    ],
    "name": "parseVerbose",
    "longname": "module:@unitybase/base.module:options~Options#parseVerbose",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options~Options",
    "scope": "instance",
    "___id": "T000002R000667",
    "___s": true
  },
  {
    "comment": "/**\n * Output a usage info to console\n */",
    "meta": {
      "range": [
        6148,
        7294
      ],
      "filename": "options.js",
      "lineno": 165,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007515",
        "name": "Options.prototype.usage",
        "type": "FunctionExpression",
        "value": "usage",
        "paramnames": []
      },
      "vars": {
        "PARAM_IDENT": "module:@unitybase/base.module:options~Options#usage~PARAM_IDENT",
        "envs": "module:@unitybase/base.module:options~Options#usage~envs",
        "res": "module:@unitybase/base.module:options~res",
        "": null
      }
    },
    "description": "Output a usage info to console",
    "name": "usage",
    "longname": "module:@unitybase/base.module:options~Options#usage",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:options~Options",
    "scope": "instance",
    "___id": "T000002R000675",
    "___s": true
  },
  {
    "comment": "/**\n * Constants for administrative security model\n * @author pavel.mash 15.09.2016\n * @module uba_common\n * @memberOf module:@unitybase/base\n */",
    "meta": {
      "filename": "uba_common.js",
      "lineno": 85,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "Constants for administrative security model",
    "author": [
      "pavel.mash 15.09.2016"
    ],
    "kind": "module",
    "name": "uba_common",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "longname": "module:@unitybase/base.module:uba_common",
    "___id": "T000002R000749",
    "___s": true
  },
  {
    "comment": "/** Name of Audit Trail entity */",
    "meta": {
      "range": [
        1845,
        1881
      ],
      "filename": "uba_common.js",
      "lineno": 98,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007999",
        "name": "AUDIT_TRAIL_ENTITY",
        "type": "Literal",
        "value": "uba_auditTrail"
      }
    },
    "description": "Name of Audit Trail entity",
    "name": "AUDIT_TRAIL_ENTITY",
    "longname": "module:@unitybase/base.module:uba_common.AUDIT_TRAIL_ENTITY",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000753",
    "___s": true
  },
  {
    "comment": "/**\n   * Do not allow assign of Everyone & Anonymous preudo-roles.\n   * Allow assign `admins` role only by `admins` member.\n   *\n   *\n   * @param {ubMethodParams} ctxt\n   */",
    "meta": {
      "range": [
        2391,
        3134
      ],
      "filename": "uba_common.js",
      "lineno": 116,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008013",
        "name": "denyBuildInRoleAssignmentAndAdminsOnlyForAdmins",
        "type": "FunctionExpression"
      },
      "vars": {
        "params": "module:@unitybase/base.module:uba_common.denyBuildInRoleAssignmentAndAdminsOnlyForAdmins~params",
        "role": "module:@unitybase/base.module:uba_common.denyBuildInRoleAssignmentAndAdminsOnlyForAdmins~role"
      }
    },
    "description": "Do not allow assign of Everyone &amp; Anonymous preudo-roles.\nAllow assign <code>admins</code> role only by <code>admins</code> member.",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "name": "denyBuildInRoleAssignmentAndAdminsOnlyForAdmins",
    "longname": "module:@unitybase/base.module:uba_common.denyBuildInRoleAssignmentAndAdminsOnlyForAdmins",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000755",
    "___s": true
  },
  {
    "comment": "/**\n   * Check logged in user have `admin` role\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        3350,
        3378
      ],
      "filename": "uba_common.js",
      "lineno": 142,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008123",
        "name": "haveAdminRole",
        "type": "Identifier",
        "value": "haveAdminRole"
      }
    },
    "description": "Check logged in user have <code>admin</code> role",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "haveAdminRole",
    "longname": "module:@unitybase/base.module:uba_common.haveAdminRole",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000759",
    "___s": true
  },
  {
    "comment": "/**\n   * Check logged in user is a superuser (either `admin` or `root`)\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        3242,
        3266
      ],
      "filename": "uba_common.js",
      "lineno": 137,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008121",
        "name": "isSuperUser",
        "type": "Identifier",
        "value": "isSuperUser"
      }
    },
    "description": "Check logged in user is a superuser (either <code>admin</code> or <code>root</code>)",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isSuperUser",
    "longname": "module:@unitybase/base.module:uba_common.isSuperUser",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000758",
    "___s": true
  },
  {
    "comment": "/** Build-in roles */",
    "meta": {
      "range": [
        1793,
        1805
      ],
      "filename": "uba_common.js",
      "lineno": 96,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007997",
        "name": "ROLES",
        "type": "Identifier",
        "value": "ROLES"
      }
    },
    "description": "Build-in roles",
    "name": "ROLES",
    "longname": "module:@unitybase/base.module:uba_common.ROLES",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000752",
    "___s": true
  },
  {
    "comment": "/**\n   * Create a password hash for specified realm/login/password\n   * @param {string} aRealm reserved\n   * @param {string} aLogin User login\n   * @param {string} aPassword User password in plain text\n   * @returns {String}\n   */",
    "meta": {
      "range": [
        2118,
        2211
      ],
      "filename": "uba_common.js",
      "lineno": 106,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008001",
        "name": "ubAuthHash",
        "type": "FunctionExpression"
      }
    },
    "description": "Create a password hash for specified realm/login/password",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "reserved",
        "name": "aRealm"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "User login",
        "name": "aLogin"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "User password in plain text",
        "name": "aPassword"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "ubAuthHash",
    "longname": "module:@unitybase/base.module:uba_common.ubAuthHash",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000754",
    "___s": true
  },
  {
    "comment": "/** Build-in users */",
    "meta": {
      "range": [
        1753,
        1765
      ],
      "filename": "uba_common.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100007995",
        "name": "USERS",
        "type": "Identifier",
        "value": "USERS"
      }
    },
    "description": "Build-in users",
    "name": "USERS",
    "longname": "module:@unitybase/base.module:uba_common.USERS",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:uba_common",
    "scope": "static",
    "___id": "T000002R000751",
    "___s": true
  },
  {
    "comment": "/**\n * Create a worker to execute a script in a dedicated thread.\n *\n * If `onmessage` handler execution fail then worker call `onerror` handler.\n * When thread terminates and Terminate handler assigned worker thread call `onterminate` handler.\n *\n * In handlers you can use 2 methods:\n *  - `postMessage(message)` for posting messages from worker thread. You can get this message by function getMessage of worker object\n *  - `terminate()` for terminating current worker thread\n *\n * @example\n *\n * //The flow:\n * const Worker = require('@unitybase/base').Worker\n * // create a new thread in suspended state.\n * // Evaluate a body of a function runSomething into newly created JavaScript context\n * let w =  new Worker({name: 'WorkerName', onmessage: runSomething});\n * // resume the thread and call a `onmessage` function with parameter, passed to postMessage\n * w.postMessage({action: 'start', param: 'bla-bla'}); // wake up the thread and call a\n *\n * @module worker\n * @memberOf module:@unitybase/base\n * @author v.orel\n */",
    "meta": {
      "filename": "worker.js",
      "lineno": 4,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {}
    },
    "description": "<p>Create a worker to execute a script in a dedicated thread.</p>\n<p>If <code>onmessage</code> handler execution fail then worker call <code>onerror</code> handler.\nWhen thread terminates and Terminate handler assigned worker thread call <code>onterminate</code> handler.</p>\n<p>In handlers you can use 2 methods:</p>\n<ul>\n<li><code>postMessage(message)</code> for posting messages from worker thread. You can get this message by function getMessage of worker object</li>\n<li><code>terminate()</code> for terminating current worker thread</li>\n</ul>",
    "examples": [
      "//The flow:\nconst Worker = require('@unitybase/base').Worker\n// create a new thread in suspended state.\n// Evaluate a body of a function runSomething into newly created JavaScript context\nlet w =  new Worker({name: 'WorkerName', onmessage: runSomething});\n// resume the thread and call a `onmessage` function with parameter, passed to postMessage\nw.postMessage({action: 'start', param: 'bla-bla'}); // wake up the thread and call a"
    ],
    "kind": "module",
    "name": "worker",
    "memberof": "module:@unitybase/base",
    "author": [
      "v.orel"
    ],
    "scope": "static",
    "longname": "module:@unitybase/base.module:worker",
    "___id": "T000002R000762",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n * Worker implementation.\n * All defined workers **MUST be terminated** until application shut down. In opposite case you can get AV.\n * @param {Object|Number} paramsObj Parameters object for create new Worker or WorkerID for use existing Worker\n * @param {String} [paramsObj.name='Worker'] Name of Worker for debugger\n * @param {String|Function} paramsObj.moduleName Module name. Module must export 3 function: onmessage, onterminate and onerror\n * @param {*} paramsObj.message Message. If assigned then post this message after start thread\n */",
    "meta": {
      "range": [
        1700,
        2174
      ],
      "filename": "worker.js",
      "lineno": 39,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008151",
        "name": "Worker",
        "type": "FunctionDeclaration",
        "paramnames": [
          "paramsObj"
        ]
      },
      "vars": {
        "paramsObj.name": "module:@unitybase/base.module:worker~paramsObj.name",
        "this.workerID": "module:@unitybase/base.module:worker~Worker#workerID",
        "this.name": "module:@unitybase/base.module:worker~Worker#name"
      }
    },
    "kind": "class",
    "classdesc": "<p>Worker implementation.\nAll defined workers <strong>MUST be terminated</strong> until application shut down. In opposite case you can get AV.</p>",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "Number"
          ]
        },
        "description": "Parameters object for create new Worker or WorkerID for use existing Worker",
        "name": "paramsObj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'Worker'",
        "description": "Name of Worker for debugger",
        "name": "paramsObj.name"
      },
      {
        "type": {
          "names": [
            "String",
            "function"
          ]
        },
        "description": "Module name. Module must export 3 function: onmessage, onterminate and onerror",
        "name": "paramsObj.moduleName"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Message. If assigned then post this message after start thread",
        "name": "paramsObj.message"
      }
    ],
    "name": "Worker",
    "longname": "module:@unitybase/base.module:worker~Worker",
    "scope": "inner",
    "memberof": "module:@unitybase/base.module:worker",
    "___id": "T000002R000764",
    "___s": true
  },
  {
    "comment": "/**\n * Get message from the worker thread\n * @return {*}\n */",
    "meta": {
      "range": [
        2237,
        2399
      ],
      "filename": "worker.js",
      "lineno": 58,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008218",
        "name": "Worker.prototype.getMessage",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "mes": "module:@unitybase/base.module:worker~Worker#getMessage~mes"
      }
    },
    "description": "Get message from the worker thread",
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "getMessage",
    "longname": "module:@unitybase/base.module:worker~Worker#getMessage",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000769",
    "___s": true
  },
  {
    "comment": "/** @property {string} name Worker name */",
    "meta": {
      "range": [
        1975,
        2001
      ],
      "filename": "worker.js",
      "lineno": 45,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008183",
        "name": "this.name",
        "type": "MemberExpression",
        "value": "paramsObj.name",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Worker name</p>",
        "name": "name"
      }
    ],
    "name": "name",
    "longname": "module:@unitybase/base.module:worker~Worker#name",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000767",
    "___s": true
  },
  {
    "comment": "/**\n * Post message to worker thread. Message are stringified before send\n * @param {*} message\n*/",
    "meta": {
      "range": [
        3136,
        3252
      ],
      "filename": "worker.js",
      "lineno": 94,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008320",
        "name": "Worker.prototype.postMessage",
        "type": "FunctionExpression",
        "paramnames": [
          "message"
        ]
      }
    },
    "description": "Post message to worker thread. Message are stringified before send",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "message"
      }
    ],
    "name": "postMessage",
    "longname": "module:@unitybase/base.module:worker~Worker#postMessage",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000777",
    "___s": true
  },
  {
    "comment": "/**\n * Terminate worker thread\n */",
    "meta": {
      "range": [
        2955,
        3035
      ],
      "filename": "worker.js",
      "lineno": 86,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008303",
        "name": "Worker.prototype.terminate",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Terminate worker thread",
    "name": "terminate",
    "longname": "module:@unitybase/base.module:worker~Worker#terminate",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000776",
    "___s": true
  },
  {
    "comment": "/**\n * Try get message from worker thread. Wait until message received or timeout expired\n * @param {Number} timeout Timeout in milliseconds\n * @param {Number} [checkEveryMS=10] Sleep duration before next try get message\n * @return {*}\n */",
    "meta": {
      "range": [
        2641,
        2918
      ],
      "filename": "worker.js",
      "lineno": 73,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008249",
        "name": "Worker.prototype.waitMessage",
        "type": "FunctionExpression",
        "paramnames": [
          "timeout",
          "checkEveryMS"
        ]
      },
      "vars": {
        "mes": "module:@unitybase/base.module:worker~mes",
        "start": "module:@unitybase/base.module:worker~Worker#waitMessage~start",
        "checkEveryMS": "module:@unitybase/base.module:worker~checkEveryMS"
      }
    },
    "description": "Try get message from worker thread. Wait until message received or timeout expired",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Timeout in milliseconds",
        "name": "timeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 10,
        "description": "Sleep duration before next try get message",
        "name": "checkEveryMS"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "waitMessage",
    "longname": "module:@unitybase/base.module:worker~Worker#waitMessage",
    "kind": "function",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000771",
    "___s": true
  },
  {
    "comment": "/** @property {Number} workerID Worker ID */",
    "meta": {
      "range": [
        1875,
        1923
      ],
      "filename": "worker.js",
      "lineno": 43,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100008173",
        "name": "this.workerID",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>Worker ID</p>",
        "name": "workerID"
      }
    ],
    "name": "workerID",
    "longname": "module:@unitybase/base.module:worker~Worker#workerID",
    "kind": "member",
    "memberof": "module:@unitybase/base.module:worker~Worker",
    "scope": "instance",
    "___id": "T000002R000766",
    "___s": true
  },
  {
    "comment": "/**\n   * File modified time for files installed by npm\n   */",
    "meta": {
      "range": [
        2527,
        2580
      ],
      "filename": "base.js",
      "lineno": 89,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005121",
        "name": "NPM_EPOCH",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "File modified time for files installed by npm",
    "name": "NPM_EPOCH",
    "longname": "module:@unitybase/base.NPM_EPOCH",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000465",
    "___s": true
  },
  {
    "comment": "/**\n   * Parse a command line options & environment variables\n   * @type {module:options}\n   */",
    "meta": {
      "range": [
        755,
        771
      ],
      "filename": "base.js",
      "lineno": 27,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005081",
        "name": "options",
        "type": "Identifier",
        "value": "options"
      }
    },
    "description": "Parse a command line options &amp; environment variables",
    "type": {
      "names": [
        "module:options"
      ]
    },
    "name": "options",
    "longname": "module:@unitybase/base.options",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000455",
    "___s": true
  },
  {
    "comment": "/**\n   * Server side & CLI side Repository\n   * @type {ServerRepository}\n   */",
    "meta": {
      "range": [
        856,
        872
      ],
      "filename": "base.js",
      "lineno": 32,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005083",
        "name": "ServerRepository",
        "type": "Identifier",
        "value": "ServerRepository"
      }
    },
    "description": "Server side &amp; CLI side Repository",
    "type": {
      "names": [
        "ServerRepository"
      ]
    },
    "name": "ServerRepository",
    "longname": "module:@unitybase/base.ServerRepository",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000456",
    "___s": true
  },
  {
    "comment": "/**\n   * Synchronous connection to external UB server\n   * @type {SyncConnection}\n   */",
    "meta": {
      "range": [
        966,
        980
      ],
      "filename": "base.js",
      "lineno": 37,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005085",
        "name": "SyncConnection",
        "type": "Identifier",
        "value": "SyncConnection"
      }
    },
    "description": "Synchronous connection to external UB server",
    "type": {
      "names": [
        "SyncConnection"
      ]
    },
    "name": "SyncConnection",
    "longname": "module:@unitybase/base.SyncConnection",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000457",
    "___s": true
  },
  {
    "comment": "/**\n   * Constants for administrative security model\n   * @type {module:uba_common}\n   * @type {uba_common}\n   */",
    "meta": {
      "range": [
        1659,
        1669
      ],
      "filename": "base.js",
      "lineno": 65,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005095",
        "name": "uba_common",
        "type": "Identifier",
        "value": "uba_common"
      }
    },
    "description": "Constants for administrative security model",
    "type": {
      "names": [
        "module:uba_common"
      ]
    },
    "name": "uba_common",
    "longname": "module:@unitybase/base.uba_common",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000462",
    "___s": true
  },
  {
    "comment": "/**\n   * Execute a script in a dedicated thread\n   * @type {Worker}\n   */",
    "meta": {
      "range": [
        1533,
        1539
      ],
      "filename": "base.js",
      "lineno": 59,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100005093",
        "name": "Worker",
        "type": "Identifier",
        "value": "Worker"
      }
    },
    "description": "Execute a script in a dedicated thread",
    "type": {
      "names": [
        "Worker"
      ]
    },
    "name": "Worker",
    "longname": "module:@unitybase/base.Worker",
    "kind": "member",
    "memberof": "module:@unitybase/base",
    "scope": "static",
    "___id": "T000002R000461",
    "___s": true
  },
  {
    "comment": "/**\n *\n * Server-side BLOB stores methods. Accessible via {@link App.blobStores}\n *\n\n    // get dirty (not committed yet) content of my_entity.docAttribute with ID = 12312 as ArrayBuffer\n    let tmpContent = App.blobStores.getContent(\n       {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute', isDirty: true},\n       {encoding: 'bin'}\n    )\n\n    // get BLOB content of my_entity.docAttribute with ID = 12312 as base64 string\n    let base64Content = App.blobStores.getContent(\n      {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n      {encoding: 'base64'}\n    )\n\n    // get BLOB content of my_entity.docAttribute with ID = 12312 as string\n    let base64Content = App.blobStores.getContent(\n      {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n      {encoding: 'utf8'}\n    )\n\n    // read file and but it to BLOB store (not committed yet)\n    let content = fs.readFileSync(__filename, {encoding: 'bin'})\n    let fn = path.basename(__filename)\n    let blobItem = App.blobStores.putContent(\n      {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n      content\n    )\n\n    // commit blob store\n    let dataStore = UB.DataStore(my_entity)\n    dataStore.run('update', {\n      execParams: {\n        ID: 12312,\n        blobAttribute: JSON.stringify(blobItem)\n      }\n    })\n\n *\n * @module @unitybase/blob-stores\n */",
    "meta": {
      "filename": "blobStores.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/blob-stores",
    "longname": "module:@unitybase/blob-stores",
    "readme": "<h2>BLOB stores (attributes of type <code>Document</code> on ORM level)</h2><p><strong>Entity attribute</strong> of <code>Document</code> type with <code>storeName</code> property for\nthis attribute should be defined. Content (data stored in database) of\nsuch attributes is a meta-information about file - a serialized\n{@link BlobStoreItem} object, not an actual file content.</p>\n<p>In case entity is stored in the database using {@link mStorage} mixin, DDL generator\ncreate nvarchar(2000) field in database and store there {@link BlobStoreItem} serialized to JSON.</p>\n<p>For Virtual entity developer should implement <code>select</code> method and fill {@link BlobStoreItem} manually\n(for example by parsing file content as done in <strong>ubm_form</strong>).</p>\n<p>In the store definition section of application config developer describe stores. Each store must implement interface described below.</p>\n<p>The store class itself provide storing and retrieving file content (based on meta-information stored in the entity attribute).</p>\n<p>From client-side POV uploading files to server is separated onto two part. Like in gmail when you send mail with\nattachment you can attach file, and gmail send it to server, but you do not send mail itself yet - this is first stage.\nResult of this stage is information about where file on server stored.\nWhen you send email client pass to server email attributes, body and information about attached files.\nThis is the same UnityBase do in the second stage.</p>\n<h3>Server side usage:</h3><pre class=\"prettyprint source lang-javascript\"><code>// get dirty (not committed yet) content of my_entity.docAttribute with ID = 12312 as ArrayBuffer\nlet tmpContent = App.blobStores.getContent(\n   {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute', isDirty: true},\n   {encoding: 'bin'}\n)\n\n// get BLOB content of my_entity.docAttribute with ID = 12312 as base64 string\nlet base64Content = App.blobStores.getContent(\n  {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n  {encoding: 'base64'}\n)\n\n// get BLOB content of my_entity.docAttribute with ID = 12312 as string\nlet base64Content = App.blobStores.getContent(\n  {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n  {encoding: 'utf8'}\n)\n\n// read file and but it to BLOB store (not committed yet)\nlet content = fs.readFileSync(__filename, {encoding: 'bin'})\nlet fn = path.basename(__filename)\nlet blobItem = App.blobStores.putContent(\n  {ID: 12312, entity: 'my_entity', attribute: 'blobAttribute'},\n  content\n)\n\n// commit blob store\nlet dataStore = UB.DataStore(my_entity)\ndataStore.run('update', {\n  execParams: {\n    ID: 12312,\n    blobAttribute: JSON.stringify(blobItem)\n  }\n})</code></pre><h3>Upload file to server</h3><p>So in UnityBase upload file to to the server is performed in two stages:</p>\n<ol>\n<li><p>Upload file to temporary store - on this stage client call setDocument app level method and\npass file content to server with additional parameter <strong>isDirty=true</strong>, server store file in the temporary place.</p>\n</li>\n<li><p>Client execute <code>insert</code> or <code>update</code> entity method and pass (with other attributes) string, returned on the first stage as a value of <code>Document</code>\ntype attribute. On this stage server see what user want to update/insert Document and, based on <em>Domain</em> information, know\nwhat type of store is used for this attribute. Server:</p>\n</li>\n<li><p>Finally UnityBase update entity and commit database transaction (in case entity is non-virtual)</p>\n</li>\n</ol>\n<h3>Download file from server</h3><p>For download file from server client call <code>getDocument</code> endpoint</p>",
    "___id": "T000002R004136",
    "___s": true
  },
  {
    "comment": "/**\n * Blob store item content (JSON stored in database)\n * @typedef {Object} BlobStoreItem\n * @property {Number} [v] Store version. Empty for UB<5. Store implementation must check `v` for backward compatibility\n * @property {String} store Code of store implementation from application config. If empty - use a store from attribute configuration\n * @property {String} fName File name inside store (auto generated in most case)\n * @property {String} origName Original file name (as user upload it)\n * @property {String} [relPath] Relative path of fName inside store folder (for file-based stores)\n * @property {String} ct Content type\n * @property {Number} size Content size\n * @property {String} md5 Content MD5 checksum\n * @property {Number} [revision] Content revision. Used only for stores with `historyDepth` > 0\n * @property {Boolean} [deleting] If true content must be deleted/archived during commit\n * @property {Boolean} [isDirty] ????\n * @property {Boolean} [isPermanent] If `true` - do not delete content during history rotation\n */",
    "meta": {
      "filename": "blobStores.js",
      "lineno": 134,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {}
    },
    "description": "Blob store item content (JSON stored in database)",
    "kind": "typedef",
    "name": "BlobStoreItem",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "<p>Store version. Empty for UB&lt;5. Store implementation must check <code>v</code> for backward compatibility</p>",
        "name": "v"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>Code of store implementation from application config. If empty - use a store from attribute configuration</p>",
        "name": "store"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>File name inside store (auto generated in most case)</p>",
        "name": "fName"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>Original file name (as user upload it)</p>",
        "name": "origName"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "<p>Relative path of fName inside store folder (for file-based stores)</p>",
        "name": "relPath"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>Content type</p>",
        "name": "ct"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>Content size</p>",
        "name": "size"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>Content MD5 checksum</p>",
        "name": "md5"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "<p>Content revision. Used only for stores with <code>historyDepth</code> &gt; 0</p>",
        "name": "revision"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "<p>If true content must be deleted/archived during commit</p>",
        "name": "deleting"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "<p>????</p>",
        "name": "isDirty"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "<p>If <code>true</code> - do not delete content during history rotation</p>",
        "name": "isPermanent"
      }
    ],
    "longname": "module:@unitybase/blob-stores~BlobStoreItem",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004166",
    "___s": true
  },
  {
    "comment": "/**\n * Blob store request (parameters passed to get|setDocument)\n * @typedef {Object} BlobStoreRequest\n * @property {Number} ID\n * @property {String} entity\n * @property {String} attribute\n * @property {Boolean} [isDirty]\n * @property {String} [fileName]\n * @property {Number} [revision]\n * @property {String} [extra] Store-specific extra parameters\n */",
    "meta": {
      "filename": "blobStores.js",
      "lineno": 112,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {}
    },
    "description": "Blob store request (parameters passed to get|setDocument)",
    "kind": "typedef",
    "name": "BlobStoreRequest",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "name": "isDirty"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "name": "revision"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "<p>Store-specific extra parameters</p>",
        "name": "extra"
      }
    ],
    "longname": "module:@unitybase/blob-stores~BlobStoreRequest",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004164",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side method for obtaining BLOB content from the blob store.\n * Return `null` in case attribute value is null.\n * @param {BlobStoreRequest} request\n * @param {Object} [options]\n * @param {String|Null} [options.encoding] Possible values:\n *   'bin' 'ascii'  'base64' 'binary' 'hex' ucs2/ucs-2/utf16le/utf-16le utf8/utf-8\n *   if `null` will return {@link Buffer}, if `bin` - ArrayBuffer\n * @returns {String|Buffer|ArrayBuffer|null}\n */",
    "meta": {
      "range": [
        11393,
        11800
      ],
      "filename": "blobStores.js",
      "lineno": 322,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100047379",
        "name": "getContent",
        "type": "FunctionDeclaration",
        "paramnames": [
          "request",
          "options"
        ]
      },
      "vars": {
        "parsed": "module:@unitybase/blob-stores~getContent~parsed",
        "requested": "module:@unitybase/blob-stores~getContent~requested"
      }
    },
    "description": "Server-side method for obtaining BLOB content from the blob store.\nReturn <code>null</code> in case attribute value is null.",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String",
            "Null"
          ]
        },
        "optional": true,
        "description": "Possible values:\n  'bin' 'ascii'  'base64' 'binary' 'hex' ucs2/ucs-2/utf16le/utf-16le utf8/utf-8\n  if <code>null</code> will return {@link Buffer}, if <code>bin</code> - ArrayBuffer",
        "name": "options.encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "Buffer",
            "ArrayBuffer",
            "null"
          ]
        }
      }
    ],
    "name": "getContent",
    "longname": "module:@unitybase/blob-stores~getContent",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004225",
    "___s": true
  },
  {
    "comment": "/** @type BlobStoreRequest */",
    "meta": {
      "range": [
        10406,
        10412
      ],
      "filename": "blobStores.js",
      "lineno": 294,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100047300",
        "name": "params"
      }
    },
    "type": {
      "names": [
        "BlobStoreRequest"
      ]
    },
    "name": "params",
    "longname": "module:@unitybase/blob-stores~getDocumentEndpoint~params",
    "kind": "member",
    "memberof": "module:@unitybase/blob-stores~getDocumentEndpoint",
    "scope": "inner",
    "params": [],
    "___id": "T000002R004221",
    "___s": true
  },
  {
    "comment": "/**\n * For a historical BLOB stores mark specified revision as a permanent.\n * Permanents revisions will not be deleted during history rotation.\n * @example\n *\nconst UB = require(@unitybase/ub')\nconst App = UB.App\nApp.blobStores.markRevisionAsPermanent({\n  entity: 'my_entity',\n  attribute: 'attributeOfTypeDocument',\n  ID: 1000,\n  revision: 2\n})\n\n * @param {BlobStoreRequest} request\n * @param  {Number} request.revision revision to be marked as permanent\n */",
    "meta": {
      "range": [
        18742,
        19683
      ],
      "filename": "blobStores.js",
      "lineno": 531,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100048035",
        "name": "markRevisionAsPermanent",
        "type": "FunctionDeclaration",
        "paramnames": [
          "request"
        ]
      },
      "vars": {
        "r": "module:@unitybase/blob-stores~markRevisionAsPermanent~r",
        "revisionFor": "module:@unitybase/blob-stores~markRevisionAsPermanent~revisionFor",
        "store": "module:@unitybase/blob-stores~markRevisionAsPermanent~store",
        "histID": "module:@unitybase/blob-stores~markRevisionAsPermanent~histID",
        "dataStore": "module:@unitybase/blob-stores~markRevisionAsPermanent~dataStore"
      }
    },
    "description": "For a historical BLOB stores mark specified revision as a permanent.\nPermanents revisions will not be deleted during history rotation.",
    "examples": [
      "const UB = require(@unitybase/ub')\nconst App = UB.App\nApp.blobStores.markRevisionAsPermanent({\n  entity: 'my_entity',\n  attribute: 'attributeOfTypeDocument',\n  ID: 1000,\n  revision: 2\n})"
    ],
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "revision to be marked as permanent",
        "name": "request.revision"
      }
    ],
    "name": "markRevisionAsPermanent",
    "longname": "module:@unitybase/blob-stores~markRevisionAsPermanent",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004278",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side method for putting BLOB content to BLOB store temporary storage\n * @example\n\n // convert base64 encoded string stored in `prm.signature` to binary and put to the store\n docContent = App.blobStores.putContent({\n   entity: 'iit_signature',\n   attribute: 'signature',\n   ID: ID,\n   fileName: ID + '.p7s'\n }, Buffer.from(prm.signature, 'base64'))\n\n * @param {BlobStoreRequest} request\n * @param {ArrayBuffer|String} content\n * @return {BlobStoreItem}\n */",
    "meta": {
      "range": [
        13794,
        14385
      ],
      "filename": "blobStores.js",
      "lineno": 395,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100047607",
        "name": "putContent",
        "type": "FunctionDeclaration",
        "paramnames": [
          "request",
          "content"
        ]
      },
      "vars": {
        "parsed": "module:@unitybase/blob-stores~putContent~parsed",
        "attribute": "module:@unitybase/blob-stores~putContent~attribute",
        "storeCode": "module:@unitybase/blob-stores~putContent~storeCode",
        "store": "module:@unitybase/blob-stores~putContent~store"
      }
    },
    "description": "Server-side method for putting BLOB content to BLOB store temporary storage",
    "examples": [
      "// convert base64 encoded string stored in `prm.signature` to binary and put to the store\n docContent = App.blobStores.putContent({\n   entity: 'iit_signature',\n   attribute: 'signature',\n   ID: ID,\n   fileName: ID + '.p7s'\n }, Buffer.from(prm.signature, 'base64'))"
    ],
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "request"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "name": "content"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BlobStoreItem"
          ]
        }
      }
    ],
    "name": "putContent",
    "longname": "module:@unitybase/blob-stores~putContent",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004243",
    "___s": true
  },
  {
    "comment": "/** @type BlobStoreRequest */",
    "meta": {
      "range": [
        12324,
        12331
      ],
      "filename": "blobStores.js",
      "lineno": 351,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100047447",
        "name": "request"
      }
    },
    "type": {
      "names": [
        "BlobStoreRequest"
      ]
    },
    "name": "request",
    "longname": "module:@unitybase/blob-stores~setDocumentEndpoint~request",
    "kind": "member",
    "memberof": "module:@unitybase/blob-stores~setDocumentEndpoint",
    "scope": "inner",
    "params": [],
    "___id": "T000002R004229",
    "___s": true
  },
  {
    "comment": "/**\n * Obtains document content from blobStore and send it to response.\n *\n * @param {BlobStoreRequest} requestParams\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        9146,
        9925
      ],
      "filename": "blobStores.js",
      "lineno": 260,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/blob-stores",
      "code": {
        "id": "astnode100047183",
        "name": "writeDocumentToResp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "requestParams",
          "req",
          "resp"
        ]
      },
      "vars": {
        "parsed": "module:@unitybase/blob-stores~writeDocumentToResp~parsed",
        "requested": "module:@unitybase/blob-stores~writeDocumentToResp~requested"
      }
    },
    "description": "Obtains document content from blobStore and send it to response.",
    "params": [
      {
        "type": {
          "names": [
            "BlobStoreRequest"
          ]
        },
        "name": "requestParams"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "writeDocumentToResp",
    "longname": "module:@unitybase/blob-stores~writeDocumentToResp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/blob-stores",
    "___id": "T000002R004215",
    "___s": true
  },
  {
    "comment": "/**\n * Set of dictionaries, common for most enterprise systems. For internal organization structure see @ubitybase&#x2F;org module\n * @version 5.0.10\n * @module @unitybase/cdn\n */",
    "meta": {
      "filename": "_CDN_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/cdn",
    "longname": "module:@unitybase/cdn",
    "readme": "<p>Set of dictionaries appropriate for majority of enterprise systems.</p>\n<p>For internal organization structure see <code>@ubitybase/org</code> module</p>\n<h1>Used <code>ubs_setting</code> keys</h1><ul>\n<li><p><code>cdn.organization.accessAddGovByRoles</code> - comma separated use role names for whom is allowed \nto add/edit organization with <code>isGovAuthority == true</code>. If empty - allowed for any role</p>\n</li>\n<li><p><code>cdn.organization.allowAutoGenerateOKPO</code> Boolean. If <code>true</code> and <code>cdn.organization.OKPOCode</code> if not filled \nwill generate if automatically during insertion. Default <code>false</code> </p>\n</li>\n</ul>",
    "___id": "T000002R008438",
    "___s": true
  },
  {
    "comment": "/**\n* Addresses directory\n* @type {cdn_address_ns}\n*/",
    "meta": {
      "range": [
        1720,
        1754
      ],
      "filename": "_CDN_entities.js",
      "lineno": 77,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084699",
        "name": "cdn_address",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Addresses directory",
    "type": {
      "names": [
        "cdn_address_ns"
      ]
    },
    "name": "cdn_address",
    "longname": "module:@unitybase/cdn~cdn_address",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008452",
    "___s": true
  },
  {
    "comment": "/**\n * Addresses directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        571,
        618
      ],
      "filename": "_CDN_entities.js",
      "lineno": 17,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084663",
        "name": "cdn_address_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Addresses directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_address_ns",
    "longname": "module:@unitybase/cdn~cdn_address_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008439",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        719,
        1659
      ],
      "filename": "_CDN_entities.js",
      "lineno": 19,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084668",
        "name": "cdn_address_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"addressType\":\"\",\"value\":\"\",\"subjectID\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "static",
    "___id": "T000002R008440",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        813,
        828
      ],
      "filename": "_CDN_entities.js",
      "lineno": 27,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084675",
        "name": "addressType",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "addressType",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.addressType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008442",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        775,
        780
      ],
      "filename": "_CDN_entities.js",
      "lineno": 23,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084673",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008441",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1221,
        1246
      ],
      "filename": "_CDN_entities.js",
      "lineno": 46,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084683",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008446",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1315,
        1331
      ],
      "filename": "_CDN_entities.js",
      "lineno": 51,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084686",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008447",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1543,
        1568
      ],
      "filename": "_CDN_entities.js",
      "lineno": 66,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084693",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008450",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1637,
        1656
      ],
      "filename": "_CDN_entities.js",
      "lineno": 71,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084696",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008451",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1384,
        1409
      ],
      "filename": "_CDN_entities.js",
      "lineno": 56,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084688",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008448",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1478,
        1494
      ],
      "filename": "_CDN_entities.js",
      "lineno": 61,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084691",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008449",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1161,
        1172
      ],
      "filename": "_CDN_entities.js",
      "lineno": 41,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084681",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008445",
    "___s": true
  },
  {
    "comment": "/**\n  * Reference to address owner. No database constraint here, since we don't know all entities what want to store contacts. Entity developer must remove contacts in beforedelete manually.\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1090,
        1102
      ],
      "filename": "_CDN_entities.js",
      "lineno": 36,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084679",
        "name": "subjectID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Reference to address owner. No database constraint here, since we don't know all entities what want to store contacts. Entity developer must remove contacts in beforedelete manually.",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "subjectID",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.subjectID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008444",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        861,
        870
      ],
      "filename": "_CDN_entities.js",
      "lineno": 31,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084677",
        "name": "value",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "value",
    "longname": "module:@unitybase/cdn~cdn_address_ns.attrs.value",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns.attrs",
    "scope": "static",
    "___id": "T000002R008443",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_address_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010531",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_address_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010530",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_address_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010834",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_address_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010528",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_address_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010527",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_address_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_address_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010529",
    "___s": true
  },
  {
    "comment": "/**\n* Admin unit (country, region, city).\n * Main parent for countries, regions and cities\n* @type {cdn_adminunit_ns}\n*/",
    "meta": {
      "range": [
        3232,
        3270
      ],
      "filename": "_CDN_entities.js",
      "lineno": 163,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084747",
        "name": "cdn_adminunit",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Admin unit (country, region, city).\nMain parent for countries, regions and cities",
    "type": {
      "names": [
        "cdn_adminunit_ns"
      ]
    },
    "name": "cdn_adminunit",
    "longname": "module:@unitybase/cdn~cdn_adminunit",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008470",
    "___s": true
  },
  {
    "comment": "/**\n * Admin unit (country, region, city).\n * Main parent for countries, regions and cities\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        1898,
        1947
      ],
      "filename": "_CDN_entities.js",
      "lineno": 84,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084703",
        "name": "cdn_adminunit_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Admin unit (country, region, city).\nMain parent for countries, regions and cities</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_adminunit_ns",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008453",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2048,
        3104
      ],
      "filename": "_CDN_entities.js",
      "lineno": 86,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084708",
        "name": "cdn_adminunit_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentAdminUnitID\":null,\"code\":\"\",\"name\":\"\",\"fullName\":null,\"adminUnitType\":\"\",\"caption\":null,\"mi_unityEntity\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "static",
    "___id": "T000002R008454",
    "___s": true
  },
  {
    "comment": "/**\n  * String representation of unit's type for fast queries\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2433,
        2450
      ],
      "filename": "_CDN_entities.js",
      "lineno": 113,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084723",
        "name": "adminUnitType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "String representation of unit's type for fast queries",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "adminUnitType",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.adminUnitType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008460",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2483,
        2496
      ],
      "filename": "_CDN_entities.js",
      "lineno": 117,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084725",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008461",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2246,
        2254
      ],
      "filename": "_CDN_entities.js",
      "lineno": 100,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084717",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008457",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2328,
        2342
      ],
      "filename": "_CDN_entities.js",
      "lineno": 108,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084721",
        "name": "fullName",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008459",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2106,
        2111
      ],
      "filename": "_CDN_entities.js",
      "lineno": 90,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084713",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008455",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2666,
        2691
      ],
      "filename": "_CDN_entities.js",
      "lineno": 131,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084731",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008464",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2760,
        2776
      ],
      "filename": "_CDN_entities.js",
      "lineno": 136,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084734",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008465",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2988,
        3013
      ],
      "filename": "_CDN_entities.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084741",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008468",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3082,
        3101
      ],
      "filename": "_CDN_entities.js",
      "lineno": 156,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084744",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008469",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2829,
        2854
      ],
      "filename": "_CDN_entities.js",
      "lineno": 141,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084736",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008466",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2923,
        2939
      ],
      "filename": "_CDN_entities.js",
      "lineno": 146,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084739",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008467",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2606,
        2617
      ],
      "filename": "_CDN_entities.js",
      "lineno": 126,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084729",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008463",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2529,
        2547
      ],
      "filename": "_CDN_entities.js",
      "lineno": 121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084727",
        "name": "mi_unityEntity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "mi_unityEntity",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.mi_unityEntity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008462",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2287,
        2295
      ],
      "filename": "_CDN_entities.js",
      "lineno": 104,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084719",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008458",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> cdn_adminunit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2172,
        2195
      ],
      "filename": "_CDN_entities.js",
      "lineno": 95,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084715",
        "name": "parentAdminUnitID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent -&gt; cdn_adminunit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentAdminUnitID",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns.attrs.parentAdminUnitID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R008456",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010536",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010535",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010835",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010533",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010532",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_adminunit_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_adminunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010534",
    "___s": true
  },
  {
    "comment": "/**\n* Bank branches directory\n* @type {cdn_bank_ns}\n*/",
    "meta": {
      "range": [
        4833,
        4861
      ],
      "filename": "_CDN_entities.js",
      "lineno": 260,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084799",
        "name": "cdn_bank",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Bank branches directory",
    "type": {
      "names": [
        "cdn_bank_ns"
      ]
    },
    "name": "cdn_bank",
    "longname": "module:@unitybase/cdn~cdn_bank",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008490",
    "___s": true
  },
  {
    "comment": "/**\n * Bank branches directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        3353,
        3397
      ],
      "filename": "_CDN_entities.js",
      "lineno": 169,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084751",
        "name": "cdn_bank_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Bank branches directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_bank_ns",
    "longname": "module:@unitybase/cdn~cdn_bank_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008471",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        3498,
        4771
      ],
      "filename": "_CDN_entities.js",
      "lineno": 171,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084756",
        "name": "cdn_bank_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"MFO\":\"\",\"code\":null,\"name\":\"\",\"fullName\":\"\",\"phones\":null,\"address\":null,\"countryID\":null,\"cityID\":null,\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "static",
    "___id": "T000002R008472",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3967,
        3980
      ],
      "filename": "_CDN_entities.js",
      "lineno": 203,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084773",
        "name": "address",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "address",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.address",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008479",
    "___s": true
  },
  {
    "comment": "/**\n  * City -> cdn_city\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4122,
        4134
      ],
      "filename": "_CDN_entities.js",
      "lineno": 213,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084777",
        "name": "cityID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City -&gt; cdn_city",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "cityID",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.cityID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008481",
    "___s": true
  },
  {
    "comment": "/**\n  * Bank organization code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3677,
        3687
      ],
      "filename": "_CDN_entities.js",
      "lineno": 185,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084765",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Bank organization code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008475",
    "___s": true
  },
  {
    "comment": "/**\n  * Registration country -> cdn_country\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4053,
        4068
      ],
      "filename": "_CDN_entities.js",
      "lineno": 208,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084775",
        "name": "countryID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Registration country -&gt; cdn_country",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "countryID",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.countryID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008480",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4199,
        4214
      ],
      "filename": "_CDN_entities.js",
      "lineno": 219,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084779",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Description\ndescription",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008482",
    "___s": true
  },
  {
    "comment": "/**\n  * Full official bank name . For displaying in reports.\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3877,
        3889
      ],
      "filename": "_CDN_entities.js",
      "lineno": 195,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084769",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full official bank name . For displaying in reports.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008477",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3551,
        3556
      ],
      "filename": "_CDN_entities.js",
      "lineno": 175,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084761",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008473",
    "___s": true
  },
  {
    "comment": "/**\n  * Bank branch code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3610,
        3617
      ],
      "filename": "_CDN_entities.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084763",
        "name": "MFO",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Bank branch code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "MFO",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.MFO",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008474",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4333,
        4358
      ],
      "filename": "_CDN_entities.js",
      "lineno": 229,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084783",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008484",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4427,
        4443
      ],
      "filename": "_CDN_entities.js",
      "lineno": 234,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084786",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008485",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4655,
        4680
      ],
      "filename": "_CDN_entities.js",
      "lineno": 249,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084793",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008488",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4749,
        4768
      ],
      "filename": "_CDN_entities.js",
      "lineno": 254,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084796",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008489",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4496,
        4521
      ],
      "filename": "_CDN_entities.js",
      "lineno": 239,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084788",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008486",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4590,
        4606
      ],
      "filename": "_CDN_entities.js",
      "lineno": 244,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084791",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008487",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4273,
        4284
      ],
      "filename": "_CDN_entities.js",
      "lineno": 224,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084781",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008483",
    "___s": true
  },
  {
    "comment": "/**\n  * Name without quotes and ownership. For searching data.\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3779,
        3787
      ],
      "filename": "_CDN_entities.js",
      "lineno": 190,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084767",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name without quotes and ownership. For searching data.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008476",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3922,
        3934
      ],
      "filename": "_CDN_entities.js",
      "lineno": 199,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084771",
        "name": "phones",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "phones",
    "longname": "module:@unitybase/cdn~cdn_bank_ns.attrs.phones",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns.attrs",
    "scope": "static",
    "___id": "T000002R008478",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010541",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010540",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010836",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010538",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010537",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_bank_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_bank_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010539",
    "___s": true
  },
  {
    "comment": "/**\n* List of buildings\n* @type {cdn_building_ns}\n*/",
    "meta": {
      "range": [
        6205,
        6241
      ],
      "filename": "_CDN_entities.js",
      "lineno": 349,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084851",
        "name": "cdn_building",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of buildings",
    "type": {
      "names": [
        "cdn_building_ns"
      ]
    },
    "name": "cdn_building",
    "longname": "module:@unitybase/cdn~cdn_building",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008509",
    "___s": true
  },
  {
    "comment": "/**\n * List of buildings\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        4960,
        5008
      ],
      "filename": "_CDN_entities.js",
      "lineno": 267,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084803",
        "name": "cdn_building_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of buildings</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "cdn_building_ns",
    "longname": "module:@unitybase/cdn~cdn_building_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008491",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        5109,
        6145
      ],
      "filename": "_CDN_entities.js",
      "lineno": 269,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084808",
        "name": "cdn_building_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"streetID\":0,\"postIndexID\":0,\"code\":\"\",\"description\":null,\"buildingType\":\"\",\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "static",
    "___id": "T000002R008492",
    "___s": true
  },
  {
    "comment": "/**\n  * Type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5420,
        5436
      ],
      "filename": "_CDN_entities.js",
      "lineno": 296,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084823",
        "name": "buildingType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "buildingType",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.buildingType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008498",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5304,
        5312
      ],
      "filename": "_CDN_entities.js",
      "lineno": 286,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084819",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008496",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5361,
        5378
      ],
      "filename": "_CDN_entities.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084821",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008497",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5166,
        5171
      ],
      "filename": "_CDN_entities.js",
      "lineno": 273,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084813",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008493",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        5707,
        5732
      ],
      "filename": "_CDN_entities.js",
      "lineno": 318,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084835",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008503",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5801,
        5817
      ],
      "filename": "_CDN_entities.js",
      "lineno": 323,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084838",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008504",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5469,
        5482
      ],
      "filename": "_CDN_entities.js",
      "lineno": 300,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084825",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008499",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        5513,
        5536
      ],
      "filename": "_CDN_entities.js",
      "lineno": 304,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084827",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008500",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        5567,
        5588
      ],
      "filename": "_CDN_entities.js",
      "lineno": 308,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084830",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008501",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6029,
        6054
      ],
      "filename": "_CDN_entities.js",
      "lineno": 338,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084845",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008507",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6123,
        6142
      ],
      "filename": "_CDN_entities.js",
      "lineno": 343,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084848",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008508",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        5870,
        5895
      ],
      "filename": "_CDN_entities.js",
      "lineno": 328,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084840",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008505",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5964,
        5980
      ],
      "filename": "_CDN_entities.js",
      "lineno": 333,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084843",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008506",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5647,
        5658
      ],
      "filename": "_CDN_entities.js",
      "lineno": 313,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084833",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008502",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5248,
        5262
      ],
      "filename": "_CDN_entities.js",
      "lineno": 281,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084817",
        "name": "postIndexID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "postIndexID",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.postIndexID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008495",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5204,
        5215
      ],
      "filename": "_CDN_entities.js",
      "lineno": 277,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084815",
        "name": "streetID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "streetID",
    "longname": "module:@unitybase/cdn~cdn_building_ns.attrs.streetID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns.attrs",
    "scope": "static",
    "___id": "T000002R008494",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_building_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010546",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_building_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010545",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_building_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010837",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_building_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010543",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_building_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010547",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_building_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010542",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_building_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_building_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010544",
    "___s": true
  },
  {
    "comment": "/**\n* Cities directory\n* @type {cdn_city_ns}\n*/",
    "meta": {
      "range": [
        7645,
        7673
      ],
      "filename": "_CDN_entities.js",
      "lineno": 441,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084901",
        "name": "cdn_city",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Cities directory",
    "type": {
      "names": [
        "cdn_city_ns"
      ]
    },
    "name": "cdn_city",
    "longname": "module:@unitybase/cdn~cdn_city",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008528",
    "___s": true
  },
  {
    "comment": "/**\n * Cities directory\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes unity\n */",
    "meta": {
      "range": [
        6333,
        6377
      ],
      "filename": "_CDN_entities.js",
      "lineno": 356,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084855",
        "name": "cdn_city_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Cities directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "unity"
    ],
    "name": "cdn_city_ns",
    "longname": "module:@unitybase/cdn~cdn_city_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008510",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        6478,
        7590
      ],
      "filename": "_CDN_entities.js",
      "lineno": 358,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084860",
        "name": "cdn_city_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentAdminUnitID\":0,\"code\":\"\",\"name\":\"\",\"caption\":null,\"description\":null,\"postalCode\":null,\"phoneCode\":null,\"cityTypeID\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "static",
    "___id": "T000002R008511",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6732,
        6745
      ],
      "filename": "_CDN_entities.js",
      "lineno": 380,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084873",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008516",
    "___s": true
  },
  {
    "comment": "/**\n  * City type -> cdn_citytype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7017,
        7033
      ],
      "filename": "_CDN_entities.js",
      "lineno": 400,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084881",
        "name": "cityTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City type -&gt; cdn_citytype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "cityTypeID",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.cityTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008520",
    "___s": true
  },
  {
    "comment": "/**\n  * City code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6636,
        6644
      ],
      "filename": "_CDN_entities.js",
      "lineno": 371,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084869",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "City code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008514",
    "___s": true
  },
  {
    "comment": "/**\n  * City description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6799,
        6816
      ],
      "filename": "_CDN_entities.js",
      "lineno": 385,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084875",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008517",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6531,
        6536
      ],
      "filename": "_CDN_entities.js",
      "lineno": 362,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084865",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008512",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7152,
        7177
      ],
      "filename": "_CDN_entities.js",
      "lineno": 410,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084885",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008522",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7246,
        7262
      ],
      "filename": "_CDN_entities.js",
      "lineno": 415,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084888",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008523",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7474,
        7499
      ],
      "filename": "_CDN_entities.js",
      "lineno": 430,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084895",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008526",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7568,
        7587
      ],
      "filename": "_CDN_entities.js",
      "lineno": 435,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084898",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008527",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7315,
        7340
      ],
      "filename": "_CDN_entities.js",
      "lineno": 420,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084890",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008524",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7409,
        7425
      ],
      "filename": "_CDN_entities.js",
      "lineno": 425,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084893",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008525",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7092,
        7103
      ],
      "filename": "_CDN_entities.js",
      "lineno": 405,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084883",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008521",
    "___s": true
  },
  {
    "comment": "/**\n  * City name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6691,
        6699
      ],
      "filename": "_CDN_entities.js",
      "lineno": 376,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084871",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "City name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008515",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6569,
        6589
      ],
      "filename": "_CDN_entities.js",
      "lineno": 366,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084867",
        "name": "parentAdminUnitID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentAdminUnitID",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.parentAdminUnitID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008513",
    "___s": true
  },
  {
    "comment": "/**\n  * City phone code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6939,
        6954
      ],
      "filename": "_CDN_entities.js",
      "lineno": 395,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084879",
        "name": "phoneCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City phone code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "phoneCode",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.phoneCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008519",
    "___s": true
  },
  {
    "comment": "/**\n  * City postal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6870,
        6886
      ],
      "filename": "_CDN_entities.js",
      "lineno": 390,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084877",
        "name": "postalCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City postal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "postalCode",
    "longname": "module:@unitybase/cdn~cdn_city_ns.attrs.postalCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns.attrs",
    "scope": "static",
    "___id": "T000002R008518",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_city_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010552",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_city_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010551",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_city_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010838",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_city_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010549",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_city_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010548",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_city_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_city_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010550",
    "___s": true
  },
  {
    "comment": "/**\n* City types directory\n* @type {cdn_citytype_ns}\n*/",
    "meta": {
      "range": [
        8716,
        8752
      ],
      "filename": "_CDN_entities.js",
      "lineno": 504,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084939",
        "name": "cdn_citytype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "City types directory",
    "type": {
      "names": [
        "cdn_citytype_ns"
      ]
    },
    "name": "cdn_citytype",
    "longname": "module:@unitybase/cdn~cdn_citytype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008541",
    "___s": true
  },
  {
    "comment": "/**\n * City types directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        7753,
        7801
      ],
      "filename": "_CDN_entities.js",
      "lineno": 447,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084905",
        "name": "cdn_citytype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>City types directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_citytype_ns",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008529",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        7902,
        8653
      ],
      "filename": "_CDN_entities.js",
      "lineno": 449,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084910",
        "name": "cdn_citytype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "static",
    "___id": "T000002R008530",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal code of city type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8028,
        8036
      ],
      "filename": "_CDN_entities.js",
      "lineno": 458,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084917",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Internal code of city type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008532",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7959,
        7964
      ],
      "filename": "_CDN_entities.js",
      "lineno": 453,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084915",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008531",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8215,
        8240
      ],
      "filename": "_CDN_entities.js",
      "lineno": 473,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084923",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008535",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8309,
        8325
      ],
      "filename": "_CDN_entities.js",
      "lineno": 478,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084926",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008536",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8537,
        8562
      ],
      "filename": "_CDN_entities.js",
      "lineno": 493,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084933",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008539",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8631,
        8650
      ],
      "filename": "_CDN_entities.js",
      "lineno": 498,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084936",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008540",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8378,
        8403
      ],
      "filename": "_CDN_entities.js",
      "lineno": 483,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084928",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008537",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8472,
        8488
      ],
      "filename": "_CDN_entities.js",
      "lineno": 488,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084931",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008538",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8155,
        8166
      ],
      "filename": "_CDN_entities.js",
      "lineno": 468,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084921",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008534",
    "___s": true
  },
  {
    "comment": "/**\n  * City type name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8088,
        8096
      ],
      "filename": "_CDN_entities.js",
      "lineno": 463,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084919",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "City type name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008533",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010557",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010556",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010839",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010554",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010553",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_citytype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_citytype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010555",
    "___s": true
  },
  {
    "comment": "/**\n* Contacts directory\n* @type {cdn_contact_ns}\n*/",
    "meta": {
      "range": [
        9979,
        10013
      ],
      "filename": "_CDN_entities.js",
      "lineno": 570,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084979",
        "name": "cdn_contact",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Contacts directory",
    "type": {
      "names": [
        "cdn_contact_ns"
      ]
    },
    "name": "cdn_contact",
    "longname": "module:@unitybase/cdn~cdn_contact",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008555",
    "___s": true
  },
  {
    "comment": "/**\n * Contacts directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        8830,
        8877
      ],
      "filename": "_CDN_entities.js",
      "lineno": 510,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084943",
        "name": "cdn_contact_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Contacts directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_contact_ns",
    "longname": "module:@unitybase/cdn~cdn_contact_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008542",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        8978,
        9919
      ],
      "filename": "_CDN_entities.js",
      "lineno": 512,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084948",
        "name": "cdn_contact_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"contactTypeID\":0,\"value\":\"\",\"subjectID\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "static",
    "___id": "T000002R008543",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9072,
        9088
      ],
      "filename": "_CDN_entities.js",
      "lineno": 520,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084955",
        "name": "contactTypeID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "contactTypeID",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.contactTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008545",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9034,
        9039
      ],
      "filename": "_CDN_entities.js",
      "lineno": 516,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084953",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008544",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9481,
        9506
      ],
      "filename": "_CDN_entities.js",
      "lineno": 539,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084963",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008549",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9575,
        9591
      ],
      "filename": "_CDN_entities.js",
      "lineno": 544,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084966",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008550",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9803,
        9828
      ],
      "filename": "_CDN_entities.js",
      "lineno": 559,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084973",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008553",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9897,
        9916
      ],
      "filename": "_CDN_entities.js",
      "lineno": 564,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084976",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008554",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9644,
        9669
      ],
      "filename": "_CDN_entities.js",
      "lineno": 549,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084968",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008551",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9738,
        9754
      ],
      "filename": "_CDN_entities.js",
      "lineno": 554,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084971",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008552",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9421,
        9432
      ],
      "filename": "_CDN_entities.js",
      "lineno": 534,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084961",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008548",
    "___s": true
  },
  {
    "comment": "/**\n  * Reference to contact owner. No database constraint here, since we don't know all entities what want to store contacts. Entity developer must remove contacts in delete:before manually\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9350,
        9362
      ],
      "filename": "_CDN_entities.js",
      "lineno": 529,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084959",
        "name": "subjectID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Reference to contact owner. No database constraint here, since we don't know all entities what want to store contacts. Entity developer must remove contacts in delete:before manually",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "subjectID",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.subjectID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008547",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9121,
        9130
      ],
      "filename": "_CDN_entities.js",
      "lineno": 524,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084957",
        "name": "value",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "value",
    "longname": "module:@unitybase/cdn~cdn_contact_ns.attrs.value",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns.attrs",
    "scope": "static",
    "___id": "T000002R008546",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010562",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010561",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010840",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010559",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010558",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_contact_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contact_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010560",
    "___s": true
  },
  {
    "comment": "/**\n* Contact types directory\n* @type {cdn_contacttype_ns}\n*/",
    "meta": {
      "range": [
        11043,
        11085
      ],
      "filename": "_CDN_entities.js",
      "lineno": 632,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085017",
        "name": "cdn_contacttype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Contact types directory",
    "type": {
      "names": [
        "cdn_contacttype_ns"
      ]
    },
    "name": "cdn_contacttype",
    "longname": "module:@unitybase/cdn~cdn_contacttype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008568",
    "___s": true
  },
  {
    "comment": "/**\n * Contact types directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        10096,
        10147
      ],
      "filename": "_CDN_entities.js",
      "lineno": 576,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084983",
        "name": "cdn_contacttype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Contact types directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_contacttype_ns",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008556",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        10248,
        10974
      ],
      "filename": "_CDN_entities.js",
      "lineno": 578,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084988",
        "name": "cdn_contacttype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "static",
    "___id": "T000002R008557",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10346,
        10354
      ],
      "filename": "_CDN_entities.js",
      "lineno": 586,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084995",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008559",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10308,
        10313
      ],
      "filename": "_CDN_entities.js",
      "lineno": 582,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084993",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008558",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10536,
        10561
      ],
      "filename": "_CDN_entities.js",
      "lineno": 601,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085001",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008562",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10630,
        10646
      ],
      "filename": "_CDN_entities.js",
      "lineno": 606,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085004",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008563",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10858,
        10883
      ],
      "filename": "_CDN_entities.js",
      "lineno": 621,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085011",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008566",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10952,
        10971
      ],
      "filename": "_CDN_entities.js",
      "lineno": 626,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085014",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008567",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10699,
        10724
      ],
      "filename": "_CDN_entities.js",
      "lineno": 611,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085006",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008564",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10793,
        10809
      ],
      "filename": "_CDN_entities.js",
      "lineno": 616,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085009",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008565",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10476,
        10487
      ],
      "filename": "_CDN_entities.js",
      "lineno": 596,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084999",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008561",
    "___s": true
  },
  {
    "comment": "/**\n  * Contact type name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10409,
        10417
      ],
      "filename": "_CDN_entities.js",
      "lineno": 591,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100084997",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Contact type name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008560",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010567",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010566",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010841",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010564",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010563",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_contacttype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_contacttype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010565",
    "___s": true
  },
  {
    "comment": "/**\n* Correspondent indexes directory\n* @type {cdn_corrindex_ns}\n*/",
    "meta": {
      "range": [
        12249,
        12287
      ],
      "filename": "_CDN_entities.js",
      "lineno": 700,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085057",
        "name": "cdn_corrindex",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Correspondent indexes directory",
    "type": {
      "names": [
        "cdn_corrindex_ns"
      ]
    },
    "name": "cdn_corrindex",
    "longname": "module:@unitybase/cdn~cdn_corrindex",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008582",
    "___s": true
  },
  {
    "comment": "/**\n * Correspondent indexes directory\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        11176,
        11225
      ],
      "filename": "_CDN_entities.js",
      "lineno": 638,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085021",
        "name": "cdn_corrindex_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Correspondent indexes directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_corrindex_ns",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008569",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        11326,
        12174
      ],
      "filename": "_CDN_entities.js",
      "lineno": 640,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085026",
        "name": "cdn_corrindex_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"fullName\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "static",
    "___id": "T000002R008570",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of correspondent index\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11454,
        11462
      ],
      "filename": "_CDN_entities.js",
      "lineno": 649,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085033",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of correspondent index",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008572",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of correspondent index\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11605,
        11617
      ],
      "filename": "_CDN_entities.js",
      "lineno": 659,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085037",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full name of correspondent index",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008574",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11384,
        11389
      ],
      "filename": "_CDN_entities.js",
      "lineno": 644,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085031",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008571",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11736,
        11761
      ],
      "filename": "_CDN_entities.js",
      "lineno": 669,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085041",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008576",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11830,
        11846
      ],
      "filename": "_CDN_entities.js",
      "lineno": 674,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085044",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008577",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        12058,
        12083
      ],
      "filename": "_CDN_entities.js",
      "lineno": 689,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085051",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008580",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12152,
        12171
      ],
      "filename": "_CDN_entities.js",
      "lineno": 694,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085054",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008581",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11899,
        11924
      ],
      "filename": "_CDN_entities.js",
      "lineno": 679,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085046",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008578",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11993,
        12009
      ],
      "filename": "_CDN_entities.js",
      "lineno": 684,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085049",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008579",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11676,
        11687
      ],
      "filename": "_CDN_entities.js",
      "lineno": 664,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085039",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008575",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of correspondent index\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11527,
        11535
      ],
      "filename": "_CDN_entities.js",
      "lineno": 654,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085035",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of correspondent index",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008573",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010572",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010571",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010842",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010569",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010568",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_corrindex_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_corrindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010570",
    "___s": true
  },
  {
    "comment": "/**\n* Countries directory\n* @type {cdn_country_ns}\n*/",
    "meta": {
      "range": [
        14025,
        14059
      ],
      "filename": "_CDN_entities.js",
      "lineno": 804,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085111",
        "name": "cdn_country",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Countries directory",
    "type": {
      "names": [
        "cdn_country_ns"
      ]
    },
    "name": "cdn_country",
    "longname": "module:@unitybase/cdn~cdn_country",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008603",
    "___s": true
  },
  {
    "comment": "/**\n * Countries directory\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes unity\n */",
    "meta": {
      "range": [
        12382,
        12429
      ],
      "filename": "_CDN_entities.js",
      "lineno": 707,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085061",
        "name": "cdn_country_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Countries directory</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "unity"
    ],
    "name": "cdn_country_ns",
    "longname": "module:@unitybase/cdn~cdn_country_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008583",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        12530,
        13964
      ],
      "filename": "_CDN_entities.js",
      "lineno": 709,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085066",
        "name": "cdn_country_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"fullName\":\"\",\"intCode\":0,\"symbol2\":\"\",\"symbol3\":\"\",\"description\":null,\"phoneCode\":null,\"currencyID\":null,\"capitalID\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "static",
    "___id": "T000002R008584",
    "___s": true
  },
  {
    "comment": "/**\n  * Capital of the country -> cdn_city\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13392,
        13407
      ],
      "filename": "_CDN_entities.js",
      "lineno": 763,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085091",
        "name": "capitalID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Capital of the country -&gt; cdn_city",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "capitalID",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.capitalID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008595",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12642,
        12650
      ],
      "filename": "_CDN_entities.js",
      "lineno": 718,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085073",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008586",
    "___s": true
  },
  {
    "comment": "/**\n  * Main currency of the country -> cdn_currency\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13304,
        13320
      ],
      "filename": "_CDN_entities.js",
      "lineno": 758,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085089",
        "name": "currencyID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Main currency of the country -&gt; cdn_currency",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "currencyID",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.currencyID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008594",
    "___s": true
  },
  {
    "comment": "/**\n  * Country description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13134,
        13151
      ],
      "filename": "_CDN_entities.js",
      "lineno": 748,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085085",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Country description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008592",
    "___s": true
  },
  {
    "comment": "/**\n  * Full official name of the country\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12786,
        12798
      ],
      "filename": "_CDN_entities.js",
      "lineno": 728,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085077",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full official name of the country",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008588",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12586,
        12591
      ],
      "filename": "_CDN_entities.js",
      "lineno": 713,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085071",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008585",
    "___s": true
  },
  {
    "comment": "/**\n  * Digital code of the country\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12863,
        12873
      ],
      "filename": "_CDN_entities.js",
      "lineno": 733,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085079",
        "name": "intCode",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Digital code of the country",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "intCode",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.intCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008589",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13526,
        13551
      ],
      "filename": "_CDN_entities.js",
      "lineno": 773,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085095",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008597",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13620,
        13636
      ],
      "filename": "_CDN_entities.js",
      "lineno": 778,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085098",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008598",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13848,
        13873
      ],
      "filename": "_CDN_entities.js",
      "lineno": 793,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085105",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008601",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13942,
        13961
      ],
      "filename": "_CDN_entities.js",
      "lineno": 798,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085108",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008602",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13689,
        13714
      ],
      "filename": "_CDN_entities.js",
      "lineno": 783,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085100",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008599",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13783,
        13799
      ],
      "filename": "_CDN_entities.js",
      "lineno": 788,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085103",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008600",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13466,
        13477
      ],
      "filename": "_CDN_entities.js",
      "lineno": 768,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085093",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008596",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the country\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12707,
        12715
      ],
      "filename": "_CDN_entities.js",
      "lineno": 723,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085075",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the country",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008587",
    "___s": true
  },
  {
    "comment": "/**\n  * Country phone code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13207,
        13222
      ],
      "filename": "_CDN_entities.js",
      "lineno": 753,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085087",
        "name": "phoneCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Country phone code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "phoneCode",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.phoneCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008593",
    "___s": true
  },
  {
    "comment": "/**\n  * 2-character code of the country by ISO classification\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12964,
        12975
      ],
      "filename": "_CDN_entities.js",
      "lineno": 738,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085081",
        "name": "symbol2",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "2-character code of the country by ISO classification",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "symbol2",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.symbol2",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008590",
    "___s": true
  },
  {
    "comment": "/**\n  * 3-character code of the country by IOC classification\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13066,
        13077
      ],
      "filename": "_CDN_entities.js",
      "lineno": 743,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085083",
        "name": "symbol3",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "3-character code of the country by IOC classification",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "symbol3",
    "longname": "module:@unitybase/cdn~cdn_country_ns.attrs.symbol3",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns.attrs",
    "scope": "static",
    "___id": "T000002R008591",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_country_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010577",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_country_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010576",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_country_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010843",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_country_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010574",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_country_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010573",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_country_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_country_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010575",
    "___s": true
  },
  {
    "comment": "/**\n* Currencies dictionary\n* @type {cdn_currency_ns}\n*/",
    "meta": {
      "range": [
        15329,
        15365
      ],
      "filename": "_CDN_entities.js",
      "lineno": 883,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085155",
        "name": "cdn_currency",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Currencies dictionary",
    "type": {
      "names": [
        "cdn_currency_ns"
      ]
    },
    "name": "cdn_currency",
    "longname": "module:@unitybase/cdn~cdn_currency",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008619",
    "___s": true
  },
  {
    "comment": "/**\n * Currencies dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        14140,
        14188
      ],
      "filename": "_CDN_entities.js",
      "lineno": 810,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085115",
        "name": "cdn_currency_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Currencies dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_currency_ns",
    "longname": "module:@unitybase/cdn~cdn_currency_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008604",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        14289,
        15265
      ],
      "filename": "_CDN_entities.js",
      "lineno": 812,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085120",
        "name": "cdn_currency_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"intCode\":0,\"code3\":\"\",\"name\":\"\",\"curMult\":0,\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "static",
    "___id": "T000002R008605",
    "___s": true
  },
  {
    "comment": "/**\n  * 3-character code of currency\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14489,
        14498
      ],
      "filename": "_CDN_entities.js",
      "lineno": 826,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085129",
        "name": "code3",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "3-character code of currency",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code3",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.code3",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008608",
    "___s": true
  },
  {
    "comment": "/**\n  * Default multiplicity\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14618,
        14628
      ],
      "filename": "_CDN_entities.js",
      "lineno": 836,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085133",
        "name": "curMult",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Default multiplicity",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "curMult",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.curMult",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008610",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14693,
        14708
      ],
      "filename": "_CDN_entities.js",
      "lineno": 842,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085135",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Description\nDescription",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008611",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14346,
        14351
      ],
      "filename": "_CDN_entities.js",
      "lineno": 816,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085125",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008606",
    "___s": true
  },
  {
    "comment": "/**\n  * Digital code of currency\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14413,
        14423
      ],
      "filename": "_CDN_entities.js",
      "lineno": 821,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085127",
        "name": "intCode",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Digital code of currency",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "intCode",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.intCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008607",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14827,
        14852
      ],
      "filename": "_CDN_entities.js",
      "lineno": 852,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085139",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008613",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14921,
        14937
      ],
      "filename": "_CDN_entities.js",
      "lineno": 857,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085142",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008614",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        15149,
        15174
      ],
      "filename": "_CDN_entities.js",
      "lineno": 872,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085149",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008617",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15243,
        15262
      ],
      "filename": "_CDN_entities.js",
      "lineno": 877,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085152",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008618",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14990,
        15015
      ],
      "filename": "_CDN_entities.js",
      "lineno": 862,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085144",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008615",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15084,
        15100
      ],
      "filename": "_CDN_entities.js",
      "lineno": 867,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085147",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008616",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14767,
        14778
      ],
      "filename": "_CDN_entities.js",
      "lineno": 847,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085137",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008612",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of currency\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14552,
        14560
      ],
      "filename": "_CDN_entities.js",
      "lineno": 831,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085131",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of currency",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_currency_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns.attrs",
    "scope": "static",
    "___id": "T000002R008609",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010582",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010581",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010844",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010579",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010578",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_currency_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_currency_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010580",
    "___s": true
  },
  {
    "comment": "/**\n* External departments dictionary\n* @type {cdn_department_ns}\n*/",
    "meta": {
      "range": [
        17348,
        17388
      ],
      "filename": "_CDN_entities.js",
      "lineno": 999,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085217",
        "name": "cdn_department",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "External departments dictionary",
    "type": {
      "names": [
        "cdn_department_ns"
      ]
    },
    "name": "cdn_department",
    "longname": "module:@unitybase/cdn~cdn_department",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008643",
    "___s": true
  },
  {
    "comment": "/**\n * External departments dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        15478,
        15528
      ],
      "filename": "_CDN_entities.js",
      "lineno": 890,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085159",
        "name": "cdn_department_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>External departments dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "cdn_department_ns",
    "longname": "module:@unitybase/cdn~cdn_department_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008620",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        15629,
        17272
      ],
      "filename": "_CDN_entities.js",
      "lineno": 892,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085164",
        "name": "cdn_department_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":null,\"name\":\"\",\"fullName\":null,\"description\":null,\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"depTypeID\":null,\"organizationID\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "static",
    "___id": "T000002R008621",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the department\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15753,
        15763
      ],
      "filename": "_CDN_entities.js",
      "lineno": 901,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085171",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Code of the department",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008623",
    "___s": true
  },
  {
    "comment": "/**\n  * Type of the department -> cdn_deptype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16442,
        16457
      ],
      "filename": "_CDN_entities.js",
      "lineno": 941,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085187",
        "name": "depTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Type of the department -&gt; cdn_deptype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "depTypeID",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.depTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008631",
    "___s": true
  },
  {
    "comment": "/**\n  * Description of the department\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15986,
        16003
      ],
      "filename": "_CDN_entities.js",
      "lineno": 916,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085177",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description of the department",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008626",
    "___s": true
  },
  {
    "comment": "/**\n  * Full official name of the department\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15905,
        15919
      ],
      "filename": "_CDN_entities.js",
      "lineno": 911,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085175",
        "name": "fullName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full official name of the department",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008625",
    "___s": true
  },
  {
    "comment": "/**\n  * Department full official name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16350,
        16367
      ],
      "filename": "_CDN_entities.js",
      "lineno": 936,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085185",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department full official name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008630",
    "___s": true
  },
  {
    "comment": "/**\n  * Department full official name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16251,
        16268
      ],
      "filename": "_CDN_entities.js",
      "lineno": 931,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085183",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department full official name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008629",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15688,
        15693
      ],
      "filename": "_CDN_entities.js",
      "lineno": 896,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085169",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008622",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16834,
        16859
      ],
      "filename": "_CDN_entities.js",
      "lineno": 968,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085201",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008637",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16928,
        16944
      ],
      "filename": "_CDN_entities.js",
      "lineno": 973,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085204",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008638",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16596,
        16609
      ],
      "filename": "_CDN_entities.js",
      "lineno": 950,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085191",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008633",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16640,
        16663
      ],
      "filename": "_CDN_entities.js",
      "lineno": 954,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085193",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008634",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16694,
        16715
      ],
      "filename": "_CDN_entities.js",
      "lineno": 958,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085196",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008635",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        17156,
        17181
      ],
      "filename": "_CDN_entities.js",
      "lineno": 988,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085211",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008641",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17250,
        17269
      ],
      "filename": "_CDN_entities.js",
      "lineno": 993,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085214",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008642",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16997,
        17022
      ],
      "filename": "_CDN_entities.js",
      "lineno": 978,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085206",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008639",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17091,
        17107
      ],
      "filename": "_CDN_entities.js",
      "lineno": 983,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085209",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008640",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16774,
        16785
      ],
      "filename": "_CDN_entities.js",
      "lineno": 963,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085199",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008636",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the department\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15823,
        15831
      ],
      "filename": "_CDN_entities.js",
      "lineno": 906,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085173",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the department",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008624",
    "___s": true
  },
  {
    "comment": "/**\n  * Department name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16154,
        16167
      ],
      "filename": "_CDN_entities.js",
      "lineno": 926,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085181",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008628",
    "___s": true
  },
  {
    "comment": "/**\n  * Department name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16073,
        16086
      ],
      "filename": "_CDN_entities.js",
      "lineno": 921,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085179",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008627",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent external organization -> cdn_organization\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16543,
        16563
      ],
      "filename": "_CDN_entities.js",
      "lineno": 946,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085189",
        "name": "organizationID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent external organization -&gt; cdn_organization",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "organizationID",
    "longname": "module:@unitybase/cdn~cdn_department_ns.attrs.organizationID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R008632",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_department_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010587",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_department_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010586",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_department_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010845",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_department_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010584",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_department_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010588",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_department_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010583",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_department_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010585",
    "___s": true
  },
  {
    "comment": "/**\n* Department types dictionary\n* @type {cdn_deptype_ns}\n*/",
    "meta": {
      "range": [
        18456,
        18490
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1062,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085255",
        "name": "cdn_deptype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Department types dictionary",
    "type": {
      "names": [
        "cdn_deptype_ns"
      ]
    },
    "name": "cdn_deptype",
    "longname": "module:@unitybase/cdn~cdn_deptype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008656",
    "___s": true
  },
  {
    "comment": "/**\n * Department types dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        17475,
        17522
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1005,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085221",
        "name": "cdn_deptype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Department types dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_deptype_ns",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008644",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        17623,
        18387
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1007,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085226",
        "name": "cdn_deptype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "static",
    "___id": "T000002R008645",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the department type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17749,
        17757
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1016,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085233",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the department type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008647",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17679,
        17684
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1011,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085231",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008646",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        17949,
        17974
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1031,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085239",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008650",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18043,
        18059
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1036,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085242",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008651",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18271,
        18296
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1051,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085249",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008654",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18365,
        18384
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1056,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085252",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008655",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18112,
        18137
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1041,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085244",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008652",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18206,
        18222
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1046,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085247",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008653",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17889,
        17900
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1026,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085237",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008649",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the department type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17822,
        17830
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1021,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085235",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the department type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008648",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010593",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010592",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010846",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010590",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010589",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_deptype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_deptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010591",
    "___s": true
  },
  {
    "comment": "/**\n* List of employees of external organizations\n* @type {cdn_employee_ns}\n*/",
    "meta": {
      "range": [
        21828,
        21864
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1253,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085347",
        "name": "cdn_employee",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of employees of external organizations",
    "type": {
      "names": [
        "cdn_employee_ns"
      ]
    },
    "name": "cdn_employee",
    "longname": "module:@unitybase/cdn~cdn_employee",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008695",
    "___s": true
  },
  {
    "comment": "/**\n * List of employees of external organizations\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        18615,
        18663
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1069,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085259",
        "name": "cdn_employee_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of employees of external organizations</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "cdn_employee_ns",
    "longname": "module:@unitybase/cdn~cdn_employee_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008657",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        18764,
        21742
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1071,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085264",
        "name": "cdn_employee_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"lastName\":\"\",\"firstName\":\"\",\"middleName\":null,\"description\":null,\"sexType\":\"\",\"uniqNum\":null,\"suffix\":null,\"shortFIO\":\"\",\"fullFIO\":\"\",\"apply\":null,\"lastNameGen\":null,\"lastNameDat\":null,\"firstNameGen\":null,\"firstNameDat\":null,\"middleNameGen\":null,\"middleNameDat\":null,\"shortFIOGen\":null,\"shortFIODat\":null,\"fullFIOGen\":null,\"fullFIODat\":null,\"applyGen\":null,\"applyDat\":null,\"departmentID\":null,\"organizationID\":0,\"addrText\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "static",
    "___id": "T000002R008658",
    "___s": true
  },
  {
    "comment": "/**\n  * Formulation of the recipient, that will appear in the formation of outgoing document\n  * @type {String}\n  */",
    "meta": {
      "range": [
        21019,
        21033
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1200,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085319",
        "name": "addrText",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Formulation of the recipient, that will appear in the formation of outgoing document",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "addrText",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.addrText",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008684",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19521,
        19532
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1125,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085289",
        "name": "apply",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "apply",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.apply",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008669",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20630,
        20644
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1185,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085313",
        "name": "applyDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyDat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.applyDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008681",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20526,
        20540
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085311",
        "name": "applyGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.applyGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008680",
    "___s": true
  },
  {
    "comment": "/**\n  * Department of external organization, which employee belongs -> cdn_department\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20759,
        20777
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1190,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085315",
        "name": "departmentID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department of external organization, which employee belongs -&gt; cdn_department",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "departmentID",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.departmentID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008682",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19096,
        19113
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1095,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085277",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008663",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        18951,
        18964
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1085,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085273",
        "name": "firstName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee first name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstName",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.firstName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008661",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19874,
        19892
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1145,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085297",
        "name": "firstNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee first name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameDat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.firstNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008673",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19784,
        19802
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1140,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085295",
        "name": "firstNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee first name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.firstNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008672",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: Anton Olegovich Ivanov\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19435,
        19446
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1120,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085287",
        "name": "fullFIO",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Example: Anton Olegovich Ivanov",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIO",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.fullFIO",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008668",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20418,
        20434
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1175,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085309",
        "name": "fullFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIODat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.fullFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008679",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20331,
        20347
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1170,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085307",
        "name": "fullFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIOGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.fullFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008678",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18821,
        18826
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1075,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085269",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008659",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        18882,
        18894
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1080,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085271",
        "name": "lastName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee last name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastName",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.lastName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008660",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19693,
        19710
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1135,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085293",
        "name": "lastNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee last name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameDat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.lastNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008671",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19605,
        19622
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1130,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085291",
        "name": "lastNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee last name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.lastNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008670",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        21304,
        21329
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1222,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085331",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008689",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        21398,
        21414
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1227,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085334",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008690",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        21066,
        21079
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1204,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085321",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008685",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        21110,
        21133
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1208,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085323",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008686",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        21164,
        21185
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1212,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085326",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008687",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        21626,
        21651
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1242,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085341",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008693",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        21720,
        21739
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1247,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085344",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008694",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        21467,
        21492
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1232,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085336",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008691",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        21561,
        21577
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1237,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085339",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008692",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        21244,
        21255
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1217,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085329",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008688",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19022,
        19038
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1090,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085275",
        "name": "middleName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleName",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.middleName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008662",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20059,
        20078
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1155,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085301",
        "name": "middleNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameDat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.middleNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008675",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19967,
        19986
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1150,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085299",
        "name": "middleNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.middleNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008674",
    "___s": true
  },
  {
    "comment": "/**\n  * External organization, which employee belongs -> cdn_organization\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20880,
        20897
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1195,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085317",
        "name": "organizationID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "External organization, which employee belongs -&gt; cdn_organization",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "organizationID",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.organizationID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008683",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee sex\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19163,
        19174
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1100,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085279",
        "name": "sexType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee sex",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "sexType",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.sexType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008664",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: A.O. Ivanov\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19354,
        19366
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1115,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085285",
        "name": "shortFIO",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Example: A.O. Ivanov",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIO",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.shortFIO",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008667",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee short name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20241,
        20258
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1165,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085305",
        "name": "shortFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee short name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIODat",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.shortFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008677",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee short name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20152,
        20169
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1160,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085303",
        "name": "shortFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee short name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIOGen",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.shortFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008676",
    "___s": true
  },
  {
    "comment": "/**\n  * Suffix\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19284,
        19296
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1110,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085283",
        "name": "suffix",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Suffix",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "suffix",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.suffix",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008666",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19227,
        19240
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1105,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085281",
        "name": "uniqNum",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "uniqNum",
    "longname": "module:@unitybase/cdn~cdn_employee_ns.attrs.uniqNum",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R008665",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010598",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010597",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010847",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010595",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010599",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010594",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_employee_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010596",
    "___s": true
  },
  {
    "comment": "/**\n* Organization&#39;s current accounts dictionary\n* @type {cdn_orgaccount_ns}\n*/",
    "meta": {
      "range": [
        23285,
        23325
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1336,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085393",
        "name": "cdn_orgaccount",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Organization's current accounts dictionary",
    "type": {
      "names": [
        "cdn_orgaccount_ns"
      ]
    },
    "name": "cdn_orgaccount",
    "longname": "module:@unitybase/cdn~cdn_orgaccount",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008712",
    "___s": true
  },
  {
    "comment": "/**\n * Organization&#39;s current accounts dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        21970,
        22020
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1259,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085351",
        "name": "cdn_orgaccount_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Organization's current accounts dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_orgaccount_ns",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008696",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        22121,
        23194
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1261,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085356",
        "name": "cdn_orgaccount_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"organizationID\":0,\"currencyID\":0,\"bankID\":0,\"code\":\"\",\"acctype\":\"\",\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "static",
    "___id": "T000002R008697",
    "___s": true
  },
  {
    "comment": "/**\n  * Type of the account\n  * @type {String}\n  */",
    "meta": {
      "range": [
        22562,
        22573
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1290,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085371",
        "name": "acctype",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Type of the account",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "acctype",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.acctype",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008703",
    "___s": true
  },
  {
    "comment": "/**\n  * Bank of the account -> cdn_bank\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22431,
        22440
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1280,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085367",
        "name": "bankID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Bank of the account -&gt; cdn_bank",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "bankID",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.bankID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008701",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the account\n  * @type {String}\n  */",
    "meta": {
      "range": [
        22497,
        22505
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1285,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085369",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the account",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008702",
    "___s": true
  },
  {
    "comment": "/**\n  * Currency of the account -> cdn_currency\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22349,
        22362
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1275,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085365",
        "name": "currencyID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Currency of the account -&gt; cdn_currency",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "currencyID",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.currencyID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008700",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        22622,
        22637
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1295,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085373",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008704",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22180,
        22185
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1265,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085361",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008698",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        22756,
        22781
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1305,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085377",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008706",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22850,
        22866
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1310,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085380",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008707",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        23078,
        23103
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1325,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085387",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008710",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        23172,
        23191
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1330,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085390",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008711",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        22919,
        22944
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1315,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085382",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008708",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        23013,
        23029
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1320,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085385",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008709",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22696,
        22707
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1300,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085375",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008705",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization -> cdn_organization\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        22255,
        22272
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1270,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085363",
        "name": "organizationID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Organization -&gt; cdn_organization",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "organizationID",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs.organizationID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R008699",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010604",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010603",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010848",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010601",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010600",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_orgaccount_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010602",
    "___s": true
  },
  {
    "comment": "/**\n* List of external organizations\n* @type {cdn_organization_ns}\n*/",
    "meta": {
      "range": [
        26090,
        26134
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1483,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085467",
        "name": "cdn_organization",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of external organizations",
    "type": {
      "names": [
        "cdn_organization_ns"
      ]
    },
    "name": "cdn_organization",
    "longname": "module:@unitybase/cdn~cdn_organization",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008742",
    "___s": true
  },
  {
    "comment": "/**\n * List of external organizations\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes fts\n */",
    "meta": {
      "range": [
        23451,
        23503
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1344,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085397",
        "name": "cdn_organization_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of external organizations</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "fts"
    ],
    "name": "cdn_organization_ns",
    "longname": "module:@unitybase/cdn~cdn_organization_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008713",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        23604,
        26013
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1346,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085402",
        "name": "cdn_organization_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":null,\"OKPOCode\":null,\"taxCode\":null,\"vatCode\":null,\"name\":\"\",\"fullName\":\"\",\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"description\":null,\"orgBusinessTypeID\":null,\"orgOwnershipTypeID\":null,\"corrIndexID\":null,\"addrText\":null,\"caption\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "static",
    "___id": "T000002R008714",
    "___s": true
  },
  {
    "comment": "/**\n  * Formulation of the recipient, that will appear in the formation of PDF outgoing document\n  * @type {String}\n  */",
    "meta": {
      "range": [
        25232,
        25246
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1425,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085437",
        "name": "addrText",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Formulation of the recipient, that will appear in the formation of PDF outgoing document",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "addrText",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.addrText",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008730",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        25291,
        25304
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1430,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085439",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008731",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        23734,
        23744
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1355,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085409",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008716",
    "___s": true
  },
  {
    "comment": "/**\n  * Index of correspondent -> cdn_corrindex\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25089,
        25106
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1420,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085435",
        "name": "corrIndexID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Index of correspondent -&gt; cdn_corrindex",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "corrIndexID",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.corrIndexID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008729",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24794,
        24811
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1405,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085429",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008726",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24242,
        24254
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1380,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085419",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008721",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration, in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24715,
        24732
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1400,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085427",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration, in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008725",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration, in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24561,
        24578
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1395,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085425",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration, in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008724",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        23665,
        23670
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1350,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085407",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008715",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        25575,
        25600
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1452,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085451",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008736",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25669,
        25685
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1457,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085454",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008737",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25337,
        25350
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1434,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085441",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008732",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        25381,
        25404
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1438,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085443",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008733",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        25435,
        25456
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1442,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085446",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008734",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        25897,
        25922
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1472,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085461",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008740",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25991,
        26010
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1477,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085464",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008741",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        25738,
        25763
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1462,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085456",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008738",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25832,
        25848
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1467,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085459",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008739",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        25515,
        25526
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1447,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085449",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008735",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of organization without the quotes and abbreviations\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24113,
        24121
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1375,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085417",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of organization without the quotes and abbreviations",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008720",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24409,
        24422
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1390,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085423",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008723",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24326,
        24339
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1385,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085421",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008722",
    "___s": true
  },
  {
    "comment": "/**\n  * Common classifier of enterprises and organizations (CCEO)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        23839,
        23853
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1360,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085411",
        "name": "OKPOCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Common classifier of enterprises and organizations (CCEO)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "OKPOCode",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.OKPOCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008717",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization type -> cdn_orgbusinesstype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        24889,
        24912
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1410,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085431",
        "name": "orgBusinessTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization type -&gt; cdn_orgbusinesstype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "orgBusinessTypeID",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.orgBusinessTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008727",
    "___s": true
  },
  {
    "comment": "/**\n  * Ownership type -> cdn_orgownershiptype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        24988,
        25012
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1415,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085433",
        "name": "orgOwnershipTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Ownership type -&gt; cdn_orgownershiptype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "orgOwnershipTypeID",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.orgOwnershipTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008728",
    "___s": true
  },
  {
    "comment": "/**\n  * Tax number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        23901,
        23914
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1365,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085413",
        "name": "taxCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Tax number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "taxCode",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.taxCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008718",
    "___s": true
  },
  {
    "comment": "/**\n  * VAT (value-added tax) registration certificate number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        24005,
        24018
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1370,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085415",
        "name": "vatCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "VAT (value-added tax) registration certificate number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "vatCode",
    "longname": "module:@unitybase/cdn~cdn_organization_ns.attrs.vatCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R008719",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010609",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010608",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010849",
    "___s": true
  },
  {
    "comment": "/**\n   * Full text search query\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7991,
        8013
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 316,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008852",
        "name": "fts",
        "type": "FunctionExpression"
      }
    },
    "description": "Full text search query",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "fts",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#fts",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "fts.fts"
    ],
    "mixed": true,
    "___id": "T000002R010611",
    "___s": true
  },
  {
    "comment": "/**\n   * Ce-create entity FTS index\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        8110,
        8139
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 322,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008856",
        "name": "ftsreindex",
        "type": "FunctionExpression"
      }
    },
    "description": "Ce-create entity FTS index",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "ftsreindex",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#ftsreindex",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "fts.ftsreindex"
    ],
    "mixed": true,
    "___id": "T000002R010612",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010606",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010610",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010605",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_organization_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010607",
    "___s": true
  },
  {
    "comment": "/**\n* Organization types dictionary (LTD etc.)\n* @type {cdn_orgbusinesstype_ns}\n*/",
    "meta": {
      "range": [
        27559,
        27609
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1561,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085511",
        "name": "cdn_orgbusinesstype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Organization types dictionary (LTD etc.)",
    "type": {
      "names": [
        "cdn_orgbusinesstype_ns"
      ]
    },
    "name": "cdn_orgbusinesstype",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008758",
    "___s": true
  },
  {
    "comment": "/**\n * Organization types dictionary (LTD etc.)\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        26234,
        26289
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1489,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085471",
        "name": "cdn_orgbusinesstype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Organization types dictionary (LTD etc.)</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_orgbusinesstype_ns",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008743",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        26390,
        27469
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1491,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085476",
        "name": "cdn_orgbusinesstype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"shortName\":null,\"name\":\"\",\"fullName\":null,\"isGovAuthority\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "static",
    "___id": "T000002R008744",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the organization type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        26526,
        26534
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1500,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085483",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the organization type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008746",
    "___s": true
  },
  {
    "comment": "/**\n  * Description of the organization type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        26768,
        26782
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1515,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085489",
        "name": "fullName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description of the organization type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008749",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        26454,
        26459
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1495,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085481",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008745",
    "___s": true
  },
  {
    "comment": "/**\n  * Sign, that the organization of this type is a government authority\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        26887,
        26912
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1520,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085491",
        "name": "isGovAuthority",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Sign, that the organization of this type is a government authority",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isGovAuthority",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.isGovAuthority",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008750",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        27031,
        27056
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1530,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085495",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008752",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        27125,
        27141
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1535,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085498",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008753",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        27353,
        27378
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1550,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085505",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008756",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        27447,
        27466
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1555,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085508",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008757",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        27194,
        27219
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1540,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085500",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008754",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        27288,
        27304
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1545,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085503",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008755",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        26971,
        26982
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1525,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085493",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008751",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the organization type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        26686,
        26694
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1510,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085487",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the organization type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008748",
    "___s": true
  },
  {
    "comment": "/**\n  * Acronim of the organization type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        26604,
        26619
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1505,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085485",
        "name": "shortName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Acronim of the organization type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortName",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs.shortName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008747",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010617",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010616",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010850",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010614",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010613",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_orgbusinesstype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgbusinesstype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010615",
    "___s": true
  },
  {
    "comment": "/**\n* Types of ownership\n* @type {cdn_orgownershiptype_ns}\n*/",
    "meta": {
      "range": [
        28849,
        28901
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1634,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085553",
        "name": "cdn_orgownershiptype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Types of ownership",
    "type": {
      "names": [
        "cdn_orgownershiptype_ns"
      ]
    },
    "name": "cdn_orgownershiptype",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008773",
    "___s": true
  },
  {
    "comment": "/**\n * Types of ownership\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        27687,
        27743
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1567,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085515",
        "name": "cdn_orgownershiptype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Types of ownership</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_orgownershiptype_ns",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008759",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        27844,
        28780
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1569,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085520",
        "name": "cdn_orgownershiptype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"shortName\":null,\"name\":\"\",\"fullName\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "static",
    "___id": "T000002R008760",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the ownership type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        27978,
        27986
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1578,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085527",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the ownership type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008762",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of the ownership type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        28209,
        28223
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1593,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085533",
        "name": "fullName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name of the ownership type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008765",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        27909,
        27914
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1573,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085525",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008761",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        28342,
        28367
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1603,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085537",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008767",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        28436,
        28452
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1608,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085540",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008768",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        28664,
        28689
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1623,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085547",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008771",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        28758,
        28777
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1628,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085550",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008772",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        28505,
        28530
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1613,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085542",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008769",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        28599,
        28615
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1618,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085545",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008770",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        28282,
        28293
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1598,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085535",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008766",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the ownership type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        28132,
        28140
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1588,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085531",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the ownership type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008764",
    "___s": true
  },
  {
    "comment": "/**\n  * Acronim of the ownership type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        28053,
        28068
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1583,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085529",
        "name": "shortName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Acronim of the ownership type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortName",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs.shortName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008763",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010622",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010621",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010851",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010619",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010618",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_orgownershiptype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_orgownershiptype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010620",
    "___s": true
  },
  {
    "comment": "/**\n* Physical persons dictionary.\n * The directory stores a list of persons (physical persons)\n* @type {cdn_person_ns}\n*/",
    "meta": {
      "range": [
        32493,
        32525
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1843,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085651",
        "name": "cdn_person",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Physical persons dictionary.\nThe directory stores a list of persons (physical persons)",
    "type": {
      "names": [
        "cdn_person_ns"
      ]
    },
    "name": "cdn_person",
    "longname": "module:@unitybase/cdn~cdn_person",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008815",
    "___s": true
  },
  {
    "comment": "/**\n * Physical persons dictionary.\n * The directory stores a list of persons (physical persons)\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes fts\n */",
    "meta": {
      "range": [
        29086,
        29132
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1643,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085557",
        "name": "cdn_person_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Physical persons dictionary.\nThe directory stores a list of persons (physical persons)</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "fts"
    ],
    "name": "cdn_person_ns",
    "longname": "module:@unitybase/cdn~cdn_person_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008774",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        29233,
        32363
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1645,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085562",
        "name": "cdn_person_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"lastName\":\"\",\"firstName\":\"\",\"middleName\":null,\"identCard\":null,\"workPlacePos\":null,\"birthDate\":null,\"description\":null,\"sexType\":\"\",\"suffix\":null,\"shortFIO\":null,\"fullFIO\":\"\",\"apply\":null,\"photo\":null,\"lastNameGen\":null,\"lastNameDat\":null,\"firstNameGen\":null,\"firstNameDat\":null,\"middleNameGen\":null,\"middleNameDat\":null,\"shortFIOGen\":null,\"shortFIODat\":null,\"fullFIOGen\":null,\"fullFIODat\":null,\"applyGen\":null,\"applyDat\":null,\"regionID\":null,\"socialstatusID\":null,\"categoryID\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "static",
    "___id": "T000002R008775",
    "___s": true
  },
  {
    "comment": "/**\n  * Apply to the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30176,
        30187
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1709,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085591",
        "name": "apply",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Apply to the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "apply",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.apply",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008788",
    "___s": true
  },
  {
    "comment": "/**\n  * Apply to the person in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        31356,
        31370
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1774,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085617",
        "name": "applyDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Apply to the person in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyDat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.applyDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008801",
    "___s": true
  },
  {
    "comment": "/**\n  * Apply to the person in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        31270,
        31284
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1769,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085615",
        "name": "applyGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Apply to the person in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.applyGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008800",
    "___s": true
  },
  {
    "comment": "/**\n  * Birthday of the person\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        29736,
        29751
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1679,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085579",
        "name": "birthDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Birthday of the person",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "birthDate",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.birthDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008782",
    "___s": true
  },
  {
    "comment": "/**\n  * Category position -> cdn_personcategory\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        31638,
        31654
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1789,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085623",
        "name": "categoryID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Category position -&gt; cdn_personcategory",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "categoryID",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.categoryID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008804",
    "___s": true
  },
  {
    "comment": "/**\n  * Description of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29814,
        29831
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1684,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085581",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008783",
    "___s": true
  },
  {
    "comment": "/**\n  * First name of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29428,
        29441
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1659,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085571",
        "name": "firstName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "First name of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstName",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.firstName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008778",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s first name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30612,
        30630
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1734,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085601",
        "name": "firstNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's first name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameDat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.firstNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008793",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s first name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30518,
        30536
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1729,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085599",
        "name": "firstNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's first name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.firstNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008792",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: Antonov Ivan Petrovich\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30108,
        30119
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1704,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085589",
        "name": "fullFIO",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Example: Antonov Ivan Petrovich",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIO",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.fullFIO",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008787",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        31180,
        31196
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1764,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085613",
        "name": "fullFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIODat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.fullFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008799",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        31089,
        31105
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1759,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085611",
        "name": "fullFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIOGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.fullFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008798",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        29288,
        29293
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1649,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085567",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008776",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s identity card\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29584,
        29599
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1669,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085575",
        "name": "identCard",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's identity card",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "identCard",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.identCard",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008780",
    "___s": true
  },
  {
    "comment": "/**\n  * Last name of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29354,
        29366
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1654,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085569",
        "name": "lastName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Last name of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastName",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.lastName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008777",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s last name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30423,
        30440
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1724,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085597",
        "name": "lastNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's last name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameDat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.lastNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008791",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s last name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30331,
        30348
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1719,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085595",
        "name": "lastNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's last name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.lastNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008790",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        31925,
        31950
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1811,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085635",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008809",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        32019,
        32035
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1816,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085638",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008810",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        31687,
        31700
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1793,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085625",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008805",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        31731,
        31754
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1797,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085627",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008806",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        31785,
        31806
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1801,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085630",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008807",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        32247,
        32272
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1831,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085645",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008813",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        32341,
        32360
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1836,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085648",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008814",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        32088,
        32113
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1821,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085640",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008811",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        32182,
        32198
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1826,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085643",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008812",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        31865,
        31876
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1806,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085633",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008808",
    "___s": true
  },
  {
    "comment": "/**\n  * Middle name of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29504,
        29520
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1664,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085573",
        "name": "middleName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Middle name of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleName",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.middleName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008779",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s middle name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30805,
        30824
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1744,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085605",
        "name": "middleNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's middle name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameDat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.middleNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008795",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s middle name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30709,
        30728
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1739,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085603",
        "name": "middleNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's middle name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.middleNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008794",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s photo\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30243,
        30254
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1714,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085593",
        "name": "photo",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's photo",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "photo",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.photo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008789",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s region -> cdn_region\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        31441,
        31455
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1779,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085619",
        "name": "regionID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's region -&gt; cdn_region",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "regionID",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.regionID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008802",
    "___s": true
  },
  {
    "comment": "/**\n  * Sex of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29886,
        29897
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1689,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085583",
        "name": "sexType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Sex of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "sexType",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.sexType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008784",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: Antonov I.P.\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30025,
        30039
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1699,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085587",
        "name": "shortFIO",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Example: Antonov I.P.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIO",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.shortFIO",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008786",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s short name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30995,
        31012
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1754,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085609",
        "name": "shortFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's short name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIODat",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.shortFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008797",
    "___s": true
  },
  {
    "comment": "/**\n  * Person&#39;s short name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        30902,
        30919
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1749,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085607",
        "name": "shortFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Person's short name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIOGen",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.shortFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008796",
    "___s": true
  },
  {
    "comment": "/**\n  * Social status position -> cdn_personsocialstatus\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        31541,
        31561
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1784,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085621",
        "name": "socialstatusID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Social status position -&gt; cdn_personsocialstatus",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "socialstatusID",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.socialstatusID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008803",
    "___s": true
  },
  {
    "comment": "/**\n  * Sufix of the person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29954,
        29966
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1694,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085585",
        "name": "suffix",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Sufix of the person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "suffix",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.suffix",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008785",
    "___s": true
  },
  {
    "comment": "/**\n  * Place of work, position\n  * @type {String}\n  */",
    "meta": {
      "range": [
        29660,
        29678
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1674,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085577",
        "name": "workPlacePos",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Place of work, position",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "workPlacePos",
    "longname": "module:@unitybase/cdn~cdn_person_ns.attrs.workPlacePos",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns.attrs",
    "scope": "static",
    "___id": "T000002R008781",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_person_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010627",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_person_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010626",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_person_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010852",
    "___s": true
  },
  {
    "comment": "/**\n   * Full text search query\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7991,
        8013
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 316,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008852",
        "name": "fts",
        "type": "FunctionExpression"
      }
    },
    "description": "Full text search query",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "fts",
    "longname": "module:@unitybase/cdn~cdn_person_ns#fts",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "fts.fts"
    ],
    "mixed": true,
    "___id": "T000002R010629",
    "___s": true
  },
  {
    "comment": "/**\n   * Ce-create entity FTS index\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        8110,
        8139
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 322,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008856",
        "name": "ftsreindex",
        "type": "FunctionExpression"
      }
    },
    "description": "Ce-create entity FTS index",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "ftsreindex",
    "longname": "module:@unitybase/cdn~cdn_person_ns#ftsreindex",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "fts.ftsreindex"
    ],
    "mixed": true,
    "___id": "T000002R010630",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_person_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010624",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_person_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010628",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_person_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010623",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_person_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_person_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010625",
    "___s": true
  },
  {
    "comment": "/**\n* Ctegory of persons.\n * The directory stores a list of categories or physical persons\n* @type {cdn_personcategory_ns}\n*/",
    "meta": {
      "range": [
        33694,
        33742
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1908,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085689",
        "name": "cdn_personcategory",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Ctegory of persons.\nThe directory stores a list of categories or physical persons",
    "type": {
      "names": [
        "cdn_personcategory_ns"
      ]
    },
    "name": "cdn_personcategory",
    "longname": "module:@unitybase/cdn~cdn_personcategory",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008828",
    "___s": true
  },
  {
    "comment": "/**\n * Ctegory of persons.\n * The directory stores a list of categories or physical persons\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        32669,
        32723
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1850,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085655",
        "name": "cdn_personcategory_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Ctegory of persons.\nThe directory stores a list of categories or physical persons</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_personcategory_ns",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008816",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        32824,
        33561
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1852,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085660",
        "name": "cdn_personcategory_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "static",
    "___id": "T000002R008817",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        32934,
        32942
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1861,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085667",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008819",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        32887,
        32892
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1856,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085665",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008818",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        33123,
        33148
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1876,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085673",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008822",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        33217,
        33233
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1881,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085676",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008823",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        33445,
        33470
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1896,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085683",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008826",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        33539,
        33558
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1901,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085686",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008827",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        33286,
        33311
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1886,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085678",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008824",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        33380,
        33396
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1891,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085681",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008825",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        33063,
        33074
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1871,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085671",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008821",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of category\n  * @type {String}\n  */",
    "meta": {
      "range": [
        32996,
        33004
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1866,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085669",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of category",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns.attrs",
    "scope": "static",
    "___id": "T000002R008820",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010635",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010634",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010853",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010632",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010631",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_personcategory_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personcategory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010633",
    "___s": true
  },
  {
    "comment": "/**\n* Dictionary of social status.\n * The directory stores a list of social status for individuals\n* @type {cdn_personsocialstatus_ns}\n*/",
    "meta": {
      "range": [
        34944,
        35000
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1973,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085727",
        "name": "cdn_personsocialstatus",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Dictionary of social status.\nThe directory stores a list of social status for individuals",
    "type": {
      "names": [
        "cdn_personsocialstatus_ns"
      ]
    },
    "name": "cdn_personsocialstatus",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008841",
    "___s": true
  },
  {
    "comment": "/**\n * Dictionary of social status.\n * The directory stores a list of social status for individuals\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        33894,
        33952
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1915,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085693",
        "name": "cdn_personsocialstatus_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Dictionary of social status.\nThe directory stores a list of social status for individuals</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_personsocialstatus_ns",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008829",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        34053,
        34799
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1917,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085698",
        "name": "cdn_personsocialstatus_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "static",
    "___id": "T000002R008830",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        34167,
        34175
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1926,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085705",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008832",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        34120,
        34125
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1921,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085703",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008831",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        34361,
        34386
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1941,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085711",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008835",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        34455,
        34471
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1946,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085714",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008836",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        34683,
        34708
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1961,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085721",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008839",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        34777,
        34796
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1966,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085724",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008840",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        34524,
        34549
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1951,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085716",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008837",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        34618,
        34634
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1956,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085719",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008838",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        34301,
        34312
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1936,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085709",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008834",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of social status\n  * @type {String}\n  */",
    "meta": {
      "range": [
        34234,
        34242
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1931,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085707",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of social status",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns.attrs",
    "scope": "static",
    "___id": "T000002R008833",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010640",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010639",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010854",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010637",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010636",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_personsocialstatus_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_personsocialstatus_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010638",
    "___s": true
  },
  {
    "comment": "/**\n* ZIP codes\n* @type {cdn_postindex_ns}\n*/",
    "meta": {
      "range": [
        36051,
        36089
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2040,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085767",
        "name": "cdn_postindex",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "ZIP codes",
    "type": {
      "names": [
        "cdn_postindex_ns"
      ]
    },
    "name": "cdn_postindex",
    "longname": "module:@unitybase/cdn~cdn_postindex",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008855",
    "___s": true
  },
  {
    "comment": "/**\n * ZIP codes\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        35069,
        35118
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1979,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085731",
        "name": "cdn_postindex_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>ZIP codes</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_postindex_ns",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008842",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        35219,
        35998
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1981,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085736",
        "name": "cdn_postindex_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"streetID\":0,\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "static",
    "___id": "T000002R008843",
    "___s": true
  },
  {
    "comment": "/**\n  * Index\n  * @type {String}\n  */",
    "meta": {
      "range": [
        35325,
        35333
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1990,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085743",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Index",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008845",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        35426,
        35441
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1999,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085747",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008847",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35277,
        35282
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1985,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085741",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008844",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        35560,
        35585
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2009,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085751",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008849",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35654,
        35670
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2014,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085754",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008850",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        35882,
        35907
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2029,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085761",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008853",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35976,
        35995
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2034,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085764",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008854",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        35723,
        35748
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2019,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085756",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008851",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35817,
        35833
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2024,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085759",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008852",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35500,
        35511
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2004,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085749",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008848",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        35366,
        35377
      ],
      "filename": "_CDN_entities.js",
      "lineno": 1994,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085745",
        "name": "streetID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "streetID",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns.attrs.streetID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns.attrs",
    "scope": "static",
    "___id": "T000002R008846",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010645",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010644",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010855",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010642",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010641",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_postindex_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_postindex_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010643",
    "___s": true
  },
  {
    "comment": "/**\n* Dictionary of standard professions\n* @type {cdn_profession_ns}\n*/",
    "meta": {
      "range": [
        37196,
        37236
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2107,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085807",
        "name": "cdn_profession",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Dictionary of standard professions",
    "type": {
      "names": [
        "cdn_profession_ns"
      ]
    },
    "name": "cdn_profession",
    "longname": "module:@unitybase/cdn~cdn_profession",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008869",
    "___s": true
  },
  {
    "comment": "/**\n * Dictionary of standard professions\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        36183,
        36233
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2046,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085771",
        "name": "cdn_profession_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Dictionary of standard professions</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_profession_ns",
    "longname": "module:@unitybase/cdn~cdn_profession_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008856",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        36334,
        37117
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2048,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085776",
        "name": "cdn_profession_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "static",
    "___id": "T000002R008857",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        36440,
        36448
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2057,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085783",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008859",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        36545,
        36560
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2066,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085787",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008861",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        36393,
        36398
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2052,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085781",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008858",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        36679,
        36704
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2076,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085791",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008863",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        36773,
        36789
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2081,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085794",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008864",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        37001,
        37026
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2096,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085801",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008867",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        37095,
        37114
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2101,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085804",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008868",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        36842,
        36867
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2086,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085796",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008865",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        36936,
        36952
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2091,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085799",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008866",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        36619,
        36630
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2071,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085789",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008862",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of profession\n  * @type {String}\n  */",
    "meta": {
      "range": [
        36504,
        36512
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2062,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085785",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of profession",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_profession_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R008860",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010650",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010649",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010856",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010647",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010646",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_profession_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010648",
    "___s": true
  },
  {
    "comment": "/**\n* Regions dictionary\n* @type {cdn_region_ns}\n*/",
    "meta": {
      "range": [
        38971,
        39003
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2219,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085867",
        "name": "cdn_region",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Regions dictionary",
    "type": {
      "names": [
        "cdn_region_ns"
      ]
    },
    "name": "cdn_region",
    "longname": "module:@unitybase/cdn~cdn_region",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008892",
    "___s": true
  },
  {
    "comment": "/**\n * Regions dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes unity\n */",
    "meta": {
      "range": [
        37352,
        37398
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085811",
        "name": "cdn_region_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Regions dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "unity"
    ],
    "name": "cdn_region_ns",
    "longname": "module:@unitybase/cdn~cdn_region_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008870",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        37499,
        38912
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2117,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085816",
        "name": "cdn_region_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentAdminUnitID\":0,\"code\":\"\",\"regionTypeID\":null,\"name\":\"\",\"caption\":null,\"fullName\":\"\",\"description\":null,\"phoneCode\":null,\"centerID\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "static",
    "___id": "T000002R008871",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        37892,
        37905
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2146,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085831",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008877",
    "___s": true
  },
  {
    "comment": "/**\n  * Center of region -> cdn_city\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38189,
        38203
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085839",
        "name": "centerID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Center of region -&gt; cdn_city",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "centerID",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.centerID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008881",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        37691,
        37699
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2131,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085825",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008874",
    "___s": true
  },
  {
    "comment": "/**\n  * Description of region\n  * @type {String}\n  */",
    "meta": {
      "range": [
        38033,
        38050
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2156,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085835",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description of region",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008879",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of region\n  * @type {String}\n  */",
    "meta": {
      "range": [
        37962,
        37974
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085833",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full name of region",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008878",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        37554,
        37559
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085821",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008872",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        38474,
        38499
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2188,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085851",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008886",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38568,
        38584
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2193,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085854",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008887",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38236,
        38249
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2170,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085841",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008882",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        38280,
        38303
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2174,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085843",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008883",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        38334,
        38355
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2178,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085846",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008884",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        38796,
        38821
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2208,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085861",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008890",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38890,
        38909
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2213,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085864",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008891",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        38637,
        38662
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2198,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085856",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008888",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38731,
        38747
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2203,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085859",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008889",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        38414,
        38425
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2183,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085849",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008885",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of region\n  * @type {String}\n  */",
    "meta": {
      "range": [
        37839,
        37847
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2141,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085829",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of region",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008876",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> cdn_adminunit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        37620,
        37640
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2126,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085823",
        "name": "parentAdminUnitID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Parent -&gt; cdn_adminunit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentAdminUnitID",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.parentAdminUnitID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008873",
    "___s": true
  },
  {
    "comment": "/**\n  * Phone code of region\n  * @type {String}\n  */",
    "meta": {
      "range": [
        38108,
        38123
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2161,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085837",
        "name": "phoneCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Phone code of region",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "phoneCode",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.phoneCode",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008880",
    "___s": true
  },
  {
    "comment": "/**\n  * Type of region -> cdn_regiontype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        37769,
        37787
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2136,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085827",
        "name": "regionTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Type of region -&gt; cdn_regiontype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "regionTypeID",
    "longname": "module:@unitybase/cdn~cdn_region_ns.attrs.regionTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns.attrs",
    "scope": "static",
    "___id": "T000002R008875",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_region_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010655",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_region_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010654",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_region_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010857",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_region_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010652",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_region_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010656",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_region_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010651",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_region_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_region_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010653",
    "___s": true
  },
  {
    "comment": "/**\n* Region types dictionary\n* @type {cdn_regiontype_ns}\n*/",
    "meta": {
      "range": [
        40041,
        40081
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2282,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085905",
        "name": "cdn_regiontype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Region types dictionary",
    "type": {
      "names": [
        "cdn_regiontype_ns"
      ]
    },
    "name": "cdn_regiontype",
    "longname": "module:@unitybase/cdn~cdn_regiontype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008905",
    "___s": true
  },
  {
    "comment": "/**\n * Region types dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        39086,
        39136
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2225,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085871",
        "name": "cdn_regiontype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Region types dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_regiontype_ns",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008893",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        39237,
        39973
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2227,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085876",
        "name": "cdn_regiontype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "static",
    "___id": "T000002R008894",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        39343,
        39351
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2236,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085883",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008896",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        39296,
        39301
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2231,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085881",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008895",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        39535,
        39560
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2251,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085889",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008899",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        39629,
        39645
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2256,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085892",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008900",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        39857,
        39882
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2271,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085899",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008903",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        39951,
        39970
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2276,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085902",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008904",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        39698,
        39723
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2261,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085894",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008901",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        39792,
        39808
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2266,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085897",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008902",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        39475,
        39486
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2246,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085887",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008898",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of region type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        39408,
        39416
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2241,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085885",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of region type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008897",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010661",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010660",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010858",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010658",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010657",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_regiontype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_regiontype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010659",
    "___s": true
  },
  {
    "comment": "/**\n* Staffunit types dictionary\n* @type {cdn_staffunittype_ns}\n*/",
    "meta": {
      "range": [
        41163,
        41209
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2345,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085943",
        "name": "cdn_staffunittype",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Staffunit types dictionary",
    "type": {
      "names": [
        "cdn_staffunittype_ns"
      ]
    },
    "name": "cdn_staffunittype",
    "longname": "module:@unitybase/cdn~cdn_staffunittype",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008918",
    "___s": true
  },
  {
    "comment": "/**\n * Staffunit types dictionary\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        40167,
        40220
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2288,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085909",
        "name": "cdn_staffunittype_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Staffunit types dictionary</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "cdn_staffunittype_ns",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008906",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        40321,
        41089
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2290,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085914",
        "name": "cdn_staffunittype_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "static",
    "___id": "T000002R008907",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the staffunit type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        40452,
        40460
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2299,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085921",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the staffunit type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008909",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        40383,
        40388
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2294,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085919",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008908",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        40651,
        40676
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2314,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085927",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008912",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        40745,
        40761
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2319,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085930",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008913",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        40973,
        40998
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2334,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085937",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008916",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        41067,
        41086
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2339,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085940",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008917",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        40814,
        40839
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2324,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085932",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008914",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        40908,
        40924
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2329,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085935",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008915",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        40591,
        40602
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2309,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085925",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008911",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of the staffunit type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        40524,
        40532
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2304,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085923",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of the staffunit type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns.attrs",
    "scope": "static",
    "___id": "T000002R008910",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010666",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010665",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010859",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010663",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010662",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_staffunittype_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_staffunittype_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010664",
    "___s": true
  },
  {
    "comment": "/**\n* List of streets.\n * В этом справочнике хранится перечень вулиць\n* @type {cdn_street_ns}\n*/",
    "meta": {
      "range": [
        42673,
        42705
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2438,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085995",
        "name": "cdn_street",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of streets.\nВ этом справочнике хранится перечень вулиць",
    "type": {
      "names": [
        "cdn_street_ns"
      ]
    },
    "name": "cdn_street",
    "longname": "module:@unitybase/cdn~cdn_street",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "params": [],
    "___id": "T000002R008937",
    "___s": true
  },
  {
    "comment": "/**\n * List of streets.\n * В этом справочнике хранится перечень вулиць\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        41354,
        41400
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2353,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085947",
        "name": "cdn_street_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of streets.\nВ этом справочнике хранится перечень вулиць</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "cdn_street_ns",
    "longname": "module:@unitybase/cdn~cdn_street_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/cdn",
    "___id": "T000002R008919",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        41501,
        42569
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2355,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085952",
        "name": "cdn_street_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"name\":\"\",\"fullName\":\"\",\"code\":null,\"streetType\":null,\"cityID\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "static",
    "___id": "T000002R008920",
    "___s": true
  },
  {
    "comment": "/**\n  * City -> cdn_city\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        41848,
        41860
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2384,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085967",
        "name": "cityID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "City -&gt; cdn_city",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "cityID",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.cityID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008926",
    "___s": true
  },
  {
    "comment": "/**\n  * Code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        41726,
        41736
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2374,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085963",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008924",
    "___s": true
  },
  {
    "comment": "/**\n  * Street full name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        41672,
        41684
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2369,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085961",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Street full name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008923",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        41556,
        41561
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2359,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085957",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008921",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        42131,
        42156
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2406,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085979",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008931",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        42225,
        42241
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2411,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085982",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008932",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        41893,
        41906
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2388,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085969",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008927",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        41937,
        41960
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2392,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085971",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008928",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        41991,
        42012
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2396,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085974",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008929",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        42453,
        42478
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2426,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085989",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008935",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        42547,
        42566
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2431,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085992",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008936",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        42294,
        42319
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2416,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085984",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008933",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        42388,
        42404
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2421,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085987",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008934",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        42071,
        42082
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2401,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085977",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008930",
    "___s": true
  },
  {
    "comment": "/**\n  * Street name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        41610,
        41618
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2364,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085959",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Street name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008922",
    "___s": true
  },
  {
    "comment": "/**\n  * Type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        41778,
        41794
      ],
      "filename": "_CDN_entities.js",
      "lineno": 2379,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cdn",
      "code": {
        "id": "astnode100085965",
        "name": "streetType",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "streetType",
    "longname": "module:@unitybase/cdn~cdn_street_ns.attrs.streetType",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns.attrs",
    "scope": "static",
    "___id": "T000002R008925",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/cdn~cdn_street_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010671",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/cdn~cdn_street_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010670",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/cdn~cdn_street_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010860",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/cdn~cdn_street_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010668",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/cdn~cdn_street_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010672",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/cdn~cdn_street_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010667",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/cdn~cdn_street_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/cdn~cdn_street_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010669",
    "___s": true
  },
  {
    "comment": "/**\n * Module for working with COM objects\n *\n * Usage sample:\n *\n       const wdExportFormatPDF = 17 // PDF\n       const COM = require('@unitybase/com-bridge')\n       const path = require('path')\n       const fullTestFilePath = path.join(__dirname, 'test-doc.docx')\n       const fullPDFFilePath = path.join(__dirname, 'test-doc.pdf')\n\n       const fs = require('fs')\n\n       if (fs.existsSync(fullPDFFilePath)) fs.unlinkSync(fullPDFFilePath)\n\n       let word = COM.createCOMObject('Word.Application')\n       word.DisplayAlerts = 0\n       word.CheckLanguage = false\n       word.Options.CheckSpellingAsYouType = false\n\n       // pass a unnamed parameter\n       let doc = word.Documents.Open(fullTestFilePath)\n\n       // pass a named parameters\n       doc.ExportAsFixedFormat({\n         ExportFormat: wdExportFormatPDF,\n         OutputFileName: fullPDFFilePath\n       })\n       doc.close({SaveChanges: false})\n       doc = null\n       word.Quit()\n       word = null\n *\n * @module @unitybase/com-bridge\n */",
    "meta": {
      "filename": "UBComBridge.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/com-bridge",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/com-bridge",
    "longname": "module:@unitybase/com-bridge",
    "readme": "<p>The module for working with COM objects</p>\n<p> Usage sample:</p>\n<pre class=\"prettyprint source lang-js\"><code>const wdExportFormatPDF = 17 // PDF\nconst COM = require('@unitybase/com-bridge')\nconst path = require('path')\nconst fullTestFilePath = path.join(__dirname, 'test-doc.docx')\nconst fullPDFFilePath = path.join(__dirname, 'test-doc.pdf')\n\nconst fs = require('fs')\n\nif (fs.existsSync(fullPDFFilePath)) fs.unlinkSync(fullPDFFilePath)\n\nlet word = COM.createCOMObject('Word.Application')\nword.DisplayAlerts = 0\nword.CheckLanguage = false\nword.Options.CheckSpellingAsYouType = false\n\nlet doc = word.Documents.Open(fullTestFilePath)\n\ndoc.ExportAsFixedFormat({\n  ExportFormat: wdExportFormatPDF,\n  OutputFileName: fullPDFFilePath\n})\ndoc.close({SaveChanges: false})\ndoc = null\nword.Quit()\nword = null</code></pre>",
    "___id": "T000002R007360",
    "___s": true
  },
  {
    "comment": "/**\n * Create JavaScript wrapper around a COM/OLE object. COM must implement IDispatch interface.\n *\n * Returning object has the same properties and methods as in original COM object.\n *\n * Names of methods and properties are **case-insensitive**. If COM object has get-properties with parameters\n * they implemented as a functions in JS-object.\n *\n * Method can take unnamed parameters(normal usage), you must use the correct order of the parameters,\n * or named parameters(in this case functioin take a {Object} with keys = parameter name and values is a parameter values)\n *\n * @param {String} objectName\n * @return {Object}\n */",
    "meta": {
      "range": [
        1866,
        1922
      ],
      "filename": "UBComBridge.js",
      "lineno": 56,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/com-bridge",
      "code": {
        "id": "astnode100075842",
        "name": "module.exports.createCOMObject",
        "type": "MemberExpression",
        "value": "binding.createCOMObject",
        "paramnames": []
      }
    },
    "description": "Create JavaScript wrapper around a COM/OLE object. COM must implement IDispatch interface.</p>\n<p>Returning object has the same properties and methods as in original COM object.</p>\n<p>Names of methods and properties are <strong>case-insensitive</strong>. If COM object has get-properties with parameters\nthey implemented as a functions in JS-object.</p>\n<p>Method can take unnamed parameters(normal usage), you must use the correct order of the parameters,\nor named parameters(in this case functioin take a {Object} with keys = parameter name and values is a parameter values)",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "objectName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "createCOMObject",
    "longname": "module:@unitybase/com-bridge.createCOMObject",
    "kind": "member",
    "memberof": "module:@unitybase/com-bridge",
    "scope": "static",
    "___id": "T000002R007366",
    "___s": true
  },
  {
    "comment": "/**\n * gzip / gunzip / bunzip support\n *\n * @example\n *\n * var compressors = require('@unitybase/compressors');\n * compressors.unBzipM2\n *\n * @module @unitybase/compressors\n */",
    "meta": {
      "filename": "UBCompressors.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/compressors",
      "code": {}
    },
    "description": "gzip / gunzip / bunzip support",
    "examples": [
      "var compressors = require('@unitybase/compressors');\ncompressors.unBzipM2"
    ],
    "kind": "module",
    "name": "@unitybase/compressors",
    "longname": "module:@unitybase/compressors",
    "___id": "T000002R007544",
    "___s": true
  },
  {
    "comment": "/**\n * Decompress file using gzip algorithm\n * @method gunzipFile\n * @param {String} fileNameFrom\n * @param {String} fileNameTo\n */",
    "meta": {
      "filename": "UBCompressors.js",
      "lineno": 34,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/compressors",
      "code": {}
    },
    "description": "Decompress file using gzip algorithm",
    "kind": "function",
    "name": "gunzipFile",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileNameFrom"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileNameTo"
      }
    ],
    "longname": "module:@unitybase/compressors~gunzipFile",
    "scope": "inner",
    "memberof": "module:@unitybase/compressors",
    "___id": "T000002R007555",
    "___s": true
  },
  {
    "comment": "/**\n * Compress file using gzip algorithm\n * @method gzipFile\n * @param {String} fileNameFrom\n * @param {String} fileNameTo\n */",
    "meta": {
      "filename": "UBCompressors.js",
      "lineno": 26,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/compressors",
      "code": {}
    },
    "description": "Compress file using gzip algorithm",
    "kind": "function",
    "name": "gzipFile",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileNameFrom"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileNameTo"
      }
    ],
    "longname": "module:@unitybase/compressors~gzipFile",
    "scope": "inner",
    "memberof": "module:@unitybase/compressors",
    "___id": "T000002R007553",
    "___s": true
  },
  {
    "comment": "/**\n * Decompress files from Megapolis2(TM) bzip format(first 4 bytes are length of uncompressed files)\n * @method unBzipM2\n * @param {ArrayBuffer} buffer\n * @return {ArrayBuffer}\n */",
    "meta": {
      "filename": "UBCompressors.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/compressors",
      "code": {}
    },
    "description": "Decompress files from Megapolis2(TM) bzip format(first 4 bytes are length of uncompressed files)",
    "kind": "function",
    "name": "unBzipM2",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        },
        "name": "buffer"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        }
      }
    ],
    "longname": "module:@unitybase/compressors~unBzipM2",
    "scope": "inner",
    "memberof": "module:@unitybase/compressors",
    "___id": "T000002R007551",
    "___s": true
  },
  {
    "comment": "/**\n * Contains classes, common for CLI, server-side and browser side\n * @module @unitybase/cs-shared\n */",
    "meta": {
      "filename": "cs-shared.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/cs-shared",
    "longname": "module:@unitybase/cs-shared",
    "readme": "<p>﻿<a href=\"http://standardjs.com/\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\" alt=\"JavaScript Style Guide\"></a></p>\n<h1>The isomorphic (browser, nodeJS, UB CLI, UB server) classes</h1><p>This module contains the isomorphic classes, shared between CLI,\nserver-side and browser side.</p>",
    "___id": "T000002R004111",
    "___s": true
  },
  {
    "comment": "/**\n   * Ancestor for Browser/NodeJS ClientRepository and server side ServerRepository\n   * @type {CustomRepository}\n   */",
    "meta": {
      "range": [
        439,
        455
      ],
      "filename": "cs-shared.js",
      "lineno": 15,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046359",
        "name": "CustomRepository",
        "type": "Identifier",
        "value": "CustomRepository"
      }
    },
    "description": "Ancestor for Browser/NodeJS ClientRepository and server side ServerRepository",
    "type": {
      "names": [
        "CustomRepository"
      ]
    },
    "name": "CustomRepository",
    "longname": "module:@unitybase/cs-shared.CustomRepository",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared",
    "scope": "static",
    "___id": "T000002R004113",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper class for manipulation with data, stored locally in ({@link TubCachedData} format)\n   * @type {LocalDataStore}\n   */",
    "meta": {
      "range": [
        594,
        608
      ],
      "filename": "cs-shared.js",
      "lineno": 20,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046361",
        "name": "LocalDataStore",
        "type": "Identifier",
        "value": "LocalDataStore"
      }
    },
    "description": "Helper class for manipulation with data, stored locally in ({@link TubCachedData} format)",
    "type": {
      "names": [
        "LocalDataStore"
      ]
    },
    "name": "LocalDataStore",
    "longname": "module:@unitybase/cs-shared.LocalDataStore",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared",
    "scope": "static",
    "___id": "T000002R004114",
    "___s": true
  },
  {
    "comment": "/**\n * Helper for manipulation with data, stored locally in ({@link TubCachedData} format).\n *\n * This module shared between client & server. In case of server we use it together with {@link dataLoader},\n * in case of client - inside {@link class:SyncConnection#select SyncConnection.select} to handle operations with entity data cached in IndexedDB.\n *\n * For server-side samples see ubm_forms.doSelect method implementation.\n *\n * @example\n\n  $App.connection.run({\n    entity: 'tst_IDMapping',\n    method: 'addnew',\n    fieldList: ['ID', 'code']\n  }).done(function(result){\n    // here result in array-of-array format\n    // [{\"entity\":\"tst_IDMapping\",\"method\":\"addnew\",\"fieldList\":[\"ID\",\"code\"],\n    //   \"__fieldListExternal\":[\"ID\",\"code\"],\n    //   \"resultData\":{\"fields\":[\"ID\",\"code\"],\"rowCount\": 1, \"data\":[[3500000016003,null]]}}]\n    var objArray = UB.LocalDataStore.selectResultToArrayOfObjects(result);\n    // transform array-of-array result representation to array-of-object\n    console.log(objArray);\n    // now result in more simple array-of-object format: [{ID: 12312312312, code: null}]\n  });\n\n * @module LocalDataStore\n * @memberOf module:@unitybase/cs-shared\n * @author pavel.mash\n */",
    "meta": {
      "filename": "LocalDataStore.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "description": "Helper for manipulation with data, stored locally in ({@link TubCachedData} format).</p>\n<p>This module shared between client &amp; server. In case of server we use it together with {@link dataLoader},\nin case of client - inside {@link class:SyncConnection#select SyncConnection.select} to handle operations with entity data cached in IndexedDB.</p>\n<p>For server-side samples see ubm_forms.doSelect method implementation.",
    "examples": [
      "$App.connection.run({\n    entity: 'tst_IDMapping',\n    method: 'addnew',\n    fieldList: ['ID', 'code']\n  }).done(function(result){\n    // here result in array-of-array format\n    // [{\"entity\":\"tst_IDMapping\",\"method\":\"addnew\",\"fieldList\":[\"ID\",\"code\"],\n    //   \"__fieldListExternal\":[\"ID\",\"code\"],\n    //   \"resultData\":{\"fields\":[\"ID\",\"code\"],\"rowCount\": 1, \"data\":[[3500000016003,null]]}}]\n    var objArray = UB.LocalDataStore.selectResultToArrayOfObjects(result);\n    // transform array-of-array result representation to array-of-object\n    console.log(objArray);\n    // now result in more simple array-of-object format: [{ID: 12312312312, code: null}]\n  });"
    ],
    "kind": "module",
    "name": "LocalDataStore",
    "memberof": "module:@unitybase/cs-shared",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore",
    "___id": "T000002R003526",
    "___s": true
  },
  {
    "comment": "/**\n * Reverse conversion to {@link module:LocalDataStore#selectResultToArrayOfObjects LocalDataStore.selectResultToArrayOfObjects}.\n *\n *\n * @example\n * //Transform array of object to array of array using passed attributes array\n * LocalDataStore.arrayOfObjectsToSelectResult([{a: 1, b: 'as'}, {b: 'other', a: 12}], ['a', 'b']);\n * // result is: [[1, \"as\"], [12, \"other\"]]\n *\n * @param {Array.<Object>} arrayOfObject\n * @param {Array.<String>} attributeNames\n * @returns {Array.<Array>}\n */",
    "meta": {
      "range": [
        13031,
        13327
      ],
      "filename": "LocalDataStore.js",
      "lineno": 401,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041666",
        "name": "module.exports.arrayOfObjectsToSelectResult",
        "type": "FunctionExpression",
        "paramnames": [
          "arrayOfObject",
          "attributeNames"
        ]
      },
      "vars": {
        "result": "module:@unitybase/cs-shared.module:LocalDataStore.arrayOfObjectsToSelectResult~result",
        "": null
      }
    },
    "description": "Reverse conversion to {@link module:LocalDataStore#selectResultToArrayOfObjects LocalDataStore.selectResultToArrayOfObjects}.",
    "examples": [
      "//Transform array of object to array of array using passed attributes array\nLocalDataStore.arrayOfObjectsToSelectResult([{a: 1, b: 'as'}, {b: 'other', a: 12}], ['a', 'b']);\n// result is: [[1, \"as\"], [12, \"other\"]]"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "name": "arrayOfObject"
      },
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        },
        "name": "attributeNames"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Array>"
          ]
        }
      }
    ],
    "name": "arrayOfObjectsToSelectResult",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.arrayOfObjectsToSelectResult",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003629",
    "___s": true
  },
  {
    "comment": "/**\n * Just a helper for search cached data by row ID\n * @param {TubCachedData} cachedData Data, retrieved from cache\n * @param {Number} IDValue row ID.\n */",
    "meta": {
      "range": [
        2561,
        2674
      ],
      "filename": "LocalDataStore.js",
      "lineno": 77,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040588",
        "name": "module.exports.byID",
        "type": "FunctionExpression",
        "paramnames": [
          "cachedData",
          "IDValue"
        ]
      }
    },
    "description": "Just a helper for search cached data by row ID",
    "params": [
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        },
        "description": "Data, retrieved from cache",
        "name": "cachedData"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "row ID.",
        "name": "IDValue"
      }
    ],
    "name": "byID",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.byID",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003540",
    "___s": true
  },
  {
    "comment": "/**\n * Perform local filtration and sorting of data array according to ubql whereList & order list\n * @param {TubCachedData} cachedData Data, retrieved from cache\n * @param {UBQL} ubql Initial server request\n * @returns {*} new filtered & sorted array\n */",
    "meta": {
      "range": [
        1765,
        2402
      ],
      "filename": "LocalDataStore.js",
      "lineno": 48,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040493",
        "name": "module.exports.doFilterAndSort",
        "type": "FunctionExpression",
        "paramnames": [
          "cachedData",
          "ubql"
        ]
      },
      "vars": {
        "rangeStart": "module:@unitybase/cs-shared.module:LocalDataStore~rangeStart",
        "filteredData": "module:@unitybase/cs-shared.module:LocalDataStore~filteredData",
        "totalLength": "module:@unitybase/cs-shared.module:LocalDataStore.doFilterAndSort~totalLength"
      }
    },
    "description": "Perform local filtration and sorting of data array according to ubql whereList &amp; order list",
    "params": [
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        },
        "description": "Data, retrieved from cache",
        "name": "cachedData"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "Initial server request",
        "name": "ubql"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>new filtered &amp; sorted array</p>"
      }
    ],
    "name": "doFilterAndSort",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.doFilterAndSort",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003529",
    "___s": true
  },
  {
    "comment": "/**\n * Apply ubql.whereList to data array and return new array contain filtered data\n * @protected\n * @param {TubCachedData} cachedData Data, retrieved from cache\n * @param {UBQL} ubql\n * @returns {Array.<Array>}\n */",
    "meta": {
      "range": [
        2893,
        3604
      ],
      "filename": "LocalDataStore.js",
      "lineno": 88,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040608",
        "name": "module.exports.doFiltration",
        "type": "FunctionExpression",
        "paramnames": [
          "cachedData",
          "ubql"
        ]
      },
      "vars": {
        "f": "module:@unitybase/cs-shared.module:LocalDataStore~f",
        "isAcceptable": "module:@unitybase/cs-shared.module:LocalDataStore~isAcceptable",
        "rawDataArray": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~rawDataArray",
        "byPrimaryKey": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~byPrimaryKey",
        "filterFabric": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~filterFabric",
        "filterCount": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~filterCount",
        "result": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~result",
        "l": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~l",
        "i": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration~i"
      }
    },
    "description": "Apply ubql.whereList to data array and return new array contain filtered data",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        },
        "description": "Data, retrieved from cache",
        "name": "cachedData"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "name": "ubql"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Array>"
          ]
        }
      }
    ],
    "name": "doFiltration",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.doFiltration",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003542",
    "___s": true
  },
  {
    "comment": "/**\n * Apply ubRequest.orderList to inputArray (inputArray is modified)\n * @protected\n * @param {Array.<Array>} filteredArray\n * @param {TubCachedData} cachedData\n * @param {Object} ubRequest\n */",
    "meta": {
      "range": [
        3802,
        5158
      ],
      "filename": "LocalDataStore.js",
      "lineno": 125,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040728",
        "name": "module.exports.doSorting",
        "type": "FunctionExpression",
        "paramnames": [
          "filteredArray",
          "cachedData",
          "ubRequest"
        ]
      },
      "vars": {
        "preparedOrder": "module:@unitybase/cs-shared.module:LocalDataStore.doSorting~preparedOrder",
        "": null,
        "orderLen": "module:@unitybase/cs-shared.module:LocalDataStore.doSorting~orderLen",
        "compareFn": "module:@unitybase/cs-shared.module:LocalDataStore.doSorting~compareFn"
      }
    },
    "description": "Apply ubRequest.orderList to inputArray (inputArray is modified)",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "Array.<Array>"
          ]
        },
        "name": "filteredArray"
      },
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        },
        "name": "cachedData"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "ubRequest"
      }
    ],
    "name": "doSorting",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.doSorting",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003555",
    "___s": true
  },
  {
    "comment": "/**\n * Flatten cached data (or result of {@link module:LocalDataStore#doFilterAndSort LocalDataStore.doFilterAndSort}.resultData )\n * to Object expected by TubDataStore.initialize Flatten format (faster than [{}..] format).\n * CachedData may contain more field or field in order not in requestedFieldList - in this case we use expectedFieldList.\n *\n * @example\n * // consider we have cached data in variable filteredData.resultData\n * // to initialize dataStore with cached data:\n * mySelectMethod = function(ctxt){\n *     var fieldList = ctxt.mParams.fieldList;\n *     resp = LocalDataStore.flatten(fieldList, filteredData.resultData);\n *     ctxt.dataStore.initFromJSON(resp);\n * }\n *\n *\n * @param {Array.<string>} requestedFieldList Array of attributes to transform to. Can be ['*'] - in this case we return all cached attributes\n * @param {TubCachedData} cachedData\n * @result {{fieldCount: number, rowCount: number, values: array.<*>}}\n */",
    "meta": {
      "range": [
        11280,
        12537
      ],
      "filename": "LocalDataStore.js",
      "lineno": 347,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041466",
        "name": "module.exports.flatten",
        "type": "FunctionExpression",
        "paramnames": [
          "requestedFieldList",
          "cachedData"
        ]
      },
      "vars": {
        "fldIdxArr": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~fldIdxArr",
        "cachedFields": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~cachedFields",
        "rowIdx": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~rowIdx",
        "col": "module:@unitybase/cs-shared.module:LocalDataStore~col",
        "pos": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~pos",
        "resultData": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~resultData",
        "rowCount": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~rowCount",
        "idx": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~idx",
        "row": "module:@unitybase/cs-shared.module:LocalDataStore~row",
        "fieldCount": "module:@unitybase/cs-shared.module:LocalDataStore~fieldCount",
        "requestedFieldList": "module:@unitybase/cs-shared.module:LocalDataStore~requestedFieldList",
        "": null,
        "resultData.length": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~resultData.length",
        "resultData[undefined]": "module:@unitybase/cs-shared.module:LocalDataStore.flatten~resultData.undefined]"
      }
    },
    "description": "Flatten cached data (or result of {@link module:LocalDataStore#doFilterAndSort LocalDataStore.doFilterAndSort}.resultData )\nto Object expected by TubDataStore.initialize Flatten format (faster than [{}..] format).\nCachedData may contain more field or field in order not in requestedFieldList - in this case we use expectedFieldList.",
    "examples": [
      "// consider we have cached data in variable filteredData.resultData\n// to initialize dataStore with cached data:\nmySelectMethod = function(ctxt){\n    var fieldList = ctxt.mParams.fieldList;\n    resp = LocalDataStore.flatten(fieldList, filteredData.resultData);\n    ctxt.dataStore.initFromJSON(resp);\n}"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Array of attributes to transform to. Can be ['*'] - in this case we return all cached attributes",
        "name": "requestedFieldList"
      },
      {
        "type": {
          "names": [
            "TubCachedData"
          ]
        },
        "name": "cachedData"
      }
    ],
    "tags": [
      {
        "originalTitle": "result",
        "title": "result",
        "text": "{{fieldCount: number, rowCount: number, values: array.<*>}}",
        "value": "{{fieldCount: number, rowCount: number, values: array.<*>}}"
      }
    ],
    "name": "flatten",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.flatten",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003607",
    "___s": true
  },
  {
    "comment": "/**\n * Transform result of {@link class:SyncConnection#select SyncConnection.select} response\n * from Array of Array representation to Array of Object.\n * @example\n *\n * LocalDataStore.selectResultToArrayOfObjects({resultData: {\n *     data: [['row1_attr1Val', 1], ['row2_attr2Val', 22]],\n *     fields: ['attrID.name', 'attr2']}\n * });\n * // result is:\n * // [{\"attrID.name\": \"row1_attr1Val\", attr2: 1},\n * //  {\"attrID.name\": \"row2_attr2Val\", attr2: 22}\n * // ]\n *\n * // object keys simplify by passing fieldAliases\n * LocalDataStore.selectResultToArrayOfObjects({resultData: {\n *     data: [['row1_attr1Val', 1], ['row2_attr2Val', 22]],\n *     fields: ['attrID.name', 'attr2']}\n * }, {'attrID.name': 'attr1Name'});\n * // result is:\n * // [{attr1Name: \"row1_attr1Val\", attr2: 1},\n * //  {attr1Name: \"row2_attr2Val\", attr2: 22}\n * // ]\n *\n * @param {{resultData: TubCachedData}} selectResult\n * @param {Object<string, string>} [fieldAlias] Optional object to change attribute names during transform array to object. Keys are original names, values - new names\n * @returns {Array.<*>}\n */",
    "meta": {
      "range": [
        9751,
        10333
      ],
      "filename": "LocalDataStore.js",
      "lineno": 309,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041366",
        "name": "module.exports.selectResultToArrayOfObjects",
        "type": "FunctionExpression",
        "paramnames": [
          "selectResult",
          "fieldAlias"
        ]
      },
      "vars": {
        "inData": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~inData",
        "inAttributes": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~inAttributes",
        "inDataLength": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~inDataLength",
        "result": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~result",
        "": null,
        "i": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~i",
        "result[undefined]": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects~result.undefined]"
      }
    },
    "description": "Transform result of {@link class:SyncConnection#select SyncConnection.select} response\nfrom Array of Array representation to Array of Object.",
    "examples": [
      "LocalDataStore.selectResultToArrayOfObjects({resultData: {\n    data: [['row1_attr1Val', 1], ['row2_attr2Val', 22]],\n    fields: ['attrID.name', 'attr2']}\n});\n// result is:\n// [{\"attrID.name\": \"row1_attr1Val\", attr2: 1},\n//  {\"attrID.name\": \"row2_attr2Val\", attr2: 22}\n// ]\n\n// object keys simplify by passing fieldAliases\nLocalDataStore.selectResultToArrayOfObjects({resultData: {\n    data: [['row1_attr1Val', 1], ['row2_attr2Val', 22]],\n    fields: ['attrID.name', 'attr2']}\n}, {'attrID.name': 'attr1Name'});\n// result is:\n// [{attr1Name: \"row1_attr1Val\", attr2: 1},\n//  {attr1Name: \"row2_attr2Val\", attr2: 22}\n// ]"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "selectResult"
      },
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute names during transform array to object. Keys are original names, values - new names",
        "name": "fieldAlias"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<*>"
          ]
        }
      }
    ],
    "name": "selectResultToArrayOfObjects",
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore.selectResultToArrayOfObjects",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "scope": "static",
    "___id": "T000002R003598",
    "___s": true
  },
  {
    "comment": "/**\n * Format for data, stored in client-side cache\n * @typedef {Object} TubCachedData\n * @property {Array<Array>} data\n * @property {Array<String>} fields\n * @property {Number} rowCount\n * @property {Number} [version] A data version in case `mi_modifyDate` is in fields\n */",
    "meta": {
      "filename": "LocalDataStore.js",
      "lineno": 33,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "description": "Format for data, stored in client-side cache",
    "kind": "typedef",
    "name": "TubCachedData",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "Array.<Array>"
          ]
        },
        "name": "data"
      },
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        },
        "name": "fields"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "rowCount"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "<p>A data version in case <code>mi_modifyDate</code> is in fields</p>",
        "name": "version"
      }
    ],
    "longname": "module:@unitybase/cs-shared.module:LocalDataStore~TubCachedData",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:LocalDataStore",
    "___id": "T000002R003528",
    "___s": true
  },
  {
    "comment": "/**\n * @module UBDomain\n * @memberOf module:@unitybase/cs-shared\n */",
    "meta": {
      "filename": "UBDomain.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "module",
    "name": "UBDomain",
    "memberof": "module:@unitybase/cs-shared",
    "scope": "static",
    "longname": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003633",
    "___s": true
  },
  {
    "comment": "/**\n * Database connection config (w/o credential)\n * @typedef {object} DBConnectionConfig\n * @property {string} name\n * @property {string} dialect\n * @property {Array<string>} supportLang\n * @property {string} advSettings database specific settings\n */",
    "meta": {
      "filename": "UBDomain.js",
      "lineno": 10,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "description": "Database connection config (w/o credential)",
    "kind": "typedef",
    "name": "DBConnectionConfig",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "dialect"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "supportLang"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>database specific settings</p>",
        "name": "advSettings"
      }
    ],
    "longname": "module:@unitybase/cs-shared.module:UBDomain~DBConnectionConfig",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003634",
    "___s": true
  },
  {
    "comment": "/**\n* @callback domainEntitiesIteratorCallback\n* @param {UBEntity} entity\n* @param {string} entityCode\n* @param {Object<string, UBEntity>} entities\n*/",
    "meta": {
      "filename": "UBDomain.js",
      "lineno": 161,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "typedef",
    "name": "domainEntitiesIteratorCallback",
    "type": {
      "names": [
        "function"
      ]
    },
    "params": [
      {
        "type": {
          "names": [
            "UBEntity"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      },
      {
        "type": {
          "names": [
            "Object.<string, UBEntity>"
          ]
        },
        "name": "entities"
      }
    ],
    "longname": "module:@unitybase/cs-shared.module:UBDomain~domainEntitiesIteratorCallback",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003667",
    "___s": true
  },
  {
    "comment": "/**\n * @callback entityAttributesIteratorCallback\n * @param {UBEntityAttribute} attribute\n * @param {string} [attributeName]\n * @param {UBEntityAttributes} [attributes]\n */",
    "meta": {
      "filename": "UBDomain.js",
      "lineno": 749,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "typedef",
    "name": "entityAttributesIteratorCallback",
    "type": {
      "names": [
        "function"
      ]
    },
    "params": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        },
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "UBEntityAttributes"
          ]
        },
        "optional": true,
        "name": "attributes"
      }
    ],
    "longname": "module:@unitybase/cs-shared.module:UBDomain~entityAttributesIteratorCallback",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003833",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Domain object model (metadata) - in-memory representation of all *.meta files included in the application config.\n *\n * Developer should never create {@link UBDomain} class directly, but instead use a:\n *\n *  - {@link App.domainInfo App.domainInfo} property inside server-side methods\n *  - {@link SyncConnection#getDomainInfo SyncConnection.getDomainInfo} method inside CLI scripts\n *  - `UBConnection.domain` property inside a browser\n *\n       // server-side example\n       const UB = require('@unitybase/ub')\n       const App = UB.App\n       let ubaAuditPresent = App.domainInfo.has('uba_audit')\n\n *\n * @param {object} domainInfo getDomainInfo UB server method result\n * @param {object} domainInfo.domain raw entities collection\n * @param {object} domainInfo.entityMethods entities methods access rights for current user\n * @param {object} domainInfo.models information about domain models\n * @param {object} domainInfo.i18n entities localization to current user language\n * @class\n */",
    "meta": {
      "range": [
        1436,
        3905
      ],
      "filename": "UBDomain.js",
      "lineno": 42,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041724",
        "name": "UBDomain",
        "type": "FunctionDeclaration",
        "paramnames": [
          "domainInfo"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~me",
        "entityCodes": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~entityCodes",
        "isV4API": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~isV4API",
        "this.entities": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#entities",
        "this.connections": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#connections",
        "this.defaultConnection": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#defaultConnection",
        "": null,
        "i": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~i",
        "L": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~L",
        "entityCode": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~entityCode",
        "entity": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~entity",
        "attrs": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~attrs",
        "newAttrs": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~newAttrs",
        "k": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~k",
        "lL": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~lL",
        "attr": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~attr",
        "attrName": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~attrName",
        "newAttrs[undefined]": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~newAttrs.undefined]",
        "entity.i18n.attributes": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~entity.i18n.attributes",
        "me.entities[undefined]": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~me.entities[undefined]",
        "this.orderedModels": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#orderedModels",
        "this.models": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#models",
        "modelCodes": "module:@unitybase/cs-shared.module:UBDomain~UBDomain~modelCodes"
      }
    },
    "classdesc": "<p>Domain object model (metadata) - in-memory representation of all *.meta files included in the application config.</p>\n<p>Developer should never create {@link UBDomain} class directly, but instead use a:</p>\n<ul>\n<li>{@link App.domainInfo App.domainInfo} property inside server-side methods</li>\n<li>{@link SyncConnection#getDomainInfo SyncConnection.getDomainInfo} method inside CLI scripts</li>\n<li><p><code>UBConnection.domain</code> property inside a browser</p>\n<pre class=\"prettyprint source\"><code>// server-side example\nconst UB = require('@unitybase/ub')\nconst App = UB.App\nlet ubaAuditPresent = App.domainInfo.has('uba_audit')</code></pre></li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "getDomainInfo UB server method result",
        "name": "domainInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "raw entities collection",
        "name": "domainInfo.domain"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "entities methods access rights for current user",
        "name": "domainInfo.entityMethods"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "information about domain models",
        "name": "domainInfo.models"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "entities localization to current user language",
        "name": "domainInfo.i18n"
      }
    ],
    "kind": "class",
    "name": "UBDomain",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003635",
    "___s": true
  },
  {
    "comment": "/**\n * Priority to apply a mapping of a attributes/entities to the physical tables depending of connection dialect\n * @enum\n * @protected\n */",
    "meta": {
      "range": [
        9003,
        9491
      ],
      "filename": "UBDomain.js",
      "lineno": 308,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042350",
        "name": "UBDomain.dialectsPriority",
        "type": "ObjectExpression",
        "value": "{\"MSSQL2012\":\"\",\"MSSQL2008\":\"\",\"MSSQL\":\"\",\"Oracle11\":\"\",\"Oracle10\":\"\",\"Oracle9\":\"\",\"Oracle\":\"\",\"PostgreSQL\":\"\",\"AnsiSQL\":\"\",\"Firebird\":\"\",\"SQLite3\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Priority to apply a mapping of a attributes/entities to the physical tables depending of connection dialect",
    "kind": "member",
    "isEnum": true,
    "access": "protected",
    "name": "dialectsPriority",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            9035,
            9081
          ],
          "filename": "UBDomain.js",
          "lineno": 309,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042355",
            "name": "MSSQL2012",
            "type": "ArrayExpression",
            "value": "[\"MSSQL2012\",\"MSSQL\",\"AnsiSQL\"]"
          }
        },
        "name": "MSSQL2012",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL2012",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"MSSQL2012\",\"MSSQL\",\"AnsiSQL\"]",
        "___id": "T000002R003716",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9085,
            9131
          ],
          "filename": "UBDomain.js",
          "lineno": 310,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042360",
            "name": "MSSQL2008",
            "type": "ArrayExpression",
            "value": "[\"MSSQL2008\",\"MSSQL\",\"AnsiSQL\"]"
          }
        },
        "name": "MSSQL2008",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL2008",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"MSSQL2008\",\"MSSQL\",\"AnsiSQL\"]",
        "___id": "T000002R003717",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9135,
            9164
          ],
          "filename": "UBDomain.js",
          "lineno": 311,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042365",
            "name": "MSSQL",
            "type": "ArrayExpression",
            "value": "[\"MSSQL\",\"AnsiSQL\"]"
          }
        },
        "name": "MSSQL",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"MSSQL\",\"AnsiSQL\"]",
        "___id": "T000002R003718",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9168,
            9213
          ],
          "filename": "UBDomain.js",
          "lineno": 312,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042369",
            "name": "Oracle11",
            "type": "ArrayExpression",
            "value": "[\"Oracle11\",\"Oracle\",\"AnsiSQL\"]"
          }
        },
        "name": "Oracle11",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle11",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"Oracle11\",\"Oracle\",\"AnsiSQL\"]",
        "___id": "T000002R003719",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9217,
            9262
          ],
          "filename": "UBDomain.js",
          "lineno": 313,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042374",
            "name": "Oracle10",
            "type": "ArrayExpression",
            "value": "[\"Oracle10\",\"Oracle\",\"AnsiSQL\"]"
          }
        },
        "name": "Oracle10",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle10",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"Oracle10\",\"Oracle\",\"AnsiSQL\"]",
        "___id": "T000002R003720",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9266,
            9309
          ],
          "filename": "UBDomain.js",
          "lineno": 314,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042379",
            "name": "Oracle9",
            "type": "ArrayExpression",
            "value": "[\"Oracle9\",\"Oracle\",\"AnsiSQL\"]"
          }
        },
        "name": "Oracle9",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle9",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"Oracle9\",\"Oracle\",\"AnsiSQL\"]",
        "___id": "T000002R003721",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9313,
            9344
          ],
          "filename": "UBDomain.js",
          "lineno": 315,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042384",
            "name": "Oracle",
            "type": "ArrayExpression",
            "value": "[\"Oracle\",\"AnsiSQL\"]"
          }
        },
        "name": "Oracle",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"Oracle\",\"AnsiSQL\"]",
        "___id": "T000002R003722",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9348,
            9387
          ],
          "filename": "UBDomain.js",
          "lineno": 316,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042388",
            "name": "PostgreSQL",
            "type": "ArrayExpression",
            "value": "[\"PostgreSQL\",\"AnsiSQL\"]"
          }
        },
        "name": "PostgreSQL",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.PostgreSQL",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"PostgreSQL\",\"AnsiSQL\"]",
        "___id": "T000002R003723",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9391,
            9413
          ],
          "filename": "UBDomain.js",
          "lineno": 317,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042392",
            "name": "AnsiSQL",
            "type": "ArrayExpression",
            "value": "[\"AnsiSQL\"]"
          }
        },
        "name": "AnsiSQL",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.AnsiSQL",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"AnsiSQL\"]",
        "___id": "T000002R003724",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9417,
            9452
          ],
          "filename": "UBDomain.js",
          "lineno": 318,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042395",
            "name": "Firebird",
            "type": "ArrayExpression",
            "value": "[\"Firebird\",\"AnsiSQL\"]"
          }
        },
        "name": "Firebird",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Firebird",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"Firebird\",\"AnsiSQL\"]",
        "___id": "T000002R003725",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            9456,
            9489
          ],
          "filename": "UBDomain.js",
          "lineno": 319,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042399",
            "name": "SQLite3",
            "type": "ArrayExpression",
            "value": "[\"SQLite3\",\"AnsiSQL\"]"
          }
        },
        "name": "SQLite3",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.SQLite3",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
        "scope": "static",
        "defaultvalue": "[\"SQLite3\",\"AnsiSQL\"]",
        "___id": "T000002R003726",
        "___s": true
      }
    ],
    "___id": "T000002R003715",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9391,
        9413
      ],
      "filename": "UBDomain.js",
      "lineno": 317,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042392",
        "name": "AnsiSQL",
        "type": "ArrayExpression",
        "value": "[\"AnsiSQL\"]"
      }
    },
    "name": "AnsiSQL",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.AnsiSQL",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"AnsiSQL\"]",
    "___id": "T000002R003724",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9417,
        9452
      ],
      "filename": "UBDomain.js",
      "lineno": 318,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042395",
        "name": "Firebird",
        "type": "ArrayExpression",
        "value": "[\"Firebird\",\"AnsiSQL\"]"
      }
    },
    "name": "Firebird",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Firebird",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"Firebird\",\"AnsiSQL\"]",
    "___id": "T000002R003725",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9135,
        9164
      ],
      "filename": "UBDomain.js",
      "lineno": 311,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042365",
        "name": "MSSQL",
        "type": "ArrayExpression",
        "value": "[\"MSSQL\",\"AnsiSQL\"]"
      }
    },
    "name": "MSSQL",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"MSSQL\",\"AnsiSQL\"]",
    "___id": "T000002R003718",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9085,
        9131
      ],
      "filename": "UBDomain.js",
      "lineno": 310,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042360",
        "name": "MSSQL2008",
        "type": "ArrayExpression",
        "value": "[\"MSSQL2008\",\"MSSQL\",\"AnsiSQL\"]"
      }
    },
    "name": "MSSQL2008",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL2008",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"MSSQL2008\",\"MSSQL\",\"AnsiSQL\"]",
    "___id": "T000002R003717",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9035,
        9081
      ],
      "filename": "UBDomain.js",
      "lineno": 309,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042355",
        "name": "MSSQL2012",
        "type": "ArrayExpression",
        "value": "[\"MSSQL2012\",\"MSSQL\",\"AnsiSQL\"]"
      }
    },
    "name": "MSSQL2012",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.MSSQL2012",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"MSSQL2012\",\"MSSQL\",\"AnsiSQL\"]",
    "___id": "T000002R003716",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9313,
        9344
      ],
      "filename": "UBDomain.js",
      "lineno": 315,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042384",
        "name": "Oracle",
        "type": "ArrayExpression",
        "value": "[\"Oracle\",\"AnsiSQL\"]"
      }
    },
    "name": "Oracle",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"Oracle\",\"AnsiSQL\"]",
    "___id": "T000002R003722",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9266,
        9309
      ],
      "filename": "UBDomain.js",
      "lineno": 314,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042379",
        "name": "Oracle9",
        "type": "ArrayExpression",
        "value": "[\"Oracle9\",\"Oracle\",\"AnsiSQL\"]"
      }
    },
    "name": "Oracle9",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle9",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"Oracle9\",\"Oracle\",\"AnsiSQL\"]",
    "___id": "T000002R003721",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9217,
        9262
      ],
      "filename": "UBDomain.js",
      "lineno": 313,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042374",
        "name": "Oracle10",
        "type": "ArrayExpression",
        "value": "[\"Oracle10\",\"Oracle\",\"AnsiSQL\"]"
      }
    },
    "name": "Oracle10",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle10",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"Oracle10\",\"Oracle\",\"AnsiSQL\"]",
    "___id": "T000002R003720",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9168,
        9213
      ],
      "filename": "UBDomain.js",
      "lineno": 312,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042369",
        "name": "Oracle11",
        "type": "ArrayExpression",
        "value": "[\"Oracle11\",\"Oracle\",\"AnsiSQL\"]"
      }
    },
    "name": "Oracle11",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.Oracle11",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"Oracle11\",\"Oracle\",\"AnsiSQL\"]",
    "___id": "T000002R003719",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9348,
        9387
      ],
      "filename": "UBDomain.js",
      "lineno": 316,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042388",
        "name": "PostgreSQL",
        "type": "ArrayExpression",
        "value": "[\"PostgreSQL\",\"AnsiSQL\"]"
      }
    },
    "name": "PostgreSQL",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.PostgreSQL",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"PostgreSQL\",\"AnsiSQL\"]",
    "___id": "T000002R003723",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        9456,
        9489
      ],
      "filename": "UBDomain.js",
      "lineno": 319,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042399",
        "name": "SQLite3",
        "type": "ArrayExpression",
        "value": "[\"SQLite3\",\"AnsiSQL\"]"
      }
    },
    "name": "SQLite3",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority.SQLite3",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.dialectsPriority",
    "scope": "static",
    "defaultvalue": "[\"SQLite3\",\"AnsiSQL\"]",
    "___id": "T000002R003726",
    "___s": true
  },
  {
    "comment": "/**\n * @enum\n */",
    "meta": {
      "range": [
        8737,
        8859
      ],
      "filename": "UBDomain.js",
      "lineno": 296,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042336",
        "name": "UBDomain.EntityCacheTypes",
        "type": "ObjectExpression",
        "value": "{\"None\":\"None\",\"Entity\":\"Entity\",\"Session\":\"Session\",\"SessionEntity\":\"SessionEntity\"}",
        "paramnames": []
      }
    },
    "kind": "member",
    "isEnum": true,
    "name": "EntityCacheTypes",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            8769,
            8781
          ],
          "filename": "UBDomain.js",
          "lineno": 297,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042341",
            "name": "None",
            "type": "Literal",
            "value": "None"
          }
        },
        "name": "None",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.None",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
        "scope": "static",
        "defaultvalue": "None",
        "___id": "T000002R003711",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8785,
            8801
          ],
          "filename": "UBDomain.js",
          "lineno": 298,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042343",
            "name": "Entity",
            "type": "Literal",
            "value": "Entity"
          }
        },
        "name": "Entity",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.Entity",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
        "scope": "static",
        "defaultvalue": "Entity",
        "___id": "T000002R003712",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8805,
            8823
          ],
          "filename": "UBDomain.js",
          "lineno": 299,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042345",
            "name": "Session",
            "type": "Literal",
            "value": "Session"
          }
        },
        "name": "Session",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.Session",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
        "scope": "static",
        "defaultvalue": "Session",
        "___id": "T000002R003713",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8827,
            8857
          ],
          "filename": "UBDomain.js",
          "lineno": 300,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042347",
            "name": "SessionEntity",
            "type": "Literal",
            "value": "SessionEntity"
          }
        },
        "name": "SessionEntity",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.SessionEntity",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
        "scope": "static",
        "defaultvalue": "SessionEntity",
        "___id": "T000002R003714",
        "___s": true
      }
    ],
    "___id": "T000002R003710",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8785,
        8801
      ],
      "filename": "UBDomain.js",
      "lineno": 298,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042343",
        "name": "Entity",
        "type": "Literal",
        "value": "Entity"
      }
    },
    "name": "Entity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.Entity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
    "scope": "static",
    "defaultvalue": "Entity",
    "___id": "T000002R003712",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8769,
        8781
      ],
      "filename": "UBDomain.js",
      "lineno": 297,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042341",
        "name": "None",
        "type": "Literal",
        "value": "None"
      }
    },
    "name": "None",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.None",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
    "scope": "static",
    "defaultvalue": "None",
    "___id": "T000002R003711",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8805,
        8823
      ],
      "filename": "UBDomain.js",
      "lineno": 299,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042345",
        "name": "Session",
        "type": "Literal",
        "value": "Session"
      }
    },
    "name": "Session",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.Session",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
    "scope": "static",
    "defaultvalue": "Session",
    "___id": "T000002R003713",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8827,
        8857
      ],
      "filename": "UBDomain.js",
      "lineno": 300,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042347",
        "name": "SessionEntity",
        "type": "Literal",
        "value": "SessionEntity"
      }
    },
    "name": "SessionEntity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes.SessionEntity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityCacheTypes",
    "scope": "static",
    "defaultvalue": "SessionEntity",
    "___id": "T000002R003714",
    "___s": true
  },
  {
    "comment": "/**\n * Entity dataSource types\n * @enum {string}\n * @readonly\n */",
    "meta": {
      "range": [
        8598,
        8718
      ],
      "filename": "UBDomain.js",
      "lineno": 286,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042322",
        "name": "UBDomain.EntityDataSourceType",
        "type": "ObjectExpression",
        "value": "{\"Normal\":\"Normal\",\"External\":\"External\",\"System\":\"System\",\"Virtual\":\"Virtual\"}",
        "paramnames": []
      }
    },
    "description": "Entity dataSource types",
    "kind": "member",
    "isEnum": true,
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "EntityDataSourceType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            8634,
            8650
          ],
          "filename": "UBDomain.js",
          "lineno": 287,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042327",
            "name": "Normal",
            "type": "Literal",
            "value": "Normal"
          }
        },
        "name": "Normal",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.Normal",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "Normal",
        "___id": "T000002R003706",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8654,
            8674
          ],
          "filename": "UBDomain.js",
          "lineno": 288,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042329",
            "name": "External",
            "type": "Literal",
            "value": "External"
          }
        },
        "name": "External",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.External",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "External",
        "___id": "T000002R003707",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8678,
            8694
          ],
          "filename": "UBDomain.js",
          "lineno": 289,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042331",
            "name": "System",
            "type": "Literal",
            "value": "System"
          }
        },
        "name": "System",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.System",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "System",
        "___id": "T000002R003708",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8698,
            8716
          ],
          "filename": "UBDomain.js",
          "lineno": 290,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042333",
            "name": "Virtual",
            "type": "Literal",
            "value": "Virtual"
          }
        },
        "name": "Virtual",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.Virtual",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "Virtual",
        "___id": "T000002R003709",
        "___s": true
      }
    ],
    "___id": "T000002R003705",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8654,
        8674
      ],
      "filename": "UBDomain.js",
      "lineno": 288,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042329",
        "name": "External",
        "type": "Literal",
        "value": "External"
      }
    },
    "name": "External",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.External",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "External",
    "___id": "T000002R003707",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8634,
        8650
      ],
      "filename": "UBDomain.js",
      "lineno": 287,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042327",
        "name": "Normal",
        "type": "Literal",
        "value": "Normal"
      }
    },
    "name": "Normal",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.Normal",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "Normal",
    "___id": "T000002R003706",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8678,
        8694
      ],
      "filename": "UBDomain.js",
      "lineno": 289,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042331",
        "name": "System",
        "type": "Literal",
        "value": "System"
      }
    },
    "name": "System",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.System",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "System",
    "___id": "T000002R003708",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8698,
        8716
      ],
      "filename": "UBDomain.js",
      "lineno": 290,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042333",
        "name": "Virtual",
        "type": "Literal",
        "value": "Virtual"
      }
    },
    "name": "Virtual",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType.Virtual",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.EntityDataSourceType",
    "scope": "static",
    "type": {
      "names": [
        "string"
      ]
    },
    "defaultvalue": "Virtual",
    "___id": "T000002R003709",
    "___s": true
  },
  {
    "comment": "/**\n * Types of expressions in attribute mapping\n * @readonly\n * @protected\n * @enum\n */",
    "meta": {
      "range": [
        8131,
        8205
      ],
      "filename": "UBDomain.js",
      "lineno": 253,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042288",
        "name": "UBDomain.ExpressionType",
        "type": "ObjectExpression",
        "value": "{\"Field\":\"Field\",\"Expression\":\"Expression\"}",
        "paramnames": []
      }
    },
    "description": "Types of expressions in attribute mapping",
    "readonly": true,
    "access": "protected",
    "kind": "member",
    "isEnum": true,
    "name": "ExpressionType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            8161,
            8175
          ],
          "filename": "UBDomain.js",
          "lineno": 254,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042293",
            "name": "Field",
            "type": "Literal",
            "value": "Field"
          }
        },
        "name": "Field",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType.Field",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType",
        "scope": "static",
        "defaultvalue": "Field",
        "___id": "T000002R003695",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8179,
            8203
          ],
          "filename": "UBDomain.js",
          "lineno": 255,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042295",
            "name": "Expression",
            "type": "Literal",
            "value": "Expression"
          }
        },
        "name": "Expression",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType.Expression",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType",
        "scope": "static",
        "defaultvalue": "Expression",
        "___id": "T000002R003696",
        "___s": true
      }
    ],
    "___id": "T000002R003694",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8179,
        8203
      ],
      "filename": "UBDomain.js",
      "lineno": 255,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042295",
        "name": "Expression",
        "type": "Literal",
        "value": "Expression"
      }
    },
    "name": "Expression",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType.Expression",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType",
    "scope": "static",
    "defaultvalue": "Expression",
    "___id": "T000002R003696",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8161,
        8175
      ],
      "filename": "UBDomain.js",
      "lineno": 254,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042293",
        "name": "Field",
        "type": "Literal",
        "value": "Field"
      }
    },
    "name": "Field",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType.Field",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ExpressionType",
    "scope": "static",
    "defaultvalue": "Field",
    "___id": "T000002R003695",
    "___s": true
  },
  {
    "comment": "/**\n * Return physical type by UBDataType\n * @param {string} dataType\n * @return {string}\n */",
    "meta": {
      "range": [
        9587,
        10317
      ],
      "filename": "UBDomain.js",
      "lineno": 327,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042404",
        "name": "UBDomain.getPhysicalDataType",
        "type": "FunctionExpression",
        "paramnames": [
          "dataType"
        ]
      },
      "vars": {
        "ubDataTypes": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.getPhysicalDataType~ubDataTypes",
        "typeMap": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.getPhysicalDataType~typeMap",
        "typeMap[undefined]": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.getPhysicalDataType~typeMap.undefined]",
        "this.physicalTypeMap": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.getPhysicalDataType#physicalTypeMap"
      }
    },
    "description": "Return physical type by UBDataType",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "dataType"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getPhysicalDataType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.getPhysicalDataType",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "___id": "T000002R003727",
    "___s": true
  },
  {
    "comment": "/**\n * Possible types of the attributes\n * @readonly\n * @enum\n */",
    "meta": {
      "range": [
        6430,
        7901
      ],
      "filename": "UBDomain.js",
      "lineno": 208,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042226",
        "name": "UBDomain.ubDataTypes",
        "type": "ObjectExpression",
        "value": "{\"String\":\"String\",\"Int\":\"Int\",\"BigInt\":\"BigInt\",\"Float\":\"Float\",\"Currency\":\"Currency\",\"Boolean\":\"Boolean\",\"DateTime\":\"DateTime\",\"Text\":\"Text\",\"ID\":\"ID\",\"Entity\":\"Entity\",\"Document\":\"Document\",\"Many\":\"Many\",\"TimeLog\":\"TimeLog\",\"Enum\":\"Enum\",\"BLOB\":\"BLOB\",\"Date\":\"Date\",\"Json\":\"Json\"}",
        "paramnames": []
      }
    },
    "description": "Possible types of the attributes",
    "readonly": true,
    "kind": "member",
    "isEnum": true,
    "name": "ubDataTypes",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "/** Small string. _MSSQL: NVARCHAR, ORACLE: NVARCHAR2, POSTGRE: VARCHAR_ */",
        "meta": {
          "range": [
            6535,
            6551
          ],
          "filename": "UBDomain.js",
          "lineno": 210,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042231",
            "name": "String",
            "type": "Literal",
            "value": "String"
          }
        },
        "description": "Small string. <em>MSSQL: NVARCHAR, ORACLE: NVARCHAR2, POSTGRE: VARCHAR</em>",
        "name": "String",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.String",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "String",
        "___id": "T000002R003674",
        "___s": true
      },
      {
        "comment": "/** 32-bite Integer. MSSQL: INT, ORACLE: INTEGER, POSTGRE: INTEGER */",
        "meta": {
          "range": [
            6627,
            6637
          ],
          "filename": "UBDomain.js",
          "lineno": 212,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042233",
            "name": "Int",
            "type": "Literal",
            "value": "Int"
          }
        },
        "description": "32-bite Integer. MSSQL: INT, ORACLE: INTEGER, POSTGRE: INTEGER",
        "name": "Int",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Int",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Int",
        "___id": "T000002R003675",
        "___s": true
      },
      {
        "comment": "/** 64-bite Integer. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT */",
        "meta": {
          "range": [
            6718,
            6734
          ],
          "filename": "UBDomain.js",
          "lineno": 214,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042235",
            "name": "BigInt",
            "type": "Literal",
            "value": "BigInt"
          }
        },
        "description": "64-bite Integer. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT",
        "name": "BigInt",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.BigInt",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "BigInt",
        "___id": "T000002R003676",
        "___s": true
      },
      {
        "comment": "/** Double. MSSQL: FLOAT, ORACLE: NUMBER(19, 4), POSTGRE: NUMERIC(19, 4) */",
        "meta": {
          "range": [
            6816,
            6830
          ],
          "filename": "UBDomain.js",
          "lineno": 216,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042237",
            "name": "Float",
            "type": "Literal",
            "value": "Float"
          }
        },
        "description": "Double. MSSQL: FLOAT, ORACLE: NUMBER(19, 4), POSTGRE: NUMERIC(19, 4)",
        "name": "Float",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Float",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Float",
        "___id": "T000002R003677",
        "___s": true
      },
      {
        "comment": "/** Currency. MSSQL: FLOAT, ORACLE: NUMBER(19, 2), POSTGRE: NUMERIC(19, 2) */",
        "meta": {
          "range": [
            6914,
            6934
          ],
          "filename": "UBDomain.js",
          "lineno": 218,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042239",
            "name": "Currency",
            "type": "Literal",
            "value": "Currency"
          }
        },
        "description": "Currency. MSSQL: FLOAT, ORACLE: NUMBER(19, 2), POSTGRE: NUMERIC(19, 2)",
        "name": "Currency",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Currency",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Currency",
        "___id": "T000002R003678",
        "___s": true
      },
      {
        "comment": "/** Boolean. MSSQL: TINYINT, ORACLE: NUMBER(1), POSTGRE: SMALLINT */",
        "meta": {
          "range": [
            7009,
            7027
          ],
          "filename": "UBDomain.js",
          "lineno": 220,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042241",
            "name": "Boolean",
            "type": "Literal",
            "value": "Boolean"
          }
        },
        "description": "Boolean. MSSQL: TINYINT, ORACLE: NUMBER(1), POSTGRE: SMALLINT",
        "name": "Boolean",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Boolean",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Boolean",
        "___id": "T000002R003679",
        "___s": true
      },
      {
        "comment": "/** Date + Time in UTC (GMT+0) timezone. MSSQL: DATETIME, OARCLE: DATE, POSTGRE: TIMESTAMP WITH TIME ZONE */",
        "meta": {
          "range": [
            7142,
            7162
          ],
          "filename": "UBDomain.js",
          "lineno": 222,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042243",
            "name": "DateTime",
            "type": "Literal",
            "value": "DateTime"
          }
        },
        "description": "Date + Time in UTC (GMT+0) timezone. MSSQL: DATETIME, OARCLE: DATE, POSTGRE: TIMESTAMP WITH TIME ZONE",
        "name": "DateTime",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.DateTime",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "DateTime",
        "___id": "T000002R003680",
        "___s": true
      },
      {
        "comment": "/** Long strint. MSSQL: NVARCHAR(MAX), ORACLE: CLOB, POSTGRE: TEXT */",
        "meta": {
          "range": [
            7238,
            7250
          ],
          "filename": "UBDomain.js",
          "lineno": 224,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042245",
            "name": "Text",
            "type": "Literal",
            "value": "Text"
          }
        },
        "description": "Long strint. MSSQL: NVARCHAR(MAX), ORACLE: CLOB, POSTGRE: TEXT",
        "name": "Text",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Text",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Text",
        "___id": "T000002R003681",
        "___s": true
      },
      {
        "comment": "/** Alias for BigInt */",
        "meta": {
          "range": [
            7280,
            7288
          ],
          "filename": "UBDomain.js",
          "lineno": 226,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042247",
            "name": "ID",
            "type": "Literal",
            "value": "ID"
          }
        },
        "description": "Alias for BigInt",
        "name": "ID",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.ID",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "ID",
        "___id": "T000002R003682",
        "___s": true
      },
      {
        "comment": "/** Reference to enother entity. BigInt */",
        "meta": {
          "range": [
            7337,
            7353
          ],
          "filename": "UBDomain.js",
          "lineno": 228,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042249",
            "name": "Entity",
            "type": "Literal",
            "value": "Entity"
          }
        },
        "description": "Reference to enother entity. BigInt",
        "name": "Entity",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Entity",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Entity",
        "___id": "T000002R003683",
        "___s": true
      },
      {
        "comment": "/** Store a JSON with information about Document place in blob store */",
        "meta": {
          "range": [
            7431,
            7451
          ],
          "filename": "UBDomain.js",
          "lineno": 230,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042251",
            "name": "Document",
            "type": "Literal",
            "value": "Document"
          }
        },
        "description": "Store a JSON with information about Document place in blob store",
        "name": "Document",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Document",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Document",
        "___id": "T000002R003684",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            7455,
            7467
          ],
          "filename": "UBDomain.js",
          "lineno": 231,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042253",
            "name": "Many",
            "type": "Literal",
            "value": "Many"
          }
        },
        "name": "Many",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Many",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Many",
        "___id": "T000002R003685",
        "___s": true
      },
      {
        "comment": "/**  Seconds since UNIX epoch, Int64. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT */",
        "meta": {
          "range": [
            7565,
            7583
          ],
          "filename": "UBDomain.js",
          "lineno": 233,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042255",
            "name": "TimeLog",
            "type": "Literal",
            "value": "TimeLog"
          }
        },
        "description": "Seconds since UNIX epoch, Int64. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT",
        "name": "TimeLog",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.TimeLog",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "TimeLog",
        "___id": "T000002R003686",
        "___s": true
      },
      {
        "comment": "/** Enumertion (see ubm_enum) */",
        "meta": {
          "range": [
            7622,
            7634
          ],
          "filename": "UBDomain.js",
          "lineno": 235,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042257",
            "name": "Enum",
            "type": "Literal",
            "value": "Enum"
          }
        },
        "description": "Enumertion (see ubm_enum)",
        "name": "Enum",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Enum",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Enum",
        "___id": "T000002R003687",
        "___s": true
      },
      {
        "comment": "/** Bynary data. MSSQL: VARBINARY(MAX), ORACLE: BLOB, POSTGRE: BYTEA */",
        "meta": {
          "range": [
            7712,
            7724
          ],
          "filename": "UBDomain.js",
          "lineno": 237,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042259",
            "name": "BLOB",
            "type": "Literal",
            "value": "BLOB"
          }
        },
        "description": "Bynary data. MSSQL: VARBINARY(MAX), ORACLE: BLOB, POSTGRE: BYTEA",
        "name": "BLOB",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.BLOB",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "BLOB",
        "___id": "T000002R003688",
        "___s": true
      },
      {
        "comment": "/** Date (without time) in UTC (GMT+0) */",
        "meta": {
          "range": [
            7772,
            7784
          ],
          "filename": "UBDomain.js",
          "lineno": 239,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042261",
            "name": "Date",
            "type": "Literal",
            "value": "Date"
          }
        },
        "description": "Date (without time) in UTC (GMT+0)",
        "name": "Date",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Date",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Date",
        "___id": "T000002R003689",
        "___s": true
      },
      {
        "comment": "/** Json stored in database. Postgres: JSONB, _MSSQL: NVARCHAR(4000), ORACLE: NVARCHAR2(2000) */",
        "meta": {
          "range": [
            7887,
            7899
          ],
          "filename": "UBDomain.js",
          "lineno": 241,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042263",
            "name": "Json",
            "type": "Literal",
            "value": "Json"
          }
        },
        "description": "Json stored in database. Postgres: JSONB, _MSSQL: NVARCHAR(4000), ORACLE: NVARCHAR2(2000)",
        "name": "Json",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Json",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
        "scope": "static",
        "defaultvalue": "Json",
        "___id": "T000002R003690",
        "___s": true
      }
    ],
    "___id": "T000002R003673",
    "___s": true
  },
  {
    "comment": "/** 64-bite Integer. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT */",
    "meta": {
      "range": [
        6718,
        6734
      ],
      "filename": "UBDomain.js",
      "lineno": 214,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042235",
        "name": "BigInt",
        "type": "Literal",
        "value": "BigInt"
      }
    },
    "description": "64-bite Integer. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT",
    "name": "BigInt",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.BigInt",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "BigInt",
    "___id": "T000002R003676",
    "___s": true
  },
  {
    "comment": "/** Bynary data. MSSQL: VARBINARY(MAX), ORACLE: BLOB, POSTGRE: BYTEA */",
    "meta": {
      "range": [
        7712,
        7724
      ],
      "filename": "UBDomain.js",
      "lineno": 237,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042259",
        "name": "BLOB",
        "type": "Literal",
        "value": "BLOB"
      }
    },
    "description": "Bynary data. MSSQL: VARBINARY(MAX), ORACLE: BLOB, POSTGRE: BYTEA",
    "name": "BLOB",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.BLOB",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "BLOB",
    "___id": "T000002R003688",
    "___s": true
  },
  {
    "comment": "/** Boolean. MSSQL: TINYINT, ORACLE: NUMBER(1), POSTGRE: SMALLINT */",
    "meta": {
      "range": [
        7009,
        7027
      ],
      "filename": "UBDomain.js",
      "lineno": 220,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042241",
        "name": "Boolean",
        "type": "Literal",
        "value": "Boolean"
      }
    },
    "description": "Boolean. MSSQL: TINYINT, ORACLE: NUMBER(1), POSTGRE: SMALLINT",
    "name": "Boolean",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Boolean",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Boolean",
    "___id": "T000002R003679",
    "___s": true
  },
  {
    "comment": "/** Currency. MSSQL: FLOAT, ORACLE: NUMBER(19, 2), POSTGRE: NUMERIC(19, 2) */",
    "meta": {
      "range": [
        6914,
        6934
      ],
      "filename": "UBDomain.js",
      "lineno": 218,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042239",
        "name": "Currency",
        "type": "Literal",
        "value": "Currency"
      }
    },
    "description": "Currency. MSSQL: FLOAT, ORACLE: NUMBER(19, 2), POSTGRE: NUMERIC(19, 2)",
    "name": "Currency",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Currency",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Currency",
    "___id": "T000002R003678",
    "___s": true
  },
  {
    "comment": "/** Date (without time) in UTC (GMT+0) */",
    "meta": {
      "range": [
        7772,
        7784
      ],
      "filename": "UBDomain.js",
      "lineno": 239,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042261",
        "name": "Date",
        "type": "Literal",
        "value": "Date"
      }
    },
    "description": "Date (without time) in UTC (GMT+0)",
    "name": "Date",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Date",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Date",
    "___id": "T000002R003689",
    "___s": true
  },
  {
    "comment": "/** Date + Time in UTC (GMT+0) timezone. MSSQL: DATETIME, OARCLE: DATE, POSTGRE: TIMESTAMP WITH TIME ZONE */",
    "meta": {
      "range": [
        7142,
        7162
      ],
      "filename": "UBDomain.js",
      "lineno": 222,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042243",
        "name": "DateTime",
        "type": "Literal",
        "value": "DateTime"
      }
    },
    "description": "Date + Time in UTC (GMT+0) timezone. MSSQL: DATETIME, OARCLE: DATE, POSTGRE: TIMESTAMP WITH TIME ZONE",
    "name": "DateTime",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.DateTime",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "DateTime",
    "___id": "T000002R003680",
    "___s": true
  },
  {
    "comment": "/** Store a JSON with information about Document place in blob store */",
    "meta": {
      "range": [
        7431,
        7451
      ],
      "filename": "UBDomain.js",
      "lineno": 230,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042251",
        "name": "Document",
        "type": "Literal",
        "value": "Document"
      }
    },
    "description": "Store a JSON with information about Document place in blob store",
    "name": "Document",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Document",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Document",
    "___id": "T000002R003684",
    "___s": true
  },
  {
    "comment": "/** Reference to enother entity. BigInt */",
    "meta": {
      "range": [
        7337,
        7353
      ],
      "filename": "UBDomain.js",
      "lineno": 228,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042249",
        "name": "Entity",
        "type": "Literal",
        "value": "Entity"
      }
    },
    "description": "Reference to enother entity. BigInt",
    "name": "Entity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Entity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Entity",
    "___id": "T000002R003683",
    "___s": true
  },
  {
    "comment": "/** Enumertion (see ubm_enum) */",
    "meta": {
      "range": [
        7622,
        7634
      ],
      "filename": "UBDomain.js",
      "lineno": 235,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042257",
        "name": "Enum",
        "type": "Literal",
        "value": "Enum"
      }
    },
    "description": "Enumertion (see ubm_enum)",
    "name": "Enum",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Enum",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Enum",
    "___id": "T000002R003687",
    "___s": true
  },
  {
    "comment": "/** Double. MSSQL: FLOAT, ORACLE: NUMBER(19, 4), POSTGRE: NUMERIC(19, 4) */",
    "meta": {
      "range": [
        6816,
        6830
      ],
      "filename": "UBDomain.js",
      "lineno": 216,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042237",
        "name": "Float",
        "type": "Literal",
        "value": "Float"
      }
    },
    "description": "Double. MSSQL: FLOAT, ORACLE: NUMBER(19, 4), POSTGRE: NUMERIC(19, 4)",
    "name": "Float",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Float",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Float",
    "___id": "T000002R003677",
    "___s": true
  },
  {
    "comment": "/** Alias for BigInt */",
    "meta": {
      "range": [
        7280,
        7288
      ],
      "filename": "UBDomain.js",
      "lineno": 226,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042247",
        "name": "ID",
        "type": "Literal",
        "value": "ID"
      }
    },
    "description": "Alias for BigInt",
    "name": "ID",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.ID",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "ID",
    "___id": "T000002R003682",
    "___s": true
  },
  {
    "comment": "/** 32-bite Integer. MSSQL: INT, ORACLE: INTEGER, POSTGRE: INTEGER */",
    "meta": {
      "range": [
        6627,
        6637
      ],
      "filename": "UBDomain.js",
      "lineno": 212,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042233",
        "name": "Int",
        "type": "Literal",
        "value": "Int"
      }
    },
    "description": "32-bite Integer. MSSQL: INT, ORACLE: INTEGER, POSTGRE: INTEGER",
    "name": "Int",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Int",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Int",
    "___id": "T000002R003675",
    "___s": true
  },
  {
    "comment": "/** Json stored in database. Postgres: JSONB, _MSSQL: NVARCHAR(4000), ORACLE: NVARCHAR2(2000) */",
    "meta": {
      "range": [
        7887,
        7899
      ],
      "filename": "UBDomain.js",
      "lineno": 241,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042263",
        "name": "Json",
        "type": "Literal",
        "value": "Json"
      }
    },
    "description": "Json stored in database. Postgres: JSONB, _MSSQL: NVARCHAR(4000), ORACLE: NVARCHAR2(2000)",
    "name": "Json",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Json",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Json",
    "___id": "T000002R003690",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        7455,
        7467
      ],
      "filename": "UBDomain.js",
      "lineno": 231,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042253",
        "name": "Many",
        "type": "Literal",
        "value": "Many"
      }
    },
    "name": "Many",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Many",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Many",
    "___id": "T000002R003685",
    "___s": true
  },
  {
    "comment": "/** Small string. _MSSQL: NVARCHAR, ORACLE: NVARCHAR2, POSTGRE: VARCHAR_ */",
    "meta": {
      "range": [
        6535,
        6551
      ],
      "filename": "UBDomain.js",
      "lineno": 210,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042231",
        "name": "String",
        "type": "Literal",
        "value": "String"
      }
    },
    "description": "Small string. <em>MSSQL: NVARCHAR, ORACLE: NVARCHAR2, POSTGRE: VARCHAR</em>",
    "name": "String",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.String",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "String",
    "___id": "T000002R003674",
    "___s": true
  },
  {
    "comment": "/** Long strint. MSSQL: NVARCHAR(MAX), ORACLE: CLOB, POSTGRE: TEXT */",
    "meta": {
      "range": [
        7238,
        7250
      ],
      "filename": "UBDomain.js",
      "lineno": 224,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042245",
        "name": "Text",
        "type": "Literal",
        "value": "Text"
      }
    },
    "description": "Long strint. MSSQL: NVARCHAR(MAX), ORACLE: CLOB, POSTGRE: TEXT",
    "name": "Text",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.Text",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "Text",
    "___id": "T000002R003681",
    "___s": true
  },
  {
    "comment": "/**  Seconds since UNIX epoch, Int64. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT */",
    "meta": {
      "range": [
        7565,
        7583
      ],
      "filename": "UBDomain.js",
      "lineno": 233,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042255",
        "name": "TimeLog",
        "type": "Literal",
        "value": "TimeLog"
      }
    },
    "description": "Seconds since UNIX epoch, Int64. MSSQL: BIGINT, ORACLE: NUMBER(19), POSTGRE: BIGINT",
    "name": "TimeLog",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes.TimeLog",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubDataTypes",
    "scope": "static",
    "defaultvalue": "TimeLog",
    "___id": "T000002R003686",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8298,
        8324
      ],
      "filename": "UBDomain.js",
      "lineno": 265,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042303",
        "name": "dataHistory",
        "type": "Literal",
        "value": "dataHistory"
      }
    },
    "name": "dataHistory",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins.dataHistory",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins",
    "scope": "static",
    "defaultvalue": "dataHistory",
    "___id": "T000002R003698",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8328,
        8348
      ],
      "filename": "UBDomain.js",
      "lineno": 266,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042305",
        "name": "mStorage",
        "type": "Literal",
        "value": "mStorage"
      }
    },
    "name": "mStorage",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins.mStorage",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins",
    "scope": "static",
    "defaultvalue": "mStorage",
    "___id": "T000002R003699",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8370,
        8390
      ],
      "filename": "UBDomain.js",
      "lineno": 268,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042309",
        "name": "treePath",
        "type": "Literal",
        "value": "treePath"
      }
    },
    "name": "treePath",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins.treePath",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins",
    "scope": "static",
    "defaultvalue": "treePath",
    "___id": "T000002R003701",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8352,
        8366
      ],
      "filename": "UBDomain.js",
      "lineno": 267,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042307",
        "name": "unity",
        "type": "Literal",
        "value": "unity"
      }
    },
    "name": "unity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins.unity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubMixins",
    "scope": "static",
    "defaultvalue": "unity",
    "___id": "T000002R003700",
    "___s": true
  },
  {
    "comment": "/**\n * Service attribute names\n * @readonly\n * @enum\n */",
    "meta": {
      "range": [
        8451,
        8530
      ],
      "filename": "UBDomain.js",
      "lineno": 276,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042312",
        "name": "UBDomain.ubServiceFields",
        "type": "ObjectExpression",
        "value": "{\"dateFrom\":\"mi_datefrom\",\"dateTo\":\"mi_dateto\"}",
        "paramnames": []
      }
    },
    "description": "Service attribute names",
    "readonly": true,
    "kind": "member",
    "isEnum": true,
    "name": "ubServiceFields",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "static",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            8482,
            8505
          ],
          "filename": "UBDomain.js",
          "lineno": 277,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042317",
            "name": "dateFrom",
            "type": "Literal",
            "value": "mi_datefrom"
          }
        },
        "name": "dateFrom",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields.dateFrom",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields",
        "scope": "static",
        "defaultvalue": "mi_datefrom",
        "___id": "T000002R003703",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            8509,
            8528
          ],
          "filename": "UBDomain.js",
          "lineno": 278,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100042319",
            "name": "dateTo",
            "type": "Literal",
            "value": "mi_dateto"
          }
        },
        "name": "dateTo",
        "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields.dateTo",
        "kind": "member",
        "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields",
        "scope": "static",
        "defaultvalue": "mi_dateto",
        "___id": "T000002R003704",
        "___s": true
      }
    ],
    "___id": "T000002R003702",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8482,
        8505
      ],
      "filename": "UBDomain.js",
      "lineno": 277,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042317",
        "name": "dateFrom",
        "type": "Literal",
        "value": "mi_datefrom"
      }
    },
    "name": "dateFrom",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields.dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields",
    "scope": "static",
    "defaultvalue": "mi_datefrom",
    "___id": "T000002R003703",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        8509,
        8528
      ],
      "filename": "UBDomain.js",
      "lineno": 278,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042319",
        "name": "dateTo",
        "type": "Literal",
        "value": "mi_dateto"
      }
    },
    "name": "dateTo",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields.dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain.ubServiceFields",
    "scope": "static",
    "defaultvalue": "mi_dateto",
    "___id": "T000002R003704",
    "___s": true
  },
  {
    "comment": "/**\n   * Connection collection (extended domain only)\n   * @member {Array<DBConnectionConfig>}\n   */",
    "meta": {
      "range": [
        1833,
        1877
      ],
      "filename": "UBDomain.js",
      "lineno": 55,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041758",
        "name": "this.connections",
        "type": "MemberExpression",
        "value": "domainInfo['connections']",
        "paramnames": []
      }
    },
    "description": "Connection collection (extended domain only)",
    "kind": "member",
    "type": {
      "names": [
        "Array.<DBConnectionConfig>"
      ]
    },
    "name": "connections",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#connections",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003640",
    "___s": true
  },
  {
    "comment": "/**\n   * Default connection (extended domain only)\n   * @member {DBConnectionConfig}\n   */",
    "meta": {
      "range": [
        1973,
        2007
      ],
      "filename": "UBDomain.js",
      "lineno": 60,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041766",
        "name": "this.defaultConnection",
        "type": "Identifier",
        "value": "undefined",
        "paramnames": []
      }
    },
    "description": "Default connection (extended domain only)",
    "kind": "member",
    "type": {
      "names": [
        "DBConnectionConfig"
      ]
    },
    "name": "defaultConnection",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#defaultConnection",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003641",
    "___s": true
  },
  {
    "comment": "/**\n * Iterates over domain entities and invokes `callBack` for each entity.\n * The iteratee is invoked with three arguments: (UBEntity, entityName, UBDomain.entities)\n * @param {domainEntitiesIteratorCallback} cb\n */",
    "meta": {
      "range": [
        5512,
        5599
      ],
      "filename": "UBDomain.js",
      "lineno": 173,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042138",
        "name": "UBDomain.prototype.eachEntity",
        "type": "FunctionExpression",
        "paramnames": [
          "cb"
        ]
      }
    },
    "description": "Iterates over domain entities and invokes <code>callBack</code> for each entity.\nThe iteratee is invoked with three arguments: (UBEntity, entityName, UBDomain.entities)",
    "params": [
      {
        "type": {
          "names": [
            "domainEntitiesIteratorCallback"
          ]
        },
        "name": "cb"
      }
    ],
    "name": "eachEntity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#eachEntity",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003668",
    "___s": true
  },
  {
    "comment": "/**\n   * Map with keys is entity name, value is UBEntity\n   * @member {Object<string, UBEntity>}\n   */",
    "meta": {
      "range": [
        1709,
        1727
      ],
      "filename": "UBDomain.js",
      "lineno": 50,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041752",
        "name": "this.entities",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Map with keys is entity name, value is UBEntity",
    "kind": "member",
    "type": {
      "names": [
        "Object.<string, UBEntity>"
      ]
    },
    "name": "entities",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#entities",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003639",
    "___s": true
  },
  {
    "comment": "/**\n * Filter entities by properties\n * @example\n *\n *      // sessionCachedEntities contains all entities with property cacheType === Session\n *      var sessionCachedEntities = domain.filterEntities({cacheType: 'Session'});\n *\n * @param {Object|Function} predicate Either a function passed to lodash filter or object\n * @returns {Array<UBEntity>}\n */",
    "meta": {
      "range": [
        5954,
        6362
      ],
      "filename": "UBDomain.js",
      "lineno": 187,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042157",
        "name": "UBDomain.prototype.filterEntities",
        "type": "FunctionExpression",
        "paramnames": [
          "predicate"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Filter entities by properties",
    "examples": [
      "// sessionCachedEntities contains all entities with property cacheType === Session\n     var sessionCachedEntities = domain.filterEntities({cacheType: 'Session'});"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "function"
          ]
        },
        "description": "Either a function passed to lodash filter or object",
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<UBEntity>"
          ]
        }
      }
    ],
    "name": "filterEntities",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#filterEntities",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003669",
    "___s": true
  },
  {
    "comment": "/**\n * Get entity by code\n * @param {string} entityCode\n * @param {Boolean} [raiseErrorIfNotExists=true] If `true`(default) and entity does not exists throw error\n * @returns {UBEntity}\n */",
    "meta": {
      "range": [
        4619,
        4902
      ],
      "filename": "UBDomain.js",
      "lineno": 144,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042083",
        "name": "UBDomain.prototype.get",
        "type": "FunctionExpression",
        "paramnames": [
          "entityCode",
          "raiseErrorIfNotExists"
        ]
      },
      "vars": {
        "result": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#get~result"
      }
    },
    "description": "Get entity by code",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "If <code>true</code>(default) and entity does not exists throw error",
        "name": "raiseErrorIfNotExists"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBEntity"
          ]
        }
      }
    ],
    "name": "get",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#get",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003664",
    "___s": true
  },
  {
    "comment": "/**\n * Check entity present in domain & user has access right for at least one entity method\n * @param {string} entityCode\n * @returns {Boolean}\n */",
    "meta": {
      "range": [
        5053,
        5140
      ],
      "filename": "UBDomain.js",
      "lineno": 157,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042120",
        "name": "UBDomain.prototype.has",
        "type": "FunctionExpression",
        "paramnames": [
          "entityCode"
        ]
      }
    },
    "description": "Check entity present in domain &amp; user has access right for at least one entity method",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "has",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#has",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003666",
    "___s": true
  },
  {
    "comment": "/**\n * Check all provided entity methods are accessible via RLS.\n *\n * If entity does not exist in domain or at last one of provided methods is not accessible - return false\n *\n * @param {string} entityCode\n * @param {String|Array} methodNames\n */",
    "meta": {
      "range": [
        4155,
        4428
      ],
      "filename": "UBDomain.js",
      "lineno": 133,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042042",
        "name": "UBDomain.prototype.isEntityMethodsAccessible",
        "type": "FunctionExpression",
        "paramnames": [
          "entityCode",
          "methodNames"
        ]
      },
      "vars": {
        "entity": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#isEntityMethodsAccessible~entity"
      }
    },
    "description": "Check all provided entity methods are accessible via RLS.</p>\n<p>If entity does not exist in domain or at last one of provided methods is not accessible - return false",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      },
      {
        "type": {
          "names": [
            "String",
            "Array"
          ]
        },
        "name": "methodNames"
      }
    ],
    "name": "isEntityMethodsAccessible",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#isEntityMethodsAccessible",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003662",
    "___s": true
  },
  {
    "comment": "/**\n   * Models collection\n   * @member {Object<string, UBModel>}\n   */",
    "meta": {
      "range": [
        3593,
        3609
      ],
      "filename": "UBDomain.js",
      "lineno": 115,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041970",
        "name": "this.models",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Models collection",
    "kind": "member",
    "type": {
      "names": [
        "Object.<string, UBModel>"
      ]
    },
    "name": "models",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#models",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003658",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of models, sorted by the order of loading\n   * @member {Array<UBModel>}\n   */",
    "meta": {
      "range": [
        3492,
        3515
      ],
      "filename": "UBDomain.js",
      "lineno": 109,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100041964",
        "name": "this.orderedModels",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Array of models, sorted by the order of loading",
    "kind": "member",
    "type": {
      "names": [
        "Array.<UBModel>"
      ]
    },
    "name": "orderedModels",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBDomain#orderedModels",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBDomain",
    "scope": "instance",
    "___id": "T000002R003657",
    "___s": true
  },
  {
    "comment": "/**\n * Entity metadata\n * @class\n * @param {object} entityInfo\n * @param {object} entityMethods\n * @param {object} i18n\n * @param {string} entityCode\n * @param {UBDomain} domain\n */",
    "meta": {
      "range": [
        14289,
        20196
      ],
      "filename": "UBDomain.js",
      "lineno": 495,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042822",
        "name": "UBEntity",
        "type": "FunctionDeclaration",
        "paramnames": [
          "entityInfo",
          "entityMethods",
          "i18n",
          "entityCode",
          "domain"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~me",
        "mixinNames": "module:@unitybase/cs-shared.module:UBDomain~mixinNames",
        "mixinInfo": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~mixinInfo",
        "i18nMixin": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~i18nMixin",
        "": null,
        "this.code": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#code",
        "this.modelName": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#modelName",
        "this.name": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#name",
        "this.caption": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#caption",
        "this.description": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#description",
        "this.documentation": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#documentation",
        "this.descriptionAttribute": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#descriptionAttribute",
        "this.cacheType": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#cacheType",
        "this.dsType": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dsType",
        "this.isUnity": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#isUnity",
        "this.sqlAlias": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#sqlAlias",
        "this.connectionName": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#connectionName",
        "this.isFTSDataTable": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#isFTSDataTable",
        "this.connectionConfig": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#connectionConfig",
        "this.mapping": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#mapping",
        "mappingKeys": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~mappingKeys",
        "dialectPriority": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~dialectPriority",
        "this.dbKeys": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dbKeys",
        "this.dbExtensions": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dbExtensions",
        "this.attributes": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#attributes",
        "this.blobAttributes": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#blobAttributes",
        "attributesIsArray": "module:@unitybase/cs-shared.module:UBDomain~UBEntity~attributesIsArray",
        "this.mixins": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#mixins",
        "this.entityMethods": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#entityMethods"
      }
    },
    "description": "Entity metadata",
    "kind": "class",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "entityInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "entityMethods"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      },
      {
        "type": {
          "names": [
            "UBDomain"
          ]
        },
        "name": "domain"
      }
    ],
    "name": "UBEntity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003765",
    "___s": true
  },
  {
    "comment": "/**\n * Add entity level method. Client can call such methods remotely. Also such methods are the subjects of ELS.\n *\n * Property named `methodName` with a type `function` should be added to the entity namespace.\n * Such functions accept single parameter of type {@link ubMethodParams}\n *\n * Don't add methods what do not called from client using {@UBEntity#addMethod}!\n *\n * **Warning:** do not call UBEntity.addMethod from inside function or conditions.\n * This code evaluated during thread initialization and each thread must add method in the same manner.\n *\n * @example\n *\n  //consider entity with code `my_entity` exists. Inside my_entity.js file):\n  var me = my_entity;\n  me.entity.addMethod('externalMethod');\n  // @param {ubMethodParams} ctx <- here must be JSDoc comment format\n  me.externalMethod = function (ctx) {\n    let params = ctx.mParams\n    let a = params.a || 1\n    let b = params.b || 1\n    params.multiplyResult = a*b\n  }\n\n  // now from client side you can call\n  $App.connection.query({entity: 'my_entity', method: 'externalMethod', a: 10, b:20}).then(function(result){\n    console.log(' 10 * 20 = ', result.multiplyResult); // will put to log \"10 * 20 = 200\"\n  })\n\n * @param {string} methodName\n */",
    "meta": {
      "range": [
        28652,
        28787
      ],
      "filename": "UBDomain.js",
      "lineno": 954,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044163",
        "name": "UBEntity.prototype.addMethod",
        "type": "FunctionExpression",
        "paramnames": [
          "methodName"
        ]
      }
    },
    "description": "Add entity level method. Client can call such methods remotely. Also such methods are the subjects of ELS.</p>\n<p>Property named <code>methodName</code> with a type <code>function</code> should be added to the entity namespace.\nSuch functions accept single parameter of type {@link ubMethodParams}</p>\n<p>Don't add methods what do not called from client using {@UBEntity#addMethod}!</p>\n<p><strong>Warning:</strong> do not call UBEntity.addMethod from inside function or conditions.\nThis code evaluated during thread initialization and each thread must add method in the same manner.",
    "examples": [
      "//consider entity with code `my_entity` exists. Inside my_entity.js file):\n  var me = my_entity;\n  me.entity.addMethod('externalMethod');\n  // @param {ubMethodParams} ctx <- here must be JSDoc comment format\n  me.externalMethod = function (ctx) {\n    let params = ctx.mParams\n    let a = params.a || 1\n    let b = params.b || 1\n    params.multiplyResult = a*b\n  }\n\n  // now from client side you can call\n  $App.connection.query({entity: 'my_entity', method: 'externalMethod', a: 10, b:20}).then(function(result){\n    console.log(' 10 * 20 = ', result.multiplyResult); // will put to log \"10 * 20 = 200\"\n  })"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "methodName"
      }
    ],
    "name": "addMethod",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#addMethod",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003870",
    "___s": true
  },
  {
    "comment": "/**\n * Return a JSON representation entity WITHOUT properties which have default values\n * Result is very close to meta file.\n *\n * **WARNING** use carefully inside server thread - method is slow\n *\n * @param {boolean} [attributesAsArray=true]\n * @param {boolean} [removeAttrsAddedByMixin=true]\n * @returns {any}\n */",
    "meta": {
      "range": [
        24069,
        25331
      ],
      "filename": "UBDomain.js",
      "lineno": 813,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043747",
        "name": "UBEntity.prototype.asPlainJSON",
        "type": "FunctionExpression",
        "paramnames": [
          "attributesAsArray",
          "removeAttrsAddedByMixin"
        ]
      },
      "vars": {
        "entityJSON": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~entityJSON",
        "": null,
        "newAttributes": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~newAttributes",
        "attrName": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~attrName",
        "attr": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~attr",
        "newMappings": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~newMappings",
        "dialectName": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~dialectName",
        "oldDialect": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~oldDialect",
        "newDialect": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~newDialect",
        "attr.mapping": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~attr.mapping",
        "entityJSON.attributes": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON~entityJSON.attributes"
      }
    },
    "description": "Return a JSON representation entity WITHOUT properties which have default values\nResult is very close to meta file.</p>\n<p><strong>WARNING</strong> use carefully inside server thread - method is slow",
    "params": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "attributesAsArray"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "name": "removeAttrsAddedByMixin"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ],
    "name": "asPlainJSON",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#asPlainJSON",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003840",
    "___s": true
  },
  {
    "comment": "/**\n * Get entity attribute by code. Return `undefined` if attribute is not found\n * @param {string} attributeCode\n * @param {Boolean} [simpleOnly=false] If `false`(default) - parse complex attributes like `attr1.attr2.attr3`\n * @returns {UBEntityAttribute}\n */",
    "meta": {
      "range": [
        21629,
        21833
      ],
      "filename": "UBDomain.js",
      "lineno": 728,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043553",
        "name": "UBEntity.prototype.attr",
        "type": "FunctionExpression",
        "paramnames": [
          "attributeCode",
          "simpleOnly"
        ]
      },
      "vars": {
        "res": "module:@unitybase/cs-shared.module:UBDomain~res"
      }
    },
    "description": "Get entity attribute by code. Return <code>undefined</code> if attribute is not found",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeCode"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If <code>false</code>(default) - parse complex attributes like <code>attr1.attr2.attr3</code>",
        "name": "simpleOnly"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        }
      }
    ],
    "name": "attr",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#attr",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003828",
    "___s": true
  },
  {
    "comment": "/**\n   * Entity attributes collection\n   * @type {Object<string, UBEntityAttribute>}\n   */",
    "meta": {
      "range": [
        17909,
        17951
      ],
      "filename": "UBDomain.js",
      "lineno": 604,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043213",
        "name": "this.attributes",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity attributes collection",
    "type": {
      "names": [
        "Object.<string, UBEntityAttribute>"
      ]
    },
    "name": "attributes",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#attributes",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003795",
    "___s": true
  },
  {
    "comment": "/**\n   * Slice of attributes with type `Document`\n   * @type {Array<UBEntityAttribute>}\n   */",
    "meta": {
      "range": [
        18050,
        18074
      ],
      "filename": "UBDomain.js",
      "lineno": 609,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043220",
        "name": "this.blobAttributes",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Slice of attributes with type <code>Document</code>",
    "type": {
      "names": [
        "Array.<UBEntityAttribute>"
      ]
    },
    "name": "blobAttributes",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#blobAttributes",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003796",
    "___s": true
  },
  {
    "comment": "/**\n * Indicate how entity content is cached on the client side.\n *\n * @type {UBDomain.EntityCacheTypes}\n * @readonly\n */",
    "meta": {
      "range": [
        20958,
        20995
      ],
      "filename": "UBDomain.js",
      "lineno": 701,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043512",
        "name": "UBEntity.prototype.cacheType",
        "type": "Literal",
        "value": "None",
        "paramnames": []
      }
    },
    "description": "Indicate how entity content is cached on the client side.",
    "type": {
      "names": [
        "UBDomain.EntityCacheTypes"
      ]
    },
    "readonly": true,
    "name": "cacheType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#cacheType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003824",
    "___s": true
  },
  {
    "comment": "/**\n * Entity caption\n * @type {string}\n */",
    "meta": {
      "range": [
        20506,
        20537
      ],
      "filename": "UBDomain.js",
      "lineno": 678,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043480",
        "name": "UBEntity.prototype.caption",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity caption",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#caption",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003820",
    "___s": true
  },
  {
    "comment": "/**\n * Checks entity has attribute(s) and throw error if not\n * @param {String|Array<string>} attributeNames\n * @param {string} contextMessage\n */",
    "meta": {
      "range": [
        35875,
        36324
      ],
      "filename": "UBDomain.js",
      "lineno": 1184,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044837",
        "name": "UBEntity.prototype.checkAttributeExist",
        "type": "FunctionExpression",
        "paramnames": [
          "attributeNames",
          "contextMessage"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#checkAttributeExist~me",
        "attributeNames": "module:@unitybase/cs-shared.module:UBDomain~attributeNames",
        "": null
      }
    },
    "description": "Checks entity has attribute(s) and throw error if not",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "Array.<string>"
          ]
        },
        "name": "attributeNames"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "contextMessage"
      }
    ],
    "name": "checkAttributeExist",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#checkAttributeExist",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003936",
    "___s": true
  },
  {
    "comment": "/**\n * Checks if entity has mixin. Throw if mixin dose not exist or not enabled\n * @param {string} mixinCode\n */",
    "meta": {
      "range": [
        23344,
        23520
      ],
      "filename": "UBDomain.js",
      "lineno": 791,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043701",
        "name": "UBEntity.prototype.checkMixin",
        "type": "FunctionExpression",
        "paramnames": [
          "mixinCode"
        ]
      }
    },
    "description": "Checks if entity has mixin. Throw if mixin dose not exist or not enabled",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "checkMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#checkMixin",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003838",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        15179,
        15201
      ],
      "filename": "UBDomain.js",
      "lineno": 519,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042905",
        "name": "this.code",
        "type": "Identifier",
        "value": "entityCode",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "code",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#code",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003773",
    "___s": true
  },
  {
    "comment": "/**\n   * Reference to connection definition (for extended domain only)\n   * @type {DBConnectionConfig}\n   * @readonly\n   */",
    "meta": {
      "range": [
        16386,
        16550
      ],
      "filename": "UBDomain.js",
      "lineno": 564,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043035",
        "name": "this.connectionConfig",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to connection definition (for extended domain only)",
    "type": {
      "names": [
        "DBConnectionConfig"
      ]
    },
    "readonly": true,
    "name": "connectionConfig",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#connectionConfig",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003786",
    "___s": true
  },
  {
    "comment": "/**\n   * Data source connection name\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        16078,
        16125
      ],
      "filename": "UBDomain.js",
      "lineno": 552,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043017",
        "name": "this.connectionName",
        "type": "MemberExpression",
        "value": "entityInfo.connectionName",
        "paramnames": []
      }
    },
    "description": "Data source connection name",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "connectionName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#connectionName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003784",
    "___s": true
  },
  {
    "comment": "/**\n   * Optional dbExtensions (for extended domain info)\n   * @type {object}\n   */",
    "meta": {
      "range": [
        17684,
        17812
      ],
      "filename": "UBDomain.js",
      "lineno": 598,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043190",
        "name": "this.dbExtensions",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Optional dbExtensions (for extended domain info)",
    "type": {
      "names": [
        "object"
      ]
    },
    "name": "dbExtensions",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dbExtensions",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003794",
    "___s": true
  },
  {
    "comment": "/**\n   * Optional dbKeys (for extended domain info)\n   * @type {object}\n   */",
    "meta": {
      "range": [
        17491,
        17595
      ],
      "filename": "UBDomain.js",
      "lineno": 593,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043167",
        "name": "this.dbKeys",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Optional dbKeys (for extended domain info)",
    "type": {
      "names": [
        "object"
      ]
    },
    "name": "dbKeys",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dbKeys",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003793",
    "___s": true
  },
  {
    "comment": "/**\n * Entity description\n * @type {string}\n */",
    "meta": {
      "range": [
        20586,
        20621
      ],
      "filename": "UBDomain.js",
      "lineno": 683,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043488",
        "name": "UBEntity.prototype.description",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity description",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#description",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003821",
    "___s": true
  },
  {
    "comment": "/**\n * Name of attribute witch used as a display value in lookup\n * @type {string}\n */",
    "meta": {
      "range": [
        20790,
        20834
      ],
      "filename": "UBDomain.js",
      "lineno": 693,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043504",
        "name": "UBEntity.prototype.descriptionAttribute",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Name of attribute witch used as a display value in lookup",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "descriptionAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#descriptionAttribute",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003823",
    "___s": true
  },
  {
    "comment": "/**\n * Documentation\n * @type {string}\n */",
    "meta": {
      "range": [
        20665,
        20702
      ],
      "filename": "UBDomain.js",
      "lineno": 688,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043496",
        "name": "UBEntity.prototype.documentation",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Documentation",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "documentation",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#documentation",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003822",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @type {UBDomain.EntityDataSourceType}\n */",
    "meta": {
      "range": [
        21049,
        21085
      ],
      "filename": "UBDomain.js",
      "lineno": 707,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043520",
        "name": "UBEntity.prototype.dsType",
        "type": "Literal",
        "value": "Normal",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "UBDomain.EntityDataSourceType"
      ]
    },
    "name": "dsType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#dsType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003825",
    "___s": true
  },
  {
    "comment": "/**\n * Iterates over entity attributes.\n * The iteratee is invoked with three arguments: (UBEntityAttribute, attributeName, UBEntityAttributes)\n * @param {entityAttributesIteratorCallback} callBack\n */",
    "meta": {
      "range": [
        22574,
        22678
      ],
      "filename": "UBDomain.js",
      "lineno": 761,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043624",
        "name": "UBEntity.prototype.eachAttribute",
        "type": "FunctionExpression",
        "paramnames": [
          "callBack"
        ]
      }
    },
    "description": "Iterates over entity attributes.\nThe iteratee is invoked with three arguments: (UBEntityAttribute, attributeName, UBEntityAttributes)",
    "params": [
      {
        "type": {
          "names": [
            "entityAttributesIteratorCallback"
          ]
        },
        "name": "callBack"
      }
    ],
    "name": "eachAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#eachAttribute",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003834",
    "___s": true
  },
  {
    "comment": "/**\n   * Entity methods, allowed for current logged-in user in format {method1: 1, method2: 1}. 1 mean method is allowed\n   * Empty for server-side domain - use `entity.haveAccessToMethod` to check method is accessible for user.\n   * @type {Object<string, Number>}\n   * @readOnly\n   */",
    "meta": {
      "range": [
        20154,
        20194
      ],
      "filename": "UBDomain.js",
      "lineno": 661,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043452",
        "name": "this.entityMethods",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity methods, allowed for current logged-in user in format {method1: 1, method2: 1}. 1 mean method is allowed\nEmpty for server-side domain - use <code>entity.haveAccessToMethod</code> to check method is accessible for user.",
    "type": {
      "names": [
        "Object.<string, Number>"
      ]
    },
    "readonly": true,
    "name": "entityMethods",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#entityMethods",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003812",
    "___s": true
  },
  {
    "comment": "/**\n * Filters attributes by properties\n * @param {Object|Function} predicate\n * @returns {Array<UBEntityAttribute>}\n * @example\n *\n *   // return all attributes where property dataType equal Document\n *   domain.get('uba_user').filterAttribute({dataType: 'Document'});\n *\n */",
    "meta": {
      "range": [
        25924,
        26337
      ],
      "filename": "UBDomain.js",
      "lineno": 866,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043956",
        "name": "UBEntity.prototype.filterAttribute",
        "type": "FunctionExpression",
        "paramnames": [
          "predicate"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Filters attributes by properties",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "function"
          ]
        },
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<UBEntityAttribute>"
          ]
        }
      }
    ],
    "examples": [
      "// return all attributes where property dataType equal Document\n  domain.get('uba_user').filterAttribute({dataType: 'Document'});"
    ],
    "name": "filterAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#filterAttribute",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003854",
    "___s": true
  },
  {
    "comment": "/**\n * Get entity attribute by code. Throw error if attribute is not found.\n * @param {string} attributeCode\n * @returns {UBEntityAttribute}\n */",
    "meta": {
      "range": [
        21980,
        22196
      ],
      "filename": "UBDomain.js",
      "lineno": 741,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043589",
        "name": "UBEntity.prototype.getAttribute",
        "type": "FunctionExpression",
        "paramnames": [
          "attributeCode"
        ]
      },
      "vars": {
        "attr": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getAttribute~attr"
      }
    },
    "description": "Get entity attribute by code. Throw error if attribute is not found.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        }
      }
    ],
    "name": "getAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getAttribute",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003831",
    "___s": true
  },
  {
    "comment": "/**\n * Returns array of entity attribute`s names\n * @param {Object|Function} [predicate] See {@link UBEntity.filterAttribute}. If empty - will return all names\n * @returns {Array<string>}\n */",
    "meta": {
      "range": [
        34778,
        35064
      ],
      "filename": "UBDomain.js",
      "lineno": 1149,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044705",
        "name": "UBEntity.prototype.getAttributeNames",
        "type": "FunctionExpression",
        "paramnames": [
          "predicate"
        ]
      },
      "vars": {
        "attributes": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getAttributeNames~attributes",
        "": null
      }
    },
    "description": "Returns array of entity attribute`s names",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "function"
          ]
        },
        "optional": true,
        "description": "See {@link UBEntity.filterAttribute}. If empty - will return all names",
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "name": "getAttributeNames",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getAttributeNames",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003928",
    "___s": true
  },
  {
    "comment": "/**\n * Return array of conversion rules for raw server response data\n * @param {Array<string>} fieldList\n * @returns {Array<{index: number, convertFn: function}>}\n */",
    "meta": {
      "range": [
        30120,
        30973
      ],
      "filename": "UBDomain.js",
      "lineno": 1014,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044272",
        "name": "UBEntity.prototype.getConvertRules",
        "type": "FunctionExpression",
        "paramnames": [
          "fieldList"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getConvertRules~me",
        "rules": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getConvertRules~rules",
        "types": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getConvertRules~types",
        "": null
      }
    },
    "description": "Return array of conversion rules for raw server response data",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "fieldList"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<{index: number, convertFn: function()}>"
          ]
        }
      }
    ],
    "name": "getConvertRules",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getConvertRules",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003876",
    "___s": true
  },
  {
    "comment": "/**\n * Returns description attribute name (`descriptionAttribute` metadata property)\n * If `descriptionAttribute` is empty - fallback to attribute with code `caption`\n * @return {string}\n */",
    "meta": {
      "range": [
        31166,
        31405
      ],
      "filename": "UBDomain.js",
      "lineno": 1053,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044394",
        "name": "UBEntity.prototype.getDescriptionAttribute",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "result": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getDescriptionAttribute~result"
      }
    },
    "description": "Returns description attribute name (<code>descriptionAttribute</code> metadata property)\nIf <code>descriptionAttribute</code> is empty - fallback to attribute with code <code>caption</code>",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getDescriptionAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getDescriptionAttribute",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003889",
    "___s": true
  },
  {
    "comment": "/**\n * Returns entity attribute. Understand complex attributes like `firmID.firmType.code`\n * @param {string} attributeName\n * @param {number} [depth=0] Current recursion depth\n *  - `0` means last attribute in chain (code from above)\n *  - `-1` - before last (firmType from above)\n *  - `>0` - first (firmID from above)\n * @return {UBEntityAttribute}\n */",
    "meta": {
      "range": [
        34403,
        34584
      ],
      "filename": "UBDomain.js",
      "lineno": 1139,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044678",
        "name": "UBEntity.prototype.getEntityAttribute",
        "type": "FunctionExpression",
        "paramnames": [
          "attributeName",
          "depth"
        ]
      },
      "vars": {
        "info": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttribute~info"
      }
    },
    "description": "Returns entity attribute. Understand complex attributes like <code>firmID.firmType.code</code>",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "<p>Current recursion depth</p>\n<ul>\n<li><code>0</code> means last attribute in chain (code from above)</li>\n<li><code>-1</code> - before last (firmType from above)</li>\n<li><code>&gt;0</code> - first (firmID from above)</li>\n</ul>",
        "name": "depth"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBEntityAttribute"
          ]
        }
      }
    ],
    "name": "getEntityAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttribute",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003926",
    "___s": true
  },
  {
    "comment": "/**\n * Returns information about attribute and attribute entity. Understand complex attributes like `firmID.firmType.code`\n * @param {string} attributeName\n * @param {number} [depth=0] If 0 - last, -1 - before last, > 0 - first. Default 0.\n *  - `0` means last attribute in chain (code from above)\n *  - `-1` - before last (firmType from above)\n *  - `>0` - first (firmID from above)\n * @return {{ entity: String, attribute: UBEntityAttribute, parentAttribute: UBEntityAttribute, attributeCode: String }|undefined}\n */",
    "meta": {
      "range": [
        31926,
        34045
      ],
      "filename": "UBDomain.js",
      "lineno": 1070,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044429",
        "name": "UBEntity.prototype.getEntityAttributeInfo",
        "type": "FunctionExpression",
        "paramnames": [
          "attributeName",
          "depth"
        ]
      },
      "vars": {
        "currentEntity": "module:@unitybase/cs-shared.module:UBDomain~currentEntity",
        "currentEntityCode": "module:@unitybase/cs-shared.module:UBDomain~currentEntityCode",
        "parentAttribute": "module:@unitybase/cs-shared.module:UBDomain~parentAttribute",
        "attribute": "module:@unitybase/cs-shared.module:UBDomain~attribute",
        "attributeNameParts": "module:@unitybase/cs-shared.module:UBDomain~attributeNameParts",
        "partsCount": "module:@unitybase/cs-shared.module:UBDomain~partsCount",
        "currentPart": "module:@unitybase/cs-shared.module:UBDomain~currentPart",
        "currentLevel": "module:@unitybase/cs-shared.module:UBDomain~currentLevel",
        "complexAttr": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo~complexAttr"
      }
    },
    "description": "Returns information about attribute and attribute entity. Understand complex attributes like <code>firmID.firmType.code</code>",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "<p>If 0 - last, -1 - before last, &gt; 0 - first. Default 0.</p>\n<ul>\n<li><code>0</code> means last attribute in chain (code from above)</li>\n<li><code>-1</code> - before last (firmType from above)</li>\n<li><code>&gt;0</code> - first (firmID from above)</li>\n</ul>",
        "name": "depth"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        }
      }
    ],
    "name": "getEntityAttributeInfo",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003891",
    "___s": true
  },
  {
    "comment": "/** @type UBEntityAttribute */",
    "meta": {
      "range": [
        32168,
        32184
      ],
      "filename": "UBDomain.js",
      "lineno": 1076,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044454",
        "name": "attribute",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "UBEntityAttribute"
      ]
    },
    "name": "attribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo~attribute",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo",
    "scope": "inner",
    "params": [],
    "___id": "T000002R003895",
    "___s": true
  },
  {
    "comment": "/** @type UBEntityAttribute */",
    "meta": {
      "range": [
        32106,
        32128
      ],
      "filename": "UBDomain.js",
      "lineno": 1074,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044450",
        "name": "parentAttribute",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "UBEntityAttribute"
      ]
    },
    "name": "parentAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo~parentAttribute",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityAttributeInfo",
    "scope": "inner",
    "params": [],
    "___id": "T000002R003894",
    "___s": true
  },
  {
    "comment": "/**\n * Return an entity caption to display on UI\n * @returns {string}\n */",
    "meta": {
      "range": [
        21270,
        21365
      ],
      "filename": "UBDomain.js",
      "lineno": 718,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043536",
        "name": "UBEntity.prototype.getEntityCaption",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return an entity caption to display on UI",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getEntityCaption",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityCaption",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003827",
    "___s": true
  },
  {
    "comment": "/**\n * Return entity description\n * @returns {string}\n */",
    "meta": {
      "range": [
        36384,
        36483
      ],
      "filename": "UBDomain.js",
      "lineno": 1199,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044902",
        "name": "UBEntity.prototype.getEntityDescription",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return entity description",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getEntityDescription",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityDescription",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003939",
    "___s": true
  },
  {
    "comment": "/**\n * For each attribute of type `Entity` from `fieldList` add entity code to result (duplicates are removed)\n * @param {Array<string>} [fieldList] If empty - all entity attributes will be used\n * @return {Array<string>}\n */",
    "meta": {
      "range": [
        35292,
        35726
      ],
      "filename": "UBDomain.js",
      "lineno": 1166,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044754",
        "name": "UBEntity.prototype.getEntityRequirements",
        "type": "FunctionExpression",
        "paramnames": [
          "fieldList"
        ]
      },
      "vars": {
        "result": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityRequirements~result",
        "fieldList": "module:@unitybase/cs-shared.module:UBDomain~fieldList",
        "i": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityRequirements~i",
        "L": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityRequirements~L",
        "attr": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityRequirements~attr"
      }
    },
    "description": "For each attribute of type <code>Entity</code> from <code>fieldList</code> add entity code to result (duplicates are removed)",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "optional": true,
        "description": "If empty - all entity attributes will be used",
        "name": "fieldList"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "name": "getEntityRequirements",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#getEntityRequirements",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003930",
    "___s": true
  },
  {
    "comment": "/**\n * Checks if entity has enabled mixin with specified code.\n * @param {string} mixinCode\n * @returns {Boolean}\n */",
    "meta": {
      "range": [
        23019,
        23229
      ],
      "filename": "UBDomain.js",
      "lineno": 779,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043659",
        "name": "UBEntity.prototype.hasMixin",
        "type": "FunctionExpression",
        "paramnames": [
          "mixinCode"
        ]
      },
      "vars": {
        "mixin": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#hasMixin~mixin"
      }
    },
    "description": "Checks if entity has enabled mixin with specified code.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "hasMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#hasMixin",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003836",
    "___s": true
  },
  {
    "comment": "/**\n * Checks if current user has access to at last one of specified methods\n * @param {Array<string>} methodsCodes\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        26481,
        26868
      ],
      "filename": "UBDomain.js",
      "lineno": 887,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044025",
        "name": "UBEntity.prototype.haveAccessToAnyMethods",
        "type": "FunctionExpression",
        "paramnames": [
          "methodsCodes"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToAnyMethods~me",
        "fMethods": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToAnyMethods~fMethods",
        "result": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToAnyMethods~result",
        "": null
      }
    },
    "description": "Checks if current user has access to at last one of specified methods",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "methodsCodes"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "haveAccessToAnyMethods",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToAnyMethods",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003858",
    "___s": true
  },
  {
    "comment": "/**\n * Checks if current user has access to specified entity method\n * @param {string} methodCode\n * @returns {Boolean}\n */",
    "meta": {
      "range": [
        25457,
        25645
      ],
      "filename": "UBDomain.js",
      "lineno": 850,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043922",
        "name": "UBEntity.prototype.haveAccessToMethod",
        "type": "FunctionExpression",
        "paramnames": [
          "methodCode"
        ]
      }
    },
    "description": "Checks if current user has access to specified entity method",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "methodCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "haveAccessToMethod",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToMethod",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003853",
    "___s": true
  },
  {
    "comment": "/**\n * Checks if current user has access to ALL of the specified methods\n * @param {Array<string>} methods Method names\n * @returns {Boolean}\n */",
    "meta": {
      "range": [
        27016,
        27391
      ],
      "filename": "UBDomain.js",
      "lineno": 907,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044094",
        "name": "UBEntity.prototype.haveAccessToMethods",
        "type": "FunctionExpression",
        "paramnames": [
          "methods"
        ]
      },
      "vars": {
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToMethods~me",
        "result": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToMethods~result",
        "fMethods": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToMethods~fMethods",
        "": null
      }
    },
    "description": "Checks if current user has access to ALL of the specified methods",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "Method names",
        "name": "methods"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "haveAccessToMethods",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#haveAccessToMethods",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003864",
    "___s": true
  },
  {
    "comment": "/**\n   * This is a Full Text Search entity\n   * @type {boolean}\n   */",
    "meta": {
      "range": [
        16200,
        16256
      ],
      "filename": "UBDomain.js",
      "lineno": 557,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043025",
        "name": "this.isFTSDataTable",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "This is a Full Text Search entity",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "isFTSDataTable",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#isFTSDataTable",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003785",
    "___s": true
  },
  {
    "comment": "/**\n * Indicate this entity is a UNITY for someone\n * @type {boolean}\n */",
    "meta": {
      "range": [
        21161,
        21195
      ],
      "filename": "UBDomain.js",
      "lineno": 713,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043528",
        "name": "UBEntity.prototype.isUnity",
        "type": "Literal",
        "value": false,
        "paramnames": []
      }
    },
    "description": "Indicate this entity is a UNITY for someone",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "isUnity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#isUnity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003826",
    "___s": true
  },
  {
    "comment": "/**\n   * Optional mapping of entity to physical data (for extended domain info only).\n   * Calculated from a entity mapping collection in accordance with application connection configuration\n   * @type {UBEntityMapping}\n   * @readonly\n   */",
    "meta": {
      "range": [
        16796,
        16820
      ],
      "filename": "UBDomain.js",
      "lineno": 571,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043069",
        "name": "this.mapping",
        "type": "Identifier",
        "value": "undefined",
        "paramnames": []
      }
    },
    "description": "Optional mapping of entity to physical data (for extended domain info only).\nCalculated from a entity mapping collection in accordance with application connection configuration",
    "type": {
      "names": [
        "UBEntityMapping"
      ]
    },
    "readonly": true,
    "name": "mapping",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#mapping",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003788",
    "___s": true
  },
  {
    "comment": "/**\n * Get entity mixin by code. Returns `undefined` if mixin is not found\n * @param {string} mixinCode\n * @returns {UBEntityMixin}\n */",
    "meta": {
      "range": [
        22816,
        22899
      ],
      "filename": "UBDomain.js",
      "lineno": 770,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043643",
        "name": "UBEntity.prototype.mixin",
        "type": "FunctionExpression",
        "paramnames": [
          "mixinCode"
        ]
      }
    },
    "description": "Get entity mixin by code. Returns <code>undefined</code> if mixin is not found",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBEntityMixin"
          ]
        }
      }
    ],
    "name": "mixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#mixin",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003835",
    "___s": true
  },
  {
    "comment": "/**\n   * Collection of entity mixins\n   * @type {Object<string, UBEntityMixin>}\n   */",
    "meta": {
      "range": [
        18945,
        18961
      ],
      "filename": "UBDomain.js",
      "lineno": 631,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043325",
        "name": "this.mixins",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Collection of entity mixins",
    "type": {
      "names": [
        "Object.<string, UBEntityMixin>"
      ]
    },
    "name": "mixins",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#mixins",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003803",
    "___s": true
  },
  {
    "comment": "/**\n   * Entity model name\n   * @type{string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        15273,
        15310
      ],
      "filename": "UBDomain.js",
      "lineno": 525,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042911",
        "name": "this.modelName",
        "type": "MemberExpression",
        "value": "entityInfo.modelName",
        "paramnames": []
      }
    },
    "description": "Entity model name",
    "tags": [
      {
        "originalTitle": "type{string}",
        "title": "type{string}",
        "text": ""
      }
    ],
    "readonly": true,
    "name": "modelName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#modelName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003774",
    "___s": true
  },
  {
    "comment": "/**\n   * Entity name\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        15377,
        15404
      ],
      "filename": "UBDomain.js",
      "lineno": 531,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042919",
        "name": "this.name",
        "type": "MemberExpression",
        "value": "entityInfo.name",
        "paramnames": []
      }
    },
    "description": "Entity name",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "name",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#name",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003775",
    "___s": true
  },
  {
    "comment": "/**\n   * Internal short alias\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        15960,
        15995
      ],
      "filename": "UBDomain.js",
      "lineno": 546,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100043009",
        "name": "this.sqlAlias",
        "type": "MemberExpression",
        "value": "entityInfo.sqlAlias",
        "paramnames": []
      }
    },
    "description": "Internal short alias",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "sqlAlias",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntity#sqlAlias",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntity",
    "scope": "instance",
    "___id": "T000002R003783",
    "___s": true
  },
  {
    "comment": "/**\n * Access control list mixin\n * @class\n * @extends UBEntityMixin\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n */",
    "meta": {
      "range": [
        44282,
        44382
      ],
      "filename": "UBDomain.js",
      "lineno": 1501,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045503",
        "name": "UBEntityAclRlsMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      }
    },
    "description": "Access control list mixin",
    "kind": "class",
    "augments": [
      "UBEntityMixin"
    ],
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "UBEntityAclRlsMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAclRlsMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R004004",
    "___s": true
  },
  {
    "comment": "/**\n * Attribute level security mixin\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n * @constructor\n * @extends UBEntityMixin\n */",
    "meta": {
      "range": [
        45397,
        45494
      ],
      "filename": "UBDomain.js",
      "lineno": 1541,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045601",
        "name": "UBEntityAlsMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      }
    },
    "description": "Attribute level security mixin",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "kind": "class",
    "augments": [
      "UBEntityMixin"
    ],
    "name": "UBEntityAlsMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAlsMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R004014",
    "___s": true
  },
  {
    "comment": "/**\n * Is optimistic\n * @type {boolean}\n */",
    "meta": {
      "range": [
        45665,
        45712
      ],
      "filename": "UBDomain.js",
      "lineno": 1550,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045635",
        "name": "UBEntityAlsMixin.prototype.alsOptimistic",
        "type": "Literal",
        "value": true,
        "paramnames": []
      }
    },
    "description": "Is optimistic",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "alsOptimistic",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAlsMixin#alsOptimistic",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAlsMixin",
    "scope": "instance",
    "___id": "T000002R004017",
    "___s": true
  },
  {
    "comment": "/**\n * Entity attribute\n * @param {object} attributeInfo\n * @param {string} attributeCode\n * @param {UBEntity} entity\n * @class\n */",
    "meta": {
      "range": [
        36840,
        41556
      ],
      "filename": "UBDomain.js",
      "lineno": 1222,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044938",
        "name": "UBEntityAttribute",
        "type": "FunctionDeclaration",
        "paramnames": [
          "attributeInfo",
          "attributeCode",
          "entity"
        ]
      },
      "vars": {
        "this.code": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#code",
        "this.name": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#name",
        "this.dataType": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#dataType",
        "this.associatedEntity": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associatedEntity",
        "this.associationAttr": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associationAttr",
        "this.caption": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#caption",
        "this.description": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#description",
        "this.documentation": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#documentation",
        "this.size": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#size",
        "this.allowNull": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#allowNull",
        "this.allowSort": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#allowSort",
        "this.isUnique": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#isUnique",
        "this.defaultValue": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#defaultValue",
        "this.readOnly": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#readOnly",
        "this.isMultiLang": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#isMultiLang",
        "this.cascadeDelete": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#cascadeDelete",
        "this.enumGroup": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#enumGroup",
        "this.customSettings": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#customSettings",
        "this.associationManyData": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associationManyData",
        "this.storeName": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#storeName",
        "this.generateFK": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#generateFK",
        "this.defaultView": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#defaultView",
        "this.mapping": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#mapping",
        "me": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute~me",
        "mappingKeys": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute~mappingKeys",
        "": null,
        "dialectsPriority": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute~dialectsPriority",
        "this.physicalDataType": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#physicalDataType",
        "this.hasCatalogueIndex": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#hasCatalogueIndex"
      }
    },
    "description": "Entity attribute",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "attributeInfo"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attributeCode"
      },
      {
        "type": {
          "names": [
            "UBEntity"
          ]
        },
        "name": "entity"
      }
    ],
    "kind": "class",
    "name": "UBEntityAttribute",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003943",
    "___s": true
  },
  {
    "comment": "/**\n   * Attribute value can be empty or null\n   * @type {boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38260,
        38312
      ],
      "filename": "UBDomain.js",
      "lineno": 1281,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045037",
        "name": "this.allowNull",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Attribute value can be empty or null",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "name": "allowNull",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#allowNull",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003955",
    "___s": true
  },
  {
    "comment": "/**\n   * Allow order by clause by this attribute\n   * @type {boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38408,
        38460
      ],
      "filename": "UBDomain.js",
      "lineno": 1287,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045047",
        "name": "this.allowSort",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Allow order by clause by this attribute",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "name": "allowSort",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#allowSort",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003956",
    "___s": true
  },
  {
    "comment": "/**\n * Return a JSON representation of attribute\n * WITHOUT properties which have default values\n * @returns {object}\n */",
    "meta": {
      "range": [
        42310,
        42432
      ],
      "filename": "UBDomain.js",
      "lineno": 1414,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045343",
        "name": "UBEntityAttribute.prototype.asPlainJSON",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return a JSON representation of attribute\nWITHOUT properties which have default values",
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        }
      }
    ],
    "name": "asPlainJSON",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#asPlainJSON",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003988",
    "___s": true
  },
  {
    "comment": "/**\n   * Name of entity referenced by the attribute (for attributes of type `Many` - entity name from the AssociationManyData)\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37630,
        37684
      ],
      "filename": "UBDomain.js",
      "lineno": 1250,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044981",
        "name": "this.associatedEntity",
        "type": "MemberExpression",
        "value": "attributeInfo.associatedEntity",
        "paramnames": []
      }
    },
    "description": "Name of entity referenced by the attribute (for attributes of type <code>Many</code> - entity name from the AssociationManyData)",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "associatedEntity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associatedEntity",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003949",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37734,
        37786
      ],
      "filename": "UBDomain.js",
      "lineno": 1255,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044989",
        "name": "this.associationAttr",
        "type": "MemberExpression",
        "value": "attributeInfo.associationAttr",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "associationAttr",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associationAttr",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003950",
    "___s": true
  },
  {
    "comment": "/**\n   * For attributes of type Many - name of the many-to-many table. UB create system entity with this name and generate table during DDL generation\n   * @property {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        39633,
        39693
      ],
      "filename": "UBDomain.js",
      "lineno": 1331,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045123",
        "name": "this.associationManyData",
        "type": "MemberExpression",
        "value": "attributeInfo.associationManyData",
        "paramnames": []
      }
    },
    "description": "For attributes of type Many - name of the many-to-many table. UB create system entity with this name and generate table during DDL generation",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "readonly": true,
    "name": "associationManyData",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#associationManyData",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003964",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37836,
        37878
      ],
      "filename": "UBDomain.js",
      "lineno": 1260,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044997",
        "name": "this.caption",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "caption",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#caption",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003951",
    "___s": true
  },
  {
    "comment": "/**\n   * For attributes of type Entity enable cascade deletion on application server level (not on database level)\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        39079,
        39138
      ],
      "filename": "UBDomain.js",
      "lineno": 1314,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045095",
        "name": "this.cascadeDelete",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "For attributes of type Entity enable cascade deletion on application server level (not on database level)",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "cascadeDelete",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#cascadeDelete",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003961",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37004,
        37029
      ],
      "filename": "UBDomain.js",
      "lineno": 1228,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044945",
        "name": "this.code",
        "type": "Identifier",
        "value": "attributeCode",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "code",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#code",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003944",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {object}\n   * @readonly\n   */",
    "meta": {
      "range": [
        39376,
        39432
      ],
      "filename": "UBDomain.js",
      "lineno": 1325,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045113",
        "name": "this.customSettings",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "object"
      ]
    },
    "readonly": true,
    "name": "customSettings",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#customSettings",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003963",
    "___s": true
  },
  {
    "comment": "/**\n   * Data type\n   * @type {UBDomain.ubDataTypes}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37407,
        37457
      ],
      "filename": "UBDomain.js",
      "lineno": 1244,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044971",
        "name": "this.dataType",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Data type",
    "type": {
      "names": [
        "UBDomain.ubDataTypes"
      ]
    },
    "readonly": true,
    "name": "dataType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#dataType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003948",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38610,
        38656
      ],
      "filename": "UBDomain.js",
      "lineno": 1297,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045067",
        "name": "this.defaultValue",
        "type": "MemberExpression",
        "value": "attributeInfo.defaultValue",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "defaultValue",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#defaultValue",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003958",
    "___s": true
  },
  {
    "comment": "/**\n   * If `true` - client should shows this attribute in auto-build forms and in '*' select fields\n   * @type {boolean}\n   */",
    "meta": {
      "range": [
        40228,
        40282
      ],
      "filename": "UBDomain.js",
      "lineno": 1347,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045149",
        "name": "this.defaultView",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "If <code>true</code> - client should shows this attribute in auto-build forms and in '*' select fields",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "defaultView",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#defaultView",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003967",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        37928,
        37978
      ],
      "filename": "UBDomain.js",
      "lineno": 1265,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045007",
        "name": "this.description",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "description",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#description",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003952",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38028,
        38082
      ],
      "filename": "UBDomain.js",
      "lineno": 1270,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045017",
        "name": "this.documentation",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "documentation",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#documentation",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003953",
    "___s": true
  },
  {
    "comment": "/**\n   * For attributes of type Enum - code of enumeration group from `ubm_enum.eGroup`\n   * @property {string} enumGroup\n   * @readonly\n   */",
    "meta": {
      "range": [
        39286,
        39326
      ],
      "filename": "UBDomain.js",
      "lineno": 1320,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045105",
        "name": "this.enumGroup",
        "type": "MemberExpression",
        "value": "attributeInfo.enumGroup",
        "paramnames": []
      }
    },
    "description": "For attributes of type Enum - code of enumeration group from <code>ubm_enum.eGroup</code>",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "enumGroup"
      }
    ],
    "readonly": true,
    "name": "enumGroup",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#enumGroup",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003962",
    "___s": true
  },
  {
    "comment": "/**\n   * For attributes of type Entity. If `false` - bypass foreign key generation by DDL generator\n   * @type {boolean}\n   */",
    "meta": {
      "range": [
        40043,
        40095
      ],
      "filename": "UBDomain.js",
      "lineno": 1342,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045139",
        "name": "this.generateFK",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "For attributes of type Entity. If <code>false</code> - bypass foreign key generation by DDL generator",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "generateFK",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#generateFK",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003966",
    "___s": true
  },
  {
    "comment": "/**\n * Return associated entity or `null` if type of attribute !==`Entity`.\n * @returns {UBEntity}\n */",
    "meta": {
      "range": [
        42035,
        42186
      ],
      "filename": "UBDomain.js",
      "lineno": 1405,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045317",
        "name": "UBEntityAttribute.prototype.getAssociatedEntity",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return associated entity or <code>null</code> if type of attribute !==<code>Entity</code>.",
    "returns": [
      {
        "type": {
          "names": [
            "UBEntity"
          ]
        }
      }
    ],
    "name": "getAssociatedEntity",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#getAssociatedEntity",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003987",
    "___s": true
  },
  {
    "comment": "/**\n   * Index of type CATALOGUE exists for attribute\n   * @property {boolean} hasCatalogueIndex\n   * @readonly\n   */",
    "meta": {
      "range": [
        41489,
        41554
      ],
      "filename": "UBDomain.js",
      "lineno": 1383,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045277",
        "name": "this.hasCatalogueIndex",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Index of type CATALOGUE exists for attribute",
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "hasCatalogueIndex"
      }
    ],
    "readonly": true,
    "name": "hasCatalogueIndex",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#hasCatalogueIndex",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003974",
    "___s": true
  },
  {
    "comment": "/**\n   * @property {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38862,
        38917
      ],
      "filename": "UBDomain.js",
      "lineno": 1308,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045085",
        "name": "this.isMultiLang",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "readonly": true,
    "name": "isMultiLang",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#isMultiLang",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003960",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38511,
        38560
      ],
      "filename": "UBDomain.js",
      "lineno": 1292,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045057",
        "name": "this.isUnique",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "name": "isUnique",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#isUnique",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003957",
    "___s": true
  },
  {
    "comment": "/**\n   * Optional mapping of attribute to physical data (for extended domain info only).\n   * Calculated from a entity mapping collection in accordance with application connection configuration\n   * @type {UBEntityAttributeMapping}\n   * @readonly\n   */",
    "meta": {
      "range": [
        40540,
        40564
      ],
      "filename": "UBDomain.js",
      "lineno": 1354,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045159",
        "name": "this.mapping",
        "type": "Identifier",
        "value": "undefined",
        "paramnames": []
      }
    },
    "description": "Optional mapping of attribute to physical data (for extended domain info only).\nCalculated from a entity mapping collection in accordance with application connection configuration",
    "type": {
      "names": [
        "UBEntityAttributeMapping"
      ]
    },
    "readonly": true,
    "name": "mapping",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#mapping",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003968",
    "___s": true
  },
  {
    "comment": "/** @type {string}\n  * @readonly\n  */",
    "meta": {
      "range": [
        37072,
        37102
      ],
      "filename": "UBDomain.js",
      "lineno": 1232,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044951",
        "name": "this.name",
        "type": "MemberExpression",
        "value": "attributeInfo.name",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "name",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#name",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003945",
    "___s": true
  },
  {
    "comment": "/**\n   * @property {string} physicalDataType\n   * @readonly\n   */",
    "meta": {
      "range": [
        41287,
        41366
      ],
      "filename": "UBDomain.js",
      "lineno": 1377,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045263",
        "name": "this.physicalDataType",
        "type": "CallExpression",
        "value": "",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "physicalDataType"
      }
    ],
    "readonly": true,
    "name": "physicalDataType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#physicalDataType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003973",
    "___s": true
  },
  {
    "comment": "/**\n   * Edition allowed (not verified by server side)\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38758,
        38807
      ],
      "filename": "UBDomain.js",
      "lineno": 1303,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045075",
        "name": "this.readOnly",
        "type": "BinaryExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Edition allowed (not verified by server side)",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "readOnly",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#readOnly",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003959",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {number}\n   * @readonly\n   */",
    "meta": {
      "range": [
        38132,
        38167
      ],
      "filename": "UBDomain.js",
      "lineno": 1275,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045027",
        "name": "this.size",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "name": "size",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#size",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003954",
    "___s": true
  },
  {
    "comment": "/**\n   * For attributes of type Document - name of BLOB store from application `storeConfig`. If empty - default store will be used\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        39871,
        39911
      ],
      "filename": "UBDomain.js",
      "lineno": 1337,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045131",
        "name": "this.storeName",
        "type": "MemberExpression",
        "value": "attributeInfo.storeName",
        "paramnames": []
      }
    },
    "description": "For attributes of type Document - name of BLOB store from application <code>storeConfig</code>. If empty - default store will be used",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "storeName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute#storeName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttribute",
    "scope": "instance",
    "___id": "T000002R003965",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n */",
    "meta": {
      "range": [
        36503,
        36706
      ],
      "filename": "UBDomain.js",
      "lineno": 1206,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044918",
        "name": "UBEntityAttributeMapping",
        "type": "FunctionDeclaration",
        "paramnames": [
          "maping"
        ]
      },
      "vars": {
        "this.expressionType": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping#expressionType",
        "this.expression": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping#expression"
      }
    },
    "kind": "class",
    "name": "UBEntityAttributeMapping",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "params": [],
    "___id": "T000002R003940",
    "___s": true
  },
  {
    "comment": "/** @type {string} */",
    "meta": {
      "range": [
        36669,
        36704
      ],
      "filename": "UBDomain.js",
      "lineno": 1212,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044931",
        "name": "this.expression",
        "type": "MemberExpression",
        "value": "maping.expression",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "expression",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping#expression",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping",
    "scope": "instance",
    "___id": "T000002R003942",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {UBDomain.ExpressionType}\n   */",
    "meta": {
      "range": [
        36599,
        36642
      ],
      "filename": "UBDomain.js",
      "lineno": 1210,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100044923",
        "name": "this.expressionType",
        "type": "MemberExpression",
        "value": "maping.expressionType",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "UBDomain.ExpressionType"
      ]
    },
    "name": "expressionType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping#expressionType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributeMapping",
    "scope": "instance",
    "___id": "T000002R003941",
    "___s": true
  },
  {
    "comment": "/**\n * Collection of attributes\n * @class\n */",
    "meta": {
      "range": [
        13551,
        13584
      ],
      "filename": "UBDomain.js",
      "lineno": 464,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042763",
        "name": "UBEntityAttributes",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Collection of attributes",
    "kind": "class",
    "name": "UBEntityAttributes",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributes",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "params": [],
    "___id": "T000002R003759",
    "___s": true
  },
  {
    "comment": "/**\n * Return a JSON representation of all attributes\n * WITHOUT properties which have default values\n * @returns {object}\n */",
    "meta": {
      "range": [
        13712,
        13835
      ],
      "filename": "UBDomain.js",
      "lineno": 470,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042767",
        "name": "UBEntityAttributes.prototype.asPlainJSON",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return a JSON representation of all attributes\nWITHOUT properties which have default values",
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        }
      }
    ],
    "name": "asPlainJSON",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributes#asPlainJSON",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityAttributes",
    "scope": "instance",
    "___id": "T000002R003760",
    "___s": true
  },
  {
    "comment": "/**\n * Full text search mixin\n * @class\n * @extends UBEntityMixin\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n */",
    "meta": {
      "range": [
        44801,
        44898
      ],
      "filename": "UBDomain.js",
      "lineno": 1518,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045552",
        "name": "UBEntityFtsMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      }
    },
    "description": "Full text search mixin",
    "kind": "class",
    "augments": [
      "UBEntityMixin"
    ],
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "UBEntityFtsMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityFtsMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R004009",
    "___s": true
  },
  {
    "comment": "/**\n * Data provider type\n * @type {string}\n */",
    "meta": {
      "range": [
        45171,
        45220
      ],
      "filename": "UBDomain.js",
      "lineno": 1532,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045594",
        "name": "UBEntityFtsMixin.prototype.dataProvider",
        "type": "Literal",
        "value": "mixin",
        "paramnames": []
      }
    },
    "description": "Data provider type",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "dataProvider",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityFtsMixin#dataProvider",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityFtsMixin",
    "scope": "instance",
    "___id": "T000002R004013",
    "___s": true
  },
  {
    "comment": "/**\n * scope\n * @type {string}\n */",
    "meta": {
      "range": [
        45060,
        45107
      ],
      "filename": "UBDomain.js",
      "lineno": 1527,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045586",
        "name": "UBEntityFtsMixin.prototype.scope",
        "type": "Literal",
        "value": "connection",
        "paramnames": []
      }
    },
    "description": "scope",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "scope",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityFtsMixin#scope",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityFtsMixin",
    "scope": "instance",
    "___id": "T000002R004012",
    "___s": true
  },
  {
    "comment": "/**\n * Historical data storage mixin\n * @class\n * @extends UBEntityMixin\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n * @constructor\n */",
    "meta": {
      "range": [
        43777,
        43878
      ],
      "filename": "UBDomain.js",
      "lineno": 1483,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045462",
        "name": "UBEntityHistoryMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      }
    },
    "description": "Historical data storage mixin",
    "kind": "class",
    "augments": [
      "UBEntityMixin"
    ],
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "UBEntityHistoryMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityHistoryMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R004000",
    "___s": true
  },
  {
    "comment": "/**\n * A history storage strategy\n * @type {string}\n */",
    "meta": {
      "range": [
        44073,
        44126
      ],
      "filename": "UBDomain.js",
      "lineno": 1492,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045496",
        "name": "UBEntityHistoryMixin.prototype.historyType",
        "type": "Literal",
        "value": "common",
        "paramnames": []
      }
    },
    "description": "A history storage strategy",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "historyType",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityHistoryMixin#historyType",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityHistoryMixin",
    "scope": "instance",
    "___id": "T000002R004003",
    "___s": true
  },
  {
    "comment": "/** @class */",
    "meta": {
      "range": [
        13851,
        14105
      ],
      "filename": "UBDomain.js",
      "lineno": 475,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042788",
        "name": "UBEntityMapping",
        "type": "FunctionDeclaration",
        "paramnames": [
          "maping"
        ]
      },
      "vars": {
        "this.selectName": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#selectName",
        "this.execName": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#execName",
        "this.pkGenerator": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#pkGenerator"
      }
    },
    "kind": "class",
    "name": "UBEntityMapping",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "params": [],
    "___id": "T000002R003761",
    "___s": true
  },
  {
    "comment": "/** @type {string} */",
    "meta": {
      "range": [
        13989,
        14039
      ],
      "filename": "UBDomain.js",
      "lineno": 481,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042803",
        "name": "this.execName",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "execName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#execName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping",
    "scope": "instance",
    "___id": "T000002R003763",
    "___s": true
  },
  {
    "comment": "/** @type {string} */",
    "meta": {
      "range": [
        14066,
        14103
      ],
      "filename": "UBDomain.js",
      "lineno": 483,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042815",
        "name": "this.pkGenerator",
        "type": "MemberExpression",
        "value": "maping.pkGenerator",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "pkGenerator",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#pkGenerator",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping",
    "scope": "instance",
    "___id": "T000002R003764",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {string}\n   */",
    "meta": {
      "range": [
        13921,
        13962
      ],
      "filename": "UBDomain.js",
      "lineno": 479,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042793",
        "name": "this.selectName",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "selectName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping#selectName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMapping",
    "scope": "instance",
    "___id": "T000002R003762",
    "___s": true
  },
  {
    "comment": "/**\n * Contains all properties defined in mixin section of a entity meta file\n * @class\n * @protected\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n */",
    "meta": {
      "range": [
        42622,
        42820
      ],
      "filename": "UBDomain.js",
      "lineno": 1426,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045364",
        "name": "UBEntityMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      },
      "vars": {
        "this.code": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin#code"
      }
    },
    "description": "Contains all properties defined in mixin section of a entity meta file",
    "kind": "class",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "UBEntityMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003989",
    "___s": true
  },
  {
    "comment": "/**\n   * Mixin code\n   * @type {string}\n   */",
    "meta": {
      "range": [
        42726,
        42747
      ],
      "filename": "UBDomain.js",
      "lineno": 1431,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045371",
        "name": "this.code",
        "type": "Identifier",
        "value": "mixinCode",
        "paramnames": []
      }
    },
    "description": "Mixin code",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin#code",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin",
    "scope": "instance",
    "___id": "T000002R003990",
    "___s": true
  },
  {
    "comment": "/**\n * Is mixin enabled\n * @type {boolean}\n */",
    "meta": {
      "range": [
        42946,
        42984
      ],
      "filename": "UBDomain.js",
      "lineno": 1447,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045406",
        "name": "UBEntityMixin.prototype.enabled",
        "type": "Literal",
        "value": true,
        "paramnames": []
      }
    },
    "description": "Is mixin enabled",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "enabled",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin#enabled",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityMixin",
    "scope": "instance",
    "___id": "T000002R003994",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin for persisting entity to a database\n * @class\n * @extends UBEntityMixin\n * @param {object} mixinInfo\n * @param {object} i18n\n * @param {string} mixinCode\n */",
    "meta": {
      "range": [
        43157,
        43256
      ],
      "filename": "UBDomain.js",
      "lineno": 1457,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045413",
        "name": "UBEntityStoreMixin",
        "type": "FunctionDeclaration",
        "paramnames": [
          "mixinInfo",
          "i18n",
          "mixinCode"
        ]
      }
    },
    "description": "Mixin for persisting entity to a database",
    "kind": "class",
    "augments": [
      "UBEntityMixin"
    ],
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "mixinInfo"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "i18n"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "mixinCode"
      }
    ],
    "name": "UBEntityStoreMixin",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityStoreMixin",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003995",
    "___s": true
  },
  {
    "comment": "/**\n * Use a soft delete\n * @type {boolean}\n */",
    "meta": {
      "range": [
        43553,
        43600
      ],
      "filename": "UBDomain.js",
      "lineno": 1472,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045455",
        "name": "UBEntityStoreMixin.prototype.safeDelete",
        "type": "Literal",
        "value": false,
        "paramnames": []
      }
    },
    "description": "Use a soft delete",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "safeDelete",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityStoreMixin#safeDelete",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityStoreMixin",
    "scope": "instance",
    "___id": "T000002R003999",
    "___s": true
  },
  {
    "comment": "/**\n * Is `simpleAudit` enabled\n * @type {boolean}\n */",
    "meta": {
      "range": [
        43456,
        43504
      ],
      "filename": "UBDomain.js",
      "lineno": 1467,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045447",
        "name": "UBEntityStoreMixin.prototype.simpleAudit",
        "type": "Literal",
        "value": false,
        "paramnames": []
      }
    },
    "description": "Is <code>simpleAudit</code> enabled",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "simpleAudit",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBEntityStoreMixin#simpleAudit",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBEntityStoreMixin",
    "scope": "instance",
    "___id": "T000002R003998",
    "___s": true
  },
  {
    "comment": "/**\n * Model (logical group of entities).\n * Instantiated in  {@link UBDomain#models UBDomain.models} and {@link UBDomain#orderedModels UBDomain.orderedModels}\n * @class\n * @param {object} cfg\n * @param {string} cfg.path\n * @param {boolean} cfg.needInit\n * @param {boolean} cfg.needLocalize\n * @param {number} cfg.order\n * @param {string} cfg.version\n * @param {string} [cfg.moduleName]\n * @param {string} [cfg.moduleSuffix]\n * @param {string} [cfg.clientRequirePath] if passed are used instead of moduleName + moduleSuffix\n * @param {string} [cfg.realPublicPath]\n * @param {string} modelCode\n */",
    "meta": {
      "range": [
        11606,
        13391
      ],
      "filename": "UBDomain.js",
      "lineno": 391,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042611",
        "name": "UBModel",
        "type": "FunctionDeclaration",
        "paramnames": [
          "cfg",
          "modelCode"
        ]
      },
      "vars": {
        "this.name": "module:@unitybase/cs-shared.module:UBDomain~UBModel#name",
        "this.path": "module:@unitybase/cs-shared.module:UBDomain~UBModel#path",
        "this.needInit": "module:@unitybase/cs-shared.module:UBDomain~UBModel#needInit",
        "this.needLocalize": "module:@unitybase/cs-shared.module:UBDomain~UBModel#needLocalize",
        "this.order": "module:@unitybase/cs-shared.module:UBDomain~UBModel#order",
        "this.moduleName": "module:@unitybase/cs-shared.module:UBDomain~UBModel#moduleName",
        "this.clientRequirePath": "module:@unitybase/cs-shared.module:UBDomain~UBModel#clientRequirePath",
        "this.realPublicPath": "module:@unitybase/cs-shared.module:UBDomain~UBModel#realPublicPath",
        "this.realPath": "module:@unitybase/cs-shared.module:UBDomain~UBModel#realPath",
        "this.version": "module:@unitybase/cs-shared.module:UBDomain~UBModel#version"
      }
    },
    "description": "Model (logical group of entities).\nInstantiated in  {@link UBDomain#models UBDomain.models} and {@link UBDomain#orderedModels UBDomain.orderedModels}",
    "kind": "class",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "cfg"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "cfg.path"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "cfg.needInit"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "cfg.needLocalize"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "cfg.order"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "cfg.version"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "cfg.moduleName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "cfg.moduleSuffix"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "if passed are used instead of moduleName + moduleSuffix",
        "name": "cfg.clientRequirePath"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "cfg.realPublicPath"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "modelCode"
      }
    ],
    "name": "UBModel",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain",
    "___id": "T000002R003745",
    "___s": true
  },
  {
    "comment": "/**\n   * The path for retrieve a model public accessible files (using clientRequire endpoint)\n   * @type {string}\n   */",
    "meta": {
      "range": [
        12651,
        12813
      ],
      "filename": "UBDomain.js",
      "lineno": 429,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042673",
        "name": "this.clientRequirePath",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "The path for retrieve a model public accessible files (using clientRequire endpoint)",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "clientRequirePath",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#clientRequirePath",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003752",
    "___s": true
  },
  {
    "comment": "/**\n   * Module name for `require`\n   * @type {string}\n   */",
    "meta": {
      "range": [
        12374,
        12406
      ],
      "filename": "UBDomain.js",
      "lineno": 421,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042665",
        "name": "this.moduleName",
        "type": "MemberExpression",
        "value": "cfg.moduleName",
        "paramnames": []
      }
    },
    "description": "Module name for <code>require</code>",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "moduleName",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#moduleName",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003751",
    "___s": true
  },
  {
    "comment": "/**\n   * Model name as specified in application config\n   * @type {string}\n   */",
    "meta": {
      "range": [
        11727,
        11748
      ],
      "filename": "UBDomain.js",
      "lineno": 396,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042617",
        "name": "this.name",
        "type": "Identifier",
        "value": "modelCode",
        "paramnames": []
      }
    },
    "description": "Model name as specified in application config",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#name",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003746",
    "___s": true
  },
  {
    "comment": "/**\n     * `initModel.js` script is available in the public folder (should be injected by client)\n     * @type {boolean}\n     */",
    "meta": {
      "range": [
        11931,
        11959
      ],
      "filename": "UBDomain.js",
      "lineno": 403,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042636",
        "name": "this.needInit",
        "type": "MemberExpression",
        "value": "cfg.needInit",
        "paramnames": []
      }
    },
    "description": "<code>initModel.js</code> script is available in the public folder (should be injected by client)",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "needInit",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#needInit",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003748",
    "___s": true
  },
  {
    "comment": "/**\n     * `locale-Lang.js` script is available in the public folder (should be injected by client)\n     * @type {boolean}\n     */",
    "meta": {
      "range": [
        12129,
        12165
      ],
      "filename": "UBDomain.js",
      "lineno": 410,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042649",
        "name": "this.needLocalize",
        "type": "MemberExpression",
        "value": "cfg.needLocalize",
        "paramnames": []
      }
    },
    "description": "<code>locale-Lang.js</code> script is available in the public folder (should be injected by client)",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "name": "needLocalize",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#needLocalize",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003749",
    "___s": true
  },
  {
    "comment": "/**\n   * An order of model initialization (as it is provided in server domain config)\n   * @type {number}\n   */",
    "meta": {
      "range": [
        12286,
        12308
      ],
      "filename": "UBDomain.js",
      "lineno": 416,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042657",
        "name": "this.order",
        "type": "MemberExpression",
        "value": "cfg.order",
        "paramnames": []
      }
    },
    "description": "An order of model initialization (as it is provided in server domain config)",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "order",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#order",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003750",
    "___s": true
  },
  {
    "comment": "/**\n     * Server-side domain only - the full path to model folder\n     * @type {string}\n     */",
    "meta": {
      "range": [
        13136,
        13164
      ],
      "filename": "UBDomain.js",
      "lineno": 445,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042724",
        "name": "this.realPath",
        "type": "MemberExpression",
        "value": "cfg.realPath",
        "paramnames": []
      }
    },
    "description": "Server-side domain only - the full path to model folder",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "realPath",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#realPath",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003754",
    "___s": true
  },
  {
    "comment": "/**\n     * Server-side domain only - the full path to model public folder (if any)\n     * @type {string}\n     */",
    "meta": {
      "range": [
        12964,
        13004
      ],
      "filename": "UBDomain.js",
      "lineno": 438,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042711",
        "name": "this.realPublicPath",
        "type": "MemberExpression",
        "value": "cfg.realPublicPath",
        "paramnames": []
      }
    },
    "description": "Server-side domain only - the full path to model public folder (if any)",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "realPublicPath",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#realPublicPath",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003753",
    "___s": true
  },
  {
    "comment": "/**\n   * Model version as specified in `version` key of model package.json\n   * If package.json not found version is empty.\n   *\n   * Introduced in ub server@5.4.2\n   * @type {string}\n   */",
    "meta": {
      "range": [
        13363,
        13389
      ],
      "filename": "UBDomain.js",
      "lineno": 454,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100042732",
        "name": "this.version",
        "type": "MemberExpression",
        "value": "cfg.version",
        "paramnames": []
      }
    },
    "description": "Model version as specified in <code>version</code> key of model package.json\nIf package.json not found version is empty.</p>\n<p>Introduced in ub <a href=\"mailto:server@5.4.2\">server@5.4.2</a>",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "version",
    "longname": "module:@unitybase/cs-shared.module:UBDomain~UBModel#version",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBDomain~UBModel",
    "scope": "instance",
    "___id": "T000002R003755",
    "___s": true
  },
  {
    "comment": "/**\n * Exports UBSession class, returned as a result of [UB|Sync]Connection.authorize\n * @module UBSession\n * @memberOf module:@unitybase/cs-shared\n * @author pavel.mash\n */",
    "meta": {
      "filename": "UBSession.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "description": "Exports UBSession class, returned as a result of [UB|Sync]Connection.authorize",
    "kind": "module",
    "name": "UBSession",
    "memberof": "module:@unitybase/cs-shared",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/cs-shared.module:UBSession",
    "___id": "T000002R004022",
    "___s": true
  },
  {
    "comment": "/**\n * Internal class, returned as a result of [UB|Sync]Connection.authorize()\n * The main method is {@link UBSession.signature UBSession.signature()}\n *\n * Developer never create this class directly.\n * @class\n * @protected\n */",
    "meta": {
      "range": [
        557,
        3383
      ],
      "filename": "UBSession.js",
      "lineno": 21,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045676",
        "name": "UBSession",
        "type": "FunctionDeclaration",
        "paramnames": [
          "authResponse",
          "secretWord",
          "authSchema"
        ]
      },
      "vars": {
        "data": "module:@unitybase/cs-shared.module:UBSession~UBSession~data",
        "hexa8ID": "module:@unitybase/cs-shared.module:UBSession~UBSession~hexa8ID",
        "userData": "module:@unitybase/cs-shared.module:UBSession~UBSession~userData",
        "sessionWord": "module:@unitybase/cs-shared.module:UBSession~UBSession~sessionWord",
        "sessionPwdHash": "module:@unitybase/cs-shared.module:UBSession~UBSession~sessionPwdHash",
        "sessionSaltCRC": "module:@unitybase/cs-shared.module:UBSession~UBSession~sessionSaltCRC",
        "userData.login": "module:@unitybase/cs-shared.module:UBSession~UBSession~userData.login",
        "this.logonname": "module:@unitybase/cs-shared.module:UBSession~UBSession#logonname",
        "this.userData": "module:@unitybase/cs-shared.module:UBSession~UBSession#userData",
        "this.authSchema": "module:@unitybase/cs-shared.module:UBSession~UBSession#authSchema",
        "this.signature": "module:@unitybase/cs-shared.module:UBSession~UBSession#signature",
        "": null,
        "this.isAnonymous": "module:@unitybase/cs-shared.module:UBSession~UBSession#isAnonymous",
        "this.authHeader": "module:@unitybase/cs-shared.module:UBSession~UBSession#authHeader"
      }
    },
    "description": "Internal class, returned as a result of [UB|Sync]Connection.authorize()\nThe main method is {@link UBSession.signature UBSession.signature()}</p>\n<p>Developer never create this class directly.",
    "kind": "class",
    "access": "protected",
    "name": "UBSession",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "inner",
    "memberof": "module:@unitybase/cs-shared.module:UBSession",
    "params": [],
    "___id": "T000002R004024",
    "___s": true
  },
  {
    "comment": "/**\n   * Return authorization header\n   * @example\n   *\n   * $App.connection.authorize().then(function(session){\n   *     return {Authorization: session.authHeader()}\n   * });\n   *\n   * @returns {string}\n   */",
    "meta": {
      "range": [
        3223,
        3381
      ],
      "filename": "UBSession.js",
      "lineno": 110,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045882",
        "name": "this.authHeader",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return authorization header",
    "examples": [
      "$App.connection.authorize().then(function(session){\n    return {Authorization: session.authHeader()}\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "authHeader",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#authHeader",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004044",
    "___s": true
  },
  {
    "comment": "/**\n   * Name of authentication schema\n   * @type {String}\n   * @protected\n   * @readonly\n   */",
    "meta": {
      "range": [
        1879,
        1915
      ],
      "filename": "UBSession.js",
      "lineno": 62,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045789",
        "name": "this.authSchema",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Name of authentication schema",
    "type": {
      "names": [
        "String"
      ]
    },
    "access": "protected",
    "readonly": true,
    "name": "authSchema",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#authSchema",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004039",
    "___s": true
  },
  {
    "comment": "/**\n * Calculate CRC32 checksum for string\n * @param {String} s string to calculate CRC32\n * @param {Number} [polynomial] polynomial basis. default to 0x04C11DB7\n * @param {Number} [initialValue] initial crc value. default to 0xFFFFFFFF\n * @param {Number} [finalXORValue] default to 0xFFFFFFFF\n * @returns {Number}\n */",
    "meta": {
      "range": [
        4129,
        5230
      ],
      "filename": "UBSession.js",
      "lineno": 140,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045971",
        "name": "UBSession.prototype.crc32",
        "type": "FunctionExpression",
        "value": "crc32",
        "paramnames": [
          "s",
          "polynomial",
          "initialValue",
          "finalXORValue"
        ]
      },
      "vars": {
        "s": "module:@unitybase/cs-shared.module:UBSession~s",
        "polynomial": "module:@unitybase/cs-shared.module:UBSession~polynomial",
        "initialValue": "module:@unitybase/cs-shared.module:UBSession~initialValue",
        "finalXORValue": "module:@unitybase/cs-shared.module:UBSession~finalXORValue",
        "crc": "module:@unitybase/cs-shared.module:UBSession~crc",
        "table": "module:@unitybase/cs-shared.module:UBSession~table",
        "CRC32_POLYTABLES[undefined]": "module:@unitybase/cs-shared.module:UBSession~CRC32_POLYTABLES.undefined]",
        "": null,
        "i": "module:@unitybase/cs-shared.module:UBSession~UBSession#crc32~i",
        "l": "module:@unitybase/cs-shared.module:UBSession~UBSession#crc32~l",
        "c": "module:@unitybase/cs-shared.module:UBSession~UBSession#crc32~c",
        "j": "module:@unitybase/cs-shared.module:UBSession~UBSession#crc32~j"
      }
    },
    "description": "Calculate CRC32 checksum for string",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "string to calculate CRC32",
        "name": "s"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "polynomial basis. default to 0x04C11DB7",
        "name": "polynomial"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "initial crc value. default to 0xFFFFFFFF",
        "name": "initialValue"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "default to 0xFFFFFFFF",
        "name": "finalXORValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "crc32",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#crc32",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004051",
    "___s": true
  },
  {
    "comment": "/**\n * Return hexadecimal string of 8 character length from value\n * @param {String|Number} value\n * @returns {String}\n */",
    "meta": {
      "range": [
        3508,
        3713
      ],
      "filename": "UBSession.js",
      "lineno": 120,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045913",
        "name": "UBSession.prototype.hexa8",
        "type": "FunctionExpression",
        "value": "hexa8",
        "paramnames": [
          "value"
        ]
      },
      "vars": {
        "num": "module:@unitybase/cs-shared.module:UBSession~UBSession#hexa8~num",
        "res": "module:@unitybase/cs-shared.module:UBSession~res"
      }
    },
    "description": "Return hexadecimal string of 8 character length from value",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "Number"
          ]
        },
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "hexa8",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#hexa8",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004045",
    "___s": true
  },
  {
    "comment": "/**\n   * Current session is anonymous session\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        2931,
        3007
      ],
      "filename": "UBSession.js",
      "lineno": 96,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045869",
        "name": "this.isAnonymous",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Current session is anonymous session",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isAnonymous",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#isAnonymous",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004043",
    "___s": true
  },
  {
    "comment": "/**\n   * Session signature for authorized request. Can be added as LAST parameter in url, or to Authorization header (preferred way)\n   * @example\n   *\n   *$App.connection.authorize().then(function(session){\n   *    // for URL\n   *    return 'session_signature=' + session.signature()\n   *    //for header\n   *    return {Authorization: session.authSchema + ' ' + session.signature()}\n   *});\n   *\n   * @returns {string}\n   */",
    "meta": {
      "range": [
        2348,
        2849
      ],
      "filename": "UBSession.js",
      "lineno": 77,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045797",
        "name": "this.signature",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "timeStampI": "module:@unitybase/cs-shared.module:UBSession~UBSession#signature~timeStampI",
        "hexaTime": "module:@unitybase/cs-shared.module:UBSession~UBSession#signature~hexaTime"
      }
    },
    "description": "Session signature for authorized request. Can be added as LAST parameter in url, or to Authorization header (preferred way)",
    "examples": [
      "$App.connection.authorize().then(function(session){\n   // for URL\n   return 'session_signature=' + session.signature()\n   //for header\n   return {Authorization: session.authSchema + ' ' + session.signature()}\n});"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "signature",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#signature",
    "kind": "function",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004040",
    "___s": true
  },
  {
    "comment": "/** Contain custom user data. Usually filled inside **server** `onUserLogon` event handlers\n   *\n   * Do not use it directly, instead use helper method {@link SyncConnection#userData SyncConnection.userData()} instead.\n   *\n   * @type {Object}\n   * @protected\n   * @readonly\n   */",
    "meta": {
      "range": [
        1753,
        1777
      ],
      "filename": "UBSession.js",
      "lineno": 54,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100045783",
        "name": "this.userData",
        "type": "Identifier",
        "value": "userData",
        "paramnames": []
      }
    },
    "description": "Contain custom user data. Usually filled inside <strong>server</strong> <code>onUserLogon</code> event handlers</p>\n<p>Do not use it directly, instead use helper method {@link SyncConnection#userData SyncConnection.userData()} instead.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "access": "protected",
    "readonly": true,
    "name": "userData",
    "longname": "module:@unitybase/cs-shared.module:UBSession~UBSession#userData",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared.module:UBSession~UBSession",
    "scope": "instance",
    "___id": "T000002R004038",
    "___s": true
  },
  {
    "comment": "/**\n   * Domain metadata\n   * @type {UBDomain}\n   */",
    "meta": {
      "range": [
        667,
        675
      ],
      "filename": "cs-shared.js",
      "lineno": 25,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046363",
        "name": "UBDomain",
        "type": "Identifier",
        "value": "UBDomain"
      }
    },
    "description": "Domain metadata",
    "type": {
      "names": [
        "UBDomain"
      ]
    },
    "name": "UBDomain",
    "longname": "module:@unitybase/cs-shared.UBDomain",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared",
    "scope": "static",
    "___id": "T000002R004115",
    "___s": true
  },
  {
    "comment": "/**\n   * User session for connection to UB server\n   * @type {UBSession}\n   */",
    "meta": {
      "range": [
        760,
        769
      ],
      "filename": "cs-shared.js",
      "lineno": 30,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046365",
        "name": "UBSession",
        "type": "Identifier",
        "value": "UBSession"
      }
    },
    "description": "User session for connection to UB server",
    "type": {
      "names": [
        "UBSession"
      ]
    },
    "name": "UBSession",
    "longname": "module:@unitybase/cs-shared.UBSession",
    "kind": "member",
    "memberof": "module:@unitybase/cs-shared",
    "scope": "static",
    "___id": "T000002R004116",
    "___s": true
  },
  {
    "comment": "/**\n * Reverse proxy with UnityBase based authentication.\n *\n * Use it to authorize a requests using UB and when bypass it to another services\n *\n * Example below will check validity of UB authentication header (if not - return 401)\n * and proxy all requests for `cms` endpoint to the `http://localhost:3030`.\n *\n * For requests what start from `/ubcms` authentication not checked\n *\n * I.e. GET /cms/some/path&p1=true will be proxied to GET http://localhost:3030/some/path&p1=true\n *\n\n     const HttpProxy = require('@unitybase/http-proxy')\n     new HttpProxy({\n        endpoint: 'cms',\n        targetURL: 'http://localhost:3030'\n        nonAuthorizedURLs: [/\\/ubcms/]\n     })\n\n * @module @unitybase/http-proxy\n */",
    "meta": {
      "filename": "HttpProxy.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/http-proxy",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/http-proxy",
    "longname": "module:@unitybase/http-proxy",
    "readme": "<h1>HTTP(S) proxy for UnityBase</h1><p>Reverse proxy with authentication</p>\n<p>Code below will add a <code>cms</code> endpoint.</p>\n<p>On every request to cms endpoint the UB authentication header will be checked.\nIf it's valid then this request will be redirected to <code>http://localhost:3030</code>.\nIf not - then the endpoint will return 401.</p>\n<p>For the requests which start from <code>/ubcms</code> the authentication will not be checked.</p>\n<p>I.e. <code>GET /cms/some/path&amp;p1=true</code> will be proxies to <code>GET http://localhost:3030/some/path&amp;p1=true</code></p>\n<pre class=\"prettyprint source lang-JavaScript\"><code>const HttpProxy = require('@unitybase/http-proxy')\nnew HttpProxy({\n    endpoint: 'cms',\n    targetURL: 'http://localhost:3030',\n    nonAuthorizedURLs: [///ubcms/]\n})</code></pre>",
    "___id": "T000002R007321",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n */",
    "meta": {
      "range": [
        956,
        5961
      ],
      "filename": "HttpProxy.js",
      "lineno": 34,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/http-proxy",
      "code": {
        "id": "astnode100075235",
        "name": "HttpProxy",
        "type": "ClassDeclaration",
        "paramnames": [
          "config"
        ]
      }
    },
    "kind": "class",
    "name": "HttpProxy",
    "longname": "module:@unitybase/http-proxy~HttpProxy",
    "scope": "inner",
    "memberof": "module:@unitybase/http-proxy",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Proxy endpoint name",
        "name": "config.endpoint"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "A URL of target server we reverse requests to",
        "name": "config.targetURL"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Use gzip compression of request body",
        "name": "config.compressionEnable"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Send timeout in ms.",
        "name": "config.sendTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Receive timeout in ms.",
        "name": "config.receiveTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Connect timeout in ms.",
        "name": "config.connectTimeout"
      },
      {
        "type": {
          "names": [
            "Array.<RegExp>"
          ]
        },
        "optional": true,
        "description": "Array of regular expression for URL what not require a authentication",
        "name": "config.nonAuthorizedURLs"
      },
      {
        "type": {
          "names": [
            "Array.<RegExp>"
          ]
        },
        "optional": true,
        "description": "Array of regular expression for URL what require a authentication. If set this parameter will be ignored parameter nonAuthorizedURLs",
        "name": "config.authorizedURLs"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "optional": true,
        "description": "Authorize only user with role(s)",
        "name": "config.authorizedRole"
      }
    ],
    "___id": "T000002R007328",
    "___s": true
  },
  {
    "comment": "/**\n   * Handle a  proxy request\n   * @param {THTTPRequest} req\n   * @param {THTTPResponse} resp\n   */",
    "meta": {
      "range": [
        3997,
        5959
      ],
      "filename": "HttpProxy.js",
      "lineno": 123,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/http-proxy",
      "code": {
        "id": "astnode100075567",
        "name": "HttpProxy#processRequest",
        "type": "MethodDefinition",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Handle a  proxy request",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "processRequest",
    "longname": "module:@unitybase/http-proxy~HttpProxy#processRequest",
    "kind": "function",
    "memberof": "module:@unitybase/http-proxy~HttpProxy",
    "scope": "instance",
    "___id": "T000002R007352",
    "___s": true
  },
  {
    "comment": "/**\n * @module @unitybase/mailer\n */",
    "meta": {
      "filename": "_UBMailClasses.js",
      "lineno": 4,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/mailer",
    "longname": "module:@unitybase/mailer",
    "readme": "<p>The module for sending and receiving mail.\nFor SSL support OpenSSL libraries version &gt;= 0.9.7 must be installed</p>\n<ul>\n<li>Windows: <code>libssl32.dll</code>, <code>libeay32.dll</code>, (optional <code>ssleay32.dll</code>) must be in the PATH</li>\n<li>Linux: libssl.so libcrypto.so must be in LD_LIBRARY_PATH</li>\n</ul>\n<p><strong>WARNING</strong> - do not send the mail directly from a HTTP thread.\nMail server can fail or work slowly.\nThe right way is to <strong>put the mail messages in the queue</strong> and send them via scheduler.</p>\n<p>{@link module:@unitybase/ubq @unitybase/ubq} module already has:</p>\n<ul>\n<li>a module 'modules/mail-queue` for adding e-mails to the queue</li>\n<li>a <code>mail</code> scheduler job for sending mails from the queue (once a minute by default)</li>\n</ul>\n<p>Usage sample:</p>\n<pre class=\"prettyprint source lang-js\"><code>  const UBMail = require('@unitybase/mailer')\n  // send e-mail\n  let sender = new UBMail.TubMailSender({\n    host: 'mail.host.name',\n    port: '25',\n    tls: false\n  })\n  sender.sendMail({\n    subject: 'subject 1',\n    bodyType: UBMail.TubSendMailBodyType.Text,\n    body: 'body\\r\\n 1',\n    fromAddr: mailAddr1,\n    toAddr: [mailAddr1, mailAddr2]\n  })\n\n  // Receive e-mails\n  let receiver = new UBMail.TubMailReceiver({\n    host: mailHost,\n    port: '110',\n    tls: false,\n    auth: true,\n    user: 'mpv',\n    password: 'myPassword'\n  })\n  receiver.reconnect();\n  let cnt = r.getMessagesCount()\n  let res = []\n  for (let i = 1; i &lt;= cnt; i++ ) {\n      res.push(r.receive(i))\n  }</code></pre>",
    "___id": "T000002R007398",
    "___s": true
  },
  {
    "comment": "/**\n * The module for sending and receiving mail\n * @module @unitybase/mailer\n */",
    "meta": {
      "filename": "UBMail.js",
      "lineno": 14,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/mailer",
    "longname": "module:@unitybase/mailer",
    "readme": "<p>The module for sending and receiving mail.\nFor SSL support OpenSSL libraries version &gt;= 0.9.7 must be installed</p>\n<ul>\n<li>Windows: <code>libssl32.dll</code>, <code>libeay32.dll</code>, (optional <code>ssleay32.dll</code>) must be in the PATH</li>\n<li>Linux: libssl.so libcrypto.so must be in LD_LIBRARY_PATH</li>\n</ul>\n<p><strong>WARNING</strong> - do not send the mail directly from a HTTP thread.\nMail server can fail or work slowly.\nThe right way is to <strong>put the mail messages in the queue</strong> and send them via scheduler.</p>\n<p>{@link module:@unitybase/ubq @unitybase/ubq} module already has:</p>\n<ul>\n<li>a module 'modules/mail-queue` for adding e-mails to the queue</li>\n<li>a <code>mail</code> scheduler job for sending mails from the queue (once a minute by default)</li>\n</ul>\n<p>Usage sample:</p>\n<pre class=\"prettyprint source lang-js\"><code>  const UBMail = require('@unitybase/mailer')\n  // send e-mail\n  let sender = new UBMail.TubMailSender({\n    host: 'mail.host.name',\n    port: '25',\n    tls: false\n  })\n  sender.sendMail({\n    subject: 'subject 1',\n    bodyType: UBMail.TubSendMailBodyType.Text,\n    body: 'body\\r\\n 1',\n    fromAddr: mailAddr1,\n    toAddr: [mailAddr1, mailAddr2]\n  })\n\n  // Receive e-mails\n  let receiver = new UBMail.TubMailReceiver({\n    host: mailHost,\n    port: '110',\n    tls: false,\n    auth: true,\n    user: 'mpv',\n    password: 'myPassword'\n  })\n  receiver.reconnect();\n  let cnt = r.getMessagesCount()\n  let res = []\n  for (let i = 1; i &lt;= cnt; i++ ) {\n      res.push(r.receive(i))\n  }</code></pre>",
    "___id": "T000002R007376",
    "___s": true
  },
  {
    "comment": "/**\n * class for storing strings list\n *\n * @class StringCollectionBind\n * @implements {UBReader}\n */",
    "meta": {
      "filename": "_UBMailClasses.js",
      "lineno": 174,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "description": "class for storing strings list",
    "kind": "class",
    "name": "StringCollectionBind",
    "implements": [
      "UBReader"
    ],
    "longname": "module:@unitybase/mailer~StringCollectionBind",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007412",
    "___s": true
  },
  {
    "comment": "/**\n * Length content in bytes\n *\n * @type {Number}\n */",
    "meta": {
      "range": [
        4801,
        4836
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 186,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076162",
        "name": "StringCollectionBind.byteLength",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Length content in bytes",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "byteLength",
    "longname": "module:@unitybase/mailer~StringCollectionBind.byteLength",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~StringCollectionBind",
    "scope": "static",
    "___id": "T000002R007414",
    "___s": true
  },
  {
    "comment": "/**\n * Count of lines in list\n *\n * @type {Number}\n */",
    "meta": {
      "range": [
        4893,
        4928
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 193,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076168",
        "name": "StringCollectionBind.linesCount",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Count of lines in list",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "linesCount",
    "longname": "module:@unitybase/mailer~StringCollectionBind.linesCount",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~StringCollectionBind",
    "scope": "static",
    "___id": "T000002R007415",
    "___s": true
  },
  {
    "comment": "/**\n * Implements a {@link UBReader} interface\n */",
    "meta": {
      "range": [
        5485,
        5535
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 209,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076183",
        "name": "StringCollectionBind.read",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      }
    },
    "description": "Implements a {@link UBReader} interface",
    "name": "read",
    "longname": "module:@unitybase/mailer~StringCollectionBind.read",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~StringCollectionBind",
    "scope": "static",
    "___id": "T000002R007417",
    "___s": true
  },
  {
    "comment": "/**\n * Get string with custom index from list as String or ArrayBuffer\n *\n * @param {Number} index Index of string\n * @param {String} [encoding] Optional encoding of source. Default to 'utf-8'.\n *  If 'bin' - return ArrayBuffer source representation without any conversion.\n *  If 'base64' - transform base64 encoded content of source to ArrayBuffer\n * @returns {ArrayBuffer|String} Return String in case no encoding passed or ArrayBuffer\n */",
    "meta": {
      "range": [
        5373,
        5432
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 204,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076174",
        "name": "StringCollectionBind.readLn",
        "type": "FunctionExpression",
        "paramnames": [
          "index",
          "encoding"
        ]
      }
    },
    "description": "Get string with custom index from list as String or ArrayBuffer",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Index of string",
        "name": "index"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional encoding of source. Default to 'utf-8'.\n If 'bin' - return ArrayBuffer source representation without any conversion.\n If 'base64' - transform base64 encoded content of source to ArrayBuffer",
        "name": "encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "description": "<p>Return String in case no encoding passed or ArrayBuffer</p>"
      }
    ],
    "name": "readLn",
    "longname": "module:@unitybase/mailer~StringCollectionBind.readLn",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~StringCollectionBind",
    "scope": "static",
    "___id": "T000002R007416",
    "___s": true
  },
  {
    "comment": "/**\n * @class TMessHeaderBind\n */",
    "meta": {
      "filename": "_UBMailClasses.js",
      "lineno": 211,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "kind": "class",
    "name": "TMessHeaderBind",
    "longname": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007418",
    "___s": true
  },
  {
    "comment": "/**\n * Carbon Copy receivers of message (one per line)\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        5885,
        5912
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 235,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076206",
        "name": "TMessHeaderBind.cCList",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Carbon Copy receivers of message (one per line)",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "cCList",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.cCList",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007422",
    "___s": true
  },
  {
    "comment": "/**\n * Specify base charset. By default is used system charset\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6839,
        6871
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 301,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076261",
        "name": "TMessHeaderBind.charsetCode",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Specify base charset. By default is used system charset",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "charsetCode",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.charsetCode",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007431",
    "___s": true
  },
  {
    "comment": "/**\n * After decoding contains all headers lines witch not have parsed to any\n * other structures in this object\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        6234,
        6268
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 257,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076224",
        "name": "TMessHeaderBind.customHeaders",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "After decoding contains all headers lines witch not have parsed to any\nother structures in this object",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "customHeaders",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.customHeaders",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007425",
    "___s": true
  },
  {
    "comment": "/**\n * Date and time of message\n *\n * @type {Date}\n */",
    "meta": {
      "range": [
        6325,
        6358
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 264,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076230",
        "name": "TMessHeaderBind.date",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Date and time of message",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "date",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.date",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007426",
    "___s": true
  },
  {
    "comment": "/**\n * Sender of message\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        5653,
        5678
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 221,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076194",
        "name": "TMessHeaderBind.from",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Sender of message",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "from",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.from",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007420",
    "___s": true
  },
  {
    "comment": "/**\n * Message indetifier\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6577,
        6607
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 285,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076249",
        "name": "TMessHeaderBind.messageID",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Message indetifier",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "messageID",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.messageID",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007429",
    "___s": true
  },
  {
    "comment": "/**\n * Organization string\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6047,
        6080
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 249,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076218",
        "name": "TMessHeaderBind.organization",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Organization string",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "organization",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.organization",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007424",
    "___s": true
  },
  {
    "comment": "/**\n * Message priority\n *\n * Can take values: MP_unknown, MP_low, MP_normal, MP_high\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6720,
        6749
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 294,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076255",
        "name": "TMessHeaderBind.priority",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Message priority</p>\n<p>Can take values: MP_unknown, MP_low, MP_normal, MP_high",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "priority",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.priority",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007430",
    "___s": true
  },
  {
    "comment": "/**\n * Address for replies\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6496,
        6524
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 278,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076243",
        "name": "TMessHeaderBind.replyTo",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Address for replies",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "replyTo",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.replyTo",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007428",
    "___s": true
  },
  {
    "comment": "/**\n * Subject of message\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        5965,
        5993
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 242,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076212",
        "name": "TMessHeaderBind.subject",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Subject of message",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "subject",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.subject",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007423",
    "___s": true
  },
  {
    "comment": "/**\n * Receivers of message (one per line)\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        5762,
        5789
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 228,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076200",
        "name": "TMessHeaderBind.toList",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Receivers of message (one per line)",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "toList",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.toList",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007421",
    "___s": true
  },
  {
    "comment": "/**\n * Mailer identification\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        6414,
        6442
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 271,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076237",
        "name": "TMessHeaderBind.xMailer",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Mailer identification",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "xMailer",
    "longname": "module:@unitybase/mailer~TMessHeaderBind.xMailer",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMessHeaderBind",
    "scope": "static",
    "___id": "T000002R007427",
    "___s": true
  },
  {
    "comment": "/**\n * Mime part of message\n *\n * @class TMimePartBind\n */",
    "meta": {
      "filename": "_UBMailClasses.js",
      "lineno": 303,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "description": "Mime part of message",
    "kind": "class",
    "name": "TMimePartBind",
    "longname": "module:@unitybase/mailer~TMimePartBind",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007432",
    "___s": true
  },
  {
    "comment": "/**\n * When is True, then this part maybe(!) have included some unencoded binary\n * data\n *\n * @type {Boolean}\n */",
    "meta": {
      "range": [
        11082,
        11116
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 501,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076416",
        "name": "TMimePartBind.attachInside",
        "type": "Literal",
        "value": false,
        "paramnames": []
      }
    },
    "description": "When is True, then this part maybe(!) have included some unencoded binary\ndata",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "attachInside",
    "longname": "module:@unitybase/mailer~TMimePartBind.attachInside",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007458",
    "___s": true
  },
  {
    "comment": "/**\n * Boundary delimiter of multipart Mime part. Used only in multipart part.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        9889,
        9916
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 435,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076362",
        "name": "TMimePartBind.boundary",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Boundary delimiter of multipart Mime part. Used only in multipart part.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "boundary",
    "longname": "module:@unitybase/mailer~TMimePartBind.boundary",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007449",
    "___s": true
  },
  {
    "comment": "/**\n * String representation of used Mime charset in part. (i.e. 'iso-8859-1')\n * Writing to this property automaticly generate value of {@link class:TMimePartBind#charsetCode charsetCode}.\n * Charset is used only for text parts.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        7951,
        7977
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 341,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076290",
        "name": "TMimePartBind.charset",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "String representation of used Mime charset in part. (i.e. 'iso-8859-1')\nWriting to this property automaticly generate value of {@link class:TMimePartBind#charsetCode charsetCode}.\nCharset is used only for text parts.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "charset",
    "longname": "module:@unitybase/mailer~TMimePartBind.charset",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007437",
    "___s": true
  },
  {
    "comment": "/**\n * Decoded charset type.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        8811,
        8841
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 376,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076314",
        "name": "TMimePartBind.charsetCode",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Decoded charset type.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "charsetCode",
    "longname": "module:@unitybase/mailer~TMimePartBind.charsetCode",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007441",
    "___s": true
  },
  {
    "comment": "/**\n * Content ID.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        9755,
        9783
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 428,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076356",
        "name": "TMimePartBind.contentID",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Content ID.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "contentID",
    "longname": "module:@unitybase/mailer~TMimePartBind.contentID",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007448",
    "___s": true
  },
  {
    "comment": "/**\n * If True, then do internal charset translation of part content between CharsetCode\n * and TargetCharset\n *\n * @type {Boolean}\n */",
    "meta": {
      "range": [
        9136,
        9169
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 392,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076326",
        "name": "TMimePartBind.convertCharset",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "If True, then do internal charset translation of part content between CharsetCode\nand TargetCharset",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "convertCharset",
    "longname": "module:@unitybase/mailer~TMimePartBind.convertCharset",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007443",
    "___s": true
  },
  {
    "comment": "/**\n * Define default charset for decoding text MIME parts without charset\n * specification. Default value is 'ISO-8859-1' by RCF documents.\n * But Microsoft Outlook use windows codings as default. This property allows\n * properly decode textual parts from some broken versions of Microsoft\n * Outlook.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        8307,
        8340
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 352,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076296",
        "name": "TMimePartBind.defaultCharset",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Define default charset for decoding text MIME parts without charset\nspecification. Default value is 'ISO-8859-1' by RCF documents.\nBut Microsoft Outlook use windows codings as default. This property allows\nproperly decode textual parts from some broken versions of Microsoft\nOutlook.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "defaultCharset",
    "longname": "module:@unitybase/mailer~TMimePartBind.defaultCharset",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007438",
    "___s": true
  },
  {
    "comment": "/**\n * Description of Mime part.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        9547,
        9577
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 414,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076344",
        "name": "TMimePartBind.description",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Description of Mime part.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/mailer~TMimePartBind.description",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007446",
    "___s": true
  },
  {
    "comment": "/**\n * Value of content disposition field. (i.e. 'INLINE' or 'ATTACHMENT')\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        9679,
        9709
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 421,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076350",
        "name": "TMimePartBind.disposition",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Value of content disposition field. (i.e. 'INLINE' or 'ATTACHMENT')",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "disposition",
    "longname": "module:@unitybase/mailer~TMimePartBind.disposition",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007447",
    "___s": true
  },
  {
    "comment": "/**\n * String representation of used Mime encoding in part. (i.e. 'base64')\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        7667,
        7694
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 332,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076284",
        "name": "TMimePartBind.encoding",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "String representation of used Mime encoding in part. (i.e. 'base64')",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "encoding",
    "longname": "module:@unitybase/mailer~TMimePartBind.encoding",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007436",
    "___s": true
  },
  {
    "comment": "/**\n * Decoded encoding type. Possible values are: ME_7BIT, ME_8BIT,\n * ME_QUOTED_PRINTABLE and ME_BASE64. If type not recognised, result is\n * ME_7BIT.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        8724,
        8755
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 369,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076308",
        "name": "TMimePartBind.encodingCode",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Decoded encoding type. Possible values are: ME_7BIT, ME_8BIT,\nME_QUOTED_PRINTABLE and ME_BASE64. If type not recognised, result is\nME_7BIT.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "encodingCode",
    "longname": "module:@unitybase/mailer~TMimePartBind.encodingCode",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007440",
    "___s": true
  },
  {
    "comment": "/**\n * Filename of file in binary part.\n * @type {String}\n */",
    "meta": {
      "range": [
        9980,
        10007
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 441,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076368",
        "name": "TMimePartBind.fileName",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Filename of file in binary part.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fileName",
    "longname": "module:@unitybase/mailer~TMimePartBind.fileName",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007450",
    "___s": true
  },
  {
    "comment": "/**\n * If True, then allways do internal charset translation of HTML parts\n * by MIME even it have their own charset in META tag. Default is False.\n *\n * @type {Boolean}\n */",
    "meta": {
      "range": [
        9345,
        9381
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 400,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076332",
        "name": "TMimePartBind.forcedHTMLConvert",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "If True, then allways do internal charset translation of HTML parts\nby MIME even it have their own charset in META tag. Default is False.",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "forcedHTMLConvert",
    "longname": "module:@unitybase/mailer~TMimePartBind.forcedHTMLConvert",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007444",
    "___s": true
  },
  {
    "comment": "/**\n * All header lines of MIME part.\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        10335,
        10361
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 462,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076386",
        "name": "TMimePartBind.headers",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "All header lines of MIME part.",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "headers",
    "longname": "module:@unitybase/mailer~TMimePartBind.headers",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007453",
    "___s": true
  },
  {
    "comment": "/**\n * String list with lines contains mime part (It can be a full message).\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        10125,
        10149
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 448,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076374",
        "name": "TMimePartBind.lines",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "String list with lines contains mime part (It can be a full message).",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "lines",
    "longname": "module:@unitybase/mailer~TMimePartBind.lines",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007451",
    "___s": true
  },
  {
    "comment": "/**\n * Here you can specify maximum line length for encoding of MIME part.\n * If line is longer, then is splitted by standard of MIME. Correct MIME\n * mailers can de-split this line into original length.\n *\n * @type {Boolean}\n */",
    "meta": {
      "range": [
        11348,
        11379
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 510,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076422",
        "name": "TMimePartBind.maxLineLength",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Here you can specify maximum line length for encoding of MIME part.\nIf line is longer, then is splitted by standard of MIME. Correct MIME\nmailers can de-split this line into original length.",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "maxLineLength",
    "longname": "module:@unitybase/mailer~TMimePartBind.maxLineLength",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007459",
    "___s": true
  },
  {
    "comment": "/**\n * Specify maximum sublevel value for decomposing.\n *\n * @type {Number}\n */",
    "meta": {
      "range": [
        10936,
        10965
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 493,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076410",
        "name": "TMimePartBind.maxSubLevel",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Specify maximum sublevel value for decomposing.",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "maxSubLevel",
    "longname": "module:@unitybase/mailer~TMimePartBind.maxSubLevel",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007457",
    "___s": true
  },
  {
    "comment": "/**\n * Encoded form of MIME part data.\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        10229,
        10256
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 455,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076380",
        "name": "TMimePartBind.partBody",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Encoded form of MIME part data.",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "partBody",
    "longname": "module:@unitybase/mailer~TMimePartBind.partBody",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007452",
    "___s": true
  },
  {
    "comment": "/**\n * On multipart this contains part of message between last boundary and end\n * of message.\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        10667,
        10694
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 478,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076398",
        "name": "TMimePartBind.postPart",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "On multipart this contains part of message between last boundary and end\nof message.",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "postPart",
    "longname": "module:@unitybase/mailer~TMimePartBind.postPart",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007455",
    "___s": true
  },
  {
    "comment": "/**\n * On multipart this contains part of message between first line of message\n * and first boundary.\n *\n * @type {StringCollectionBind}\n */",
    "meta": {
      "range": [
        10505,
        10531
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 470,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076392",
        "name": "TMimePartBind.prePart",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "On multipart this contains part of message between first line of message\nand first boundary.",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "prePart",
    "longname": "module:@unitybase/mailer~TMimePartBind.prePart",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007454",
    "___s": true
  },
  {
    "comment": "/**\n * Primary Mime type of part. (i.e. 'application')\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        7538,
        7564
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 325,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076278",
        "name": "TMimePartBind.primary",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Primary Mime type of part. (i.e. 'application')",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "primary",
    "longname": "module:@unitybase/mailer~TMimePartBind.primary",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007435",
    "___s": true
  },
  {
    "comment": "/**\n * Decoded primary type. Possible values are: MP_TEXT, MP_MULTIPART,\n * MP_MESSAGE and MP_BINARY. If type not recognised, result is MP_BINARY.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        8514,
        8544
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 360,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076302",
        "name": "TMimePartBind.primaryCode",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Decoded primary type. Possible values are: MP_TEXT, MP_MULTIPART,\nMP_MESSAGE and MP_BINARY. If type not recognised, result is MP_BINARY.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "primaryCode",
    "longname": "module:@unitybase/mailer~TMimePartBind.primaryCode",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007439",
    "___s": true
  },
  {
    "comment": "/**\n * Read DECODED part content.\n * @param {String} [encoding] Optional encoding of source. Default to 'utf-8'.\n *          If 'bin' - return ArrayBuffer source representation without any conversion.\n *          If 'base64' - transform base64 encoded content of source to ArrayBuffer\n *          If 'bin2base64' - transform content to base64 encoded string\n * @returns {ArrayBuffer|String} Return String in case no encoding passed or ArrayBuffer\n */",
    "meta": {
      "range": [
        7413,
        7456
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 318,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076270",
        "name": "TMimePartBind.read",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      }
    },
    "description": "Read DECODED part content.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional encoding of source. Default to 'utf-8'.\n         If 'bin' - return ArrayBuffer source representation without any conversion.\n         If 'base64' - transform base64 encoded content of source to ArrayBuffer\n         If 'bin2base64' - transform content to base64 encoded string",
        "name": "encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "description": "<p>Return String in case no encoding passed or ArrayBuffer</p>"
      }
    ],
    "name": "read",
    "longname": "module:@unitybase/mailer~TMimePartBind.read",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007434",
    "___s": true
  },
  {
    "comment": "/**\n * Secondary Mime type of part. (i.e. 'mixed')\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        9459,
        9487
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 407,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076338",
        "name": "TMimePartBind.secondary",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Secondary Mime type of part. (i.e. 'mixed')",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "secondary",
    "longname": "module:@unitybase/mailer~TMimePartBind.secondary",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007445",
    "___s": true
  },
  {
    "comment": "/**\n * Show nested level in subpart tree. Value 0 means root part. 1 means\n * subpart from this root. etc.\n *\n * @type {Number}\n */",
    "meta": {
      "range": [
        10828,
        10854
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 486,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076404",
        "name": "TMimePartBind.subLevel",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Show nested level in subpart tree. Value 0 means root part. 1 means\nsubpart from this root. etc.",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "subLevel",
    "longname": "module:@unitybase/mailer~TMimePartBind.subLevel",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007456",
    "___s": true
  },
  {
    "comment": "/**\n * Subparts of MimePart\n *\n * @type {Array<TMimePartBind>}\n */",
    "meta": {
      "range": [
        11448,
        11474
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 517,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076428",
        "name": "TMimePartBind.subPart",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Subparts of MimePart",
    "type": {
      "names": [
        "Array.<TMimePartBind>"
      ]
    },
    "name": "subPart",
    "longname": "module:@unitybase/mailer~TMimePartBind.subPart",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007460",
    "___s": true
  },
  {
    "comment": "/**\n * System charset type. Default value is charset used by default in your\n * operating system.\n *\n * @type {String}\n */",
    "meta": {
      "range": [
        8966,
        8998
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 384,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076320",
        "name": "TMimePartBind.targetCharset",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "System charset type. Default value is charset used by default in your\noperating system.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "targetCharset",
    "longname": "module:@unitybase/mailer~TMimePartBind.targetCharset",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TMimePartBind",
    "scope": "static",
    "___id": "T000002R007442",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n * Binding to a native implementation of POP3 receiver.\n *\n * Should be created using {@link TubMailReceiver} method of {@link module:@unitybase/mailer} module\n * @constructor\n * @param {Object} paramsObj parameters object\n * @param {String} paramsObj.host host of mail server\n * @param {String} paramsObj.port port of mail server\n * @param {String} [paramsObj.user = ''] user login on mail server\n * @param {String} [paramsObj.password = ''] user password on mail server\n * @param {Boolean} [paramsObj.tls = false] use tls. Require openSSL library to be installed\n */",
    "meta": {
      "range": [
        714,
        753
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 21,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076074",
        "name": "TubMailReceiver",
        "type": "FunctionDeclaration",
        "paramnames": [
          "paramsObj"
        ]
      }
    },
    "kind": "class",
    "classdesc": "<p>Binding to a native implementation of POP3 receiver.</p>\n<p>Should be created using {@link TubMailReceiver} method of {@link module:@unitybase/mailer} module</p>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "parameters object",
        "name": "paramsObj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "host of mail server",
        "name": "paramsObj.host"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "port of mail server",
        "name": "paramsObj.port"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "user login on mail server",
        "name": "paramsObj.user"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "user password on mail server",
        "name": "paramsObj.password"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "use tls. Require openSSL library to be installed",
        "name": "paramsObj.tls"
      }
    ],
    "name": "TubMailReceiver",
    "longname": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007399",
    "___s": true
  },
  {
    "comment": "/**\n * constructor for TubMailReceiver\n *\n * @method TubMailReceiver\n * @return {TubMailReceiver}\n */",
    "meta": {
      "filename": "UBMail.js",
      "lineno": 19,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "description": "constructor for TubMailReceiver",
    "kind": "function",
    "name": "TubMailReceiver",
    "returns": [
      {
        "type": {
          "names": [
            "TubMailReceiver"
          ]
        }
      }
    ],
    "longname": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007377",
    "___s": true
  },
  {
    "comment": "/**\n * Mark the message to delete. The message will be removed indeed, when reconnect to the server\n * or the object is destroyed.\n * For destroy object immediately use freeNative, for reconnect use reconnect() method\n *\n * @param {Number} index Index of mail message on server. Indexes starts from 1\n * @returns {Boolean} True if successfully, in opposite case raise exception\n */",
    "meta": {
      "range": [
        1940,
        1991
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 63,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076111",
        "name": "TubMailReceiver.deleteMessage",
        "type": "FunctionExpression",
        "paramnames": [
          "index"
        ]
      }
    },
    "description": "Mark the message to delete. The message will be removed indeed, when reconnect to the server\nor the object is destroyed.\nFor destroy object immediately use freeNative, for reconnect use reconnect() method",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Index of mail message on server. Indexes starts from 1",
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>True if successfully, in opposite case raise exception</p>"
      }
    ],
    "name": "deleteMessage",
    "longname": "module:@unitybase/mailer~TubMailReceiver.deleteMessage",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007404",
    "___s": true
  },
  {
    "comment": "/**\n * Count of messages on server\n *\n * @returns {Number}\n */",
    "meta": {
      "range": [
        818,
        867
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 28,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076079",
        "name": "TubMailReceiver.getMessagesCount",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Count of messages on server",
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "getMessagesCount",
    "longname": "module:@unitybase/mailer~TubMailReceiver.getMessagesCount",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007400",
    "___s": true
  },
  {
    "comment": "/**\n * Get size of message\n *\n * @param {Number} index Index of mail message on server. Indexes starts from 1\n * @returns {Number}\n */",
    "meta": {
      "range": [
        1004,
        1056
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 36,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076086",
        "name": "TubMailReceiver.getMessageSize",
        "type": "FunctionExpression",
        "paramnames": [
          "index"
        ]
      }
    },
    "description": "Get size of message",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Index of mail message on server. Indexes starts from 1",
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "getMessageSize",
    "longname": "module:@unitybase/mailer~TubMailReceiver.getMessageSize",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007401",
    "___s": true
  },
  {
    "comment": "/**\n * Receive message from server\n *\n * @param {Number} index Index of mail message on server. Indexes starts from 1\n * @returns {TubMimeMessBind}\n */",
    "meta": {
      "range": [
        1210,
        1255
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 44,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076094",
        "name": "TubMailReceiver.receive",
        "type": "FunctionExpression",
        "paramnames": [
          "index"
        ]
      }
    },
    "description": "Receive message from server",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Index of mail message on server. Indexes starts from 1",
        "name": "index"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubMimeMessBind"
          ]
        }
      }
    ],
    "name": "receive",
    "longname": "module:@unitybase/mailer~TubMailReceiver.receive",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007402",
    "___s": true
  },
  {
    "comment": "/**\n * Reconnect to mail server. Get new messages from server, delete marked for delete messages.\n *\n * @returns {Boolean} True if successfully, in opposite case raise exception\n */",
    "meta": {
      "range": [
        2175,
        2217
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 70,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076119",
        "name": "TubMailReceiver.reconnect",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Reconnect to mail server. Get new messages from server, delete marked for delete messages.",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>True if successfully, in opposite case raise exception</p>"
      }
    ],
    "name": "reconnect",
    "longname": "module:@unitybase/mailer~TubMailReceiver.reconnect",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007405",
    "___s": true
  },
  {
    "comment": "/**\n * Receive message headers and first maxLines strings of message\n *\n * @param {Number} index Index of mail message on server. Indexes starts from 1\n * @param {Number} maxLines Count of message lines to receive\n * @returns {TubMimeMessBind}\n */",
    "meta": {
      "range": [
        1505,
        1556
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 53,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076102",
        "name": "TubMailReceiver.top",
        "type": "FunctionExpression",
        "paramnames": [
          "index",
          "maxLines"
        ]
      }
    },
    "description": "Receive message headers and first maxLines strings of message",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Index of mail message on server. Indexes starts from 1",
        "name": "index"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Count of message lines to receive",
        "name": "maxLines"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubMimeMessBind"
          ]
        }
      }
    ],
    "name": "top",
    "longname": "module:@unitybase/mailer~TubMailReceiver.top",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailReceiver",
    "scope": "static",
    "___id": "T000002R007403",
    "___s": true
  },
  {
    "comment": "/**\n * constructor for TubMailSender\n *\n * @method TubMailSender\n * @return {TubMailSenderBind}\n */",
    "meta": {
      "filename": "UBMail.js",
      "lineno": 27,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {}
    },
    "description": "constructor for TubMailSender",
    "kind": "function",
    "name": "TubMailSender",
    "returns": [
      {
        "type": {
          "names": [
            "TubMailSenderBind"
          ]
        }
      }
    ],
    "longname": "module:@unitybase/mailer~TubMailSender",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007379",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n * Mail SMTP sender object\n * @constructor\n * @param {Object} paramsObj parameters object\n * @param {String} paramsObj.host mail server host\n * @param {String} paramsObj.port mail server port\n * @param {String} [paramsObj.user = ''] mail server login\n * @param {String} [paramsObj.password = ''] mail server password\n * @param {Boolean} [paramsObj.tls = false] use tls. OpenSSL libraries version >= 0.9.7 must be installed - see package README.md for details\n * @param {Boolean} [paramsObj.auth = false] authentication required\n */",
    "meta": {
      "range": [
        3412,
        3453
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 127,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076125",
        "name": "TubMailSenderBind",
        "type": "FunctionDeclaration",
        "paramnames": [
          "paramsObj"
        ]
      }
    },
    "kind": "class",
    "classdesc": "<p>Mail SMTP sender object</p>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "parameters object",
        "name": "paramsObj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "mail server host",
        "name": "paramsObj.host"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "mail server port",
        "name": "paramsObj.port"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "mail server login",
        "name": "paramsObj.user"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "mail server password",
        "name": "paramsObj.password"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "use tls. OpenSSL libraries version &gt;= 0.9.7 must be installed - see package README.md for details",
        "name": "paramsObj.tls"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "authentication required",
        "name": "paramsObj.auth"
      }
    ],
    "name": "TubMailSenderBind",
    "longname": "module:@unitybase/mailer~TubMailSenderBind",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "___id": "T000002R007406",
    "___s": true
  },
  {
    "comment": "/**\n * send a email message\n *\n * @param {Object} mailObj sending mail object\n * @param {String} [mailObj.subject] mail subject\n * @param {UBMail.TubSendMailBodyType} [mailObj.bodyType = UBMail.TubSendMailBodyType.Text] mail body type\n * @param {String} [mailObj.body = ''] mail body. If bodyType is Calendar then valid *.ics file\n * @param {String} [mailObj.fromAddr = ''] sender address\n * @param {Array.<String>} [mailObj.toAddr = []] array of receivers addresses\n * @param {Array.<UBMail.TubMailAttach>} [mailObj.attaches = []] array of attaches. Ignoreg when bodyType is Calendar.\n * @returns {Boolean} True if successfully\n */",
    "meta": {
      "range": [
        4232,
        4282
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 148,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076130",
        "name": "TubMailSenderBind.sendMail",
        "type": "FunctionExpression",
        "paramnames": [
          "mailObj"
        ]
      }
    },
    "description": "send a email message",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "sending mail object",
        "name": "mailObj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "mail subject",
        "name": "mailObj.subject"
      },
      {
        "type": {
          "names": [
            "UBMail.TubSendMailBodyType"
          ]
        },
        "optional": true,
        "defaultvalue": "UBMail.TubSendMailBodyType.Text",
        "description": "mail body type",
        "name": "mailObj.bodyType"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "mail body. If bodyType is Calendar then valid *.ics file",
        "name": "mailObj.body"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "sender address",
        "name": "mailObj.fromAddr"
      },
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        },
        "optional": true,
        "defaultvalue": "[]",
        "description": "array of receivers addresses",
        "name": "mailObj.toAddr"
      },
      {
        "type": {
          "names": [
            "Array.<UBMail.TubMailAttach>"
          ]
        },
        "optional": true,
        "defaultvalue": "[]",
        "description": "array of attaches. Ignoreg when bodyType is Calendar.",
        "name": "mailObj.attaches"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>True if successfully</p>"
      }
    ],
    "name": "sendMail",
    "longname": "module:@unitybase/mailer~TubMailSenderBind.sendMail",
    "kind": "function",
    "memberof": "module:@unitybase/mailer~TubMailSenderBind",
    "scope": "static",
    "___id": "T000002R007407",
    "___s": true
  },
  {
    "comment": "/**\n * @class\n * Received message\n */",
    "meta": {
      "range": [
        4322,
        4352
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 154,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076137",
        "name": "TubMimeMessBind",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "kind": "class",
    "classdesc": "<p>Received message</p>",
    "name": "TubMimeMessBind",
    "longname": "module:@unitybase/mailer~TubMimeMessBind",
    "scope": "inner",
    "memberof": "module:@unitybase/mailer",
    "params": [],
    "___id": "T000002R007408",
    "___s": true
  },
  {
    "comment": "/**\n * Full text of message\n *\n * @type StringCollectionBind\n */",
    "meta": {
      "range": [
        4490,
        4519
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 165,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076147",
        "name": "TubMimeMessBind.fullText",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Full text of message",
    "type": {
      "names": [
        "StringCollectionBind"
      ]
    },
    "name": "fullText",
    "longname": "module:@unitybase/mailer~TubMimeMessBind.fullText",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TubMimeMessBind",
    "scope": "static",
    "___id": "T000002R007410",
    "___s": true
  },
  {
    "comment": "/**\n * Header of message\n *\n * @type TMessHeaderBind\n */",
    "meta": {
      "range": [
        4578,
        4605
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 172,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076153",
        "name": "TubMimeMessBind.header",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Header of message",
    "type": {
      "names": [
        "TMessHeaderBind"
      ]
    },
    "name": "header",
    "longname": "module:@unitybase/mailer~TubMimeMessBind.header",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TubMimeMessBind",
    "scope": "static",
    "___id": "T000002R007411",
    "___s": true
  },
  {
    "comment": "/**\n * Main mime part of message\n  */",
    "meta": {
      "range": [
        4392,
        4424
      ],
      "filename": "_UBMailClasses.js",
      "lineno": 159,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076141",
        "name": "TubMimeMessBind.messagePart",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Main mime part of message",
    "name": "messagePart",
    "longname": "module:@unitybase/mailer~TubMimeMessBind.messagePart",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~TubMimeMessBind",
    "scope": "static",
    "___id": "T000002R007409",
    "___s": true
  },
  {
    "comment": "/**\n * Get body from message\n *\n * @deprecated Use UBMail.getBodyPart(mimeMsg).read() instead\n */",
    "meta": {
      "range": [
        1251,
        1401
      ],
      "filename": "UBMail.js",
      "lineno": 62,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075996",
        "name": "UBMail.getBodyFromMessage",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Get body from message",
    "deprecated": "Use UBMail.getBodyPart(mimeMsg).read() instead",
    "name": "getBodyFromMessage",
    "longname": "module:@unitybase/mailer~UBMail.getBodyFromMessage",
    "kind": "function",
    "scope": "static",
    "memberof": "module:@unitybase/mailer~UBMail",
    "___id": "T000002R007391",
    "___s": true
  },
  {
    "comment": "/**\n * Return a mime part what represents the e-mail body\n * @param {TubMimeMessBind} message\n * @return {TMimePartBind}\n */",
    "meta": {
      "range": [
        1528,
        1928
      ],
      "filename": "UBMail.js",
      "lineno": 71,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100076007",
        "name": "UBMail.getBodyPart",
        "type": "FunctionExpression",
        "paramnames": [
          "message"
        ]
      },
      "vars": {
        "bodyPartDeep": "module:@unitybase/mailer~UBMail.getBodyPart~bodyPartDeep"
      }
    },
    "description": "Return a mime part what represents the e-mail body",
    "params": [
      {
        "type": {
          "names": [
            "TubMimeMessBind"
          ]
        },
        "name": "message"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TMimePartBind"
          ]
        }
      }
    ],
    "name": "getBodyPart",
    "longname": "module:@unitybase/mailer~UBMail.getBodyPart",
    "kind": "function",
    "scope": "static",
    "memberof": "module:@unitybase/mailer~UBMail",
    "___id": "T000002R007392",
    "___s": true
  },
  {
    "comment": "/**\n * Mail attach kind\n * @enum\n */",
    "meta": {
      "range": [
        1060,
        1151
      ],
      "filename": "UBMail.js",
      "lineno": 51,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075978",
        "name": "UBMail.TubSendMailAttachKind",
        "type": "ObjectExpression",
        "value": "{\"File\":\"\",\"Text\":\"\",\"Buffer\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Mail attach kind",
    "kind": "member",
    "isEnum": true,
    "name": "TubSendMailAttachKind",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
    "scope": "static",
    "memberof": "module:@unitybase/mailer~UBMail",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            1095,
            1109
          ],
          "filename": "UBMail.js",
          "lineno": 52,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075983",
            "name": "File",
            "type": "MemberExpression",
            "value": "_ac.File"
          }
        },
        "name": "File",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.File",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
        "scope": "static",
        "defaultvalue": "_ac.File",
        "___id": "T000002R007388",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            1113,
            1127
          ],
          "filename": "UBMail.js",
          "lineno": 53,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075987",
            "name": "Text",
            "type": "MemberExpression",
            "value": "_ac.Text"
          }
        },
        "name": "Text",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.Text",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
        "scope": "static",
        "defaultvalue": "_ac.Text",
        "___id": "T000002R007389",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            1131,
            1149
          ],
          "filename": "UBMail.js",
          "lineno": 54,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075991",
            "name": "Buffer",
            "type": "MemberExpression",
            "value": "_ac.Buffer"
          }
        },
        "name": "Buffer",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.Buffer",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
        "scope": "static",
        "defaultvalue": "_ac.Buffer",
        "___id": "T000002R007390",
        "___s": true
      }
    ],
    "___id": "T000002R007387",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1131,
        1149
      ],
      "filename": "UBMail.js",
      "lineno": 54,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075991",
        "name": "Buffer",
        "type": "MemberExpression",
        "value": "_ac.Buffer"
      }
    },
    "name": "Buffer",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.Buffer",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
    "scope": "static",
    "defaultvalue": "_ac.Buffer",
    "___id": "T000002R007390",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1095,
        1109
      ],
      "filename": "UBMail.js",
      "lineno": 52,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075983",
        "name": "File",
        "type": "MemberExpression",
        "value": "_ac.File"
      }
    },
    "name": "File",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.File",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
    "scope": "static",
    "defaultvalue": "_ac.File",
    "___id": "T000002R007388",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1113,
        1127
      ],
      "filename": "UBMail.js",
      "lineno": 53,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075987",
        "name": "Text",
        "type": "MemberExpression",
        "value": "_ac.Text"
      }
    },
    "name": "Text",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind.Text",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailAttachKind",
    "scope": "static",
    "defaultvalue": "_ac.Text",
    "___id": "T000002R007389",
    "___s": true
  },
  {
    "comment": "/**\n * Mail body type\n * @enum\n */",
    "meta": {
      "range": [
        888,
        981
      ],
      "filename": "UBMail.js",
      "lineno": 40,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075954",
        "name": "UBMail.TubSendMailBodyType",
        "type": "ObjectExpression",
        "value": "{\"Text\":\"\",\"HTML\":\"\",\"Calendar\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Mail body type",
    "kind": "member",
    "isEnum": true,
    "name": "TubSendMailBodyType",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
    "scope": "static",
    "memberof": "module:@unitybase/mailer~UBMail",
    "properties": [
      {
        "comment": "",
        "meta": {
          "range": [
            921,
            935
          ],
          "filename": "UBMail.js",
          "lineno": 41,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075959",
            "name": "Text",
            "type": "MemberExpression",
            "value": "_bt.Text"
          }
        },
        "name": "Text",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.Text",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
        "scope": "static",
        "defaultvalue": "_bt.Text",
        "___id": "T000002R007383",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            939,
            953
          ],
          "filename": "UBMail.js",
          "lineno": 42,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075963",
            "name": "HTML",
            "type": "MemberExpression",
            "value": "_bt.HTML"
          }
        },
        "name": "HTML",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.HTML",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
        "scope": "static",
        "defaultvalue": "_bt.HTML",
        "___id": "T000002R007384",
        "___s": true
      },
      {
        "comment": "",
        "meta": {
          "range": [
            957,
            979
          ],
          "filename": "UBMail.js",
          "lineno": 43,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/mailer",
          "code": {
            "id": "astnode100075967",
            "name": "Calendar",
            "type": "MemberExpression",
            "value": "_bt.Calendar"
          }
        },
        "name": "Calendar",
        "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.Calendar",
        "kind": "member",
        "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
        "scope": "static",
        "defaultvalue": "_bt.Calendar",
        "___id": "T000002R007385",
        "___s": true
      }
    ],
    "___id": "T000002R007382",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        957,
        979
      ],
      "filename": "UBMail.js",
      "lineno": 43,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075967",
        "name": "Calendar",
        "type": "MemberExpression",
        "value": "_bt.Calendar"
      }
    },
    "name": "Calendar",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.Calendar",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
    "scope": "static",
    "defaultvalue": "_bt.Calendar",
    "___id": "T000002R007385",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        939,
        953
      ],
      "filename": "UBMail.js",
      "lineno": 42,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075963",
        "name": "HTML",
        "type": "MemberExpression",
        "value": "_bt.HTML"
      }
    },
    "name": "HTML",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.HTML",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
    "scope": "static",
    "defaultvalue": "_bt.HTML",
    "___id": "T000002R007384",
    "___s": true
  },
  {
    "comment": "",
    "meta": {
      "range": [
        921,
        935
      ],
      "filename": "UBMail.js",
      "lineno": 41,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/mailer",
      "code": {
        "id": "astnode100075959",
        "name": "Text",
        "type": "MemberExpression",
        "value": "_bt.Text"
      }
    },
    "name": "Text",
    "longname": "module:@unitybase/mailer~UBMail.TubSendMailBodyType.Text",
    "kind": "member",
    "memberof": "module:@unitybase/mailer~UBMail.TubSendMailBodyType",
    "scope": "static",
    "defaultvalue": "_bt.Text",
    "___id": "T000002R007383",
    "___s": true
  },
  {
    "comment": "/**\n * UnityBase messaging subsystem\n * @module @unitybase/messaging\n */",
    "meta": {
      "filename": "messaging.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/messaging",
    "longname": "module:@unitybase/messaging",
    "readme": "<h1>UnityBase Messaging</h1><h2>Overview</h2><p>UnityBase messaging subsystem consists of the following components:</p>\n<ul>\n<li>Notifications: send messages from server to currently active users</li>\n<li>Exchange: server to server messages exchange</li>\n</ul>\n<p>Both components uses RabbitMQ as a transport, and there is set of services developed (out of scope of this package) to\nfacilitate this.\nThis particular package shall be part of solution as a UnityBase model.\nIt contain both client and server APIs.</p>\n<p>Notification of UnityBase users:</p>\n<ul>\n<li>Uses JWT technology for managing permissions of UnityBase clients to AMQP resources and topics</li>\n<li>Allows to send messages to:<ul>\n<li>administrative subjects: users / roles / groups</li>\n<li>organizational units: staff unit, organization, etc, when use <code>@unitybase/org</code> model</li>\n<li>customize what group of users to send to </li>\n<li>broadcast messages, send to all users</li>\n</ul>\n</li>\n<li>Receive messages from users</li>\n</ul>\n<p>Interaction with external services:</p>\n<ul>\n<li>Allows to send messages to external services</li>\n<li>Allows to receive messages from external services<ul>\n<li>API for registering <code>onMessage</code> handler for message type</li>\n</ul>\n</li>\n</ul>\n<h1>Getting Started</h1><h2>Install package and add model to ubConfig.json</h2><p>Install npm packages:</p>\n<pre class=\"prettyprint source lang-sh\"><code>npm install @unitybase/messaging</code></pre><p>Add <code>@unitybase/messaging</code> as a UnityBase model into <code>ubConfig.json</code>:</p>\n<pre class=\"prettyprint source lang-json\"><code>{\n  &quot;application&quot;: {\n    &quot;domain&quot;: {\n      &quot;models&quot;: [\n        {&quot;path&quot;: &quot;./node_modules/@unitybase/messaging&quot;}\n      ]\n    }\n  }\n}</code></pre><p>After that, make sure to execute <code>ub-migrate</code> at least once, so that roles would be created and give access to\nappropriate users on UnityBase HTTP endpoint provided by this model.</p>\n<h2>Add some server-to-client notification code</h2><p>Add the following code somewhere to your application:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const {notifyUser} = require('@unitybase/messaging/notification')\n\n// Send a message to a user, who's profile was updated\nuba_user.on('update:before', ctx => {\n  notifyUser(\n    ctx.mParams.execParams.ID,\n     {\n       userID: ctx.mParams.execParams.ID,\n       operation: 'update'\n     },\n     'profile.updated'\n    )\n})</code></pre><p>This shall send a notification message from server to user, every time, user's profile updated.\nMessage will be actually delivered only if the user currently logged in.  It won't be stored.\nSo, server to client notifications are not to reliably deliver messages to user, but to make interaction between server\nand currently logged in user.</p>\n<p>Make sure the code above is located in a javascript file, which is loaded on server start,\n<code>require</code> this file in <code>index.js</code>, if needed. </p>\n<h2>Add some reaction on message on a client</h2><p>Add the following code somewhere in your client-side code, make sure the file is actually run.\nFor example, you may put this code in <code>initModel.js</code> to guarantee that.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>UB.messaging.ClientNotifier.on('message', m => alert(JSON.stringify(m)))</code></pre><p>This will alert with any incoming message from server.</p>\n<h2>Configure interaction with rabbitMQ in ubConfig.json</h2><p>Before the whole example work, we need to set up additional services. \nApart from RabbitMQ itself, the following services needed:</p>\n<ul>\n<li>JWT issuer, to make request for JWT issuing</li>\n<li>AMQP to UB Gateway, to make requests for sending messages:<ul>\n<li><code>@unitybase/messaging</code> does not rely on AMQP client compiled into UnityBase binary code, but it uses an external\nservice to send messages.</li>\n</ul>\n</li>\n</ul>\n<p>URLs to both services MUST be set up in <code>customSettings</code> section of the configuration file, for this &quot;Getting Started&quot;\nguide, services are configured to localhost:</p>\n<pre class=\"prettyprint source lang-json\"><code>{\n  &quot;uiSettings&quot;: {\n    &quot;adminUI&quot;: {\n      &quot;amqpNotificationUrl&quot;: &quot;ws://localhost:15674/ws&quot;\n    }\n  },\n\n  &quot;application&quot;: {\n    &quot;customSettings&quot;: {\n      &quot;messaging&quot;: {\n        &quot;transport&quot;: &quot;rabbitMQ:router-service&quot;\n      },\n\n      &quot;rabbitMQ&quot;: {\n        &quot;vhost&quot;: &quot;/&quot;,\n        &quot;routerUrl&quot;: &quot;http://localhost:8081&quot;,\n        &quot;jwtIssuerUrl&quot;: &quot;http://localhost:8082&quot;,\n        &quot;notifyExchange&quot;: &quot;user-notify&quot;\n      }\n    }\n  }\n}</code></pre><p><code>uiSettings.adminUI.amqpNotificationUrl</code> is needed so that client knows where to connect to.</p>\n<p>Now, UnityBase application is ready to run, start it.</p>\n<h2>Run a docker composition</h2><p>This package contains an example of how to configure services for a developer environment using <a href=\"https://docs.docker.com/compose/overview/\">Docker Composition</a>.\nMake sure you have installed Docker for your operating system.</p>\n<p>Copy content of https://gitlab.intecracy.com/unitybase/bpm/tree/master/packages/messaging/doc/examples/messaging_dev_services\ninto your project, and in context of that directory run the following command:</p>\n<pre class=\"prettyprint source lang-sh\"><code>docker-compose up --build</code></pre><p>It assumes your already have up and running UnityBase on local port 8881, so if you have not started it yet, start it.</p>\n<h2>Testing it</h2><p>Log into the test application.</p>\n<p>Try to update the current user profile, for example, the admin user.  If everything was done right, you will see\na notification alert message.</p>\n<p>If you experience any problems with it, the package contains a working example with this example:\nhttps://gitlab.intecracy.com/unitybase/bpm/tree/master/packages/messaging/doc/examples/ub-app</p>\n<h1>Using UnityBase Messaging</h1><h2>RabbitMQ configuration</h2><p>RabbitMQ MUST be configured to allow UnityBase issued JWT as a user password.\nSee documentation for <a href=\"https://gitlab.intecracy.com/rumata/rabbitmq-jwt-auth\">rabbitmq-jwt-auth project</a>\non how to do that.\nMake sure that shared secret for <code>rabbitmq-jwt-auth</code> service matches the secret used for <code>jwt-issuer</code> service, as well\nas other parameters: <code>issuer</code>, <code>audience</code>, <code>subject</code>.</p>\n<p>Create an exchange for server and client communication:</p>\n<ul>\n<li>Exchange name: default is <code>user-notify</code></li>\n<li>Exchange type: <code>topic</code> </li>\n</ul>\n<h1>Server-side API</h1><h2>Send message</h2><p>Send a message to a particular user or group or role or staff unit:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const {notifyUser} = require('@unitybase/messaging/notification')\n\n// Some userID...\nlet userID = 10\n\n// Send a message to a user about new task assigned\nnotifyUser(userID, 'bpm.task.assigned', {\n  taskID,\n  dueDate: new Date()  \n})\n\n// Some orgID...\nlet orgID = 123456\n\n// Send a message to all organization users about new CEO\nnotifyUser(orgID, 'message', {\n  text: 'Our organization has a new CEO!'\n})</code></pre><p>Send message to every user:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const {broadcast} = require('@unitybase/messaging/notification')\n\n// ...\n\n// Broadcast message to all users about maintenance\nbroadcast('maintenance', {\n  severity: 'high',\n  message: 'Application will be updated to a new version next weekend'\n})</code></pre><h2>Receive message</h2><p>...</p>\n<h2>Advanced server-side scenarios</h2><h3>Support additional subject IDs in token</h3><p>Subscribe to <code>messaging:notifications:jwt_subject_ids</code> event to push additional IDs to subject IDs of the user, so that when\nnotification is sent using that ID, the current user will be notified. </p>\n<pre class=\"prettyprint source lang-javascript\"><code>const {Session} = require('@unitybase/ub')\n\nSession.on('messaging:notifications:jwt_subject_ids', (/** @type {number[]} */ admSubjIDs) => {\n  // TODO: set myID\n  /** @type {number} */\n  let myID = 1234\n\n  admSubjIDs.push(myID)\n})</code></pre><h3>Adjust rules in JWT payload</h3><p>Subscribe to customize rules, which will be put into JWT used to RabbitMQ user authorization:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const {Session} = require('@unitybase/ub')\n\nSession.on('messaging:notifications:jwt_payload', /** @type {JwtPayload} */ data => {\n  data.rules.push('read:vhost2/queue1234')\n})</code></pre><p>See documentation for <a href=\"https://gitlab.intecracy.com/rumata/rabbitmq-jwt-auth\">rabbitmq-jwt-auth project</a>\non format of <code>data</code> object.</p>\n<h3>Customize client-side configuration</h3><p>Client-side utility gets information about what to listen from server.  It is possible to customize that info\nfrom server side:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>Session.on('messaging:notifications:client_config', clientConfig => {\n  /** @type {string} */\n  let myTopic = '/exchange1/topic1'\n\n  clientConfig.topics.push(myTopic)\n})</code></pre><h1>Q&amp;A</h1><h2>What is the difference between <code>@unitybase/messaging</code> and <code>@unitybase/amqp</code> models</h2><p><code>@unitybase/amqp*</code> packages rely on built-in AMQP UnityBase client.  But its implementation is not complete and its\ncompletion is complication, because of conflict of UnityBase synchronous model and AMQP asynchronous nature.\nIt is very hard to implement receiving messages, and therefore, even such things as getting error messages from\nserver.</p>\n<p>Used AMQP client to send messages</p>\n<ul>\n<li><code>@unitybase/messaging</code>: External service, usually deployed as a docker container.</li>\n<li><code>@unitybase/amqp*</code>: Built-in AMQP client, the <code>@unitybase/amqp</code> packet is the binding for it.\nAbility to receive messages:</li>\n<li><code>@unitybase/messaging</code>: Yes, using external service.</li>\n<li><code>@unitybase/messaging</code>: No, need to do custom development.\nRabbitMQ authentication and authorization:</li>\n<li><code>@unitybase/messaging</code>: Yes, using JWT, secure.</li>\n<li><code>@unitybase/amqp*</code>: Partially, hardcoded logic, non-secure login/password.\nRabbitMQ authentication and authorization:</li>\n<li><code>@unitybase/messaging</code>: Yes, using JWT, secure. </li>\n<li><code>@unitybase/amqp*</code>: Partially, hardcoded logic, non-secure login/password.\nRabbitMQ authentication and authorization:</li>\n<li><code>@unitybase/messaging</code>: Yes, using JWT, secure.</li>\n<li><code>@unitybase/amqp*</code>: Partially, hardcoded logic, non-secure login/password.\nAbility to send message to different subjects:</li>\n<li><code>@unitybase/messaging</code>: Yes, send to role, group, department, etc.</li>\n<li><code>@unitybase/amqp*</code>: No, send to a user or broadcast.\nExchange name:</li>\n<li><code>@unitybase/messaging</code>: <code>user-notify</code></li>\n<li><code>@unitybase/amqp*</code>: <code>ub-amqp-notify</code>\nBroadcast topic name:</li>\n<li><code>@unitybase/messaging</code>: <code>broadcast.&lt;event&gt;</code></li>\n<li><code>@unitybase/amqp*</code>: <code>&lt;name&gt;.bcst.bcst</code>\nUser/subject topic name:</li>\n<li><code>@unitybase/messaging</code>: <code>&lt;subjectID&gt;.&lt;event&gt;</code></li>\n<li><code>@unitybase/amqp*</code>: <code>&lt;name&gt;.U&lt;user&gt;.0</code></li>\n</ul>\n<p>Migration from <code>@unitybase/amqp</code>:</p>\n<ul>\n<li>Change used npm modules:<pre class=\"prettyprint source lang-sh\"><code>npm uninstall @unitybase/amqp @unitybase/amqp-notify @unitybase/amqp-notify-pub\nnpm install @unitybase/messaging</code></pre></li>\n<li>Reconfigure exchange topic name from <code>ub-amqp-notify</code> to <code>user-notify</code>. </li>\n</ul>",
    "___id": "T000002R010362",
    "___s": true
  },
  {
    "comment": "/**\n   * Description\n   * @type {module:exchange}\n   */",
    "meta": {
      "range": [
        417,
        448
      ],
      "filename": "messaging.js",
      "lineno": 18,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging",
      "code": {
        "id": "astnode100098370",
        "name": "exchange",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "module:exchange"
      ]
    },
    "name": "exchange",
    "longname": "module:@unitybase/messaging.exchange",
    "kind": "member",
    "memberof": "module:@unitybase/messaging",
    "scope": "static",
    "___id": "T000002R010364",
    "___s": true
  },
  {
    "comment": "/**\n * @module exchange\n * @memberOf module:@unitybase/messaging\n */",
    "meta": {
      "filename": "index.js",
      "lineno": 4,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/exchange",
      "code": {}
    },
    "kind": "module",
    "name": "exchange",
    "memberof": "module:@unitybase/messaging",
    "scope": "static",
    "longname": "module:@unitybase/messaging.module:exchange",
    "___id": "T000002R010241",
    "___s": true
  },
  {
    "comment": "/**\n * Server part of server to client communication implementation.\n *\n * Please do not forget before use to:\n * - get up and running RabbitMQ\n * - create `user-notify` topic exchange\n * - get up and running `rabbitmq-ub-router` and `rabbitmq-jwt-issuer` services\n * - configure `application.customSettings.rabbitMQ` section\n * - configure `uiSettings.adminUI.amqpNotificationUrl`\n *\n * @module notification\n * @memberOf module:@unitybase/messaging\n */",
    "meta": {
      "filename": "index.js",
      "lineno": 3,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "description": "<p>Server part of server to client communication implementation.</p>\n<p>Please do not forget before use to:</p>\n<ul>\n<li>get up and running RabbitMQ</li>\n<li>create <code>user-notify</code> topic exchange</li>\n<li>get up and running <code>rabbitmq-ub-router</code> and <code>rabbitmq-jwt-issuer</code> services</li>\n<li>configure <code>application.customSettings.rabbitMQ</code> section</li>\n<li>configure <code>uiSettings.adminUI.amqpNotificationUrl</code></li>\n</ul>",
    "kind": "module",
    "name": "notification",
    "memberof": "module:@unitybase/messaging",
    "scope": "static",
    "longname": "module:@unitybase/messaging.module:notification",
    "___id": "T000002R010260",
    "___s": true
  },
  {
    "comment": "/**\n   * Sending message to all existing clients\n   * @method broadcast\n   * @param {string} topic\n   *   Message topic.\n   *   name of the notification source\n   *   this should be unique name to be able for client to distinguish the source of notification message\n   * @param {object} message\n   *   the message to send\n   *   any value is converted to JSON string before sending\n   * @return {number} Event ID\n   */",
    "meta": {
      "filename": "index.js",
      "lineno": 18,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "description": "Sending message to all existing clients",
    "kind": "function",
    "name": "broadcast",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Message topic.\n  name of the notification source\n  this should be unique name to be able for client to distinguish the source of notification message",
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the message to send\n  any value is converted to JSON string before sending",
        "name": "message"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Event ID</p>"
      }
    ],
    "longname": "module:@unitybase/messaging.module:notification~broadcast",
    "scope": "inner",
    "memberof": "module:@unitybase/messaging.module:notification",
    "___id": "T000002R010262",
    "___s": true
  },
  {
    "comment": "/**\n   * Send a notification about change to client\n   * @method entityEvent\n   * @param {string} entityName\n   * @param {number} instanceID\n   * @param {object} message\n   * @param {UBNotifyEntityEventOptions} [options]\n   * @return {number}\n   */",
    "meta": {
      "filename": "index.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "description": "Send a notification about change to client",
    "kind": "function",
    "name": "entityEvent",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "instanceID"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "message"
      },
      {
        "type": {
          "names": [
            "UBNotifyEntityEventOptions"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "longname": "module:@unitybase/messaging.module:notification~entityEvent",
    "scope": "inner",
    "memberof": "module:@unitybase/messaging.module:notification",
    "___id": "T000002R010266",
    "___s": true
  },
  {
    "comment": "/**\n   * Send message to particular subject.\n   * @method notifyUser\n   * @param {number|number[]|undefined} subjectIDs\n   *   If not specified, will be passed to `Session.uData.userID`.\n   *   subjectID of the message recipient: UnityBase `userID` OR `roleID` or `groupID`\n   *   If ORG model is used, could also be `staffUnitID` or `departmentID` or `organizationID`,\n   * @param {object} message\n   *   The event data object to send, value is converted to JSON string before sending\n   * @param {string} [subTopic]\n   *   name of the notification source\n   *   this should be unique name to be able for client to distinguish the source of notification message\n   * @return {number} Event ID\n   */",
    "meta": {
      "filename": "index.js",
      "lineno": 32,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "description": "Send message to particular subject.",
    "kind": "function",
    "name": "notifyUser",
    "params": [
      {
        "type": {
          "names": [
            "number",
            "Array.<number>",
            "undefined"
          ]
        },
        "description": "If not specified, will be passed to <code>Session.uData.userID</code>.\n  subjectID of the message recipient: UnityBase <code>userID</code> OR <code>roleID</code> or <code>groupID</code>\n  If ORG model is used, could also be <code>staffUnitID</code> or <code>departmentID</code> or <code>organizationID</code>,",
        "name": "subjectIDs"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The event data object to send, value is converted to JSON string before sending",
        "name": "message"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "name of the notification source\n  this should be unique name to be able for client to distinguish the source of notification message",
        "name": "subTopic"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Event ID</p>"
      }
    ],
    "longname": "module:@unitybase/messaging.module:notification~notifyUser",
    "scope": "inner",
    "memberof": "module:@unitybase/messaging.module:notification",
    "___id": "T000002R010264",
    "___s": true
  },
  {
    "comment": "/**\n   * Description\n   * @type {module:notification}\n   */",
    "meta": {
      "range": [
        514,
        554
      ],
      "filename": "messaging.js",
      "lineno": 23,
      "columnno": 2,
      "path": "/home/andrey/dev/bpm/packages/messaging",
      "code": {
        "id": "astnode100098374",
        "name": "notifications",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "module:notification"
      ]
    },
    "name": "notifications",
    "longname": "module:@unitybase/messaging.notifications",
    "kind": "member",
    "memberof": "module:@unitybase/messaging",
    "scope": "static",
    "___id": "T000002R010365",
    "___s": true
  },
  {
    "comment": "/**\n * OpenIDConnect client for UnityBase\n *\n      const openID = require('@unitybase/openid-connect')\n      let oIdEndPoint = openID.registerEndpoint('openIDConnect')\n      oIdEndPoint.registerProvider('Google', {\n        authUrl: 'https://accounts.google.com/o/oauth2/auth',\n        tokenUrl: 'https://accounts.google.com/o/oauth2/token',\n        userInfoUrl: 'https://www.googleapis.com/oauth2/v1/userinfo',\n        userInfoHTTPMethod: 'GET',\n        scope: 'openid',\n        nonce: '123',\n        response_type: 'code',\n        client_id: '350085411136-lpj0qvr87ce0r0ae0a3imcm25joj2t2o.apps.googleusercontent.com',\n        client_secret: 'dF4qmUxhHoBAj-E1R8YZUCqA',\n        getOnFinishAction: function (response) {\n          return 'opener.UB.view.LoginWindow.onFinishOpenIDAuth(' + JSON.stringify(response) + '); close();'\n        },\n        getUserID: function(userInfo) {\n          let inst = UB.Repository('uba_user').attrs(['ID'])\n             .where('[name]', '=', userInfo.id).select()\n          return inst.eof ? null : inst.get('ID')\n        }\n      })\n *\n * @module @unitybase/openid-connect\n * @tutorial security_openidconnect\n */",
    "meta": {
      "filename": "openIDConnect.js",
      "lineno": 3,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/openid-connect",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/openid-connect",
    "tutorials": [
      "security_openidconnect"
    ],
    "longname": "module:@unitybase/openid-connect",
    "readme": "<h1>OpenID Connect authorization</h1><p>This UnityBase model implements authorization over OpenID Connect.\nFor adminUI &quot;OpenIDConnect&quot; should be added to the &quot;authenticationMethods&quot;.</p>\n<p>Configuration:</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;security&quot;: {\n  &quot;authenticationMethods&quot;: [&quot;UB&quot;, &quot;OpenIDConnect&quot;]\n},\n...\n&quot;application&quot;: {\n    ...,\n    &quot;customSettings&quot;: {\n        ...,\n        &quot;externalServerUrl&quot;: External url address. You should set this address if server work over proxy server\n    }\n}\n</code></pre><p>Usage:</p>\n<pre class=\"prettyprint source lang-js\"><code>const openID = require('@unitybase/openid-connect')\nlet oIdEndPoint = openID.registerEndpoint('openIDConnect')\noIdEndPoint.registerProvider('Google', {\n  authUrl: 'https://accounts.google.com/o/oauth2/auth',\n  tokenUrl: 'https://accounts.google.com/o/oauth2/token',\n  userInfoUrl: 'https://www.googleapis.com/oauth2/v1/userinfo',\n  userInfoHTTPMethod: 'GET',\n  scope: 'openid',\n  nonce: '123',\n  response_type: 'code',\n  client_id: '350085411136-lpj0qvr87ce0r0ae0a3imcm25joj2t2o.apps.googleusercontent.com',\n  client_secret: 'dF4qmUxhHoBAj-E1R8YZUCqA',\n  getOnFinishAction: function (response) {\n    return 'opener.UB.view.LoginWindow.onFinishOpenIDAuth(' + JSON.stringify(response) + '); close();'\n  },\n  getUserID: function(userInfo) {\n    let inst = UB.Repository('uba_user').attrs(['ID'])\n       .where('[name]', '=', userInfo.id).select()\n    return inst.eof ? null : inst.get('ID')\n  }\n})\n</code></pre>",
    "___id": "T000002R007463",
    "___s": true
  },
  {
    "comment": "/**\n * OpenID endpoint implementation\n * If called as host:port[/app]/endpoint - return a list of registered openIDConnect providers,\n * If called as host:port[/app]/endpoint/provider without parameters - redirect to provider `authUrl`\n * If called as host:port[/app]/endpoint/provider with parameters `code` and `state` - call doProviderAuthHandshake method\n * If called as host:port[/app]/endpoint/provider with parameters `logout` - redirect to logout url\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n * @protected\n */",
    "meta": {
      "range": [
        5005,
        7067
      ],
      "filename": "openIDConnect.js",
      "lineno": 120,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/openid-connect",
      "code": {
        "id": "astnode100076582",
        "name": "openIDConnect",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "providerName": "module:@unitybase/openid-connect~openIDConnect~providerName",
        "url": "module:@unitybase/openid-connect~openIDConnect~url",
        "endpointUrl": "module:@unitybase/openid-connect~openIDConnect~endpointUrl",
        "endpointName": "module:@unitybase/openid-connect~openIDConnect~endpointName",
        "endpoint": "module:@unitybase/openid-connect~openIDConnect~endpoint",
        "provider": "module:@unitybase/openid-connect~openIDConnect~provider",
        "redirectUrl": "module:@unitybase/openid-connect~openIDConnect~redirectUrl",
        "paramStr": "module:@unitybase/openid-connect~openIDConnect~paramStr",
        "params": "module:@unitybase/openid-connect~params",
        "origin": "module:@unitybase/openid-connect~openIDConnect~origin",
        "headers": "module:@unitybase/openid-connect~openIDConnect~headers",
        "": null
      }
    },
    "description": "OpenID endpoint implementation\nIf called as host:port[/app]/endpoint - return a list of registered openIDConnect providers,\nIf called as host:port[/app]/endpoint/provider without parameters - redirect to provider <code>authUrl</code>\nIf called as host:port[/app]/endpoint/provider with parameters <code>code</code> and <code>state</code> - call doProviderAuthHandshake method\nIf called as host:port[/app]/endpoint/provider with parameters <code>logout</code> - redirect to logout url",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "access": "protected",
    "name": "openIDConnect",
    "longname": "module:@unitybase/openid-connect~openIDConnect",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/openid-connect",
    "___id": "T000002R007479",
    "___s": true
  },
  {
    "comment": "/**\n * OpenID endpoint. Able to register providers\n * @typedef {Object} openIDEndpoint\n * @propety {function} registerProvider\n */",
    "meta": {
      "filename": "openIDConnect.js",
      "lineno": 46,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/openid-connect",
      "code": {}
    },
    "description": "OpenID endpoint. Able to register providers",
    "kind": "typedef",
    "name": "openIDEndpoint",
    "type": {
      "names": [
        "Object"
      ]
    },
    "tags": [
      {
        "originalTitle": "propety",
        "title": "propety",
        "text": "{function} registerProvider",
        "value": "{function} registerProvider"
      }
    ],
    "longname": "module:@unitybase/openid-connect~openIDEndpoint",
    "scope": "inner",
    "memberof": "module:@unitybase/openid-connect",
    "___id": "T000002R007471",
    "___s": true
  },
  {
    "comment": "/**\n * Register openID connect endpoint\n * @method\n * @param {String} endpointName\n * @returns {openIDEndpoint} endpoint\n */",
    "meta": {
      "range": [
        1830,
        4463
      ],
      "filename": "openIDConnect.js",
      "lineno": 58,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/openid-connect",
      "code": {
        "id": "astnode100076500",
        "name": "registerOpenIDEndpoint",
        "type": "FunctionDeclaration",
        "paramnames": [
          "endpointName"
        ]
      },
      "vars": {
        "providers": "module:@unitybase/openid-connect~registerOpenIDEndpoint~providers",
        "endpoints[undefined]": "module:@unitybase/openid-connect~endpoints.undefined]",
        "": null
      }
    },
    "description": "Register openID connect endpoint",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "endpointName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "openIDEndpoint"
          ]
        },
        "description": "<p>endpoint</p>"
      }
    ],
    "name": "registerOpenIDEndpoint",
    "longname": "module:@unitybase/openid-connect~registerOpenIDEndpoint",
    "scope": "inner",
    "memberof": "module:@unitybase/openid-connect",
    "___id": "T000002R007472",
    "___s": true
  },
  {
    "comment": "/**\n * Organisation structure\n * @version 5.0.10\n * @module @unitybase/org\n */",
    "meta": {
      "filename": "_ORG_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/org",
    "longname": "module:@unitybase/org",
    "readme": "<h2>The model for managing the internal organization structure</h2><ul>\n<li>includes organizations, departments, staffs, positions, employees, professions</li>\n<li>can store hierarchical organization charts</li>\n<li>all entities are historical and support safe delete</li>\n</ul>",
    "___id": "T000002R009492",
    "___s": true
  },
  {
    "comment": "/**\n* Internal departments.\n * This dictionary contains list of departments. Each department links to org_unit by Unity mixin\n* @type {org_department_ns}\n*/",
    "meta": {
      "range": [
        2710,
        2750
      ],
      "filename": "_ORG_entities.js",
      "lineno": 140,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091131",
        "name": "org_department",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Internal departments.\nThis dictionary contains list of departments. Each department links to org_unit by Unity mixin",
    "type": {
      "names": [
        "org_department_ns"
      ]
    },
    "name": "org_department",
    "longname": "module:@unitybase/org~org_department",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009518",
    "___s": true
  },
  {
    "comment": "/**\n * Internal departments.\n * This dictionary contains list of departments. Each department links to org_unit by Unity mixin\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes unity\n */",
    "meta": {
      "range": [
        608,
        658
      ],
      "filename": "_ORG_entities.js",
      "lineno": 20,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091069",
        "name": "org_department_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Internal departments.\nThis dictionary contains list of departments. Each department links to org_unit by Unity mixin</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "unity"
    ],
    "name": "org_department_ns",
    "longname": "module:@unitybase/org~org_department_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009493",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        759,
        2546
      ],
      "filename": "_ORG_entities.js",
      "lineno": 22,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091074",
        "name": "org_department_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentID\":null,\"code\":\"\",\"name\":\"\",\"fullName\":\"\",\"description\":null,\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"depTypeID\":null,\"isClerical\":\"\",\"caption\":\"\",\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_department_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "static",
    "___id": "T000002R009494",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1826,
        1837
      ],
      "filename": "_ORG_entities.js",
      "lineno": 86,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091103",
        "name": "caption",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/org~org_department_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009507",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        944,
        952
      ],
      "filename": "_ORG_entities.js",
      "lineno": 36,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091083",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_department_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009497",
    "___s": true
  },
  {
    "comment": "/**\n  * Department type -> cdn_deptype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1688,
        1703
      ],
      "filename": "_ORG_entities.js",
      "lineno": 76,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091099",
        "name": "depTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department type -&gt; cdn_deptype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "depTypeID",
    "longname": "module:@unitybase/org~org_department_ns.attrs.depTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009505",
    "___s": true
  },
  {
    "comment": "/**\n  * Department description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1183,
        1200
      ],
      "filename": "_ORG_entities.js",
      "lineno": 51,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091089",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_department_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009500",
    "___s": true
  },
  {
    "comment": "/**\n  * Department full name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1111,
        1123
      ],
      "filename": "_ORG_entities.js",
      "lineno": 46,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091087",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Department full name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/org~org_department_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009499",
    "___s": true
  },
  {
    "comment": "/**\n  * Department full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1603,
        1620
      ],
      "filename": "_ORG_entities.js",
      "lineno": 71,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091097",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/org~org_department_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009504",
    "___s": true
  },
  {
    "comment": "/**\n  * Department full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1513,
        1530
      ],
      "filename": "_ORG_entities.js",
      "lineno": 66,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091095",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/org~org_department_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009503",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        818,
        823
      ],
      "filename": "_ORG_entities.js",
      "lineno": 26,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091079",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_department_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009495",
    "___s": true
  },
  {
    "comment": "/**\n  * Clerical unit mark\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1760,
        1781
      ],
      "filename": "_ORG_entities.js",
      "lineno": 81,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091101",
        "name": "isClerical",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Clerical unit mark",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isClerical",
    "longname": "module:@unitybase/org~org_department_ns.attrs.isClerical",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009506",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2108,
        2133
      ],
      "filename": "_ORG_entities.js",
      "lineno": 108,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091115",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009512",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2202,
        2218
      ],
      "filename": "_ORG_entities.js",
      "lineno": 113,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091118",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009513",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1870,
        1883
      ],
      "filename": "_ORG_entities.js",
      "lineno": 90,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091105",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009508",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1914,
        1937
      ],
      "filename": "_ORG_entities.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091107",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009509",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1968,
        1989
      ],
      "filename": "_ORG_entities.js",
      "lineno": 98,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091110",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009510",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2430,
        2455
      ],
      "filename": "_ORG_entities.js",
      "lineno": 128,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091125",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009516",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2524,
        2543
      ],
      "filename": "_ORG_entities.js",
      "lineno": 133,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091128",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009517",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2271,
        2296
      ],
      "filename": "_ORG_entities.js",
      "lineno": 118,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091120",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009514",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2365,
        2381
      ],
      "filename": "_ORG_entities.js",
      "lineno": 123,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091123",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009515",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2048,
        2059
      ],
      "filename": "_ORG_entities.js",
      "lineno": 103,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091113",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_department_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009511",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of department without the quotes and abbreviations\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1045,
        1053
      ],
      "filename": "_ORG_entities.js",
      "lineno": 41,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091085",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of department without the quotes and abbreviations",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/org~org_department_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009498",
    "___s": true
  },
  {
    "comment": "/**\n  * Department name without the quotes and abbreviations in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1425,
        1438
      ],
      "filename": "_ORG_entities.js",
      "lineno": 61,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091093",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department name without the quotes and abbreviations in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/org~org_department_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009502",
    "___s": true
  },
  {
    "comment": "/**\n  * Department name without the quotes and abbreviations in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1307,
        1320
      ],
      "filename": "_ORG_entities.js",
      "lineno": 56,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091091",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Department name without the quotes and abbreviations in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/org~org_department_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009501",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> org_unit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        879,
        893
      ],
      "filename": "_ORG_entities.js",
      "lineno": 31,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091081",
        "name": "parentID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent -&gt; org_unit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentID",
    "longname": "module:@unitybase/org~org_department_ns.attrs.parentID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns.attrs",
    "scope": "static",
    "___id": "T000002R009496",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_department_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010702",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_department_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010701",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_department_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010868",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_department_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010699",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_department_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010703",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_department_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010698",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_department_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_department_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010700",
    "___s": true
  },
  {
    "comment": "/**\n* Diagrams\n* @type {org_diagram_ns}\n*/",
    "meta": {
      "range": [
        3873,
        3907
      ],
      "filename": "_ORG_entities.js",
      "lineno": 212,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091173",
        "name": "org_diagram",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Diagrams",
    "type": {
      "names": [
        "org_diagram_ns"
      ]
    },
    "name": "org_diagram",
    "longname": "module:@unitybase/org~org_diagram",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009533",
    "___s": true
  },
  {
    "comment": "/**\n * Diagrams\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        2818,
        2865
      ],
      "filename": "_ORG_entities.js",
      "lineno": 146,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091135",
        "name": "org_diagram_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Diagrams</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "org_diagram_ns",
    "longname": "module:@unitybase/org~org_diagram_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009519",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2966,
        3823
      ],
      "filename": "_ORG_entities.js",
      "lineno": 148,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091140",
        "name": "org_diagram_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"orgunitID\":null,\"caption\":null,\"isdefault\":\"\",\"document\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "static",
    "___id": "T000002R009520",
    "___s": true
  },
  {
    "comment": "/**\n  * Name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3117,
        3130
      ],
      "filename": "_ORG_entities.js",
      "lineno": 161,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091149",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009523",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization chart\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3252,
        3266
      ],
      "filename": "_ORG_entities.js",
      "lineno": 171,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091153",
        "name": "document",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization chart",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "document",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.document",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009525",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3022,
        3027
      ],
      "filename": "_ORG_entities.js",
      "lineno": 152,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091145",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009521",
    "___s": true
  },
  {
    "comment": "/**\n  * Default\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        3176,
        3196
      ],
      "filename": "_ORG_entities.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091151",
        "name": "isdefault",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Default",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isdefault",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.isdefault",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009524",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3385,
        3410
      ],
      "filename": "_ORG_entities.js",
      "lineno": 181,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091157",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009527",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3479,
        3495
      ],
      "filename": "_ORG_entities.js",
      "lineno": 186,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091160",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009528",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3707,
        3732
      ],
      "filename": "_ORG_entities.js",
      "lineno": 201,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091167",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009531",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3801,
        3820
      ],
      "filename": "_ORG_entities.js",
      "lineno": 206,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091170",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009532",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3548,
        3573
      ],
      "filename": "_ORG_entities.js",
      "lineno": 191,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091162",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009529",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3642,
        3658
      ],
      "filename": "_ORG_entities.js",
      "lineno": 196,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091165",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009530",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3325,
        3336
      ],
      "filename": "_ORG_entities.js",
      "lineno": 176,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091155",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009526",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3060,
        3075
      ],
      "filename": "_ORG_entities.js",
      "lineno": 156,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091147",
        "name": "orgunitID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "orgunitID",
    "longname": "module:@unitybase/org~org_diagram_ns.attrs.orgunitID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009522",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_diagram_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010708",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_diagram_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010707",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_diagram_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010869",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_diagram_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010705",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_diagram_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010704",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_diagram_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_diagram_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010706",
    "___s": true
  },
  {
    "comment": "/**\n* List of employees of internal organizations.\n * This dictionary contains list of departments.  Employee is assigned to staff units in org_employeeonstaff entity\n* @type {org_employee_ns}\n*/",
    "meta": {
      "range": [
        7297,
        7333
      ],
      "filename": "_ORG_entities.js",
      "lineno": 405,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091265",
        "name": "org_employee",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of employees of internal organizations.\nThis dictionary contains list of departments.  Employee is assigned to staff units in org_employeeonstaff entity",
    "type": {
      "names": [
        "org_employee_ns"
      ]
    },
    "name": "org_employee",
    "longname": "module:@unitybase/org~org_employee",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009572",
    "___s": true
  },
  {
    "comment": "/**\n * List of employees of internal organizations.\n * This dictionary contains list of departments.  Employee is assigned to staff units in org_employeeonstaff entity\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        4149,
        4197
      ],
      "filename": "_ORG_entities.js",
      "lineno": 220,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091177",
        "name": "org_employee_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of employees of internal organizations.\nThis dictionary contains list of departments.  Employee is assigned to staff units in org_employeeonstaff entity</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "org_employee_ns",
    "longname": "module:@unitybase/org~org_employee_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009534",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        4298,
        7094
      ],
      "filename": "_ORG_entities.js",
      "lineno": 222,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091182",
        "name": "org_employee_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"userID\":null,\"lastName\":\"\",\"firstName\":\"\",\"middleName\":null,\"birthDate\":null,\"description\":null,\"sexType\":\"\",\"suffix\":null,\"shortFIO\":null,\"fullFIO\":\"\",\"apply\":null,\"lastNameGen\":null,\"lastNameDat\":null,\"firstNameGen\":null,\"firstNameDat\":null,\"middleNameGen\":null,\"middleNameDat\":null,\"shortFIOGen\":null,\"shortFIODat\":null,\"fullFIOGen\":null,\"fullFIODat\":null,\"applyGen\":null,\"applyDat\":null,\"facsimile\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_employee_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "static",
    "___id": "T000002R009535",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5185,
        5196
      ],
      "filename": "_ORG_entities.js",
      "lineno": 286,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091211",
        "name": "apply",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "apply",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.apply",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009548",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6294,
        6308
      ],
      "filename": "_ORG_entities.js",
      "lineno": 346,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091235",
        "name": "applyDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyDat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.applyDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009560",
    "___s": true
  },
  {
    "comment": "/**\n  * Describes how to treat to this person in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6190,
        6204
      ],
      "filename": "_ORG_entities.js",
      "lineno": 341,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091233",
        "name": "applyGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Describes how to treat to this person in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "applyGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.applyGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009559",
    "___s": true
  },
  {
    "comment": "/**\n  * Date of birth\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4762,
        4777
      ],
      "filename": "_ORG_entities.js",
      "lineno": 256,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091199",
        "name": "birthDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Date of birth",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "birthDate",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.birthDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009542",
    "___s": true
  },
  {
    "comment": "/**\n  * Employees internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4421,
        4429
      ],
      "filename": "_ORG_entities.js",
      "lineno": 231,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091189",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employees internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009537",
    "___s": true
  },
  {
    "comment": "/**\n  * Comment on employee\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4834,
        4851
      ],
      "filename": "_ORG_entities.js",
      "lineno": 261,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091201",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Comment on employee",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009543",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee signature image\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6370,
        6385
      ],
      "filename": "_ORG_entities.js",
      "lineno": 351,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091237",
        "name": "facsimile",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee signature image",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "facsimile",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.facsimile",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009561",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4626,
        4639
      ],
      "filename": "_ORG_entities.js",
      "lineno": 246,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091195",
        "name": "firstName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee first name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstName",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.firstName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009540",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5538,
        5556
      ],
      "filename": "_ORG_entities.js",
      "lineno": 306,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091219",
        "name": "firstNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee first name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameDat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.firstNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009552",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee first name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5448,
        5466
      ],
      "filename": "_ORG_entities.js",
      "lineno": 301,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091217",
        "name": "firstNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee first name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstNameGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.firstNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009551",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: Smith Jay Key\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5099,
        5110
      ],
      "filename": "_ORG_entities.js",
      "lineno": 281,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091209",
        "name": "fullFIO",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Example: Smith Jay Key",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIO",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.fullFIO",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009547",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6082,
        6098
      ],
      "filename": "_ORG_entities.js",
      "lineno": 336,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091231",
        "name": "fullFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIODat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.fullFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009558",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5995,
        6011
      ],
      "filename": "_ORG_entities.js",
      "lineno": 331,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091229",
        "name": "fullFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullFIOGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.fullFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009557",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4355,
        4360
      ],
      "filename": "_ORG_entities.js",
      "lineno": 226,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091187",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009536",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4557,
        4569
      ],
      "filename": "_ORG_entities.js",
      "lineno": 241,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091193",
        "name": "lastName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee last name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastName",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.lastName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009539",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5357,
        5374
      ],
      "filename": "_ORG_entities.js",
      "lineno": 296,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091215",
        "name": "lastNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee last name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameDat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.lastNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009550",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee last name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5269,
        5286
      ],
      "filename": "_ORG_entities.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091213",
        "name": "lastNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee last name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastNameGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.lastNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009549",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6656,
        6681
      ],
      "filename": "_ORG_entities.js",
      "lineno": 373,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091249",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009566",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6750,
        6766
      ],
      "filename": "_ORG_entities.js",
      "lineno": 378,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091252",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009567",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6418,
        6431
      ],
      "filename": "_ORG_entities.js",
      "lineno": 355,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091239",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009562",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6462,
        6485
      ],
      "filename": "_ORG_entities.js",
      "lineno": 359,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091241",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009563",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6516,
        6537
      ],
      "filename": "_ORG_entities.js",
      "lineno": 363,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091244",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009564",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6978,
        7003
      ],
      "filename": "_ORG_entities.js",
      "lineno": 393,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091259",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009570",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7072,
        7091
      ],
      "filename": "_ORG_entities.js",
      "lineno": 398,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091262",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009571",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6819,
        6844
      ],
      "filename": "_ORG_entities.js",
      "lineno": 383,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091254",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009568",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6913,
        6929
      ],
      "filename": "_ORG_entities.js",
      "lineno": 388,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091257",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009569",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6596,
        6607
      ],
      "filename": "_ORG_entities.js",
      "lineno": 368,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091247",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009565",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4697,
        4713
      ],
      "filename": "_ORG_entities.js",
      "lineno": 251,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091197",
        "name": "middleName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleName",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.middleName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009541",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5723,
        5742
      ],
      "filename": "_ORG_entities.js",
      "lineno": 316,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091223",
        "name": "middleNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameDat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.middleNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009554",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee middle name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5631,
        5650
      ],
      "filename": "_ORG_entities.js",
      "lineno": 311,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091221",
        "name": "middleNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee middle name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "middleNameGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.middleNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009553",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee sex\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4901,
        4912
      ],
      "filename": "_ORG_entities.js",
      "lineno": 266,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091203",
        "name": "sexType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee sex",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "sexType",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.sexType",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009544",
    "___s": true
  },
  {
    "comment": "/**\n  * Example: Smith J.K.\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5025,
        5039
      ],
      "filename": "_ORG_entities.js",
      "lineno": 276,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091207",
        "name": "shortFIO",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Example: Smith J.K.",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIO",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.shortFIO",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009546",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee short name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5905,
        5922
      ],
      "filename": "_ORG_entities.js",
      "lineno": 326,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091227",
        "name": "shortFIODat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee short name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIODat",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.shortFIODat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009556",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee short name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5816,
        5833
      ],
      "filename": "_ORG_entities.js",
      "lineno": 321,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091225",
        "name": "shortFIOGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Employee short name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortFIOGen",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.shortFIOGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009555",
    "___s": true
  },
  {
    "comment": "/**\n  * Suffix\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4956,
        4968
      ],
      "filename": "_ORG_entities.js",
      "lineno": 271,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091205",
        "name": "suffix",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Suffix",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "suffix",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.suffix",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009545",
    "___s": true
  },
  {
    "comment": "/**\n  * User login -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4489,
        4501
      ],
      "filename": "_ORG_entities.js",
      "lineno": 236,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091191",
        "name": "userID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User login -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/org~org_employee_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns.attrs",
    "scope": "static",
    "___id": "T000002R009538",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_employee_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010713",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_employee_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010712",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_employee_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010870",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_employee_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010710",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_employee_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010714",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_employee_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010709",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_employee_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employee_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010711",
    "___s": true
  },
  {
    "comment": "/**\n* List of internal organization assignments.\n * Развязочная сущность, в которой указывается какой работник на какой штатной единице работает (назначение). Так же есть тип назначения (временное, постоянное, полставки и т.д.)\n* @type {org_employeeonstaff_ns}\n*/",
    "meta": {
      "range": [
        9290,
        9340
      ],
      "filename": "_ORG_entities.js",
      "lineno": 503,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091319",
        "name": "org_employeeonstaff",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of internal organization assignments.\nРазвязочная сущность, в которой указывается какой работник на какой штатной единице работает (назначение). Так же есть тип назначения (временное, постоянное, полставки и т.д.)",
    "type": {
      "names": [
        "org_employeeonstaff_ns"
      ]
    },
    "name": "org_employeeonstaff",
    "longname": "module:@unitybase/org~org_employeeonstaff",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009592",
    "___s": true
  },
  {
    "comment": "/**\n * List of internal organization assignments.\n * Развязочная сущность, в которой указывается какой работник на какой штатной единице работает (назначение). Так же есть тип назначения (временное, постоянное, полставки и т.д.)\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n */",
    "meta": {
      "range": [
        7636,
        7691
      ],
      "filename": "_ORG_entities.js",
      "lineno": 413,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091269",
        "name": "org_employeeonstaff_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of internal organization assignments.\nРазвязочная сущность, в которой указывается какой работник на какой штатной единице работает (назначение). Так же есть тип назначения (временное, постоянное, полставки и т.д.)</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory"
    ],
    "name": "org_employeeonstaff_ns",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009573",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        7792,
        9019
      ],
      "filename": "_ORG_entities.js",
      "lineno": 415,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091274",
        "name": "org_employeeonstaff_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"tabNo\":\"\",\"employeeID\":0,\"staffUnitID\":0,\"employeeOnStaffType\":\"\",\"description\":null,\"caption\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "static",
    "___id": "T000002R009574",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8297,
        8310
      ],
      "filename": "_ORG_entities.js",
      "lineno": 449,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091291",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009581",
    "___s": true
  },
  {
    "comment": "/**\n  * Assignment description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8235,
        8252
      ],
      "filename": "_ORG_entities.js",
      "lineno": 444,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091289",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Assignment description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009580",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee -> org_employee\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7985,
        7998
      ],
      "filename": "_ORG_entities.js",
      "lineno": 429,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091283",
        "name": "employeeID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Employee -&gt; org_employee",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "employeeID",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.employeeID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009577",
    "___s": true
  },
  {
    "comment": "/**\n  * Assignment type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8152,
        8175
      ],
      "filename": "_ORG_entities.js",
      "lineno": 439,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091287",
        "name": "employeeOnStaffType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Assignment type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "employeeOnStaffType",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.employeeOnStaffType",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009579",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7856,
        7861
      ],
      "filename": "_ORG_entities.js",
      "lineno": 419,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091279",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009575",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8581,
        8606
      ],
      "filename": "_ORG_entities.js",
      "lineno": 471,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091303",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009586",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8675,
        8691
      ],
      "filename": "_ORG_entities.js",
      "lineno": 476,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091306",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009587",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8343,
        8356
      ],
      "filename": "_ORG_entities.js",
      "lineno": 453,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091293",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009582",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8387,
        8410
      ],
      "filename": "_ORG_entities.js",
      "lineno": 457,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091295",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009583",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8441,
        8462
      ],
      "filename": "_ORG_entities.js",
      "lineno": 461,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091298",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009584",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8903,
        8928
      ],
      "filename": "_ORG_entities.js",
      "lineno": 491,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091313",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009590",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8997,
        9016
      ],
      "filename": "_ORG_entities.js",
      "lineno": 496,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091316",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009591",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8744,
        8769
      ],
      "filename": "_ORG_entities.js",
      "lineno": 481,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091308",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009588",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8838,
        8854
      ],
      "filename": "_ORG_entities.js",
      "lineno": 486,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091311",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009589",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8521,
        8532
      ],
      "filename": "_ORG_entities.js",
      "lineno": 466,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091301",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009585",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal organization staff unit -> org_staffunit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8085,
        8099
      ],
      "filename": "_ORG_entities.js",
      "lineno": 434,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091285",
        "name": "staffUnitID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Internal organization staff unit -&gt; org_staffunit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "staffUnitID",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.staffUnitID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009578",
    "___s": true
  },
  {
    "comment": "/**\n  * Employee number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7914,
        7923
      ],
      "filename": "_ORG_entities.js",
      "lineno": 424,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091281",
        "name": "tabNo",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Employee number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "tabNo",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns.attrs.tabNo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns.attrs",
    "scope": "static",
    "___id": "T000002R009576",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010719",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010718",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010871",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010716",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010720",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010715",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_employeeonstaff_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010717",
    "___s": true
  },
  {
    "comment": "/**\n* Assignment with pending date.\n * Entity which contains links to assignments with pending date\n* @type {org_employeeonstaff_pending_ns}\n*/",
    "meta": {
      "range": [
        10512,
        10578
      ],
      "filename": "_ORG_entities.js",
      "lineno": 563,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091355",
        "name": "org_employeeonstaff_pending",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Assignment with pending date.\nEntity which contains links to assignments with pending date",
    "type": {
      "names": [
        "org_employeeonstaff_pending_ns"
      ]
    },
    "name": "org_employeeonstaff_pending",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009604",
    "___s": true
  },
  {
    "comment": "/**\n * Assignment with pending date.\n * Entity which contains links to assignments with pending date\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        9493,
        9556
      ],
      "filename": "_ORG_entities.js",
      "lineno": 510,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091323",
        "name": "org_employeeonstaff_pending_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Assignment with pending date.\nEntity which contains links to assignments with pending date</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "org_employeeonstaff_pending_ns",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009593",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        9657,
        10361
      ],
      "filename": "_ORG_entities.js",
      "lineno": 512,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091328",
        "name": "org_employeeonstaff_pending_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"emponstaffID\":0,\"startDate\":\"\",\"endDate\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "static",
    "___id": "T000002R009594",
    "___s": true
  },
  {
    "comment": "/**\n  * Assignment -> org_employeeonstaff\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9805,
        9820
      ],
      "filename": "_ORG_entities.js",
      "lineno": 521,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091335",
        "name": "emponstaffID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Assignment -&gt; org_employeeonstaff",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "emponstaffID",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.emponstaffID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009596",
    "___s": true
  },
  {
    "comment": "/**\n  * Assignment end date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9953,
        9966
      ],
      "filename": "_ORG_entities.js",
      "lineno": 531,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091340",
        "name": "endDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Assignment end date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "endDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.endDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009598",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9729,
        9734
      ],
      "filename": "_ORG_entities.js",
      "lineno": 516,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091333",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009595",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10085,
        10110
      ],
      "filename": "_ORG_entities.js",
      "lineno": 541,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091344",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009600",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10179,
        10195
      ],
      "filename": "_ORG_entities.js",
      "lineno": 546,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091347",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009601",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10248,
        10273
      ],
      "filename": "_ORG_entities.js",
      "lineno": 551,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091349",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009602",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10342,
        10358
      ],
      "filename": "_ORG_entities.js",
      "lineno": 556,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091352",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009603",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10025,
        10036
      ],
      "filename": "_ORG_entities.js",
      "lineno": 536,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091342",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009599",
    "___s": true
  },
  {
    "comment": "/**\n  * Assignment start date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9877,
        9898
      ],
      "filename": "_ORG_entities.js",
      "lineno": 526,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091337",
        "name": "startDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Assignment start date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "startDate",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs.startDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns.attrs",
    "scope": "static",
    "___id": "T000002R009597",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010725",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010724",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010872",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010722",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010721",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_employeeonstaff_pending_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_employeeonstaff_pending_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010723",
    "___s": true
  },
  {
    "comment": "/**\n* List of current accounts of internal organizations\n* @type {org_orgaccount_ns}\n*/",
    "meta": {
      "range": [
        12010,
        12050
      ],
      "filename": "_ORG_entities.js",
      "lineno": 646,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091401",
        "name": "org_orgaccount",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of current accounts of internal organizations",
    "type": {
      "names": [
        "org_orgaccount_ns"
      ]
    },
    "name": "org_orgaccount",
    "longname": "module:@unitybase/org~org_orgaccount",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009621",
    "___s": true
  },
  {
    "comment": "/**\n * List of current accounts of internal organizations\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        10688,
        10738
      ],
      "filename": "_ORG_entities.js",
      "lineno": 569,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091359",
        "name": "org_orgaccount_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of current accounts of internal organizations</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "org_orgaccount_ns",
    "longname": "module:@unitybase/org~org_orgaccount_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009605",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        10839,
        11915
      ],
      "filename": "_ORG_entities.js",
      "lineno": 571,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091364",
        "name": "org_orgaccount_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"organizationID\":0,\"currencyID\":0,\"bankID\":0,\"code\":\"\",\"acctype\":\"\",\"description\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "static",
    "___id": "T000002R009606",
    "___s": true
  },
  {
    "comment": "/**\n  * Type of the account\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11281,
        11292
      ],
      "filename": "_ORG_entities.js",
      "lineno": 600,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091379",
        "name": "acctype",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Type of the account",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "acctype",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.acctype",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009612",
    "___s": true
  },
  {
    "comment": "/**\n  * Bank of the account -> cdn_bank\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11133,
        11142
      ],
      "filename": "_ORG_entities.js",
      "lineno": 590,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091375",
        "name": "bankID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Bank of the account -&gt; cdn_bank",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "bankID",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.bankID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009610",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of the account (account number)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11216,
        11224
      ],
      "filename": "_ORG_entities.js",
      "lineno": 595,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091377",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of the account (account number)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009611",
    "___s": true
  },
  {
    "comment": "/**\n  * Currency of the account\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11051,
        11064
      ],
      "filename": "_ORG_entities.js",
      "lineno": 585,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091373",
        "name": "currencyID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Currency of the account",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "currencyID",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.currencyID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009609",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11341,
        11358
      ],
      "filename": "_ORG_entities.js",
      "lineno": 605,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091381",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009613",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10898,
        10903
      ],
      "filename": "_ORG_entities.js",
      "lineno": 575,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091369",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009607",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11477,
        11502
      ],
      "filename": "_ORG_entities.js",
      "lineno": 615,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091385",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009615",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11571,
        11587
      ],
      "filename": "_ORG_entities.js",
      "lineno": 620,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091388",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009616",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11799,
        11824
      ],
      "filename": "_ORG_entities.js",
      "lineno": 635,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091395",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009619",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11893,
        11912
      ],
      "filename": "_ORG_entities.js",
      "lineno": 640,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091398",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009620",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11640,
        11665
      ],
      "filename": "_ORG_entities.js",
      "lineno": 625,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091390",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009617",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11734,
        11750
      ],
      "filename": "_ORG_entities.js",
      "lineno": 630,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091393",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009618",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11417,
        11428
      ],
      "filename": "_ORG_entities.js",
      "lineno": 610,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091383",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009614",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization -> org_organization\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10973,
        10990
      ],
      "filename": "_ORG_entities.js",
      "lineno": 580,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091371",
        "name": "organizationID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Organization -&gt; org_organization",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "organizationID",
    "longname": "module:@unitybase/org~org_orgaccount_ns.attrs.organizationID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns.attrs",
    "scope": "static",
    "___id": "T000002R009608",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_orgaccount_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010730",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_orgaccount_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010729",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_orgaccount_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010873",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_orgaccount_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010727",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_orgaccount_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010726",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_orgaccount_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_orgaccount_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010728",
    "___s": true
  },
  {
    "comment": "/**\n*  List of internal organizations.\n * This dictionary contains list of internal organizations. Each organization links to org_unit by Unity mixin\n* @type {org_organization_ns}\n*/",
    "meta": {
      "range": [
        14819,
        14863
      ],
      "filename": "_ORG_entities.js",
      "lineno": 785,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091471",
        "name": "org_organization",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of internal organizations.\nThis dictionary contains list of internal organizations. Each organization links to org_unit by Unity mixin",
    "type": {
      "names": [
        "org_organization_ns"
      ]
    },
    "name": "org_organization",
    "longname": "module:@unitybase/org~org_organization",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009649",
    "___s": true
  },
  {
    "comment": "/**\n *  List of internal organizations.\n * This dictionary contains list of internal organizations. Each organization links to org_unit by Unity mixin\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes unity\n */",
    "meta": {
      "range": [
        12291,
        12343
      ],
      "filename": "_ORG_entities.js",
      "lineno": 655,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091405",
        "name": "org_organization_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of internal organizations.\nThis dictionary contains list of internal organizations. Each organization links to org_unit by Unity mixin</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "unity"
    ],
    "name": "org_organization_ns",
    "longname": "module:@unitybase/org~org_organization_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009622",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        12444,
        14629
      ],
      "filename": "_ORG_entities.js",
      "lineno": 657,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091410",
        "name": "org_organization_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentID\":null,\"code\":\"\",\"OKPOCode\":null,\"taxCode\":null,\"vatCode\":null,\"name\":\"\",\"fullName\":\"\",\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"description\":null,\"orgBusinessTypeID\":null,\"orgOwnershipTypeID\":null,\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_organization_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "static",
    "___id": "T000002R009623",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12644,
        12652
      ],
      "filename": "_ORG_entities.js",
      "lineno": 671,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091419",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Organization internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009626",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13702,
        13719
      ],
      "filename": "_ORG_entities.js",
      "lineno": 721,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091439",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009636",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13150,
        13162
      ],
      "filename": "_ORG_entities.js",
      "lineno": 696,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091429",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009631",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration, in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13623,
        13640
      ],
      "filename": "_ORG_entities.js",
      "lineno": 716,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091437",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration, in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009635",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name of organization, as it&#39;s specified in the certificate of registration, in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13469,
        13486
      ],
      "filename": "_ORG_entities.js",
      "lineno": 711,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091435",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name of organization, as it's specified in the certificate of registration, in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009634",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12505,
        12510
      ],
      "filename": "_ORG_entities.js",
      "lineno": 661,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091415",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009624",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14191,
        14216
      ],
      "filename": "_ORG_entities.js",
      "lineno": 753,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091455",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009643",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14285,
        14301
      ],
      "filename": "_ORG_entities.js",
      "lineno": 758,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091458",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009644",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13953,
        13966
      ],
      "filename": "_ORG_entities.js",
      "lineno": 735,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091445",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009639",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13997,
        14020
      ],
      "filename": "_ORG_entities.js",
      "lineno": 739,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091447",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009640",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14051,
        14072
      ],
      "filename": "_ORG_entities.js",
      "lineno": 743,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091450",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009641",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14513,
        14538
      ],
      "filename": "_ORG_entities.js",
      "lineno": 773,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091465",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009647",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14607,
        14626
      ],
      "filename": "_ORG_entities.js",
      "lineno": 778,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091468",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009648",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        14354,
        14379
      ],
      "filename": "_ORG_entities.js",
      "lineno": 763,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091460",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009645",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14448,
        14464
      ],
      "filename": "_ORG_entities.js",
      "lineno": 768,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091463",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009646",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14131,
        14142
      ],
      "filename": "_ORG_entities.js",
      "lineno": 748,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091453",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009642",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of organization without the quotes and abbreviations\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13021,
        13029
      ],
      "filename": "_ORG_entities.js",
      "lineno": 691,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091427",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of organization without the quotes and abbreviations",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009630",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13317,
        13330
      ],
      "filename": "_ORG_entities.js",
      "lineno": 706,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091433",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009633",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13234,
        13247
      ],
      "filename": "_ORG_entities.js",
      "lineno": 701,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091431",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009632",
    "___s": true
  },
  {
    "comment": "/**\n  * Common classifier of enterprises and organizations (CCEO)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12747,
        12761
      ],
      "filename": "_ORG_entities.js",
      "lineno": 676,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091421",
        "name": "OKPOCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Common classifier of enterprises and organizations (CCEO)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "OKPOCode",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.OKPOCode",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009627",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization type -> cdn_orgbusinesstype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13797,
        13820
      ],
      "filename": "_ORG_entities.js",
      "lineno": 726,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091441",
        "name": "orgBusinessTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Organization type -&gt; cdn_orgbusinesstype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "orgBusinessTypeID",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.orgBusinessTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009637",
    "___s": true
  },
  {
    "comment": "/**\n  * Ownership type -> cdn_orgownershiptype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13896,
        13920
      ],
      "filename": "_ORG_entities.js",
      "lineno": 731,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091443",
        "name": "orgOwnershipTypeID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Ownership type -&gt; cdn_orgownershiptype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "orgOwnershipTypeID",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.orgOwnershipTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009638",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> org_unit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12566,
        12580
      ],
      "filename": "_ORG_entities.js",
      "lineno": 666,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091417",
        "name": "parentID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent -&gt; org_unit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentID",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.parentID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009625",
    "___s": true
  },
  {
    "comment": "/**\n  * Tax number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12809,
        12822
      ],
      "filename": "_ORG_entities.js",
      "lineno": 681,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091423",
        "name": "taxCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Tax number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "taxCode",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.taxCode",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009628",
    "___s": true
  },
  {
    "comment": "/**\n  * VAT (value-added tax) registration certificate number\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12913,
        12926
      ],
      "filename": "_ORG_entities.js",
      "lineno": 686,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091425",
        "name": "vatCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "VAT (value-added tax) registration certificate number",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "vatCode",
    "longname": "module:@unitybase/org~org_organization_ns.attrs.vatCode",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns.attrs",
    "scope": "static",
    "___id": "T000002R009629",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_organization_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010735",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_organization_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010734",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_organization_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010874",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_organization_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010732",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_organization_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010736",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_organization_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010731",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_organization_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_organization_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010733",
    "___s": true
  },
  {
    "comment": "/**\n* List of positions\n* @type {org_profession_ns}\n*/",
    "meta": {
      "range": [
        16349,
        16389
      ],
      "filename": "_ORG_entities.js",
      "lineno": 877,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091521",
        "name": "org_profession",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of positions",
    "type": {
      "names": [
        "org_profession_ns"
      ]
    },
    "name": "org_profession",
    "longname": "module:@unitybase/org~org_profession",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009668",
    "___s": true
  },
  {
    "comment": "/**\n * List of positions\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        14940,
        14990
      ],
      "filename": "_ORG_entities.js",
      "lineno": 791,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091475",
        "name": "org_profession_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of positions</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "org_profession_ns",
    "longname": "module:@unitybase/org~org_profession_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009650",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        15091,
        16287
      ],
      "filename": "_ORG_entities.js",
      "lineno": 793,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091480",
        "name": "org_profession_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"fullName\":\"\",\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"description\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_profession_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "static",
    "___id": "T000002R009651",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of position\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15209,
        15217
      ],
      "filename": "_ORG_entities.js",
      "lineno": 802,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091487",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of position",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009653",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15715,
        15730
      ],
      "filename": "_ORG_entities.js",
      "lineno": 836,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091501",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009660",
    "___s": true
  },
  {
    "comment": "/**\n  * Position full name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15332,
        15344
      ],
      "filename": "_ORG_entities.js",
      "lineno": 812,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091491",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Position full name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009655",
    "___s": true
  },
  {
    "comment": "/**\n  * Position full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15665,
        15682
      ],
      "filename": "_ORG_entities.js",
      "lineno": 832,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091499",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Position full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009659",
    "___s": true
  },
  {
    "comment": "/**\n  * Position full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15577,
        15594
      ],
      "filename": "_ORG_entities.js",
      "lineno": 827,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091497",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Position full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009658",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15150,
        15155
      ],
      "filename": "_ORG_entities.js",
      "lineno": 797,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091485",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009652",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        15849,
        15874
      ],
      "filename": "_ORG_entities.js",
      "lineno": 846,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091505",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009662",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15943,
        15959
      ],
      "filename": "_ORG_entities.js",
      "lineno": 851,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091508",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009663",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16171,
        16196
      ],
      "filename": "_ORG_entities.js",
      "lineno": 866,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091515",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009666",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16265,
        16284
      ],
      "filename": "_ORG_entities.js",
      "lineno": 871,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091518",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009667",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16012,
        16037
      ],
      "filename": "_ORG_entities.js",
      "lineno": 856,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091510",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009664",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16106,
        16122
      ],
      "filename": "_ORG_entities.js",
      "lineno": 861,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091513",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009665",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15789,
        15800
      ],
      "filename": "_ORG_entities.js",
      "lineno": 841,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091503",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009661",
    "___s": true
  },
  {
    "comment": "/**\n  * Position name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15268,
        15276
      ],
      "filename": "_ORG_entities.js",
      "lineno": 807,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091489",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Position name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009654",
    "___s": true
  },
  {
    "comment": "/**\n  * Position name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15491,
        15504
      ],
      "filename": "_ORG_entities.js",
      "lineno": 822,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091495",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Position name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009657",
    "___s": true
  },
  {
    "comment": "/**\n  * Position name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15412,
        15425
      ],
      "filename": "_ORG_entities.js",
      "lineno": 817,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091493",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Position name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/org~org_profession_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns.attrs",
    "scope": "static",
    "___id": "T000002R009656",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_profession_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010741",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_profession_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010740",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_profession_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010875",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_profession_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010738",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_profession_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010737",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_profession_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_profession_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010739",
    "___s": true
  },
  {
    "comment": "/**\n* List of staff units.\n * This dictionary contains list of staff units. Each staff unit links to org_unit by Unity mixin\n* @type {org_staffunit_ns}\n*/",
    "meta": {
      "range": [
        18981,
        19019
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1021,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091593",
        "name": "org_staffunit",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of staff units.\nThis dictionary contains list of staff units. Each staff unit links to org_unit by Unity mixin",
    "type": {
      "names": [
        "org_staffunit_ns"
      ]
    },
    "name": "org_staffunit",
    "longname": "module:@unitybase/org~org_staffunit",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009697",
    "___s": true
  },
  {
    "comment": "/**\n * List of staff units.\n * This dictionary contains list of staff units. Each staff unit links to org_unit by Unity mixin\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes unity\n */",
    "meta": {
      "range": [
        16605,
        16654
      ],
      "filename": "_ORG_entities.js",
      "lineno": 886,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091525",
        "name": "org_staffunit_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of staff units.\nThis dictionary contains list of staff units. Each staff unit links to org_unit by Unity mixin</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "unity"
    ],
    "name": "org_staffunit_ns",
    "longname": "module:@unitybase/org~org_staffunit_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009669",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        16755,
        18819
      ],
      "filename": "_ORG_entities.js",
      "lineno": 888,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091530",
        "name": "org_staffunit_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentID\":null,\"code\":\"\",\"name\":\"\",\"fullName\":\"\",\"description\":null,\"nameGen\":null,\"nameDat\":null,\"fullNameGen\":null,\"fullNameDat\":null,\"caption\":\"\",\"professionExtID\":null,\"professionID\":0,\"staffUnitTypeID\":0,\"subordinationLevel\":null,\"isBoss\":\"\",\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "static",
    "___id": "T000002R009670",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17666,
        17677
      ],
      "filename": "_ORG_entities.js",
      "lineno": 942,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091555",
        "name": "caption",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009681",
    "___s": true
  },
  {
    "comment": "/**\n  * Staff unit internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16950,
        16958
      ],
      "filename": "_ORG_entities.js",
      "lineno": 902,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091539",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Staff unit internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009673",
    "___s": true
  },
  {
    "comment": "/**\n  * Staff unit description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17189,
        17206
      ],
      "filename": "_ORG_entities.js",
      "lineno": 917,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091545",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Staff unit description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009676",
    "___s": true
  },
  {
    "comment": "/**\n  * Staff unit full name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17117,
        17129
      ],
      "filename": "_ORG_entities.js",
      "lineno": 912,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091543",
        "name": "fullName",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Staff unit full name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009675",
    "___s": true
  },
  {
    "comment": "/**\n  * Full name in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17604,
        17621
      ],
      "filename": "_ORG_entities.js",
      "lineno": 937,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091553",
        "name": "fullNameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Full name in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameDat",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.fullNameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009680",
    "___s": true
  },
  {
    "comment": "/**\n  * Staff unit full name in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17525,
        17542
      ],
      "filename": "_ORG_entities.js",
      "lineno": 932,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091551",
        "name": "fullNameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Staff unit full name in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullNameGen",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.fullNameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009679",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16813,
        16818
      ],
      "filename": "_ORG_entities.js",
      "lineno": 892,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091535",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009671",
    "___s": true
  },
  {
    "comment": "/**\n  * Boss\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        18093,
        18110
      ],
      "filename": "_ORG_entities.js",
      "lineno": 967,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091565",
        "name": "isBoss",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Boss",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isBoss",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.isBoss",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009686",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18381,
        18406
      ],
      "filename": "_ORG_entities.js",
      "lineno": 989,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091577",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009691",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18475,
        18491
      ],
      "filename": "_ORG_entities.js",
      "lineno": 994,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091580",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009692",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18143,
        18156
      ],
      "filename": "_ORG_entities.js",
      "lineno": 971,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091567",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009687",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18187,
        18210
      ],
      "filename": "_ORG_entities.js",
      "lineno": 975,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091569",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009688",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18241,
        18262
      ],
      "filename": "_ORG_entities.js",
      "lineno": 979,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091572",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009689",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18703,
        18728
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1009,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091587",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009695",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18797,
        18816
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1014,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091590",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009696",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18544,
        18569
      ],
      "filename": "_ORG_entities.js",
      "lineno": 999,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091582",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009693",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18638,
        18654
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1004,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091585",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009694",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18321,
        18332
      ],
      "filename": "_ORG_entities.js",
      "lineno": 984,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091575",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009690",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of staff unit without the quotes and abbreviations\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17051,
        17059
      ],
      "filename": "_ORG_entities.js",
      "lineno": 907,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091541",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Name of staff unit without the quotes and abbreviations",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009674",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of staff unit without the quotes and abbreviations in dative case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17437,
        17450
      ],
      "filename": "_ORG_entities.js",
      "lineno": 927,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091549",
        "name": "nameDat",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name of staff unit without the quotes and abbreviations in dative case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameDat",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.nameDat",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009678",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of staff unit without the quotes and abbreviations in genitive case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        17316,
        17329
      ],
      "filename": "_ORG_entities.js",
      "lineno": 922,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091547",
        "name": "nameGen",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name of staff unit without the quotes and abbreviations in genitive case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "nameGen",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.nameGen",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009677",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> org_unit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16874,
        16888
      ],
      "filename": "_ORG_entities.js",
      "lineno": 897,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091537",
        "name": "parentID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent -&gt; org_unit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentID",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.parentID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009672",
    "___s": true
  },
  {
    "comment": "/**\n  * Profession -> cdn_profession\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17743,
        17764
      ],
      "filename": "_ORG_entities.js",
      "lineno": 947,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091557",
        "name": "professionExtID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Profession -&gt; cdn_profession",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "professionExtID",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.professionExtID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009682",
    "___s": true
  },
  {
    "comment": "/**\n  * Position -> org_profession\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17828,
        17843
      ],
      "filename": "_ORG_entities.js",
      "lineno": 952,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091559",
        "name": "professionID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Position -&gt; org_profession",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "professionID",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.professionID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009683",
    "___s": true
  },
  {
    "comment": "/**\n  * Staff unit type -> cdn_staffunittype\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17917,
        17935
      ],
      "filename": "_ORG_entities.js",
      "lineno": 957,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091561",
        "name": "staffUnitTypeID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Staff unit type -&gt; cdn_staffunittype",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "staffUnitTypeID",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.staffUnitTypeID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009684",
    "___s": true
  },
  {
    "comment": "/**\n  * If level is lower - then staff unit is more important\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18026,
        18050
      ],
      "filename": "_ORG_entities.js",
      "lineno": 962,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091563",
        "name": "subordinationLevel",
        "type": "Literal",
        "value": null
      }
    },
    "description": "If level is lower - then staff unit is more important",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "subordinationLevel",
    "longname": "module:@unitybase/org~org_staffunit_ns.attrs.subordinationLevel",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009685",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_staffunit_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010746",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_staffunit_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010745",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_staffunit_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010876",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_staffunit_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010743",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_staffunit_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010747",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_staffunit_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010742",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_staffunit_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_staffunit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010744",
    "___s": true
  },
  {
    "comment": "/**\n* List of organization units.\n * Dictionary which is composed of organizations (org_organization), departments (org_department) and staff units (org_staffunit) by Unity mixin. Dictionary is self-referential, which allows to build a hierarchy of all organizational units in one tree\n* @type {org_unit_ns}\n*/",
    "meta": {
      "range": [
        20999,
        21027
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1118,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091647",
        "name": "org_unit",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "List of organization units.\nDictionary which is composed of organizations (org_organization), departments (org_department) and staff units (org_staffunit) by Unity mixin. Dictionary is self-referential, which allows to build a hierarchy of all organizational units in one tree",
    "type": {
      "names": [
        "org_unit_ns"
      ]
    },
    "name": "org_unit",
    "longname": "module:@unitybase/org~org_unit",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "params": [],
    "___id": "T000002R009717",
    "___s": true
  },
  {
    "comment": "/**\n * List of organization units.\n * Dictionary which is composed of organizations (org_organization), departments (org_department) and staff units (org_staffunit) by Unity mixin. Dictionary is self-referential, which allows to build a hierarchy of all organizational units in one tree\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes dataHistory\n * @mixes tree\n */",
    "meta": {
      "range": [
        19395,
        19439
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1030,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091597",
        "name": "org_unit_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>List of organization units.\nDictionary which is composed of organizations (org_organization), departments (org_department) and staff units (org_staffunit) by Unity mixin. Dictionary is self-referential, which allows to build a hierarchy of all organizational units in one tree</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "dataHistory",
      "tree"
    ],
    "name": "org_unit_ns",
    "longname": "module:@unitybase/org~org_unit_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/org",
    "___id": "T000002R009698",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        19540,
        20681
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1032,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091602",
        "name": "org_unit_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"parentID\":null,\"code\":\"\",\"caption\":\"\",\"unitType\":\"\",\"mi_treePath\":\"\",\"mi_data_id\":0,\"mi_dateFrom\":\"\",\"mi_dateTo\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null,\"mi_unityEntity\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/org~org_unit_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "static",
    "___id": "T000002R009699",
    "___s": true
  },
  {
    "comment": "/**\n  * Caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19790,
        19801
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1051,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091613",
        "name": "caption",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009703",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization unit internal code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19737,
        19745
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1046,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091611",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Organization unit internal code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009702",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19593,
        19598
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1036,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091607",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009700",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        20192,
        20217
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1082,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091629",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009710",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20286,
        20302
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1087,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091632",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009711",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19954,
        19967
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1064,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091619",
        "name": "mi_data_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_data_id",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_data_id",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009706",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        19998,
        20021
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1068,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091621",
        "name": "mi_dateFrom",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateFrom",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_dateFrom",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009707",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        20052,
        20073
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1072,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091624",
        "name": "mi_dateTo",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_dateTo",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_dateTo",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009708",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        20514,
        20539
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1102,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091639",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009714",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20608,
        20627
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1107,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091642",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009715",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        20355,
        20380
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1092,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091634",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009712",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20449,
        20465
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1097,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091637",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009713",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        20132,
        20143
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1077,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091627",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009709",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19906,
        19921
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1060,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091617",
        "name": "mi_treePath",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "mi_treePath",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_treePath",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009705",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        20660,
        20678
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1111,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091644",
        "name": "mi_unityEntity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "mi_unityEntity",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.mi_unityEntity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009716",
    "___s": true
  },
  {
    "comment": "/**\n  * Parent -> org_unit\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19654,
        19668
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1041,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091609",
        "name": "parentID",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Parent -&gt; org_unit",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentID",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.parentID",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009701",
    "___s": true
  },
  {
    "comment": "/**\n  * Organization unit type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        19861,
        19873
      ],
      "filename": "_ORG_entities.js",
      "lineno": 1056,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {
        "id": "astnode100091615",
        "name": "unitType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Organization unit type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "unitType",
    "longname": "module:@unitybase/org~org_unit_ns.attrs.unitType",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns.attrs",
    "scope": "static",
    "___id": "T000002R009704",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/org~org_unit_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010752",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/org~org_unit_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010751",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/org~org_unit_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010877",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/org~org_unit_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010749",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new version of specified record\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        7518,
        7547
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008840",
        "name": "newversion",
        "type": "FunctionExpression"
      }
    },
    "description": "Create new version of specified record",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "newversion",
    "longname": "module:@unitybase/org~org_unit_ns#newversion",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "dataHistory.newversion"
    ],
    "mixed": true,
    "___id": "T000002R010753",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/org~org_unit_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010748",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/org~org_unit_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/org~org_unit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010750",
    "___s": true
  },
  {
    "comment": "/**\n * @module @unitybase/ub\n */",
    "meta": {
      "filename": "modelUB.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "kind": "module",
    "name": "@unitybase/ub",
    "longname": "module:@unitybase/ub",
    "readme": "<p>﻿<a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"JavaScript Style Guide\"></a></p>\n<p>This model is a main entry point for a UnityBase server application.</p>\n<h2>Application</h2><p>In term of UnityBase application is defined by:</p>\n<ul>\n<li>configuration (ubConfig.json by default): file what\ndescribe settings for http server, logging, authorization methods,\nDomain, etc. See <a href=\"https://unitybase.info/docson/index.html#https://unitybase.info/models/UB/schemas/ubConfig.schema.json\">server config json schema</a>\nfor full description</li>\n<li><code>package.json</code> - npm/yarn configuration used to give information to\npackage manager that allows it to identify the project as well as\nhandle the project's dependencies</li>\n</ul>\n<p>Inside <code>package.json</code> <a href=\"https://docs.npmjs.com/files/package.json#main\">main field</a>\nis the primary entry point to UnityBase application. In most case entry point\nfile content is</p>\n<pre class=\"prettyprint source lang-JavaScript\"><code>const UB = require('@unitybase/ub')\nUB.start()</code></pre><h2>Application initialization</h2><p>{@link module:@unitybase/ub~start UB.start} method of <code>@unitybase/ub</code> package will:</p>\n<ul>\n<li>parse application config passed as <code>-cfg</code> command line parameter to <code>ub</code>\nand put parsed content to {@link class:App#serverConfig App.serverConfig}</li>\n<li>create HTTP server and configure it using parameters from <code>httpServer</code> config section</li>\n</ul>\n<p>and perform steps below for every HTTP thread:</p>\n<ul>\n<li>read and validate all <code>*.meta</code> files from folders, defined in <code>application.domain.models</code></li>\n<li>for each model from <code>application.domain.models</code> folders (except ones marked as <code>_public_only_</code>)\nload a model (see below)</li>\n<li>register build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}</li>\n<li>emit {@link class:App#domainIsLoaded App.domainIsLoaded} event</li>\n</ul>\n<h2>Model</h2><h3>Server-side</h3><p>Model is a commonJS module with logically grouped set of entities + server side code + client-side code.\nIn the application config (ubConfig.json) application.domain.models section contains an array of models, required by application.</p>\n<p>Model is loaded in server thread memory(in order they defined in <code>application.domain.models</code> config section) in three steps:</p>\n<ul>\n<li>{@link EntityNamespace entity namespaces} (global objects) are created for all <code>*.meta</code> files from this model</li>\n<li><code>require</code> is called for all <code>*.js</code> files paired with <code>*.meta</code></li>\n<li><code>require</code> is called for model entry point defined in <code>package.json</code> placed in the model folder</li>\n</ul>\n<p>To simplify a ubConfig model <code>package.json</code> can contains <code>config.ubmodel</code> section what describe the\nmodel name and (optionally) <code></code>&quot;isPublic&quot;: true` for &quot;browser-only&quot; model</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;config&quot;: {\n    &quot;ubmodel&quot;: {\n      &quot;name&quot;: &quot;UBS&quot;\n    }\n  },</code></pre><p>for &quot;browser-only&quot; model:</p>\n<pre class=\"prettyprint source lang-json\"><code>  &quot;config&quot;: {\n    &quot;ubmodel&quot;: {\n      &quot;name&quot;: &quot;adminui-pub&quot;,\n      &quot;isPublic&quot;: true\n    }\n  },</code></pre><p>For such models only path to model should be added to the <code>application.domain.models</code> section of ubConfig.json:</p>\n<pre class=\"prettyprint source lang-json\"><code>    &quot;application&quot;: {\n        ...\n        &quot;domain&quot;: {\n            &quot;models&quot;: [\n                ...\n                {\n                    &quot;path&quot;: &quot;./node_modules/@unitybase/ubs&quot;\n                },</code></pre><h3>Client-side (adminUI)</h3><p>Model can contains a &quot;browser-side&quot; part. In this case model <code>package.json</code> should contains <code>browser</code> section\nwhat point to the model initialization script for browser</p>\n<ul>\n<li><p>In case model is a published module (placed in the node_modules folder) path should be relative to the <code>package.json</code>:</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: &quot;./public/initModel.js&quot;</code></pre></li>\n<li><p>or for dev/prod scripts</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: {\n &quot;dev&quot;: &quot;./public/devEntryPoint.js&quot;\n &quot;prod&quot;: &quot;./public/dist/modelBundle.js&quot;\n}</code></pre></li>\n<li><p>In case model is in <code>models</code> folder p[ath must be absolute</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: &quot;/clientRequire/models/TST/initModel.js&quot;,</code></pre></li>\n</ul>\n<h2>Endpoints</h2><p>UnityBase comes with simple one-level routing.\n{@link class:App#registerEndpoint App.registerEndpoint} method will add a handlers\nfunctions for a first level of routing:</p>\n<pre class=\"prettyprint source lang-js\"><code>/**\n * Write a custom request body to file FIXTURES/req and echo file back to client\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */\nfunction echoToFile(req, resp) {\n   var fs = require('fs');\n   fs.writeFileSync(FIXTURES + 'req', req.read('bin'));\n   resp.statusCode = 200;\n   resp.writeEnd(fs.readFileSync(FIXTURES + 'req', {encoding: 'bin'}));\n}\nApp.registerEndpoint('echoToFile', echoToFile);</code></pre><p>More deep routing can be implemented inside the endpoint handler, as we\ndid inside build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}</p>\n<h2>JSON schemas</h2><p><code>@unitybase/ub/public/schemas</code> folder contains JSON schemas for server config, entity meta file and scheduler config.\nIt's a good idea to configure your IDE for JSON schema support.\nSee for example <a href=\"https://git-pub.intecracy.com/unitybase/ubjs/wikis/configuring-webstorm\">WebStorm IDE configuratuion manual</a></p>",
    "___id": "T000002R004586",
    "___s": true
  },
  {
    "comment": "/**\n * Build-in UnityBase model\n * @version 5.0.10\n * @module @unitybase/ub\n */",
    "meta": {
      "filename": "_UB_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/ub",
    "longname": "module:@unitybase/ub",
    "readme": "<p>﻿<a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"JavaScript Style Guide\"></a></p>\n<p>This model is a main entry point for a UnityBase server application.</p>\n<h2>Application</h2><p>In term of UnityBase application is defined by:</p>\n<ul>\n<li>configuration (ubConfig.json by default): file what\ndescribe settings for http server, logging, authorization methods,\nDomain, etc. See <a href=\"https://unitybase.info/docson/index.html#https://unitybase.info/models/UB/schemas/ubConfig.schema.json\">server config json schema</a>\nfor full description</li>\n<li><code>package.json</code> - npm/yarn configuration used to give information to\npackage manager that allows it to identify the project as well as\nhandle the project's dependencies</li>\n</ul>\n<p>Inside <code>package.json</code> <a href=\"https://docs.npmjs.com/files/package.json#main\">main field</a>\nis the primary entry point to UnityBase application. In most case entry point\nfile content is</p>\n<pre class=\"prettyprint source lang-JavaScript\"><code>const UB = require('@unitybase/ub')\nUB.start()</code></pre><h2>Application initialization</h2><p>{@link module:@unitybase/ub~start UB.start} method of <code>@unitybase/ub</code> package will:</p>\n<ul>\n<li>parse application config passed as <code>-cfg</code> command line parameter to <code>ub</code>\nand put parsed content to {@link class:App#serverConfig App.serverConfig}</li>\n<li>create HTTP server and configure it using parameters from <code>httpServer</code> config section</li>\n</ul>\n<p>and perform steps below for every HTTP thread:</p>\n<ul>\n<li>read and validate all <code>*.meta</code> files from folders, defined in <code>application.domain.models</code></li>\n<li>for each model from <code>application.domain.models</code> folders (except ones marked as <code>_public_only_</code>)\nload a model (see below)</li>\n<li>register build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}</li>\n<li>emit {@link class:App#domainIsLoaded App.domainIsLoaded} event</li>\n</ul>\n<h2>Model</h2><h3>Server-side</h3><p>Model is a commonJS module with logically grouped set of entities + server side code + client-side code.\nIn the application config (ubConfig.json) application.domain.models section contains an array of models, required by application.</p>\n<p>Model is loaded in server thread memory(in order they defined in <code>application.domain.models</code> config section) in three steps:</p>\n<ul>\n<li>{@link EntityNamespace entity namespaces} (global objects) are created for all <code>*.meta</code> files from this model</li>\n<li><code>require</code> is called for all <code>*.js</code> files paired with <code>*.meta</code></li>\n<li><code>require</code> is called for model entry point defined in <code>package.json</code> placed in the model folder</li>\n</ul>\n<p>To simplify a ubConfig model <code>package.json</code> can contains <code>config.ubmodel</code> section what describe the\nmodel name and (optionally) <code></code>&quot;isPublic&quot;: true` for &quot;browser-only&quot; model</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;config&quot;: {\n    &quot;ubmodel&quot;: {\n      &quot;name&quot;: &quot;UBS&quot;\n    }\n  },</code></pre><p>for &quot;browser-only&quot; model:</p>\n<pre class=\"prettyprint source lang-json\"><code>  &quot;config&quot;: {\n    &quot;ubmodel&quot;: {\n      &quot;name&quot;: &quot;adminui-pub&quot;,\n      &quot;isPublic&quot;: true\n    }\n  },</code></pre><p>For such models only path to model should be added to the <code>application.domain.models</code> section of ubConfig.json:</p>\n<pre class=\"prettyprint source lang-json\"><code>    &quot;application&quot;: {\n        ...\n        &quot;domain&quot;: {\n            &quot;models&quot;: [\n                ...\n                {\n                    &quot;path&quot;: &quot;./node_modules/@unitybase/ubs&quot;\n                },</code></pre><h3>Client-side (adminUI)</h3><p>Model can contains a &quot;browser-side&quot; part. In this case model <code>package.json</code> should contains <code>browser</code> section\nwhat point to the model initialization script for browser</p>\n<ul>\n<li><p>In case model is a published module (placed in the node_modules folder) path should be relative to the <code>package.json</code>:</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: &quot;./public/initModel.js&quot;</code></pre></li>\n<li><p>or for dev/prod scripts</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: {\n &quot;dev&quot;: &quot;./public/devEntryPoint.js&quot;\n &quot;prod&quot;: &quot;./public/dist/modelBundle.js&quot;\n}</code></pre></li>\n<li><p>In case model is in <code>models</code> folder p[ath must be absolute</p>\n<pre class=\"prettyprint source lang-json\"><code>&quot;browser&quot;: &quot;/clientRequire/models/TST/initModel.js&quot;,</code></pre></li>\n</ul>\n<h2>Endpoints</h2><p>UnityBase comes with simple one-level routing.\n{@link class:App#registerEndpoint App.registerEndpoint} method will add a handlers\nfunctions for a first level of routing:</p>\n<pre class=\"prettyprint source lang-js\"><code>/**\n * Write a custom request body to file FIXTURES/req and echo file back to client\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */\nfunction echoToFile(req, resp) {\n   var fs = require('fs');\n   fs.writeFileSync(FIXTURES + 'req', req.read('bin'));\n   resp.statusCode = 200;\n   resp.writeEnd(fs.readFileSync(FIXTURES + 'req', {encoding: 'bin'}));\n}\nApp.registerEndpoint('echoToFile', echoToFile);</code></pre><p>More deep routing can be implemented inside the endpoint handler, as we\ndid inside build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}</p>\n<h2>JSON schemas</h2><p><code>@unitybase/ub/public/schemas</code> folder contains JSON schemas for server config, entity meta file and scheduler config.\nIt's a good idea to configure your IDE for JSON schema support.\nSee for example <a href=\"https://git-pub.intecracy.com/unitybase/ubjs/wikis/configuring-webstorm\">WebStorm IDE configuratuion manual</a></p>",
    "___id": "T000002R004562",
    "___s": true
  },
  {
    "comment": "/**\n   * Application instance\n   * @type {App}\n   */",
    "meta": {
      "range": [
        4214,
        4222
      ],
      "filename": "modelUB.js",
      "lineno": 121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051202",
        "name": "App",
        "type": "Identifier",
        "value": "App"
      }
    },
    "description": "Application instance",
    "type": {
      "names": [
        "App"
      ]
    },
    "name": "App",
    "longname": "module:@unitybase/ub.App",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004604",
    "___s": true
  },
  {
    "comment": "/**\n   * Construct new data store\n   * @param {string} entityCode\n   * @return {TubDataStore}\n   * @constructor\n   */",
    "meta": {
      "range": [
        2433,
        2511
      ],
      "filename": "modelUB.js",
      "lineno": 68,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051155",
        "name": "DataStore",
        "type": "FunctionExpression"
      }
    },
    "description": "Construct new data store",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityCode"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubDataStore"
          ]
        }
      }
    ],
    "kind": "class",
    "name": "DataStore",
    "longname": "module:@unitybase/ub.DataStore",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004598",
    "___s": true
  },
  {
    "comment": "/**\n   * Server-side Security exception. Throwing of such exception will trigger\n   * `Session.securityViolation` event\n   * @type {ESecurityException}\n   */",
    "meta": {
      "range": [
        1695,
        1740
      ],
      "filename": "modelUB.js",
      "lineno": 41,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051122",
        "name": "ESecurityException",
        "type": "MemberExpression",
        "value": "Errors.ESecurityException"
      }
    },
    "description": "Server-side Security exception. Throwing of such exception will trigger\n<code>Session.securityViolation</code> event",
    "type": {
      "names": [
        "ESecurityException"
      ]
    },
    "name": "ESecurityException",
    "longname": "module:@unitybase/ub.ESecurityException",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004591",
    "___s": true
  },
  {
    "comment": "/**\n   * Return locale-specific resource from it identifier.\n   * Resources are defined by {@link module:@unitybase/ub#i18nExtend UB.i18nExtend}\n   *\n   * In opposite to client-side i18n server side function do not allow formatting.\n   *\n   * @param {String} msg Message to translate\n   * @param {String} [lang] language to translate to. if empty - current user session language is used\n   */",
    "meta": {
      "range": [
        2910,
        3062
      ],
      "filename": "modelUB.js",
      "lineno": 80,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051163",
        "name": "i18n",
        "type": "FunctionExpression",
        "value": "i18n"
      },
      "vars": {
        "lang": "module:@unitybase/ub~lang",
        "res": "module:@unitybase/ub.i18n~res"
      }
    },
    "description": "Return locale-specific resource from it identifier.\nResources are defined by {@link module:@unitybase/ub#i18nExtend UB.i18nExtend}</p>\n<p>In opposite to client-side i18n server side function do not allow formatting.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Message to translate",
        "name": "msg"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "language to translate to. if empty - current user session language is used",
        "name": "lang"
      }
    ],
    "name": "i18n",
    "longname": "module:@unitybase/ub.i18n",
    "kind": "function",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004599",
    "___s": true
  },
  {
    "comment": "/**\n   * Merge localizationObject to UB.i18n\n   * @example\n\nconst UB = require('@unitybase/ub')\nUB.i18nExtend({\n \"en\": {yourMessage: \"yourTranslationToEng\", ...},\n \"uk\": {yourMessage: \"yourTranslationToUk\", ...},\n  ....\n})\n// if logged in user language is `en` will output \"yourTranslationToEng\"\nconsole.log(UB.i18n(yourMessage))\n// will output \"yourTranslationToUk\"\nconsole.log(UB.i18n(yourMessage, 'uk'))\n\n   * @param {Object} localizationObject\n   */",
    "meta": {
      "range": [
        3522,
        3546
      ],
      "filename": "modelUB.js",
      "lineno": 102,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051194",
        "name": "i18nExtend",
        "type": "MemberExpression",
        "value": "mI18n.extend"
      }
    },
    "description": "Merge localizationObject to UB.i18n",
    "examples": [
      "const UB = require('@unitybase/ub')\nUB.i18nExtend({\n \"en\": {yourMessage: \"yourTranslationToEng\", ...},\n \"uk\": {yourMessage: \"yourTranslationToUk\", ...},\n  ....\n})\n// if logged in user language is `en` will output \"yourTranslationToEng\"\nconsole.log(UB.i18n(yourMessage))\n// will output \"yourTranslationToUk\"\nconsole.log(UB.i18n(yourMessage, 'uk'))"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "localizationObject"
      }
    ],
    "name": "i18nExtend",
    "longname": "module:@unitybase/ub.i18nExtend",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004602",
    "___s": true
  },
  {
    "comment": "/**\n   * If we are in UnityBase server scripting (both -f or server thread) this property is true, if in browser - undefined or false.\n   * Use it for check execution context in scripts, shared between client & server.\n   * To check we are in server thread use process.isServer.\n   * @readonly\n   */",
    "meta": {
      "range": [
        1268,
        1282
      ],
      "filename": "modelUB.js",
      "lineno": 28,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051116",
        "name": "isServer",
        "type": "Literal",
        "value": true
      }
    },
    "description": "If we are in UnityBase server scripting (both -f or server thread) this property is true, if in browser - undefined or false.\nUse it for check execution context in scripts, shared between client &amp; server.\nTo check we are in server thread use process.isServer.",
    "readonly": true,
    "name": "isServer",
    "longname": "module:@unitybase/ub.isServer",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004589",
    "___s": true
  },
  {
    "comment": "/**\n   * For UB < 4.2 compatibility -  require all non - entity js\n   * in specified folder add it's subfolder (one level depth),\n   * exclude `modules` and `node_modules` subfolder's.\n   * From 'public' subfolder only cs*.js are required.\n   * To be called in model index.js as such:\n   *   const modelLoader = require('@unitybase/ub).modelLoader\n   *\n   * For new models we recommend to require non-entity modules manually\n   * @param {String} folderPath\n   * @param {Boolean} isFromPublicFolder\n   * @param {number} depth Current recursion depth\n   */",
    "meta": {
      "range": [
        4107,
        4155
      ],
      "filename": "modelUB.js",
      "lineno": 116,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051198",
        "name": "loadLegacyModules",
        "type": "MemberExpression",
        "value": "modelLoader.loadLegacyModules"
      }
    },
    "description": "For UB &lt; 4.2 compatibility -  require all non - entity js\nin specified folder add it's subfolder (one level depth),\nexclude <code>modules</code> and <code>node_modules</code> subfolder's.\nFrom 'public' subfolder only cs*.js are required.\nTo be called in model index.js as such:\n  const modelLoader = require('@unitybase/ub).modelLoader</p>\n<p>For new models we recommend to require non-entity modules manually",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "folderPath"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "name": "isFromPublicFolder"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Current recursion depth",
        "name": "depth"
      }
    ],
    "name": "loadLegacyModules",
    "longname": "module:@unitybase/ub.loadLegacyModules",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004603",
    "___s": true
  },
  {
    "comment": "/**\n * Build-in UnityBase endpoints. Will be registered during {@link module:@unitybase/ub~start UB.start}\n * In addition to endpoints documented below additional endpoints\n *  - ubql\n *  - stat\n *  - auth\n *  - logout\n *  - timeStamp\n * are implemented inside native code and will be moved to JavaScript in future releases.\n *\n * @module endpoints\n * @memberOf module:@unitybase/ub\n */",
    "meta": {
      "filename": "endpoints.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "<p>Build-in UnityBase endpoints. Will be registered during {@link module:@unitybase/ub~start UB.start}\nIn addition to endpoints documented below additional endpoints</p>\n<ul>\n<li>ubql</li>\n<li>stat</li>\n<li>auth</li>\n<li>logout</li>\n<li>timeStamp\nare implemented inside native code and will be moved to JavaScript in future releases.</li>\n</ul>",
    "kind": "module",
    "name": "endpoints",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "longname": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006050",
    "___s": true
  },
  {
    "comment": "/**\n * The `clientRequire` endpoint. Used by client side loaders (SystemJS for example) to emulate commonJS require\n *\n * **Security note**: It is __very important__ to prevent loading a server-side logic to the client - server-side logic MUST be hidden from clients\n *\n * To do this `clientRequire` endpoint:\n *\n *   - allow access only to modules inside application `node_modules` folder\n *   - in case requested module is a UnityBase model (present in ubConfig.json) then restrict access to non-public part of such model\n *\n * So developer should list all the modules that contain a sensitive server-side business logic inside the application\n * config and set a `moduleName` parameter correctly for such models\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        4803,
        8912
      ],
      "filename": "endpoints.js",
      "lineno": 133,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100063585",
        "name": "clientRequireEp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "reqPath": "module:@unitybase/ub.module:endpoints~clientRequireEp~reqPath",
        "cached": "module:@unitybase/ub.module:endpoints~clientRequireEp~cached",
        "entry": "module:@unitybase/ub.module:endpoints~entry",
        "resolvedPath": "module:@unitybase/ub.module:endpoints~resolvedPath",
        "stat": "module:@unitybase/ub.module:endpoints~clientRequireEp~stat",
        "pkgName": "module:@unitybase/ub.module:endpoints~clientRequireEp~pkgName",
        "pkgMain": "module:@unitybase/ub.module:endpoints~clientRequireEp~pkgMain",
        "models": "module:@unitybase/ub.module:endpoints~clientRequireEp~models",
        "restrictAccess": "module:@unitybase/ub.module:endpoints~clientRequireEp~restrictAccess",
        "": null,
        "entry.fullPath": "module:@unitybase/ub.module:endpoints~clientRequireEp~entry.fullPath",
        "ct": "module:@unitybase/ub.module:endpoints~clientRequireEp~ct",
        "entry.mimeHead": "module:@unitybase/ub.module:endpoints~clientRequireEp~entry.mimeHead",
        "head": "module:@unitybase/ub.module:endpoints~clientRequireEp~head",
        "resp.statusCode": "module:@unitybase/ub.module:endpoints~resp.statusCode"
      }
    },
    "description": "The <code>clientRequire</code> endpoint. Used by client side loaders (SystemJS for example) to emulate commonJS require</p>\n<p><strong>Security note</strong>: It is <strong>very important</strong> to prevent loading a server-side logic to the client - server-side logic MUST be hidden from clients</p>\n<p>To do this <code>clientRequire</code> endpoint:</p>\n<ul>\n<li>allow access only to modules inside application <code>node_modules</code> folder</li>\n<li>in case requested module is a UnityBase model (present in ubConfig.json) then restrict access to non-public part of such model</li>\n</ul>\n<p>So developer should list all the modules that contain a sensitive server-side business logic inside the application\nconfig and set a <code>moduleName</code> parameter correctly for such models",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "clientRequireEp",
    "longname": "module:@unitybase/ub.module:endpoints~clientRequireEp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006083",
    "___s": true
  },
  {
    "comment": "/**\n * The `getAppInfo` endpoint. Responsible for return a information about application required for a\n * initial client side connectivity and UI setup\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        9134,
        10096
      ],
      "filename": "endpoints.js",
      "lineno": 249,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100064117",
        "name": "getAppInfoEp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "serverConfig": "module:@unitybase/ub.module:endpoints~getAppInfoEp~serverConfig",
        "DSTU": "module:@unitybase/ub.module:endpoints~getAppInfoEp~DSTU",
        "appInfo": "module:@unitybase/ub.module:endpoints~getAppInfoEp~appInfo",
        "resp.statusCode": "module:@unitybase/ub.module:endpoints~resp.statusCode"
      }
    },
    "description": "The <code>getAppInfo</code> endpoint. Responsible for return a information about application required for a\ninitial client side connectivity and UI setup",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "getAppInfoEp",
    "longname": "module:@unitybase/ub.module:endpoints~getAppInfoEp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006106",
    "___s": true
  },
  {
    "comment": "/**\n * The `getDomainInfo` endpoint.\n * Return JSON representation of application Domain according to caller rights\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        11630,
        12606
      ],
      "filename": "endpoints.js",
      "lineno": 309,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100064259",
        "name": "getDomainInfoEp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "params": "module:@unitybase/ub.module:endpoints~getDomainInfoEp~params",
        "isExtended": "module:@unitybase/ub.module:endpoints~getDomainInfoEp~isExtended",
        "res": "module:@unitybase/ub.module:endpoints~getDomainInfoEp~res",
        "resp.statusCode": "module:@unitybase/ub.module:endpoints~resp.statusCode"
      }
    },
    "description": "The <code>getDomainInfo</code> endpoint.\nReturn JSON representation of application Domain according to caller rights",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "getDomainInfoEp",
    "longname": "module:@unitybase/ub.module:endpoints~getDomainInfoEp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006124",
    "___s": true
  },
  {
    "comment": "/**\n * The `models` endpoint. Responsible for return a static files content from a model publicPath folders\n *\n * For example request `GET http://host:port/models/modelName/fileName`\n * will return a file from a public folder of a model `modelName`\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        3359,
        3951
      ],
      "filename": "endpoints.js",
      "lineno": 101,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100063510",
        "name": "modelsEp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "reqPath": "module:@unitybase/ub.module:endpoints~modelsEp~reqPath"
      }
    },
    "description": "The <code>models</code> endpoint. Responsible for return a static files content from a model publicPath folders</p>\n<p>For example request <code>GET http://host:port/models/modelName/fileName</code>\nwill return a file from a public folder of a model <code>modelName</code>",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "modelsEp",
    "longname": "module:@unitybase/ub.module:endpoints~modelsEp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006080",
    "___s": true
  },
  {
    "comment": "/**\n * Default endpoint. Will be called in case URL do not start form a known endpoint.\n * Current implementation will handle static files from `ServerConfig.HTTPServer.inetPub` folder\n *\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        12860,
        14285
      ],
      "filename": "endpoints.js",
      "lineno": 341,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100064344",
        "name": "staticEp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "reqPath": "module:@unitybase/ub.module:endpoints~staticEp~reqPath",
        "normalized": "module:@unitybase/ub.module:endpoints~staticEp~normalized",
        "stat": "module:@unitybase/ub.module:endpoints~staticEp~stat",
        "relative": "module:@unitybase/ub.module:endpoints~staticEp~relative",
        "head": "module:@unitybase/ub.module:endpoints~staticEp~head",
        "resp.statusCode": "module:@unitybase/ub.module:endpoints~resp.statusCode",
        "ext": "module:@unitybase/ub.module:endpoints~staticEp~ext",
        "ct": "module:@unitybase/ub.module:endpoints~staticEp~ct"
      }
    },
    "description": "Default endpoint. Will be called in case URL do not start form a known endpoint.\nCurrent implementation will handle static files from <code>ServerConfig.HTTPServer.inetPub</code> folder",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "staticEp",
    "longname": "module:@unitybase/ub.module:endpoints~staticEp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:endpoints",
    "___id": "T000002R006129",
    "___s": true
  },
  {
    "comment": "/**\n * @module i18n\n * @memberOf module:@unitybase/ub\n */",
    "meta": {
      "filename": "i18n.js",
      "lineno": 84,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "module",
    "name": "i18n",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "longname": "module:@unitybase/ub.module:i18n",
    "___id": "T000002R006244",
    "___s": true
  },
  {
    "comment": "/**\n * Merge localizationObject to UB.i18n. Usually called form serverLocale scripts\n * @param {Object} localizationObject\n */",
    "meta": {
      "range": [
        1623,
        1703
      ],
      "filename": "i18n.js",
      "lineno": 92,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065292",
        "name": "extend",
        "type": "FunctionDeclaration",
        "paramnames": [
          "localizationObject"
        ]
      }
    },
    "description": "Merge localizationObject to UB.i18n. Usually called form serverLocale scripts",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "localizationObject"
      }
    ],
    "name": "extend",
    "longname": "module:@unitybase/ub.module:i18n~extend",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:i18n",
    "___id": "T000002R006245",
    "___s": true
  },
  {
    "comment": "/**\n * Localize a message to lang. Return original message either lang not found\n * or msg mot found in lang\n * @param {String} lang\n * @param {*} msg\n * @return {*}\n */",
    "meta": {
      "range": [
        1875,
        1997
      ],
      "filename": "i18n.js",
      "lineno": 103,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065303",
        "name": "lookup",
        "type": "FunctionDeclaration",
        "paramnames": [
          "lang",
          "msg"
        ]
      }
    },
    "description": "Localize a message to lang. Return original message either lang not found\nor msg mot found in lang",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "lang"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "msg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "lookup",
    "longname": "module:@unitybase/ub.module:i18n~lookup",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:i18n",
    "___id": "T000002R006246",
    "___s": true
  },
  {
    "comment": "/**\n * Functions for evaluation UnityBase model JS files\n * @module modelLoader\n * @memberOf module:@unitybase/ub\n */",
    "meta": {
      "filename": "modelLoader.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Functions for evaluation UnityBase model JS files",
    "kind": "module",
    "name": "modelLoader",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "longname": "module:@unitybase/ub.module:modelLoader",
    "___id": "T000002R006267",
    "___s": true
  },
  {
    "comment": "/**\n * Load all *.js for which pair *.meta is exists\n * @param {String} folderPath\n * @param {number} [depth=0] Recursion depth\n */",
    "meta": {
      "range": [
        445,
        1239
      ],
      "filename": "modelLoader.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065649",
        "name": "loadEntitiesModules",
        "type": "FunctionDeclaration",
        "paramnames": [
          "folderPath",
          "depth"
        ]
      },
      "vars": {
        "folderFiles": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~folderFiles",
        "i": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~i",
        "l": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~l",
        "fn": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~fn",
        "fullPath": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~fullPath",
        "stat": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~stat",
        "baseName": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules~baseName"
      }
    },
    "description": "Load all <em>.js for which pair </em>.meta is exists",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "folderPath"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Recursion depth",
        "name": "depth"
      }
    ],
    "name": "loadEntitiesModules",
    "longname": "module:@unitybase/ub.module:modelLoader~loadEntitiesModules",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:modelLoader",
    "___id": "T000002R006270",
    "___s": true
  },
  {
    "comment": "/**\n * For UB < 4.2 compatibility -  require all non - entity js\n * in specified folder add it's subfolder (one level depth),\n * exclude `modules` and `node_modules` subfolder's.\n * From 'public' subfolder only cs*.js are required.\n * To be called in model index.js as such:\n *   const modelLoader = require('@unitybase/ub).modelLoader\n *\n * For new models we recommend to require non-entity modules manually\n *\n * @param {String} folderPath\n * @param {Boolean} isFromPublicFolder\n * @param {number} depth Current recursion depth\n */",
    "meta": {
      "range": [
        1775,
        2780
      ],
      "filename": "modelLoader.js",
      "lineno": 56,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065783",
        "name": "loadLegacyModules",
        "type": "FunctionDeclaration",
        "paramnames": [
          "folderPath",
          "isFromPublicFolder",
          "depth"
        ]
      },
      "vars": {
        "folderFiles": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~folderFiles",
        "i": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~i",
        "l": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~l",
        "fn": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~fn",
        "fullPath": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~fullPath",
        "stat": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~stat",
        "baseName": "module:@unitybase/ub.module:modelLoader~loadLegacyModules~baseName"
      }
    },
    "description": "For UB &lt; 4.2 compatibility -  require all non - entity js\nin specified folder add it's subfolder (one level depth),\nexclude <code>modules</code> and <code>node_modules</code> subfolder's.\nFrom 'public' subfolder only cs*.js are required.\nTo be called in model index.js as such:\n  const modelLoader = require('@unitybase/ub).modelLoader</p>\n<p>For new models we recommend to require non-entity modules manually",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "folderPath"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "name": "isFromPublicFolder",
        "defaultvalue": false
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "Current recursion depth",
        "name": "depth",
        "defaultvalue": 0
      }
    ],
    "name": "loadLegacyModules",
    "longname": "module:@unitybase/ub.module:modelLoader~loadLegacyModules",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:modelLoader",
    "___id": "T000002R006278",
    "___s": true
  },
  {
    "comment": "/**\n * WIP: not finished yet\n * @module onlyOfficeEndpoints\n * @memberOf module:@unitybase/ub\n */",
    "meta": {
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "WIP: not finished yet",
    "kind": "module",
    "name": "onlyOfficeEndpoints",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints",
    "___id": "T000002R006289",
    "___s": true
  },
  {
    "comment": "/**\n * Returns requested document for OnlyOffice server\n * Used to bypass security and must be changed\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        2807,
        3670
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 105,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066246",
        "name": "getDocumentOffice",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "params": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~params",
        "callerIP": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~callerIP",
        "config": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~config",
        "resp.statusCode": "module:@unitybase/ub.module:onlyOfficeEndpoints~resp.statusCode",
        "resultDocDS": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS",
        "resultDocDS.id": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS.id",
        "resultDocDS.entity": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS.entity",
        "resultDocDS.attribute": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS.attribute",
        "resultDocDS.fileName": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS.fileName",
        "resultDocDS.isDirty": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~resultDocDS.isDirty",
        "docHandler": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~docHandler"
      }
    },
    "description": "Returns requested document for OnlyOffice server\nUsed to bypass security and must be changed",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "getDocumentOffice",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints",
    "___id": "T000002R006336",
    "___s": true
  },
  {
    "comment": "/** @type {t_getDocumentOffice_req_params} */",
    "meta": {
      "range": [
        2904,
        2937
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 107,
      "columnno": 8,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066252",
        "name": "params",
        "type": "CallExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "t_getDocumentOffice_req_params"
      ]
    },
    "name": "params",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice~params",
    "kind": "constant",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints~getDocumentOffice",
    "scope": "inner",
    "params": [],
    "___id": "T000002R006337",
    "___s": true
  },
  {
    "comment": "/**\n * Read onlyOffice configuration section\n * @returns {{isConfigured: boolean, serverIP: string}}\n */",
    "meta": {
      "range": [
        1794,
        2233
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 69,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066159",
        "name": "getOnlyOfficeConfiguration",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "configuration": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration~configuration",
        "onlyOfficeServer": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration~onlyOfficeServer",
        "isConfigured": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration~isConfigured",
        "configuration.isConfigured": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration~configuration.isConfigured",
        "configuration.serverIP": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration~configuration.serverIP"
      }
    },
    "description": "Read onlyOffice configuration section",
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "getOnlyOfficeConfiguration",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~getOnlyOfficeConfiguration",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints",
    "params": [],
    "___id": "T000002R006324",
    "___s": true
  },
  {
    "comment": "/**\n * Required by onlyOffice. If not exists, will throw UI errors on save/autosave\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n */",
    "meta": {
      "range": [
        2383,
        2638
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 91,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066219",
        "name": "notifyDocumentSaved",
        "type": "FunctionDeclaration",
        "paramnames": [
          "req",
          "resp"
        ]
      },
      "vars": {
        "noErrorsResponse": "module:@unitybase/ub.module:onlyOfficeEndpoints~notifyDocumentSaved~noErrorsResponse",
        "resp.statusCode": "module:@unitybase/ub.module:onlyOfficeEndpoints~resp.statusCode"
      }
    },
    "description": "Required by onlyOffice. If not exists, will throw UI errors on save/autosave",
    "params": [
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "name": "notifyDocumentSaved",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~notifyDocumentSaved",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints",
    "___id": "T000002R006332",
    "___s": true
  },
  {
    "comment": "/**\n * Write onlyOffice server address to user data. For use on client\n */",
    "meta": {
      "range": [
        470,
        686
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 22,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100065989",
        "name": "onlyOfficeOnUserLogin",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "configuration": "module:@unitybase/ub.module:onlyOfficeEndpoints~onlyOfficeOnUserLogin~configuration"
      }
    },
    "description": "Write onlyOffice server address to user data. For use on client",
    "name": "onlyOfficeOnUserLogin",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~onlyOfficeOnUserLogin",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints",
    "params": [],
    "___id": "T000002R006298",
    "___s": true
  },
  {
    "comment": "/** @type {t_setOnlyOfficeDocument_params} */",
    "meta": {
      "range": [
        800,
        833
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 33,
      "columnno": 8,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066021",
        "name": "params",
        "type": "CallExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "t_setOnlyOfficeDocument_params"
      ]
    },
    "name": "params",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore~params",
    "kind": "constant",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore",
    "scope": "inner",
    "params": [],
    "___id": "T000002R006302",
    "___s": true
  },
  {
    "comment": "/** @type{ClientRequest} */",
    "meta": {
      "range": [
        1112,
        1149
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 46,
      "columnno": 8,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066060",
        "name": "request",
        "type": "CallExpression",
        "value": ""
      }
    },
    "tags": [
      {
        "originalTitle": "type{ClientRequest}",
        "title": "type{clientrequest}",
        "text": ""
      }
    ],
    "name": "request",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore~request",
    "kind": "constant",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore",
    "scope": "inner",
    "params": [],
    "___id": "T000002R006312",
    "___s": true
  },
  {
    "comment": "/** @type {THTTPRequest} */",
    "meta": {
      "range": [
        1246,
        1270
      ],
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 49,
      "columnno": 8,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066075",
        "name": "response",
        "type": "CallExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "THTTPRequest"
      ]
    },
    "name": "response",
    "longname": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore~response",
    "kind": "constant",
    "memberof": "module:@unitybase/ub.module:onlyOfficeEndpoints~setOnlyOfficeDocumentToTempStore",
    "scope": "inner",
    "params": [],
    "___id": "T000002R006313",
    "___s": true
  },
  {
    "comment": "/**\n * @module ubErrors\n * @memberOf module:@unitybase/ub\n */",
    "meta": {
      "filename": "ubErrors.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "module",
    "name": "ubErrors",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "longname": "module:@unitybase/ub.module:ubErrors",
    "___id": "T000002R006349",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side Security exception. Throwing of such exception will trigger `Session.securityViolation` event\n * @param {string} reason\n * @constructor\n */",
    "meta": {
      "range": [
        1980,
        2519
      ],
      "filename": "ubErrors.js",
      "lineno": 53,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066549",
        "name": "ESecurityException",
        "type": "FunctionDeclaration",
        "paramnames": [
          "reason"
        ]
      },
      "vars": {
        "this.errorNumber": "module:@unitybase/ub.module:ubErrors~ESecurityException#errorNumber",
        "this.message": "module:@unitybase/ub.module:ubErrors~ESecurityException#message",
        "tmpStack": "module:@unitybase/ub.module:ubErrors~ESecurityException~tmpStack",
        "realErr": "module:@unitybase/ub.module:ubErrors~ESecurityException~realErr",
        "": null,
        "re": "module:@unitybase/ub.module:ubErrors~ESecurityException~re",
        "this.fileName": "module:@unitybase/ub.module:ubErrors~ESecurityException#fileName",
        "this.lineNumber": "module:@unitybase/ub.module:ubErrors~ESecurityException#lineNumber",
        "this.stack": "module:@unitybase/ub.module:ubErrors~ESecurityException#stack"
      }
    },
    "description": "Server-side Security exception. Throwing of such exception will trigger <code>Session.securityViolation</code> event",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "reason"
      }
    ],
    "kind": "class",
    "name": "ESecurityException",
    "longname": "module:@unitybase/ub.module:ubErrors~ESecurityException",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:ubErrors",
    "___id": "T000002R006365",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side Abort exception. To be used in server-side logic in case of HANDLED\n * exception. This errors logged using \"Error\" log level to prevent unnecessary\n * EXC log entries.\n *\n *       // UB client will show message inside <<<>>> to user (and translate it using UB.i18n)\n *       const UB = require('@unitybase/ub')\n *       throw new UB.UBAbort('<<<textToDisplayForClient>>>')\n *       // In case message should not be shown to the end used by ub-pub globalExceptionHandler `<<<>>>` can be omitted\n *       throw new UB.UBAbort('wrongParameters')\n *\n * @param {String} [message] Message\n * @extends {Error}\n * @constructor\n */",
    "meta": {
      "range": [
        705,
        1631
      ],
      "filename": "ubErrors.js",
      "lineno": 21,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066392",
        "name": "UBAbort",
        "type": "FunctionDeclaration",
        "paramnames": [
          "message"
        ]
      },
      "vars": {
        "this.name": "module:@unitybase/ub.module:ubErrors~UBAbort#name",
        "this.code": "module:@unitybase/ub.module:ubErrors~UBAbort#code",
        "this.message": "module:@unitybase/ub.module:ubErrors~UBAbort#message",
        "tmpStack": "module:@unitybase/ub.module:ubErrors~UBAbort~tmpStack",
        "realErr": "module:@unitybase/ub.module:ubErrors~UBAbort~realErr",
        "": null,
        "undefined": null,
        "this.stack": "module:@unitybase/ub.module:ubErrors~UBAbort#stack",
        "parts": "module:@unitybase/ub.module:ubErrors~UBAbort~parts",
        "this.lineNumber": "module:@unitybase/ub.module:ubErrors~UBAbort#lineNumber",
        "this.fileName": "module:@unitybase/ub.module:ubErrors~UBAbort#fileName"
      }
    },
    "description": "<p>Server-side Abort exception. To be used in server-side logic in case of HANDLED\nexception. This errors logged using &quot;Error&quot; log level to prevent unnecessary\nEXC log entries.</p>\n<pre class=\"prettyprint source\"><code>  // UB client will show message inside &lt;&lt;&lt;>>> to user (and translate it using UB.i18n)\n  const UB = require('@unitybase/ub')\n  throw new UB.UBAbort('&lt;&lt;&lt;textToDisplayForClient>>>')\n  // In case message should not be shown to the end used by ub-pub globalExceptionHandler `&lt;&lt;&lt;>>>` can be omitted\n  throw new UB.UBAbort('wrongParameters')</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Message",
        "name": "message"
      }
    ],
    "augments": [
      "Error"
    ],
    "kind": "class",
    "name": "UBAbort",
    "longname": "module:@unitybase/ub.module:ubErrors~UBAbort",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:ubErrors",
    "___id": "T000002R006350",
    "___s": true
  },
  {
    "comment": "/**\n * High level WebSocket protocols implementation.\n * TODO - rewrite for UB5(linux) using node/go as microservice\n *\n * @module web-sockets\n * @memberOf module:@unitybase/ub\n * @author pavel.mash\n */",
    "meta": {
      "filename": "web-sockets.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "High level WebSocket protocols implementation.\nTODO - rewrite for UB5(linux) using node/go as microservice",
    "kind": "module",
    "name": "web-sockets",
    "memberof": "module:@unitybase/ub",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/ub.module:web-sockets",
    "___id": "T000002R006379",
    "___s": true
  },
  {
    "comment": "/**\n * Return an instance of {@link JsonMessagesProtocol} named `ubNotifier` for Server<->Client communication using WebSocket\n *\n * In case `ubNotifier` protocol is not registered during WebSocket thread initialization\n * or not configured in config - will return `null`\n *\n * Returned {@link JsonMessagesProtocol} instance methods is limited\n * by {@link WSProtocol#getUserSessions}, {@link WSProtocol#sendTo} and {@link WSProtocol#broadcast}\n *\n * See {@tutorial web_sockets} for detailed description\n *\n * @return {JsonMessagesProtocol}\n */",
    "meta": {
      "range": [
        8836,
        9048
      ],
      "filename": "web-sockets.js",
      "lineno": 259,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100067153",
        "name": "getWSNotifier",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "_ubNotifierInstance": "module:@unitybase/ub.module:web-sockets~_ubNotifierInstance._ubNotifierInstance"
      }
    },
    "description": "Return an instance of {@link JsonMessagesProtocol} named <code>ubNotifier</code> for Server<->Client communication using WebSocket</p>\n<p>In case <code>ubNotifier</code> protocol is not registered during WebSocket thread initialization\nor not configured in config - will return <code>null</code></p>\n<p>Returned {@link JsonMessagesProtocol} instance methods is limited\nby {@link WSProtocol#getUserSessions}, {@link WSProtocol#sendTo} and {@link WSProtocol#broadcast}</p>\n<p>See {@tutorial web_sockets} for detailed description",
    "returns": [
      {
        "type": {
          "names": [
            "JsonMessagesProtocol"
          ]
        }
      }
    ],
    "name": "getWSNotifier",
    "longname": "module:@unitybase/ub.module:web-sockets~getWSNotifier",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "params": [],
    "___id": "T000002R006430",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Simple protocol for exchanging JSON commands.\n *\n * Each message transferred by a web socket is a JSON with two attributes\n *\n *      {command: {String}, params: {*}}\n *\n * Inside WebSocket threads, the class can be used to subscribe to messages arrived from clients\n * and assign handlers to it (if you need to receive web socket messages in server):\n\n      const WebSockets = require('@unitybase/ub/modules/web-sockets')\n      var wsNotifier = WebSockets.getWSNotifier()\n      if (wsNotifier) {\n        console.debug('Start subscribing to wsNotifier tsts_* events')\n        wsNotifier.on('tst_echo', function (connection, params) {\n          connection.send({\n            command: 'tst_message',\n            params: {from: connection.session.userID, message: params}\n          })\n        })\n      }\n\n * Inside http threads can be used as follows:\n *\n      const WebSockets = require('@unitybase/ub/modules/web-sockets')\n      function notifyAboutNewRecord(rowID){\n        let notifier = WebSockets.getWSNotifier()\n        if (notifier) {\n          //send message to ALL connected sessions\n          notifier.broadcast('ub_entityModification', {action: 'insert', ID: rowID})\n\n          //Send to specific user\n          var userSessions = notifier.getUserSessions(Session.userID)\n          userSessions.forEach(function(sessionID){\n              notifier.sendCommand('test_command', sessionID, {action: 'inserted', ID: rowID})\n          })\n        }\n      }\n *\n *  If WebSocket support are enabled in server config then instance of this protocol is accessible via {@link UB#wsNotifier UB.wsNotifier}\n *\n * @class JsonMessagesProtocol\n * @param {String} namedAs The name of a resulting protocol\n * @extends EventEmitter\n */",
    "meta": {
      "filename": "web-sockets.js",
      "lineno": 93,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "classdesc": "<p>Simple protocol for exchanging JSON commands.</p>\n<p>Each message transferred by a web socket is a JSON with two attributes</p>\n<pre class=\"prettyprint source\"><code> {command: {String}, params: {*}}</code></pre><p>Inside WebSocket threads, the class can be used to subscribe to messages arrived from clients\nand assign handlers to it (if you need to receive web socket messages in server):</p>\n<pre class=\"prettyprint source\"><code>  const WebSockets = require('@unitybase/ub/modules/web-sockets')\n  var wsNotifier = WebSockets.getWSNotifier()\n  if (wsNotifier) {\n    console.debug('Start subscribing to wsNotifier tsts_* events')\n    wsNotifier.on('tst_echo', function (connection, params) {\n      connection.send({\n        command: 'tst_message',\n        params: {from: connection.session.userID, message: params}\n      })\n    })\n  }</code></pre><p>Inside http threads can be used as follows:</p>\n<pre class=\"prettyprint source\"><code>  const WebSockets = require('@unitybase/ub/modules/web-sockets')\n  function notifyAboutNewRecord(rowID){\n    let notifier = WebSockets.getWSNotifier()\n    if (notifier) {\n      //send message to ALL connected sessions\n      notifier.broadcast('ub_entityModification', {action: 'insert', ID: rowID})\n\n      //Send to specific user\n      var userSessions = notifier.getUserSessions(Session.userID)\n      userSessions.forEach(function(sessionID){\n          notifier.sendCommand('test_command', sessionID, {action: 'inserted', ID: rowID})\n      })\n    }\n  }</code></pre><p> If WebSocket support are enabled in server config then instance of this protocol is accessible via {@link UB#wsNotifier UB.wsNotifier}</p>",
    "kind": "class",
    "name": "JsonMessagesProtocol",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "The name of a resulting protocol",
        "name": "namedAs"
      }
    ],
    "augments": [
      "EventEmitter"
    ],
    "longname": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "___id": "T000002R006398",
    "___s": true
  },
  {
    "comment": "/**\n   * Send specified command to all user sessions connected using this protocol\n   *\n   * @param {String} command Command to send\n   * @param {*} params Any value\n   */",
    "meta": {
      "range": [
        5972,
        6094
      ],
      "filename": "web-sockets.js",
      "lineno": 170,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066907",
        "name": "this.broadcast",
        "type": "FunctionExpression",
        "paramnames": [
          "command",
          "params"
        ]
      }
    },
    "description": "Send specified command to all user sessions connected using this protocol",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Command to send",
        "name": "command"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Any value",
        "name": "params"
      }
    ],
    "name": "broadcast",
    "longname": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol#broadcast",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
    "scope": "instance",
    "___id": "T000002R006408",
    "___s": true
  },
  {
    "comment": "/**\n   * Returns the IDs of all the sessions with established WebSocket connections\n   *\n   * @param {Number} userID User identifier (from uba_user)\n   * @return {Array<Number>}\n   */",
    "meta": {
      "range": [
        5699,
        5794
      ],
      "filename": "web-sockets.js",
      "lineno": 160,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066893",
        "name": "this.getUserSessions",
        "type": "FunctionExpression",
        "paramnames": [
          "userID"
        ]
      }
    },
    "description": "Returns the IDs of all the sessions with established WebSocket connections",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "User identifier (from uba_user)",
        "name": "userID"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Number>"
          ]
        }
      }
    ],
    "name": "getUserSessions",
    "longname": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol#getUserSessions",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
    "scope": "instance",
    "___id": "T000002R006407",
    "___s": true
  },
  {
    "comment": "/**\n   * Send specified command to recipient. Return `true` if data has been successfully sent (no guaranty it is received by client)\n   * @param {String} command Command to send\n   * @param {Number} recipient User Session identifier\n   * @param {*} params Any value\n   * @return {Boolean}\n   */",
    "meta": {
      "range": [
        5366,
        5509
      ],
      "filename": "web-sockets.js",
      "lineno": 150,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066872",
        "name": "this.sendCommand",
        "type": "FunctionExpression",
        "paramnames": [
          "command",
          "recipient",
          "params"
        ]
      }
    },
    "description": "Send specified command to recipient. Return <code>true</code> if data has been successfully sent (no guaranty it is received by client)",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Command to send",
        "name": "command"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "User Session identifier",
        "name": "recipient"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Any value",
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "sendCommand",
    "longname": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol#sendCommand",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
    "scope": "instance",
    "___id": "T000002R006404",
    "___s": true
  },
  {
    "comment": "/**\n     * @param {WebSocketConnection} connection\n     * @protected\n     */",
    "meta": {
      "range": [
        6969,
        7355
      ],
      "filename": "web-sockets.js",
      "lineno": 203,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100067026",
        "name": "me.onWSConnect",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
        "paramnames": [
          "connection"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "WebSocketConnection"
          ]
        },
        "name": "connection"
      }
    ],
    "access": "protected",
    "name": "onWSConnect",
    "longname": "module:@unitybase/ub.module:web-sockets~me.onWSConnect",
    "kind": "function",
    "scope": "static",
    "memberof": "module:@unitybase/ub.module:web-sockets~me",
    "___id": "T000002R006420",
    "___s": true
  },
  {
    "comment": "/**\n     * @param {WebSocketConnection} connection\n     * @param {String} reason\n     * @param {Number} status\n     * @protected\n     */",
    "meta": {
      "range": [
        7501,
        7851
      ],
      "filename": "web-sockets.js",
      "lineno": 220,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100067068",
        "name": "me.onWSDisconnect",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
        "paramnames": [
          "connection",
          "reason",
          "status"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "WebSocketConnection"
          ]
        },
        "name": "connection"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "reason"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "status"
      }
    ],
    "access": "protected",
    "name": "onWSDisconnect",
    "longname": "module:@unitybase/ub.module:web-sockets~me.onWSDisconnect",
    "kind": "function",
    "scope": "static",
    "memberof": "module:@unitybase/ub.module:web-sockets~me",
    "___id": "T000002R006425",
    "___s": true
  },
  {
    "comment": "/**\n     * Handle incoming messages\n     * @protected\n     * @param {WebSocketConnection} connection\n     * @param {String|ArrayBuffer} rawData\n     */",
    "meta": {
      "range": [
        6364,
        6882
      ],
      "filename": "web-sockets.js",
      "lineno": 184,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066946",
        "name": "me.onWSMessage",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~JsonMessagesProtocol",
        "paramnames": [
          "connection",
          "rawData"
        ]
      },
      "vars": {
        "msg": "module:@unitybase/ub.module:web-sockets~msg"
      }
    },
    "description": "Handle incoming messages",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "WebSocketConnection"
          ]
        },
        "name": "connection"
      },
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer"
          ]
        },
        "name": "rawData"
      }
    ],
    "name": "onWSMessage",
    "longname": "module:@unitybase/ub.module:web-sockets~me.onWSMessage",
    "kind": "function",
    "scope": "static",
    "memberof": "module:@unitybase/ub.module:web-sockets~me",
    "___id": "T000002R006411",
    "___s": true
  },
  {
    "comment": "/**\n * Return array of currently registered WS protocol names\n * @returns {Array<string>}\n */",
    "meta": {
      "range": [
        8104,
        8216
      ],
      "filename": "web-sockets.js",
      "lineno": 239,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100067128",
        "name": "registeredProtocols",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "wsBinding": "module:@unitybase/ub.module:web-sockets~registeredProtocols~wsBinding"
      }
    },
    "description": "Return array of currently registered WS protocol names",
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "name": "registeredProtocols",
    "longname": "module:@unitybase/ub.module:web-sockets~registeredProtocols",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "params": [],
    "___id": "T000002R006427",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n *  Internal server-side WebSocket transport layer, which communicates with clients using low-level binding classes.\n *  Usually there is no need to use this class directly, it is better to use an instance of {@link JsonMessagesProtocol} from {@link UB.wsNotifier}\n *\n *  Server emits three types of event on the protocol level:\n *\n *   - `connect`, parameters are: ({WebSocketConnection} wsConn)\n *   - `disconnect`, parameters are: ({WebSocketConnection} wsConn, {String} closeReason, {Number} closeStatus) http://tools.ietf.org/html/rfc6455#section-7.4\n *   - `message`, parameters are: ({WebSocketConnection} wsConn, {String|ArrayBudder} message)\n *\n * @param {Object} props\n * @param {String} props.name\n * @param {String} props.handledAs\n * @class WebSocketTransport\n * @protected\n * @extends EventEmitter\n */",
    "meta": {
      "filename": "web-sockets.js",
      "lineno": 13,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "classdesc": "<p>Internal server-side WebSocket transport layer, which communicates with clients using low-level binding classes.\n Usually there is no need to use this class directly, it is better to use an instance of {@link JsonMessagesProtocol} from {@link UB.wsNotifier}</p>\n<p> Server emits three types of event on the protocol level:</p>\n<ul>\n<li><code>connect</code>, parameters are: ({WebSocketConnection} wsConn)</li>\n<li><code>disconnect</code>, parameters are: ({WebSocketConnection} wsConn, {String} closeReason, {Number} closeStatus) http://tools.ietf.org/html/rfc6455#section-7.4</li>\n<li><code>message</code>, parameters are: ({WebSocketConnection} wsConn, {String|ArrayBudder} message)</li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "props"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "props.name"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "props.handledAs"
      }
    ],
    "kind": "class",
    "name": "WebSocketTransport",
    "access": "protected",
    "augments": [
      "EventEmitter"
    ],
    "longname": "module:@unitybase/ub.module:web-sockets~WebSocketTransport",
    "scope": "inner",
    "memberof": "module:@unitybase/ub.module:web-sockets",
    "___id": "T000002R006382",
    "___s": true
  },
  {
    "comment": "/**\n       * Send a data package to all protocol sessions.\n       *\n       * @param {String|Object|ArrayBuffer} data\n       */",
    "meta": {
      "range": [
        3048,
        3145
      ],
      "filename": "web-sockets.js",
      "lineno": 85,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066837",
        "name": "wsProtocol.broadcast",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~WebSocketTransport",
        "paramnames": [
          "data"
        ]
      }
    },
    "description": "Send a data package to all protocol sessions.",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "Object",
            "ArrayBuffer"
          ]
        },
        "name": "data"
      }
    ],
    "name": "broadcast",
    "longname": "module:@unitybase/ub.module:web-sockets~wsProtocol.broadcast",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~wsProtocol",
    "scope": "static",
    "___id": "T000002R006397",
    "___s": true
  },
  {
    "comment": "/**\n       *\n       * @param {Number} sessionID\n       * @param {String} reason\n       */",
    "meta": {
      "range": [
        2705,
        2907
      ],
      "filename": "web-sockets.js",
      "lineno": 75,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066806",
        "name": "wsProtocol.closeSession",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~WebSocketTransport",
        "paramnames": [
          "sessionID",
          "reason"
        ]
      },
      "vars": {
        "data": "module:@unitybase/ub.module:web-sockets~wsProtocol.closeSession~data"
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "sessionID"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "reason"
      }
    ],
    "name": "closeSession",
    "longname": "module:@unitybase/ub.module:web-sockets~wsProtocol.closeSession",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~wsProtocol",
    "scope": "static",
    "___id": "T000002R006395",
    "___s": true
  },
  {
    "comment": "/**\n       * Send a data package to specified session ID.\n       * Return true on success, false in case WS connection for the specified session is lost or closed/closing\n       *\n       * @param {Number} sessionID\n       * @param {String|Object|ArrayBuffer} data\n       * @return {Boolean}\n       */",
    "meta": {
      "range": [
        2483,
        2601
      ],
      "filename": "web-sockets.js",
      "lineno": 66,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066789",
        "name": "wsProtocol.sendTo",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~WebSocketTransport",
        "paramnames": [
          "sessionID",
          "data"
        ]
      }
    },
    "description": "Send a data package to specified session ID.\nReturn true on success, false in case WS connection for the specified session is lost or closed/closing",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "sessionID"
      },
      {
        "type": {
          "names": [
            "String",
            "Object",
            "ArrayBuffer"
          ]
        },
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "sendTo",
    "longname": "module:@unitybase/ub.module:web-sockets~wsProtocol.sendTo",
    "kind": "function",
    "memberof": "module:@unitybase/ub.module:web-sockets~wsProtocol",
    "scope": "static",
    "___id": "T000002R006394",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new instance of {@link ServerRepository}\n   *\n   * @param {String} entityName\n   * @param {Object} [cfg]\n   * @param {SyncConnection} [connection] Pass in case of remote UnityBase server connection.\n   * @returns {ServerRepository}\n   */",
    "meta": {
      "range": [
        2028,
        2179
      ],
      "filename": "modelUB.js",
      "lineno": 52,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051130",
        "name": "Repository",
        "type": "FunctionExpression"
      },
      "vars": {
        "connection": "module:@unitybase/ub~connection"
      }
    },
    "description": "Create new instance of {@link ServerRepository}",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "cfg"
      },
      {
        "type": {
          "names": [
            "SyncConnection"
          ]
        },
        "optional": true,
        "description": "Pass in case of remote UnityBase server connection.",
        "name": "connection"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ServerRepository"
          ]
        }
      }
    ],
    "name": "Repository",
    "longname": "module:@unitybase/ub.Repository",
    "kind": "function",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004594",
    "___s": true
  },
  {
    "comment": "/**\n   * Information about the logged in user\n   * @type {Session}\n   */",
    "meta": {
      "range": [
        2293,
        2309
      ],
      "filename": "modelUB.js",
      "lineno": 61,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051153",
        "name": "Session",
        "type": "Identifier",
        "value": "Session"
      }
    },
    "description": "Information about the logged in user",
    "type": {
      "names": [
        "Session"
      ]
    },
    "name": "Session",
    "longname": "module:@unitybase/ub.Session",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004597",
    "___s": true
  },
  {
    "comment": "/**\n   * Server-side Abort exception. To be used in server-side logic in case of HANDLED\n   * exception. This errors logged using \"Error\" log level to prevent unnecessary\n   * EXC log entries.\n   * @type {UBAbort}\n   */",
    "meta": {
      "range": [
        1508,
        1531
      ],
      "filename": "modelUB.js",
      "lineno": 35,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051118",
        "name": "UBAbort",
        "type": "MemberExpression",
        "value": "Errors.UBAbort"
      }
    },
    "description": "Server-side Abort exception. To be used in server-side logic in case of HANDLED\nexception. This errors logged using &quot;Error&quot; log level to prevent unnecessary\nEXC log entries.",
    "type": {
      "names": [
        "UBAbort"
      ]
    },
    "name": "UBAbort",
    "longname": "module:@unitybase/ub.UBAbort",
    "kind": "member",
    "memberof": "module:@unitybase/ub",
    "scope": "static",
    "___id": "T000002R004590",
    "___s": true
  },
  {
    "comment": "/**\n * UnityBase Administrative model. Define users, roles and permissions\n * @version 5.0.10\n * @module @unitybase/uba\n */",
    "meta": {
      "filename": "_UBA_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/uba",
    "longname": "module:@unitybase/uba",
    "readme": "<p>﻿</p>\n<h1>The administration model</h1><p>This model defines users, roles and permissions for UnityBase.</p>",
    "___id": "T000002R004645",
    "___s": true
  },
  {
    "comment": "/**\n* Advanced security settings.\n * For any authentication type add binding of user to IP address. For CERT additionaly add a binding to device fingerprint\n* @type {uba_advSecurity_ns}\n*/",
    "meta": {
      "range": [
        2422,
        2464
      ],
      "filename": "_UBA_entities.js",
      "lineno": 101,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051675",
        "name": "uba_advSecurity",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Advanced security settings.\nFor any authentication type add binding of user to IP address. For CERT additionaly add a binding to device fingerprint",
    "type": {
      "names": [
        "uba_advSecurity_ns"
      ]
    },
    "name": "uba_advSecurity",
    "longname": "module:@unitybase/uba~uba_advSecurity",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004663",
    "___s": true
  },
  {
    "comment": "/**\n * Advanced security settings.\n * For any authentication type add binding of user to IP address. For CERT additionaly add a binding to device fingerprint\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        646,
        697
      ],
      "filename": "_UBA_entities.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051632",
        "name": "uba_advSecurity_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Advanced security settings.\nFor any authentication type add binding of user to IP address. For CERT additionaly add a binding to device fingerprint</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_advSecurity_ns",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004646",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        798,
        2226
      ],
      "filename": "_UBA_entities.js",
      "lineno": 20,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051637",
        "name": "uba_advSecurity_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"userID\":0,\"editCause\":\"\",\"allowedIP\":null,\"refreshIP\":\"\",\"fp\":null,\"refreshFp\":\"\",\"keyMediaName\":null,\"refreshKeyMedia\":\"\",\"additional\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "static",
    "___id": "T000002R004647",
    "___s": true
  },
  {
    "comment": "/**\n  * JSON with advanced settings\n  * This settings can be handled in Session.on login event\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1815,
        1831
      ],
      "filename": "_UBA_entities.js",
      "lineno": 69,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051660",
        "name": "additional",
        "type": "Literal",
        "value": null
      }
    },
    "description": "JSON with advanced settings\nThis settings can be handled in Session.on login event",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "additional",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.additional",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004657",
    "___s": true
  },
  {
    "comment": "/**\n  * The ID address from which the user is allowed access. If empty - allowed from any\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1124,
        1139
      ],
      "filename": "_UBA_entities.js",
      "lineno": 38,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051648",
        "name": "allowedIP",
        "type": "Literal",
        "value": null
      }
    },
    "description": "The ID address from which the user is allowed access. If empty - allowed from any",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "allowedIP",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.allowedIP",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004651",
    "___s": true
  },
  {
    "comment": "/**\n  * Filled by supervisor to indicate cause of changes\n  * @type {String}\n  */",
    "meta": {
      "range": [
        992,
        1005
      ],
      "filename": "_UBA_entities.js",
      "lineno": 33,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051646",
        "name": "editCause",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Filled by supervisor to indicate cause of changes",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "editCause",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.editCause",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004650",
    "___s": true
  },
  {
    "comment": "/**\n  * Fingerprint of user device. If empty - not checked\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1341,
        1349
      ],
      "filename": "_UBA_entities.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051652",
        "name": "fp",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Fingerprint of user device. If empty - not checked",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fp",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.fp",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004653",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        858,
        863
      ],
      "filename": "_UBA_entities.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051642",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004648",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of key media device\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1541,
        1559
      ],
      "filename": "_UBA_entities.js",
      "lineno": 58,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051656",
        "name": "keyMediaName",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name of key media device",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "keyMediaName",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.keyMediaName",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004655",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1950,
        1975
      ],
      "filename": "_UBA_entities.js",
      "lineno": 79,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051664",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004659",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2044,
        2060
      ],
      "filename": "_UBA_entities.js",
      "lineno": 84,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051667",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004660",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2113,
        2138
      ],
      "filename": "_UBA_entities.js",
      "lineno": 89,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051669",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004661",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2207,
        2223
      ],
      "filename": "_UBA_entities.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051672",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004662",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1890,
        1901
      ],
      "filename": "_UBA_entities.js",
      "lineno": 74,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051662",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004658",
    "___s": true
  },
  {
    "comment": "/**\n  * If turned on will refresh Fingerpring of user device on firs user logon\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1459,
        1479
      ],
      "filename": "_UBA_entities.js",
      "lineno": 53,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051654",
        "name": "refreshFp",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "If turned on will refresh Fingerpring of user device on firs user logon",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "refreshFp",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.refreshFp",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004654",
    "___s": true
  },
  {
    "comment": "/**\n  * If turned on will refresh allowed IP on firs user logon\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1233,
        1253
      ],
      "filename": "_UBA_entities.js",
      "lineno": 43,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051650",
        "name": "refreshIP",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "If turned on will refresh allowed IP on firs user logon",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "refreshIP",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.refreshIP",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004652",
    "___s": true
  },
  {
    "comment": "/**\n  * If turned on will refresh key media name of user private key device\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1665,
        1691
      ],
      "filename": "_UBA_entities.js",
      "lineno": 63,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051658",
        "name": "refreshKeyMedia",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "If turned on will refresh key media name of user private key device",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "refreshKeyMedia",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.refreshKeyMedia",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004656",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        896,
        905
      ],
      "filename": "_UBA_entities.js",
      "lineno": 28,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051644",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns.attrs",
    "scope": "static",
    "___id": "T000002R004649",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010376",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010375",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010799",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010373",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010372",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_advSecurity_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_advSecurity_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010374",
    "___s": true
  },
  {
    "comment": "/**\n* Attribute level security\n* @type {uba_als_ns}\n*/",
    "meta": {
      "range": [
        3033,
        3059
      ],
      "filename": "_UBA_entities.js",
      "lineno": 139,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051702",
        "name": "uba_als",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Attribute level security",
    "type": {
      "names": [
        "uba_als_ns"
      ]
    },
    "name": "uba_als",
    "longname": "module:@unitybase/uba~uba_als",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004672",
    "___s": true
  },
  {
    "comment": "/**\n * Attribute level security\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        2548,
        2591
      ],
      "filename": "_UBA_entities.js",
      "lineno": 107,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051679",
        "name": "uba_als_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Attribute level security</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_als_ns",
    "longname": "module:@unitybase/uba~uba_als_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004664",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2692,
        2971
      ],
      "filename": "_UBA_entities.js",
      "lineno": 109,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051684",
        "name": "uba_als_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"entity\":\"\",\"attribute\":\"\",\"state\":\"\",\"roleName\":\"\",\"actions\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "static",
    "___id": "T000002R004665",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2958,
        2968
      ],
      "filename": "_UBA_entities.js",
      "lineno": 133,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051699",
        "name": "actions",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "actions",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.actions",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004671",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2825,
        2838
      ],
      "filename": "_UBA_entities.js",
      "lineno": 121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051693",
        "name": "attribute",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "attribute",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.attribute",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004668",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2782,
        2792
      ],
      "filename": "_UBA_entities.js",
      "lineno": 117,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051691",
        "name": "entity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004667",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2744,
        2749
      ],
      "filename": "_UBA_entities.js",
      "lineno": 113,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051689",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004666",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2913,
        2925
      ],
      "filename": "_UBA_entities.js",
      "lineno": 129,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051697",
        "name": "roleName",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "roleName",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.roleName",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004670",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2871,
        2880
      ],
      "filename": "_UBA_entities.js",
      "lineno": 125,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051695",
        "name": "state",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "state",
    "longname": "module:@unitybase/uba~uba_als_ns.attrs.state",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns.attrs",
    "scope": "static",
    "___id": "T000002R004669",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_als_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010381",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_als_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010380",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_als_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010800",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_als_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010378",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_als_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010377",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_als_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010379",
    "___s": true
  },
  {
    "comment": "/**\n* Security changes audit.\n * All changes to UBA model entities (except uba_als &amp; uba_subject) + user login related event are logged here\n* @type {uba_audit_ns}\n*/",
    "meta": {
      "range": [
        4284,
        4314
      ],
      "filename": "_UBA_entities.js",
      "lineno": 205,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051740",
        "name": "uba_audit",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Security changes audit.\nAll changes to UBA model entities (except uba_als &amp; uba_subject) + user login related event are logged here",
    "type": {
      "names": [
        "uba_audit_ns"
      ]
    },
    "name": "uba_audit",
    "longname": "module:@unitybase/uba~uba_audit",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004686",
    "___s": true
  },
  {
    "comment": "/**\n * Security changes audit.\n * All changes to UBA model entities (except uba_als &amp; uba_subject) + user login related event are logged here\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        3257,
        3302
      ],
      "filename": "_UBA_entities.js",
      "lineno": 146,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051706",
        "name": "uba_audit_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Security changes audit.\nAll changes to UBA model entities (except uba_als &amp; uba_subject) + user login related event are logged here</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_audit_ns",
    "longname": "module:@unitybase/uba~uba_audit_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004673",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        3403,
        4106
      ],
      "filename": "_UBA_entities.js",
      "lineno": 148,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051711",
        "name": "uba_audit_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"entity\":\"\",\"entityinfo_id\":0,\"actionType\":\"\",\"actionUser\":\"\",\"actionTime\":\"\",\"remoteIP\":null,\"targetUser\":null,\"targetRole\":null,\"fromValue\":null,\"toValue\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "static",
    "___id": "T000002R004674",
    "___s": true
  },
  {
    "comment": "/**\n  * Action time\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3715,
        3737
      ],
      "filename": "_UBA_entities.js",
      "lineno": 175,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051726",
        "name": "actionTime",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Action time",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "actionTime",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.actionTime",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004680",
    "___s": true
  },
  {
    "comment": "/**\n  * Action\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3598,
        3612
      ],
      "filename": "_UBA_entities.js",
      "lineno": 165,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051722",
        "name": "actionType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Action",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "actionType",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.actionType",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004678",
    "___s": true
  },
  {
    "comment": "/**\n  * User\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3654,
        3668
      ],
      "filename": "_UBA_entities.js",
      "lineno": 170,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051724",
        "name": "actionUser",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "User",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "actionUser",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.actionUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004679",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3495,
        3505
      ],
      "filename": "_UBA_entities.js",
      "lineno": 156,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051718",
        "name": "entity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004676",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3538,
        3554
      ],
      "filename": "_UBA_entities.js",
      "lineno": 160,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051720",
        "name": "entityinfo_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "entityinfo_id",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.entityinfo_id",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004677",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4042,
        4057
      ],
      "filename": "_UBA_entities.js",
      "lineno": 194,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051735",
        "name": "fromValue",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fromValue",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.fromValue",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004684",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3457,
        3462
      ],
      "filename": "_UBA_entities.js",
      "lineno": 152,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051716",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004675",
    "___s": true
  },
  {
    "comment": "/**\n  * Caller remote IP address\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3799,
        3813
      ],
      "filename": "_UBA_entities.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051729",
        "name": "remoteIP",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Caller remote IP address",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "remoteIP",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.remoteIP",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004681",
    "___s": true
  },
  {
    "comment": "/**\n  * The role name for which the data has changed\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3993,
        4009
      ],
      "filename": "_UBA_entities.js",
      "lineno": 190,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051733",
        "name": "targetRole",
        "type": "Literal",
        "value": null
      }
    },
    "description": "The role name for which the data has changed",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "targetRole",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.targetRole",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004683",
    "___s": true
  },
  {
    "comment": "/**\n  * The user name for which the data has changed\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3895,
        3911
      ],
      "filename": "_UBA_entities.js",
      "lineno": 185,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051731",
        "name": "targetUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "The user name for which the data has changed",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "targetUser",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.targetUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004682",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4090,
        4103
      ],
      "filename": "_UBA_entities.js",
      "lineno": 198,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051737",
        "name": "toValue",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "toValue",
    "longname": "module:@unitybase/uba~uba_audit_ns.attrs.toValue",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns.attrs",
    "scope": "static",
    "___id": "T000002R004685",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_audit_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010386",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_audit_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010385",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_audit_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010801",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_audit_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010383",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_audit_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010382",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_audit_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010384",
    "___s": true
  },
  {
    "comment": "/**\n* Data changes audit.\n * All DML statement for entity with mixin &#39;audit&#39; logged here\n* @type {uba_auditTrail_ns}\n*/",
    "meta": {
      "range": [
        5409,
        5449
      ],
      "filename": "_UBA_entities.js",
      "lineno": 269,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051778",
        "name": "uba_auditTrail",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Data changes audit.\nAll DML statement for entity with mixin 'audit' logged here",
    "type": {
      "names": [
        "uba_auditTrail_ns"
      ]
    },
    "name": "uba_auditTrail",
    "longname": "module:@unitybase/uba~uba_auditTrail",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004700",
    "___s": true
  },
  {
    "comment": "/**\n * Data changes audit.\n * All DML statement for entity with mixin &#39;audit&#39; logged here\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        4464,
        4514
      ],
      "filename": "_UBA_entities.js",
      "lineno": 212,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051744",
        "name": "uba_auditTrail_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Data changes audit.\nAll DML statement for entity with mixin 'audit' logged here</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_auditTrail_ns",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004687",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        4615,
        5274
      ],
      "filename": "_UBA_entities.js",
      "lineno": 214,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051749",
        "name": "uba_auditTrail_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"entity\":\"\",\"entityinfo_id\":0,\"actionType\":\"\",\"actionUser\":0,\"actionTime\":\"\",\"remoteIP\":null,\"fromValue\":null,\"toValue\":null,\"parentEntity\":null,\"parentEntityInfo_id\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "static",
    "___id": "T000002R004688",
    "___s": true
  },
  {
    "comment": "/**\n  * Action time\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4943,
        4965
      ],
      "filename": "_UBA_entities.js",
      "lineno": 241,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051764",
        "name": "actionTime",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Action time",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "actionTime",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.actionTime",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004694",
    "___s": true
  },
  {
    "comment": "/**\n  * Action\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4815,
        4829
      ],
      "filename": "_UBA_entities.js",
      "lineno": 231,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051760",
        "name": "actionType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Action",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "actionType",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.actionType",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004692",
    "___s": true
  },
  {
    "comment": "/**\n  * User -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4883,
        4896
      ],
      "filename": "_UBA_entities.js",
      "lineno": 236,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051762",
        "name": "actionUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "actionUser",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.actionUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004693",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4712,
        4722
      ],
      "filename": "_UBA_entities.js",
      "lineno": 222,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051756",
        "name": "entity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004690",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4755,
        4771
      ],
      "filename": "_UBA_entities.js",
      "lineno": 226,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051758",
        "name": "entityinfo_id",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "entityinfo_id",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.entityinfo_id",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004691",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5101,
        5116
      ],
      "filename": "_UBA_entities.js",
      "lineno": 250,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051769",
        "name": "fromValue",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fromValue",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.fromValue",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004696",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4674,
        4679
      ],
      "filename": "_UBA_entities.js",
      "lineno": 218,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051754",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004689",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5195,
        5213
      ],
      "filename": "_UBA_entities.js",
      "lineno": 258,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051773",
        "name": "parentEntity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "parentEntity",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.parentEntity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004698",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5246,
        5271
      ],
      "filename": "_UBA_entities.js",
      "lineno": 262,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051775",
        "name": "parentEntityInfo_id",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentEntityInfo_id",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.parentEntityInfo_id",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004699",
    "___s": true
  },
  {
    "comment": "/**\n  * Caller remote IP address. NULL in case of localhost\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5054,
        5068
      ],
      "filename": "_UBA_entities.js",
      "lineno": 246,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051767",
        "name": "remoteIP",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Caller remote IP address. NULL in case of localhost",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "remoteIP",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.remoteIP",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004695",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5149,
        5162
      ],
      "filename": "_UBA_entities.js",
      "lineno": 254,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051771",
        "name": "toValue",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "toValue",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns.attrs.toValue",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns.attrs",
    "scope": "static",
    "___id": "T000002R004697",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010391",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010390",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010802",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010388",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010387",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_auditTrail_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_auditTrail_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010389",
    "___s": true
  },
  {
    "comment": "/**\n* Describe, which role have access permissions to Entities methods.\n * Administering of entity level. The system checks the access by the rule &quot;Allowed and NOT Prohibited&quot;\n* @type {uba_els_ns}\n*/",
    "meta": {
      "range": [
        7896,
        7922
      ],
      "filename": "_UBA_entities.js",
      "lineno": 361,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051821",
        "name": "uba_els",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Describe, which role have access permissions to Entities methods.\nAdministering of entity level. The system checks the access by the rule &quot;Allowed and NOT Prohibited&quot;",
    "type": {
      "names": [
        "uba_els_ns"
      ]
    },
    "name": "uba_els",
    "longname": "module:@unitybase/uba~uba_els",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004716",
    "___s": true
  },
  {
    "comment": "/**\n * Describe, which role have access permissions to Entities methods.\n * Administering of entity level. The system checks the access by the rule &quot;Allowed and NOT Prohibited&quot;\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        5688,
        5731
      ],
      "filename": "_UBA_entities.js",
      "lineno": 276,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051782",
        "name": "uba_els_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Describe, which role have access permissions to Entities methods.\nAdministering of entity level. The system checks the access by the rule &quot;Allowed and NOT Prohibited&quot;</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_els_ns",
    "longname": "module:@unitybase/uba~uba_els_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004701",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        5832,
        7679
      ],
      "filename": "_UBA_entities.js",
      "lineno": 278,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051787",
        "name": "uba_els_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":null,\"description\":\"\",\"disabled\":\"\",\"entityMask\":\"\",\"methodMask\":\"\",\"ruleType\":\"\",\"ruleRole\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "static",
    "___id": "T000002R004702",
    "___s": true
  },
  {
    "comment": "/**\n  * Code for ELS rule\n  * This field is used by migrations for automatically update rules. It recommended to use your model code as rule prefix.\n        We do not set this attribute to unique, because some external models use the same code for different rules.\n        But all UnityBase models set this attribute to unique value\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6251,
        6261
      ],
      "filename": "_UBA_entities.js",
      "lineno": 290,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051794",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Code for ELS rule\nThis field is used by migrations for automatically update rules. It recommended to use your model code as rule prefix.\n        We do not set this attribute to unique, because some external models use the same code for different rules.\n        But all UnityBase models set this attribute to unique value",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004704",
    "___s": true
  },
  {
    "comment": "/**\n  * Rule description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6315,
        6330
      ],
      "filename": "_UBA_entities.js",
      "lineno": 295,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051796",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Rule description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004705",
    "___s": true
  },
  {
    "comment": "/**\n  * Rule is disabled\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        6385,
        6404
      ],
      "filename": "_UBA_entities.js",
      "lineno": 300,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051798",
        "name": "disabled",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Rule is disabled",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "disabled",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.disabled",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004706",
    "___s": true
  },
  {
    "comment": "/**\n  * <h4>Masks wildchars:</h4> <ul>\n        <li>*\t   \tMatches any contiguous characters</li>\n        <li>?\t   \tMatches any single characer</li>\n        <li>[abc]  \tMatches a or b or c at that position</li>\n        <li>[^abc]\tMatches anything but a or b or c at that position</li>\n        <li>[!abc]\tMatches anything but a or b or c at that position</li>\n        <li>[a-e]  \tMatches a through e at that position</li>\n        <li>[abcx-z]  Matches a or b or c or x or y or or z, as does [a-cx-z]</li>\n        </ul>\n        Example: [iu]* match any string start from either 'i' or 'u' like: 'insetr', 'inner', 'update',...\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7056,
        7070
      ],
      "filename": "_UBA_entities.js",
      "lineno": 314,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051800",
        "name": "entityMask",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "<h4>Masks wildchars:</h4> <ul>\n        <li><em>           Matches any contiguous characters</li>\n        <li>?           Matches any single characer</li>\n        <li>[abc]      Matches a or b or c at that position</li>\n        <li>[^abc]    Matches anything but a or b or c at that position</li>\n        <li>[!abc]    Matches anything but a or b or c at that position</li>\n        <li>[a-e]      Matches a through e at that position</li>\n        <li>[abcx-z]  Matches a or b or c or x or y or or z, as does [a-cx-z]</li>\n        </ul>\n        Example: [iu]</em> match any string start from either 'i' or 'u' like: 'insetr', 'inner', 'update',...",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entityMask",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.entityMask",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004707",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5884,
        5889
      ],
      "filename": "_UBA_entities.js",
      "lineno": 282,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051792",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004703",
    "___s": true
  },
  {
    "comment": "/**\n  * Method mask\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7119,
        7133
      ],
      "filename": "_UBA_entities.js",
      "lineno": 319,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051802",
        "name": "methodMask",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Method mask",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "methodMask",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.methodMask",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004708",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7403,
        7428
      ],
      "filename": "_UBA_entities.js",
      "lineno": 339,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051810",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004712",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7497,
        7513
      ],
      "filename": "_UBA_entities.js",
      "lineno": 344,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051813",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004713",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7566,
        7591
      ],
      "filename": "_UBA_entities.js",
      "lineno": 349,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051815",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004714",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7660,
        7676
      ],
      "filename": "_UBA_entities.js",
      "lineno": 354,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051818",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004715",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7343,
        7354
      ],
      "filename": "_UBA_entities.js",
      "lineno": 334,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051808",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004711",
    "___s": true
  },
  {
    "comment": "/**\n  * Role for which the rule applies -> uba_role\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7273,
        7284
      ],
      "filename": "_UBA_entities.js",
      "lineno": 329,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051806",
        "name": "ruleRole",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Role for which the rule applies -&gt; uba_role",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ruleRole",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.ruleRole",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004710",
    "___s": true
  },
  {
    "comment": "/**\n  * Rule type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7180,
        7192
      ],
      "filename": "_UBA_entities.js",
      "lineno": 324,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051804",
        "name": "ruleType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Rule type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ruleType",
    "longname": "module:@unitybase/uba~uba_els_ns.attrs.ruleType",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns.attrs",
    "scope": "static",
    "___id": "T000002R004709",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_els_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010396",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_els_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010395",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_els_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010803",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_els_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010393",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_els_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010392",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_els_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_els_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010394",
    "___s": true
  },
  {
    "comment": "/**\n* User groups\n* @type {uba_group_ns}\n*/",
    "meta": {
      "range": [
        8881,
        8911
      ],
      "filename": "_UBA_entities.js",
      "lineno": 419,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051856",
        "name": "uba_group",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "User groups",
    "type": {
      "names": [
        "uba_group_ns"
      ]
    },
    "name": "uba_group",
    "longname": "module:@unitybase/uba~uba_group",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004728",
    "___s": true
  },
  {
    "comment": "/**\n * User groups\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes unity\n */",
    "meta": {
      "range": [
        8009,
        8054
      ],
      "filename": "_UBA_entities.js",
      "lineno": 368,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051825",
        "name": "uba_group_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>User groups</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "unity"
    ],
    "name": "uba_group_ns",
    "longname": "module:@unitybase/uba~uba_group_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004717",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        8155,
        8830
      ],
      "filename": "_UBA_entities.js",
      "lineno": 370,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051830",
        "name": "uba_group_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"description\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "static",
    "___id": "T000002R004718",
    "___s": true
  },
  {
    "comment": "/**\n  * Group code. Used by APIs and scripts\n  * Unique group code. Used by APIs and scripts\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8336,
        8344
      ],
      "filename": "_UBA_entities.js",
      "lineno": 380,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051837",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Group code. Used by APIs and scripts\nUnique group code. Used by APIs and scripts",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004720",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8418,
        8435
      ],
      "filename": "_UBA_entities.js",
      "lineno": 388,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051841",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004722",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8209,
        8214
      ],
      "filename": "_UBA_entities.js",
      "lineno": 374,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051835",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004719",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8554,
        8579
      ],
      "filename": "_UBA_entities.js",
      "lineno": 398,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051845",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004724",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8648,
        8664
      ],
      "filename": "_UBA_entities.js",
      "lineno": 403,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051848",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004725",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8717,
        8742
      ],
      "filename": "_UBA_entities.js",
      "lineno": 408,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051850",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004726",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8811,
        8827
      ],
      "filename": "_UBA_entities.js",
      "lineno": 413,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051853",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004727",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8494,
        8505
      ],
      "filename": "_UBA_entities.js",
      "lineno": 393,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051843",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004723",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8377,
        8385
      ],
      "filename": "_UBA_entities.js",
      "lineno": 384,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051839",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/uba~uba_group_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns.attrs",
    "scope": "static",
    "___id": "T000002R004721",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_group_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010401",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_group_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010400",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_group_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010804",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_group_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010398",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_group_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010397",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_group_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_group_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010399",
    "___s": true
  },
  {
    "comment": "/**\n* Roles assigned to groups\n* @type {uba_grouprole_ns}\n*/",
    "meta": {
      "range": [
        9756,
        9794
      ],
      "filename": "_UBA_entities.js",
      "lineno": 470,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051889",
        "name": "uba_grouprole",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Roles assigned to groups",
    "type": {
      "names": [
        "uba_grouprole_ns"
      ]
    },
    "name": "uba_grouprole",
    "longname": "module:@unitybase/uba~uba_grouprole",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004739",
    "___s": true
  },
  {
    "comment": "/**\n * Roles assigned to groups\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        8995,
        9044
      ],
      "filename": "_UBA_entities.js",
      "lineno": 425,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051860",
        "name": "uba_grouprole_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Roles assigned to groups</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_grouprole_ns",
    "longname": "module:@unitybase/uba~uba_grouprole_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004729",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        9145,
        9688
      ],
      "filename": "_UBA_entities.js",
      "lineno": 427,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051865",
        "name": "uba_grouprole_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"groupID\":0,\"roleID\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "static",
    "___id": "T000002R004730",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9241,
        9251
      ],
      "filename": "_UBA_entities.js",
      "lineno": 435,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051872",
        "name": "groupID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "groupID",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.groupID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004732",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9203,
        9208
      ],
      "filename": "_UBA_entities.js",
      "lineno": 431,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051870",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004731",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9412,
        9437
      ],
      "filename": "_UBA_entities.js",
      "lineno": 449,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051878",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004735",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9506,
        9522
      ],
      "filename": "_UBA_entities.js",
      "lineno": 454,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051881",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004736",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        9575,
        9600
      ],
      "filename": "_UBA_entities.js",
      "lineno": 459,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051883",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004737",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9669,
        9685
      ],
      "filename": "_UBA_entities.js",
      "lineno": 464,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051886",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004738",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9352,
        9363
      ],
      "filename": "_UBA_entities.js",
      "lineno": 444,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051876",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004734",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9284,
        9293
      ],
      "filename": "_UBA_entities.js",
      "lineno": 439,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051874",
        "name": "roleID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "roleID",
    "longname": "module:@unitybase/uba~uba_grouprole_ns.attrs.roleID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004733",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010406",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010405",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010805",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010403",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010402",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_grouprole_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_grouprole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010404",
    "___s": true
  },
  {
    "comment": "/**\n* One time passwords.\n * One-time-password generation and verification\n* @type {uba_otp_ns}\n*/",
    "meta": {
      "range": [
        11308,
        11334
      ],
      "filename": "_UBA_entities.js",
      "lineno": 551,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051934",
        "name": "uba_otp",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "One time passwords.\nOne-time-password generation and verification",
    "type": {
      "names": [
        "uba_otp_ns"
      ]
    },
    "name": "uba_otp",
    "longname": "module:@unitybase/uba~uba_otp",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004755",
    "___s": true
  },
  {
    "comment": "/**\n * One time passwords.\n * One-time-password generation and verification\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        9922,
        9965
      ],
      "filename": "_UBA_entities.js",
      "lineno": 477,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051893",
        "name": "uba_otp_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>One time passwords.\nOne-time-password generation and verification</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_otp_ns",
    "longname": "module:@unitybase/uba~uba_otp_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004740",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        10066,
        11202
      ],
      "filename": "_UBA_entities.js",
      "lineno": 479,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051898",
        "name": "uba_otp_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"otp\":\"\",\"userID\":0,\"uData\":null,\"expiredDate\":\"\",\"otpKind\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "static",
    "___id": "T000002R004741",
    "___s": true
  },
  {
    "comment": "/**\n  * Expired date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10546,
        10569
      ],
      "filename": "_UBA_entities.js",
      "lineno": 504,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051911",
        "name": "expiredDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Expired date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "expiredDate",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.expiredDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004746",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10118,
        10123
      ],
      "filename": "_UBA_entities.js",
      "lineno": 483,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051903",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004742",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10764,
        10789
      ],
      "filename": "_UBA_entities.js",
      "lineno": 519,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051918",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004749",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10858,
        10874
      ],
      "filename": "_UBA_entities.js",
      "lineno": 524,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051921",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004750",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11086,
        11111
      ],
      "filename": "_UBA_entities.js",
      "lineno": 539,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051928",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004753",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11180,
        11199
      ],
      "filename": "_UBA_entities.js",
      "lineno": 544,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051931",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004754",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        10927,
        10952
      ],
      "filename": "_UBA_entities.js",
      "lineno": 529,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051923",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004751",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11021,
        11037
      ],
      "filename": "_UBA_entities.js",
      "lineno": 534,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051926",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004752",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10704,
        10715
      ],
      "filename": "_UBA_entities.js",
      "lineno": 514,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051916",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004748",
    "___s": true
  },
  {
    "comment": "/**\n  * Generated one time password\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10188,
        10195
      ],
      "filename": "_UBA_entities.js",
      "lineno": 488,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051905",
        "name": "otp",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Generated one time password",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "otp",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.otp",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004743",
    "___s": true
  },
  {
    "comment": "/**\n  * Kind of otp(Email, SMS etc)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10634,
        10645
      ],
      "filename": "_UBA_entities.js",
      "lineno": 509,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051914",
        "name": "otpKind",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Kind of otp(Email, SMS etc)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "otpKind",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.otpKind",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004747",
    "___s": true
  },
  {
    "comment": "/**\n  * Additional  data\n  * Any valid JSON object. This data transferred to client part as result of auth method. Also accessible in server methods vis Session.uData\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10487,
        10498
      ],
      "filename": "_UBA_entities.js",
      "lineno": 499,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051909",
        "name": "uData",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Additional  data\nAny valid JSON object. This data transferred to client part as result of auth method. Also accessible in server methods vis Session.uData",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "uData",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.uData",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004745",
    "___s": true
  },
  {
    "comment": "/**\n  * User for which password was generated -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10282,
        10291
      ],
      "filename": "_UBA_entities.js",
      "lineno": 493,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051907",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User for which password was generated -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_otp_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns.attrs",
    "scope": "static",
    "___id": "T000002R004744",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_otp_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010411",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_otp_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010410",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_otp_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010806",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_otp_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010408",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_otp_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010407",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_otp_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010409",
    "___s": true
  },
  {
    "comment": "/**\n* Previous passwords hashes\n* @type {uba_prevPasswordsHash_ns}\n*/",
    "meta": {
      "range": [
        12280,
        12334
      ],
      "filename": "_UBA_entities.js",
      "lineno": 603,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051967",
        "name": "uba_prevPasswordsHash",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Previous passwords hashes",
    "type": {
      "names": [
        "uba_prevPasswordsHash_ns"
      ]
    },
    "name": "uba_prevPasswordsHash",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004766",
    "___s": true
  },
  {
    "comment": "/**\n * Previous passwords hashes\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        11419,
        11476
      ],
      "filename": "_UBA_entities.js",
      "lineno": 557,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051938",
        "name": "uba_prevPasswordsHash_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Previous passwords hashes</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_prevPasswordsHash_ns",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004756",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        11577,
        12203
      ],
      "filename": "_UBA_entities.js",
      "lineno": 559,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051943",
        "name": "uba_prevPasswordsHash_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"userID\":0,\"uPasswordHashHexa\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "static",
    "___id": "T000002R004757",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11643,
        11648
      ],
      "filename": "_UBA_entities.js",
      "lineno": 563,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051948",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004758",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        11927,
        11952
      ],
      "filename": "_UBA_entities.js",
      "lineno": 582,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051956",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004762",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12021,
        12037
      ],
      "filename": "_UBA_entities.js",
      "lineno": 587,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051959",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004763",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        12090,
        12115
      ],
      "filename": "_UBA_entities.js",
      "lineno": 592,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051961",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004764",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12184,
        12200
      ],
      "filename": "_UBA_entities.js",
      "lineno": 597,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051964",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004765",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11867,
        11878
      ],
      "filename": "_UBA_entities.js",
      "lineno": 577,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051954",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004761",
    "___s": true
  },
  {
    "comment": "/**\n  * PasswordHashHexa := SHA256('salt'+PasswordPlain) in UTF-8\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11785,
        11808
      ],
      "filename": "_UBA_entities.js",
      "lineno": 572,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051952",
        "name": "uPasswordHashHexa",
        "type": "Literal",
        "value": null
      }
    },
    "description": "PasswordHashHexa := SHA256('salt'+PasswordPlain) in UTF-8",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "uPasswordHashHexa",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.uPasswordHashHexa",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004760",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11681,
        11690
      ],
      "filename": "_UBA_entities.js",
      "lineno": 567,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051950",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns.attrs",
    "scope": "static",
    "___id": "T000002R004759",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010416",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010415",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010807",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010413",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010412",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_prevPasswordsHash_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_prevPasswordsHash_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010414",
    "___s": true
  },
  {
    "comment": "/**\n* Administering subsystem roles\n* @type {uba_role_ns}\n*/",
    "meta": {
      "range": [
        13441,
        13469
      ],
      "filename": "_UBA_entities.js",
      "lineno": 667,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052004",
        "name": "uba_role",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Administering subsystem roles",
    "type": {
      "names": [
        "uba_role_ns"
      ]
    },
    "name": "uba_role",
    "longname": "module:@unitybase/uba~uba_role",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004779",
    "___s": true
  },
  {
    "comment": "/**\n * Administering subsystem roles\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes unity\n */",
    "meta": {
      "range": [
        12439,
        12483
      ],
      "filename": "_UBA_entities.js",
      "lineno": 610,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051971",
        "name": "uba_role_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Administering subsystem roles</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "unity"
    ],
    "name": "uba_role_ns",
    "longname": "module:@unitybase/uba~uba_role_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004767",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        12584,
        13373
      ],
      "filename": "_UBA_entities.js",
      "lineno": 612,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051976",
        "name": "uba_role_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"name\":\"\",\"description\":\"\",\"sessionTimeout\":0,\"allowedAppMethods\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "static",
    "___id": "T000002R004768",
    "___s": true
  },
  {
    "comment": "/**\n  * Which application level methods are allowed\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12955,
        12978
      ],
      "filename": "_UBA_entities.js",
      "lineno": 636,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051989",
        "name": "allowedAppMethods",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Which application level methods are allowed",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "allowedAppMethods",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.allowedAppMethods",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004773",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12741,
        12756
      ],
      "filename": "_UBA_entities.js",
      "lineno": 626,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051985",
        "name": "description",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004771",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12637,
        12642
      ],
      "filename": "_UBA_entities.js",
      "lineno": 616,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051981",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004769",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13097,
        13122
      ],
      "filename": "_UBA_entities.js",
      "lineno": 646,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051993",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004775",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13191,
        13207
      ],
      "filename": "_UBA_entities.js",
      "lineno": 651,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051996",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004776",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        13260,
        13285
      ],
      "filename": "_UBA_entities.js",
      "lineno": 656,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051998",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004777",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13354,
        13370
      ],
      "filename": "_UBA_entities.js",
      "lineno": 661,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052001",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004778",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13037,
        13048
      ],
      "filename": "_UBA_entities.js",
      "lineno": 641,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051991",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004774",
    "___s": true
  },
  {
    "comment": "/**\n  * Role\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12684,
        12692
      ],
      "filename": "_UBA_entities.js",
      "lineno": 621,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051983",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Role",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004770",
    "___s": true
  },
  {
    "comment": "/**\n  * Time after which the session is deleted by timeout (in minutes)\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12857,
        12874
      ],
      "filename": "_UBA_entities.js",
      "lineno": 631,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100051987",
        "name": "sessionTimeout",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Time after which the session is deleted by timeout (in minutes)",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "sessionTimeout",
    "longname": "module:@unitybase/uba~uba_role_ns.attrs.sessionTimeout",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns.attrs",
    "scope": "static",
    "___id": "T000002R004772",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_role_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010421",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_role_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010420",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_role_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010808",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_role_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010418",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_role_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010417",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_role_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_role_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010419",
    "___s": true
  },
  {
    "comment": "/**\n* Administration subjects\n* @type {uba_subject_ns}\n*/",
    "meta": {
      "range": [
        14031,
        14065
      ],
      "filename": "_UBA_entities.js",
      "lineno": 703,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052029",
        "name": "uba_subject",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Administration subjects",
    "type": {
      "names": [
        "uba_subject_ns"
      ]
    },
    "name": "uba_subject",
    "longname": "module:@unitybase/uba~uba_subject",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004787",
    "___s": true
  },
  {
    "comment": "/**\n * Administration subjects\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        13552,
        13599
      ],
      "filename": "_UBA_entities.js",
      "lineno": 673,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052008",
        "name": "uba_subject_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Administration subjects</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_subject_ns",
    "longname": "module:@unitybase/uba~uba_subject_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004780",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        13700,
        13966
      ],
      "filename": "_UBA_entities.js",
      "lineno": 675,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052013",
        "name": "uba_subject_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"sType\":\"\",\"mi_unityEntity\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "static",
    "___id": "T000002R004781",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13794,
        13802
      ],
      "filename": "_UBA_entities.js",
      "lineno": 683,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052020",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns.attrs",
    "scope": "static",
    "___id": "T000002R004783",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13756,
        13761
      ],
      "filename": "_UBA_entities.js",
      "lineno": 679,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052018",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns.attrs",
    "scope": "static",
    "___id": "T000002R004782",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13945,
        13963
      ],
      "filename": "_UBA_entities.js",
      "lineno": 697,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052026",
        "name": "mi_unityEntity",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "mi_unityEntity",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs.mi_unityEntity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns.attrs",
    "scope": "static",
    "___id": "T000002R004786",
    "___s": true
  },
  {
    "comment": "/**\n  * Login\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13845,
        13853
      ],
      "filename": "_UBA_entities.js",
      "lineno": 688,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052022",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Login",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns.attrs",
    "scope": "static",
    "___id": "T000002R004784",
    "___s": true
  },
  {
    "comment": "/**\n  * Subject type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13903,
        13912
      ],
      "filename": "_UBA_entities.js",
      "lineno": 693,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052024",
        "name": "sType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Subject type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "sType",
    "longname": "module:@unitybase/uba~uba_subject_ns.attrs.sType",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns.attrs",
    "scope": "static",
    "___id": "T000002R004785",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_subject_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010426",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_subject_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010425",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_subject_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010809",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_subject_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010423",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_subject_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010422",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_subject_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_subject_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010424",
    "___s": true
  },
  {
    "comment": "/**\n* Users\n* @type {uba_user_ns}\n*/",
    "meta": {
      "range": [
        16210,
        16238
      ],
      "filename": "_UBA_entities.js",
      "lineno": 820,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052089",
        "name": "uba_user",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Users",
    "type": {
      "names": [
        "uba_user_ns"
      ]
    },
    "name": "uba_user",
    "longname": "module:@unitybase/uba~uba_user",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004811",
    "___s": true
  },
  {
    "comment": "/**\n    * Users\n    * @extends EntityNamespace\n    * @mixes mStorage\n    * @mixes unity\n    */",
    "meta": {
      "range": [
        14161,
        14205
      ],
      "filename": "_UBA_entities.js",
      "lineno": 710,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052033",
        "name": "uba_user_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Users</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "unity"
    ],
    "name": "uba_user_ns",
    "longname": "module:@unitybase/uba~uba_user_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004788",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        14306,
        16166
      ],
      "filename": "_UBA_entities.js",
      "lineno": 712,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052038",
        "name": "uba_user_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"name\":\"\",\"firstName\":null,\"lastName\":null,\"fullName\":null,\"gender\":null,\"email\":null,\"phone\":null,\"avatar\":null,\"description\":null,\"uData\":null,\"disabled\":\"\",\"isPending\":\"\",\"trustedIP\":null,\"uPasswordHashHexa\":null,\"lastPasswordChangeDate\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "static",
    "___id": "T000002R004789",
    "___s": true
  },
  {
    "comment": "/**\n  * User avatar image (recommended 128x128)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14877,
        14889
      ],
      "filename": "_UBA_entities.js",
      "lineno": 752,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052059",
        "name": "avatar",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User avatar image (recommended 128x128)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "avatar",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.avatar",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004798",
    "___s": true
  },
  {
    "comment": "/**\n  * Additional description of user account\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14965,
        14982
      ],
      "filename": "_UBA_entities.js",
      "lineno": 757,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052061",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Additional description of user account",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004799",
    "___s": true
  },
  {
    "comment": "/**\n  * Disabled\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        15236,
        15255
      ],
      "filename": "_UBA_entities.js",
      "lineno": 768,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052065",
        "name": "disabled",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Disabled",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "disabled",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.disabled",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004801",
    "___s": true
  },
  {
    "comment": "/**\n  * User email (could be used for notifications)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14706,
        14717
      ],
      "filename": "_UBA_entities.js",
      "lineno": 742,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052055",
        "name": "email",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User email (could be used for notifications)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "email",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.email",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004796",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14470,
        14485
      ],
      "filename": "_UBA_entities.js",
      "lineno": 725,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052047",
        "name": "firstName",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "firstName",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.firstName",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004792",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14565,
        14579
      ],
      "filename": "_UBA_entities.js",
      "lineno": 733,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052051",
        "name": "fullName",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "fullName",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.fullName",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004794",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14612,
        14624
      ],
      "filename": "_UBA_entities.js",
      "lineno": 737,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052053",
        "name": "gender",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "gender",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.gender",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004795",
    "___s": true
  },
  {
    "comment": "/**\n   * @type {Number}\n   */",
    "meta": {
      "range": [
        14362,
        14367
      ],
      "filename": "_UBA_entities.js",
      "lineno": 716,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052043",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004790",
    "___s": true
  },
  {
    "comment": "/**\n  * The user is waiting for confirmation of registration\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        15346,
        15366
      ],
      "filename": "_UBA_entities.js",
      "lineno": 773,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052067",
        "name": "isPending",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "The user is waiting for confirmation of registration",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isPending",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.isPending",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004802",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14518,
        14532
      ],
      "filename": "_UBA_entities.js",
      "lineno": 729,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052049",
        "name": "lastName",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lastName",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.lastName",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004793",
    "___s": true
  },
  {
    "comment": "/**\n  * Last password change date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        15737,
        15771
      ],
      "filename": "_UBA_entities.js",
      "lineno": 789,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052073",
        "name": "lastPasswordChangeDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Last password change date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "lastPasswordChangeDate",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.lastPasswordChangeDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004805",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        15890,
        15915
      ],
      "filename": "_UBA_entities.js",
      "lineno": 799,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052078",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004807",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15984,
        16000
      ],
      "filename": "_UBA_entities.js",
      "lineno": 804,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052081",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004808",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        16053,
        16078
      ],
      "filename": "_UBA_entities.js",
      "lineno": 809,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052083",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004809",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16147,
        16163
      ],
      "filename": "_UBA_entities.js",
      "lineno": 814,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052086",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004810",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15830,
        15841
      ],
      "filename": "_UBA_entities.js",
      "lineno": 794,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052076",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004806",
    "___s": true
  },
  {
    "comment": "/**\n  * User login in lower case\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14429,
        14437
      ],
      "filename": "_UBA_entities.js",
      "lineno": 721,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052045",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "User login in lower case",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004791",
    "___s": true
  },
  {
    "comment": "/**\n  * User phone (could be used for sms)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14789,
        14800
      ],
      "filename": "_UBA_entities.js",
      "lineno": 747,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052057",
        "name": "phone",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User phone (could be used for sms)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "phone",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.phone",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004797",
    "___s": true
  },
  {
    "comment": "/**\n  * Semicolon separated list of allowed IPs for UBIP authentication schema. Warning! We recomend use it only for IPs from DMZ\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15525,
        15540
      ],
      "filename": "_UBA_entities.js",
      "lineno": 778,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052069",
        "name": "trustedIP",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Semicolon separated list of allowed IPs for UBIP authentication schema. Warning! We recomend use it only for IPs from DMZ",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "trustedIP",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.trustedIP",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004803",
    "___s": true
  },
  {
    "comment": "/**\n  * Additional  data\n  * Any valid JSON object. This data transferred to client part as result of auth method. Also accessible in server methods vis Session.uData\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15178,
        15189
      ],
      "filename": "_UBA_entities.js",
      "lineno": 763,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052063",
        "name": "uData",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Additional  data\nAny valid JSON object. This data transferred to client part as result of auth method. Also accessible in server methods vis Session.uData",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "uData",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.uData",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004800",
    "___s": true
  },
  {
    "comment": "/**\n  * Password hash\n  * PasswordHashHexa := SHA256('salt'+PasswordPlain) in UTF-8\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15653,
        15676
      ],
      "filename": "_UBA_entities.js",
      "lineno": 784,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052071",
        "name": "uPasswordHashHexa",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Password hash\nPasswordHashHexa := SHA256('salt'+PasswordPlain) in UTF-8",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "uPasswordHashHexa",
    "longname": "module:@unitybase/uba~uba_user_ns.attrs.uPasswordHashHexa",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns.attrs",
    "scope": "static",
    "___id": "T000002R004804",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_user_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010431",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_user_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010430",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_user_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010810",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_user_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010428",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_user_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010427",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_user_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010429",
    "___s": true
  },
  {
    "comment": "/**\n* User certificates.\n * used for Certificate authentification \n* @type {uba_usercertificate_ns}\n*/",
    "meta": {
      "range": [
        17674,
        17724
      ],
      "filename": "_UBA_entities.js",
      "lineno": 907,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052136",
        "name": "uba_usercertificate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "User certificates.\nused for Certificate authentification",
    "type": {
      "names": [
        "uba_usercertificate_ns"
      ]
    },
    "name": "uba_usercertificate",
    "longname": "module:@unitybase/uba~uba_usercertificate",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004829",
    "___s": true
  },
  {
    "comment": "/**\n * User certificates.\n * used for Certificate authentification \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        16358,
        16413
      ],
      "filename": "_UBA_entities.js",
      "lineno": 827,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052093",
        "name": "uba_usercertificate_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>User certificates.\nused for Certificate authentification</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_usercertificate_ns",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004812",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        16514,
        17564
      ],
      "filename": "_UBA_entities.js",
      "lineno": 829,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052098",
        "name": "uba_usercertificate_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"userID\":0,\"issuer_serial\":\"\",\"issuer_cn\":null,\"serial\":\"\",\"certificate\":\"\",\"description\":null,\"disabled\":\"\",\"revoked\":\"\",\"revocationDate\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "static",
    "___id": "T000002R004813",
    "___s": true
  },
  {
    "comment": "/**\n  * Binary data of certificate\n  * @type {ArrayBuffer}\n  */",
    "meta": {
      "range": [
        16896,
        16918
      ],
      "filename": "_UBA_entities.js",
      "lineno": 856,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052113",
        "name": "certificate",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Binary data of certificate",
    "type": {
      "names": [
        "ArrayBuffer"
      ]
    },
    "name": "certificate",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.certificate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004819",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16951,
        16968
      ],
      "filename": "_UBA_entities.js",
      "lineno": 860,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052115",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004820",
    "___s": true
  },
  {
    "comment": "/**\n  * disabled\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        17015,
        17034
      ],
      "filename": "_UBA_entities.js",
      "lineno": 865,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052117",
        "name": "disabled",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "disabled",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "disabled",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.disabled",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004821",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16578,
        16583
      ],
      "filename": "_UBA_entities.js",
      "lineno": 833,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052103",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004814",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16737,
        16752
      ],
      "filename": "_UBA_entities.js",
      "lineno": 846,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052109",
        "name": "issuer_cn",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "issuer_cn",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.issuer_cn",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004817",
    "___s": true
  },
  {
    "comment": "/**\n  * Issuer tag of cerificate\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16687,
        16704
      ],
      "filename": "_UBA_entities.js",
      "lineno": 842,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052107",
        "name": "issuer_serial",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Issuer tag of cerificate",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "issuer_serial",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.issuer_serial",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004816",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        17288,
        17313
      ],
      "filename": "_UBA_entities.js",
      "lineno": 885,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052125",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004825",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17382,
        17398
      ],
      "filename": "_UBA_entities.js",
      "lineno": 890,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052128",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004826",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        17451,
        17476
      ],
      "filename": "_UBA_entities.js",
      "lineno": 895,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052130",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004827",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17545,
        17561
      ],
      "filename": "_UBA_entities.js",
      "lineno": 900,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052133",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004828",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        17228,
        17239
      ],
      "filename": "_UBA_entities.js",
      "lineno": 880,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052123",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004824",
    "___s": true
  },
  {
    "comment": "/**\n  * Revocation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        17149,
        17169
      ],
      "filename": "_UBA_entities.js",
      "lineno": 875,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052121",
        "name": "revocationDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Revocation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "revocationDate",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.revocationDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004823",
    "___s": true
  },
  {
    "comment": "/**\n  * Revoked\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        17080,
        17098
      ],
      "filename": "_UBA_entities.js",
      "lineno": 870,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052119",
        "name": "revoked",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Revoked",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "revoked",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.revoked",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004822",
    "___s": true
  },
  {
    "comment": "/**\n  * Serial number of cerificate\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16817,
        16827
      ],
      "filename": "_UBA_entities.js",
      "lineno": 851,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052111",
        "name": "serial",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Serial number of cerificate",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "serial",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.serial",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004818",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16616,
        16625
      ],
      "filename": "_UBA_entities.js",
      "lineno": 837,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052105",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns.attrs",
    "scope": "static",
    "___id": "T000002R004815",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010436",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010435",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010811",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010433",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010432",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_usercertificate_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010434",
    "___s": true
  },
  {
    "comment": "/**\n* User memberships in groups\n* @type {uba_usergroup_ns}\n*/",
    "meta": {
      "range": [
        18573,
        18611
      ],
      "filename": "_UBA_entities.js",
      "lineno": 958,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052169",
        "name": "uba_usergroup",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "User memberships in groups",
    "type": {
      "names": [
        "uba_usergroup_ns"
      ]
    },
    "name": "uba_usergroup",
    "longname": "module:@unitybase/uba~uba_usergroup",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004840",
    "___s": true
  },
  {
    "comment": "/**\n * User memberships in groups\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        17810,
        17859
      ],
      "filename": "_UBA_entities.js",
      "lineno": 913,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052140",
        "name": "uba_usergroup_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>User memberships in groups</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_usergroup_ns",
    "longname": "module:@unitybase/uba~uba_usergroup_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004830",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        17960,
        18503
      ],
      "filename": "_UBA_entities.js",
      "lineno": 915,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052145",
        "name": "uba_usergroup_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"userID\":0,\"groupID\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "static",
    "___id": "T000002R004831",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18098,
        18108
      ],
      "filename": "_UBA_entities.js",
      "lineno": 927,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052154",
        "name": "groupID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "groupID",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.groupID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004834",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18018,
        18023
      ],
      "filename": "_UBA_entities.js",
      "lineno": 919,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052150",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004832",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18227,
        18252
      ],
      "filename": "_UBA_entities.js",
      "lineno": 937,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052158",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004836",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18321,
        18337
      ],
      "filename": "_UBA_entities.js",
      "lineno": 942,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052161",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004837",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        18390,
        18415
      ],
      "filename": "_UBA_entities.js",
      "lineno": 947,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052163",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004838",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18484,
        18500
      ],
      "filename": "_UBA_entities.js",
      "lineno": 952,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052166",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004839",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18167,
        18178
      ],
      "filename": "_UBA_entities.js",
      "lineno": 932,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052156",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004835",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18056,
        18065
      ],
      "filename": "_UBA_entities.js",
      "lineno": 923,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052152",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_usergroup_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns.attrs",
    "scope": "static",
    "___id": "T000002R004833",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010441",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010440",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010812",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010438",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010437",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_usergroup_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_usergroup_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010439",
    "___s": true
  },
  {
    "comment": "/**\n* Roles assigned to user\n* @type {uba_userrole_ns}\n*/",
    "meta": {
      "range": [
        19448,
        19484
      ],
      "filename": "_UBA_entities.js",
      "lineno": 1009,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052202",
        "name": "uba_userrole",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Roles assigned to user",
    "type": {
      "names": [
        "uba_userrole_ns"
      ]
    },
    "name": "uba_userrole",
    "longname": "module:@unitybase/uba~uba_userrole",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "params": [],
    "___id": "T000002R004851",
    "___s": true
  },
  {
    "comment": "/**\n * Roles assigned to user\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        18693,
        18741
      ],
      "filename": "_UBA_entities.js",
      "lineno": 964,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052173",
        "name": "uba_userrole_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Roles assigned to user</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "uba_userrole_ns",
    "longname": "module:@unitybase/uba~uba_userrole_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/uba",
    "___id": "T000002R004841",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        18842,
        19383
      ],
      "filename": "_UBA_entities.js",
      "lineno": 966,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052178",
        "name": "uba_userrole_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"userID\":0,\"roleID\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "static",
    "___id": "T000002R004842",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18899,
        18904
      ],
      "filename": "_UBA_entities.js",
      "lineno": 970,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052183",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004843",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        19107,
        19132
      ],
      "filename": "_UBA_entities.js",
      "lineno": 988,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052191",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004847",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19201,
        19217
      ],
      "filename": "_UBA_entities.js",
      "lineno": 993,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052194",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004848",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        19270,
        19295
      ],
      "filename": "_UBA_entities.js",
      "lineno": 998,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052196",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004849",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19364,
        19380
      ],
      "filename": "_UBA_entities.js",
      "lineno": 1003,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052199",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004850",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        19047,
        19058
      ],
      "filename": "_UBA_entities.js",
      "lineno": 983,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052189",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004846",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18979,
        18988
      ],
      "filename": "_UBA_entities.js",
      "lineno": 978,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052187",
        "name": "roleID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "roleID",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.roleID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004845",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        18937,
        18946
      ],
      "filename": "_UBA_entities.js",
      "lineno": 974,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100052185",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/uba~uba_userrole_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns.attrs",
    "scope": "static",
    "___id": "T000002R004844",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/uba~uba_userrole_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010446",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/uba~uba_userrole_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010445",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/uba~uba_userrole_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010813",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/uba~uba_userrole_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010443",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/uba~uba_userrole_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010442",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/uba~uba_userrole_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/uba~uba_userrole_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010444",
    "___s": true
  },
  {
    "comment": "/**\n * A simple CLI for scaffolding UnityBase projects.\n * Run `npx ubcli -help` in command line (or `ubcli --help` if installed globaly) for a full list of available commands\n *\n * @module @unitybase/ubcli\n */",
    "meta": {
      "filename": "ubcli.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/bin",
      "code": {}
    },
    "description": "A simple CLI for scaffolding UnityBase projects.\nRun <code>npx ubcli -help</code> in command line (or <code>ubcli --help</code> if installed globaly) for a full list of available commands",
    "kind": "module",
    "name": "@unitybase/ubcli",
    "longname": "module:@unitybase/ubcli",
    "___id": "T000002R006441",
    "___s": true
  },
  {
    "comment": "/**\n * Run automatic test by enumerating all *models* & *modules* `_autotest` folders and execute all *.js from there.\n *\n * Application must be initialized before call this module\n *\n * Command line usage:\n\n     ubcli autotest -?\n\n * Warning! Some autotest may be designed to run only once after application initialization\n *\n * @module autotest\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "autotest.js",
      "lineno": 2,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Run automatic test by enumerating all <em>models</em> &amp; <em>modules</em> <code>_autotest</code> folders and execute all *.js from there.</p>\n<p>Application must be initialized before call this module</p>\n<p>Command line usage:</p>\n<pre class=\"prettyprint source\"><code> ubcli autotest -?</code></pre><p>Warning! Some autotest may be designed to run only once after application initialization",
    "kind": "module",
    "name": "autotest",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:autotest",
    "___id": "T000002R006453",
    "___s": true
  },
  {
    "comment": "/**\n * Command line module. Throw error in case server is started.\n *\n * @module checkServerNotStarted\n * @memberOf module:@unitybase/ubcli\n * @author pavel.mash\n */",
    "meta": {
      "filename": "checkServerNotStarted.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Command line module. Throw error in case server is started.",
    "kind": "module",
    "name": "checkServerNotStarted",
    "memberof": "module:@unitybase/ubcli",
    "author": [
      "pavel.mash"
    ],
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:checkServerNotStarted",
    "___id": "T000002R006525",
    "___s": true
  },
  {
    "comment": "/**\n * Create service scripts containing entity definition for code insight in WebStorm or other IDE work well.\n *\n * Usage from a command line:\n\n     ubcli createCodeInsightHelper -u admin -p admin -m UBS -cfg myConfig.json\n\n * Usage from a code:\n\n     const createCodeInsightHelper = require('@unitybase/ubcli/createCodeInsightHelper')\n     var options = {\n          host: \"http://localhost:888\",\n          user: \"admin\",\n          pwd:  \"admin\",\n          model: 'UBS'\n     }\n     createCodeInsightHelper(options)\n\n * @author pavel.mash\n * @module createCodeInsightHelper\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "createCodeInsightHelper.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Create service scripts containing entity definition for code insight in WebStorm or other IDE work well.</p>\n<p>Usage from a command line:</p>\n<pre class=\"prettyprint source\"><code> ubcli createCodeInsightHelper -u admin -p admin -m UBS -cfg myConfig.json</code></pre><p>Usage from a code:</p>\n<pre class=\"prettyprint source\"><code> const createCodeInsightHelper = require('@unitybase/ubcli/createCodeInsightHelper')\n var options = {\n      host: &quot;http://localhost:888&quot;,\n      user: &quot;admin&quot;,\n      pwd:  &quot;admin&quot;,\n      model: 'UBS'\n }\n createCodeInsightHelper(options)</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "createCodeInsightHelper",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:createCodeInsightHelper",
    "___id": "T000002R006538",
    "___s": true
  },
  {
    "comment": "/**\n   * Convert named collection - {name1: {}, name2: {}} to array -> [{name: name1, ...}, ...]\n   * Will mutate original!\n   * @param {object} namedCollection\n   */",
    "meta": {
      "range": [
        2260,
        2513
      ],
      "filename": "createCodeInsightHelper.js",
      "lineno": 73,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {
        "id": "astnode100068391",
        "name": "namedCollection2Array",
        "type": "FunctionDeclaration",
        "paramnames": [
          "namedCollection"
        ]
      },
      "vars": {
        "result": "module:@unitybase/ubcli.module:createCodeInsightHelper~namedCollection2Array~result",
        "item": "module:@unitybase/ubcli.module:createCodeInsightHelper~namedCollection2Array~item",
        "": null
      }
    },
    "description": "Convert named collection - {name1: {}, name2: {}} to array -&gt; [{name: name1, ...}, ...]\nWill mutate original!",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "name": "namedCollection"
      }
    ],
    "name": "namedCollection2Array",
    "longname": "module:@unitybase/ubcli.module:createCodeInsightHelper~namedCollection2Array",
    "kind": "function",
    "memberof": "module:@unitybase/ubcli.module:createCodeInsightHelper",
    "scope": "inner",
    "___id": "T000002R006561",
    "___s": true
  },
  {
    "comment": "/**\n * Create internal BLOB store structure (folders) for specifies FileSystem store.\n *\n * Must be used on the same computer where UnityBase server installed ( remote server connection is not supported).\n *\n * Usage from a command line:\n\n    ubcli createStore -?\n\n * Usage from a script:\n\n     const storeCreator = require('@unitybase/ubcli/createStore')\n     let options = {\n        store: \"*\"\n     };\n     storeCreator(options)\n\n * @author pavel.mash\n * @module createStore\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "createStore.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Create internal BLOB store structure (folders) for specifies FileSystem store.</p>\n<p>Must be used on the same computer where UnityBase server installed ( remote server connection is not supported).</p>\n<p>Usage from a command line:</p>\n<pre class=\"prettyprint source\"><code>ubcli createStore -?</code></pre><p>Usage from a script:</p>\n<pre class=\"prettyprint source\"><code> const storeCreator = require('@unitybase/ubcli/createStore')\n let options = {\n    store: &quot;*&quot;\n };\n storeCreator(options)</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "createStore",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:createStore",
    "___id": "T000002R006616",
    "___s": true
  },
  {
    "comment": "/**\n * Rebuild Full Text Search (FTS) indexes if any\n *\n * Usage from a command line:\n\n      ubcli ftsReindex -?\n\n * @author pavel.mash\n * @module ftsReindex\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "ftsReindex.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Rebuild Full Text Search (FTS) indexes if any</p>\n<p>Usage from a command line:</p>\n<pre class=\"prettyprint source\"><code>  ubcli ftsReindex -?</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "ftsReindex",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:ftsReindex",
    "___id": "T000002R006652",
    "___s": true
  },
  {
    "comment": "/**\n * Compare database structure with application domain and generate SQL script for create missing objects and alter modified objects.\n * Can optionally execute generated SQL scripts (for local server only).\n *\n * **WARNING: do not run this command on production database in automatic mode - always review SQL script manually before run**\n *\n * Usage from a command line:\n\n    ubcli generateDDL -?\n\n * Usage from code:\n\n     const DDLGenerator = require('@unitybase/ubcli/generateDDL')\n     var options = {\n          host: 'http://localhost:888',\n          user: \"admin\",\n          pwd:  \"admin\",\n          out:  process.cwd(),\n          autorun: true,\n          optimistic: false\n     }\n     DDLGenerator(options)\n\n * @author pavel.mash\n * @module generateDDL\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "generateDDL.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Compare database structure with application domain and generate SQL script for create missing objects and alter modified objects.\nCan optionally execute generated SQL scripts (for local server only).</p>\n<p><strong>WARNING: do not run this command on production database in automatic mode - always review SQL script manually before run</strong></p>\n<p>Usage from a command line:</p>\n<pre class=\"prettyprint source\"><code>ubcli generateDDL -?</code></pre><p>Usage from code:</p>\n<pre class=\"prettyprint source\"><code> const DDLGenerator = require('@unitybase/ubcli/generateDDL')\n var options = {\n      host: 'http://localhost:888',\n      user: &quot;admin&quot;,\n      pwd:  &quot;admin&quot;,\n      out:  process.cwd(),\n      autorun: true,\n      optimistic: false\n }\n DDLGenerator(options)</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "generateDDL",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:generateDDL",
    "___id": "T000002R006703",
    "___s": true
  },
  {
    "comment": "/**\n * Reverse model generation from a database tables\n * @module generateDDL\n * @memberOf module:@unitybase/ubcli\n * @author xmax on 16.09.2016.\n */",
    "meta": {
      "filename": "generateModels.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Reverse model generation from a database tables",
    "kind": "module",
    "name": "generateDDL",
    "memberof": "module:@unitybase/ubcli",
    "author": [
      "xmax on 16.09.2016."
    ],
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:generateDDL",
    "___id": "T000002R006837",
    "___s": true
  },
  {
    "comment": "/**\n * Command line module. Generate domain documentation into single HTML file.\n * Command line usage:\n\n       ubcli generateDoc -?\n\n * @author pavel.mash 04.02.14\n * @module generateDoc\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "generateDoc.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Command line module. Generate domain documentation into single HTML file.\nCommand line usage:</p>\n<pre class=\"prettyprint source\"><code>   ubcli generateDoc -?</code></pre>",
    "author": [
      "pavel.mash 04.02.14"
    ],
    "kind": "module",
    "name": "generateDoc",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:generateDoc",
    "___id": "T000002R006784",
    "___s": true
  },
  {
    "comment": "/**\n * Generate include for NGINX config based on `reverseProxy` section of application config:\n *\n *  - add proxy_pass directive to the URL from specified ubConfig\n *  - add host and client IP passthrow using `reverseProxy.remoteIPHeader` from NGINX to UB\n *  - in case `reverseProxy.sendFileHeader` if configured - add a internal locations for app and all defined BLOB stores\n *\n *\n * Result can be included to the main NGINX config using `include path-to-generated-config.conf` directive (inside the `server` directive)\n *\n * Usage from a command line:\n\n npx ubcli generateNginxCfg -?\n\n * @author pavel.mash 2018-04-07\n * @module generateNginxCfg\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "generateNginxCfg.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Generate include for NGINX config based on <code>reverseProxy</code> section of application config:</p>\n<ul>\n<li>add proxy_pass directive to the URL from specified ubConfig</li>\n<li>add host and client IP passthrow using <code>reverseProxy.remoteIPHeader</code> from NGINX to UB</li>\n<li>in case <code>reverseProxy.sendFileHeader</code> if configured - add a internal locations for app and all defined BLOB stores</li>\n</ul>\n<p>Result can be included to the main NGINX config using <code>include path-to-generated-config.conf</code> directive (inside the <code>server</code> directive)</p>\n<p>Usage from a command line:</p>\n<p> npx ubcli generateNginxCfg -?",
    "author": [
      "pavel.mash 2018-04-07"
    ],
    "kind": "module",
    "name": "generateNginxCfg",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:generateNginxCfg",
    "___id": "T000002R006896",
    "___s": true
  },
  {
    "comment": "/**\n * Create a database (schema) and a minimal set of DB object for a UnityBase ORM\n *\n * Usage from a command line:\n\n     ubcli initDB -?\n     ubcli initDB -u admin -p admin -dba postgres -dbaPwd postgreDBAPassword\n\n * Usage from a code:\n *\n     const initDB = require('@unitybase/ubcli/initDB')\n     let options = {\n        host: 'http://localhost:888',\n        user: 'admin',\n        pwd: 'admin',\n        clientIdentifier: 3,\n        dropDatabase: true,\n        createDatabase: true,\n        dba: 'postgres',\n        dbaPwd: 'postgreDBAPassword'\n    }\n    initDB(options)\n\n * If DBA already create a database set both `dropDatabase` & `createDatabase` to `false`\n * @module initDB\n * @memberOf module:@unitybase/ubcli\n */",
    "meta": {
      "filename": "initDB.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Create a database (schema) and a minimal set of DB object for a UnityBase ORM</p>\n<p>Usage from a command line:</p>\n<pre class=\"prettyprint source\"><code> ubcli initDB -?\n ubcli initDB -u admin -p admin -dba postgres -dbaPwd postgreDBAPassword</code></pre><p>Usage from a code:</p>\n<pre class=\"prettyprint source\"><code> const initDB = require('@unitybase/ubcli/initDB')\n let options = {\n    host: 'http://localhost:888',\n    user: 'admin',\n    pwd: 'admin',\n    clientIdentifier: 3,\n    dropDatabase: true,\n    createDatabase: true,\n    dba: 'postgres',\n    dbaPwd: 'postgreDBAPassword'\n}\ninitDB(options)</code></pre><p>If DBA already create a database set both <code>dropDatabase</code> &amp; <code>createDatabase</code> to <code>false</code>",
    "kind": "module",
    "name": "initDB",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:initDB",
    "___id": "T000002R006980",
    "___s": true
  },
  {
    "comment": "/**\n * @param {Object} cfg\n * @param {Number} [cfg.clientIdentifier=3] Identifier of the client.\n *    Must be between 2 and 8999. Number 1 is for UnityBase developer, 3 for test.\n *    Numbers > 100 is for real installations\n * @param {Boolean} [cfg.dropDatabase=false] Drop a database/schema first\n * @param {Boolean} [cfg.createDatabase=false] Create a new database/schema.\n * @param {String} [cfg.dba] A DBA name. Used in case `createDatabase=true`\n * @param {String} [cfg.dbaPwd] A DBA password. Used in case `createDatabase=true`\n */",
    "meta": {
      "range": [
        1527,
        7196
      ],
      "filename": "initDB.js",
      "lineno": 46,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {
        "id": "astnode100071767",
        "name": "initDB",
        "type": "FunctionDeclaration",
        "paramnames": [
          "cfg"
        ]
      },
      "vars": {
        "opts": "module:@unitybase/ubcli.module:initDB~initDB~opts",
        "cfg": "module:@unitybase/ubcli.module:initDB~cfg",
        "session": "module:@unitybase/ubcli.module:initDB~session",
        "conn": "module:@unitybase/ubcli.module:initDB~conn",
        "generator": "module:@unitybase/ubcli.module:initDB~generator",
        "originalConfigFileName": "module:@unitybase/ubcli.module:initDB~initDB~originalConfigFileName",
        "config": "module:@unitybase/ubcli.module:initDB~initDB~config",
        "cfg.host": "module:@unitybase/ubcli.module:initDB~cfg.host",
        "cfg.user": "module:@unitybase/ubcli.module:initDB~cfg.user",
        "connectionToCreateDB": "module:@unitybase/ubcli.module:initDB~initDB~connectionToCreateDB",
        "cfg.forceStartServer": "module:@unitybase/ubcli.module:initDB~cfg.forceStartServer",
        "dbDriverName": "module:@unitybase/ubcli.module:initDB~dbDriverName",
        "createFakeConfig": "module:@unitybase/ubcli.module:initDB~initDB~createFakeConfig"
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "cfg"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 3,
        "description": "Identifier of the client.\n   Must be between 2 and 8999. Number 1 is for UnityBase developer, 3 for test.\n   Numbers &gt; 100 is for real installations",
        "name": "cfg.clientIdentifier"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Drop a database/schema first",
        "name": "cfg.dropDatabase"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Create a new database/schema.",
        "name": "cfg.createDatabase"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "A DBA name. Used in case <code>createDatabase=true</code>",
        "name": "cfg.dba"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "A DBA password. Used in case <code>createDatabase=true</code>",
        "name": "cfg.dbaPwd"
      }
    ],
    "name": "initDB",
    "longname": "module:@unitybase/ubcli.module:initDB~initDB",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ubcli.module:initDB",
    "___id": "T000002R006988",
    "___s": true
  },
  {
    "comment": "/**\n * Fill domain entities by it initial values: enumerate all (or specified in -m switch) models `_initialData` folders  and execute all `*.js` from there.\n *\n * Requirements:\n *\n *  - database must exist - see {@link module:@unitybase/ubcli/initDB initDB}\n *  - all tables must exist - see {@link module:@unitybase/ubcli/generateDDL generateDDL}\n *\n * Usage:\n\n      ubcli initialize -?\n\n * @author pavel.mash\n * @module initialize\n * @memberOf module:@unitybase/ubcli\n*/",
    "meta": {
      "filename": "initialize.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>Fill domain entities by it initial values: enumerate all (or specified in -m switch) models <code>_initialData</code> folders  and execute all <code>*.js</code> from there.</p>\n<p>Requirements:</p>\n<ul>\n<li>database must exist - see {@link module:@unitybase/ubcli/initDB initDB}</li>\n<li>all tables must exist - see {@link module:@unitybase/ubcli/generateDDL generateDDL}</li>\n</ul>\n<p>Usage:</p>\n<pre class=\"prettyprint source\"><code>  ubcli initialize -?</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "initialize",
    "memberof": "module:@unitybase/ubcli",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:initialize",
    "___id": "T000002R007099",
    "___s": true
  },
  {
    "comment": "/**\n * GZIP `staticFolder` files according to `usePreparedGzip` `headersPostprocessors` for specified application\n *\n * Usage:\n *\n     ubcli prepareGZIP -?\n *\n * For example during deploy UnityBase documentation to {@link https://unitybase.info/api/server/} we execute:\n\n     ubcli prepareGZIP -cfg pathToDocumentationConfig.json\n\n * @author pavel.mash\n * @module prepareGZIP\n * @memberOf module:@unitybase/ubcli\n * @deprecated Use reverse proxy (nginx) for gzipping\n */",
    "meta": {
      "filename": "prepareGZIP.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "<p>GZIP <code>staticFolder</code> files according to <code>usePreparedGzip</code> <code>headersPostprocessors</code> for specified application</p>\n<p>Usage:</p>\n<pre class=\"prettyprint source\"><code> ubcli prepareGZIP -?</code></pre><p>For example during deploy UnityBase documentation to {@link https://unitybase.info/api/server/} we execute:</p>\n<pre class=\"prettyprint source\"><code> ubcli prepareGZIP -cfg pathToDocumentationConfig.json</code></pre>",
    "author": [
      "pavel.mash"
    ],
    "kind": "module",
    "name": "prepareGZIP",
    "memberof": "module:@unitybase/ubcli",
    "deprecated": "Use reverse proxy (nginx) for gzipping",
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:prepareGZIP",
    "___id": "T000002R007159",
    "___s": true
  },
  {
    "comment": "/**\n * Command line tool for converting UnityBase config from version <=1.11 to version 1.11\n * Usage:\n *\n *    ubcli upgradeConfig -help\n *\n * @author pavel.mash on 22.12.2015.\n * @module upgradeConfig\n * @memberOf module:@unitybase/ubcli\n * @deprecated\n */",
    "meta": {
      "filename": "upgradeConfig.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/lib",
      "code": {}
    },
    "description": "Command line tool for converting UnityBase config from version &lt;=1.11 to version 1.11\nUsage:</p>\n<p>   ubcli upgradeConfig -help",
    "author": [
      "pavel.mash on 22.12.2015."
    ],
    "kind": "module",
    "name": "upgradeConfig",
    "memberof": "module:@unitybase/ubcli",
    "deprecated": true,
    "scope": "static",
    "longname": "module:@unitybase/ubcli.module:upgradeConfig",
    "___id": "T000002R007212",
    "___s": true
  },
  {
    "comment": "/**\n * Show usage\n */",
    "meta": {
      "range": [
        387,
        918
      ],
      "filename": "ubcli.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubcli/bin",
      "code": {
        "id": "astnode100067211",
        "name": "showUsage",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "libsPath": "module:@unitybase/ubcli~showUsage~libsPath",
        "commands": "module:@unitybase/ubcli~showUsage~commands",
        "cmd": "module:@unitybase/ubcli~showUsage~cmd",
        "shortDoc": "module:@unitybase/ubcli~shortDoc",
        "descr": "module:@unitybase/ubcli~showUsage~descr"
      }
    },
    "description": "Show usage",
    "name": "showUsage",
    "longname": "module:@unitybase/ubcli~showUsage",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ubcli",
    "params": [],
    "___id": "T000002R006442",
    "___s": true
  },
  {
    "comment": "/**\n * Set of entities for constructing a dynamically generated UnityBase UI. Enumerations, navigation desktops &amp; shortcuts, forms, ER diagrams\n * @version 5.0.10\n * @module @unitybase/ubm\n */",
    "meta": {
      "filename": "_UBM_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/ubm",
    "longname": "module:@unitybase/ubm",
    "readme": "<h1>The UnityBase Mobile (ubm) UI</h1><p>Set of the entities for constructing a dynamically generated UnityBase UI:</p>\n<ul>\n<li>enumerations</li>\n<li>navigation desktops &amp; shortcuts</li>\n<li>forms definitions</li>\n<li>ER diagrams</li>\n</ul>",
    "___id": "T000002R009118",
    "___s": true
  },
  {
    "comment": "/**\n* Application desktops\n* @type {ubm_desktop_ns}\n*/",
    "meta": {
      "range": [
        1731,
        1765
      ],
      "filename": "_UBM_entities.js",
      "lineno": 82,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088266",
        "name": "ubm_desktop",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Application desktops",
    "type": {
      "names": [
        "ubm_desktop_ns"
      ]
    },
    "name": "ubm_desktop",
    "longname": "module:@unitybase/ubm~ubm_desktop",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009133",
    "___s": true
  },
  {
    "comment": "/**\n* Administering of desktops\n* @type {ubm_desktop_adm_ns}\n*/",
    "meta": {
      "range": [
        2232,
        2274
      ],
      "filename": "_UBM_entities.js",
      "lineno": 108,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088287",
        "name": "ubm_desktop_adm",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Administering of desktops",
    "type": {
      "names": [
        "ubm_desktop_adm_ns"
      ]
    },
    "name": "ubm_desktop_adm",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009139",
    "___s": true
  },
  {
    "comment": "/**\n * Administering of desktops\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        1850,
        1901
      ],
      "filename": "_UBM_entities.js",
      "lineno": 88,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088270",
        "name": "ubm_desktop_adm_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Administering of desktops</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubm_desktop_adm_ns",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009134",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2002,
        2161
      ],
      "filename": "_UBM_entities.js",
      "lineno": 90,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088275",
        "name": "ubm_desktop_adm_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"instanceID\":0,\"admSubjID\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "static",
    "___id": "T000002R009135",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2146,
        2158
      ],
      "filename": "_UBM_entities.js",
      "lineno": 102,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088284",
        "name": "admSubjID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "admSubjID",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs.admSubjID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009138",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2062,
        2067
      ],
      "filename": "_UBM_entities.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088280",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009136",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2100,
        2113
      ],
      "filename": "_UBM_entities.js",
      "lineno": 98,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088282",
        "name": "instanceID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "instanceID",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs.instanceID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009137",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010682",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010681",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010862",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010679",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010678",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubm~ubm_desktop_adm_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010680",
    "___s": true
  },
  {
    "comment": "/**\n * Application desktops\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        589,
        636
      ],
      "filename": "_UBM_entities.js",
      "lineno": 17,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088228",
        "name": "ubm_desktop_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Application desktops</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubm_desktop_ns",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009119",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        737,
        1669
      ],
      "filename": "_UBM_entities.js",
      "lineno": 19,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088233",
        "name": "ubm_desktop_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"caption\":\"\",\"code\":\"\",\"url\":null,\"isDefault\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "static",
    "___id": "T000002R009120",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        831,
        842
      ],
      "filename": "_UBM_entities.js",
      "lineno": 27,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088240",
        "name": "caption",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009122",
    "___s": true
  },
  {
    "comment": "/**\n  * Unique desktop code. Used for version upgrade\n  * @type {String}\n  */",
    "meta": {
      "range": [
        925,
        933
      ],
      "filename": "_UBM_entities.js",
      "lineno": 32,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088242",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Unique desktop code. Used for version upgrade",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009123",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        793,
        798
      ],
      "filename": "_UBM_entities.js",
      "lineno": 23,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088238",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009121",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1092,
        1112
      ],
      "filename": "_UBM_entities.js",
      "lineno": 41,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088246",
        "name": "isDefault",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isDefault",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.isDefault",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009125",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1231,
        1256
      ],
      "filename": "_UBM_entities.js",
      "lineno": 51,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088250",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009127",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1325,
        1341
      ],
      "filename": "_UBM_entities.js",
      "lineno": 56,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088253",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009128",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1553,
        1578
      ],
      "filename": "_UBM_entities.js",
      "lineno": 71,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088260",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009131",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1647,
        1666
      ],
      "filename": "_UBM_entities.js",
      "lineno": 76,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088263",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009132",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1394,
        1419
      ],
      "filename": "_UBM_entities.js",
      "lineno": 61,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088255",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009129",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1488,
        1504
      ],
      "filename": "_UBM_entities.js",
      "lineno": 66,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088258",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009130",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1171,
        1182
      ],
      "filename": "_UBM_entities.js",
      "lineno": 46,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088248",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009126",
    "___s": true
  },
  {
    "comment": "/**\n  * Static server page URL which is displayed in screen centre of selected desktop\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1049,
        1058
      ],
      "filename": "_UBM_entities.js",
      "lineno": 37,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088244",
        "name": "url",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Static server page URL which is displayed in screen centre of selected desktop",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "url",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns.attrs.url",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns.attrs",
    "scope": "static",
    "___id": "T000002R009124",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010677",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010676",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010861",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010674",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010673",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubm~ubm_desktop_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_desktop_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010675",
    "___s": true
  },
  {
    "comment": "/**\n* Entity relation diagrams\n* @type {ubm_diagram_ns}\n*/",
    "meta": {
      "range": [
        2893,
        2927
      ],
      "filename": "_UBM_entities.js",
      "lineno": 144,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088312",
        "name": "ubm_diagram",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Entity relation diagrams",
    "type": {
      "names": [
        "ubm_diagram_ns"
      ]
    },
    "name": "ubm_diagram",
    "longname": "module:@unitybase/ubm~ubm_diagram",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009147",
    "___s": true
  },
  {
    "comment": "/**\n * Entity relation diagrams\n * @extends EntityNamespace\n */",
    "meta": {
      "range": [
        2339,
        2386
      ],
      "filename": "_UBM_entities.js",
      "lineno": 113,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088291",
        "name": "ubm_diagram_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Entity relation diagrams</p>",
    "augments": [
      "EntityNamespace"
    ],
    "name": "ubm_diagram_ns",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009140",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2487,
        2827
      ],
      "filename": "_UBM_entities.js",
      "lineno": 115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088296",
        "name": "ubm_diagram_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"model\":\"\",\"name\":\"\",\"document\":null,\"mi_modifyDate\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns",
    "scope": "static",
    "___id": "T000002R009141",
    "___s": true
  },
  {
    "comment": "/**\n  * Entity diagram\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2693,
        2707
      ],
      "filename": "_UBM_entities.js",
      "lineno": 133,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088307",
        "name": "document",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Entity diagram",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "document",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs.document",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009145",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2543,
        2548
      ],
      "filename": "_UBM_entities.js",
      "lineno": 119,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088301",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009142",
    "___s": true
  },
  {
    "comment": "/**\n  * Emulate a mStorage.mi_modifyDate for cache version calculation\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2805,
        2824
      ],
      "filename": "_UBM_entities.js",
      "lineno": 138,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088309",
        "name": "mi_modifyDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Emulate a mStorage.mi_modifyDate for cache version calculation",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009146",
    "___s": true
  },
  {
    "comment": "/**\n  * Model\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2591,
        2600
      ],
      "filename": "_UBM_entities.js",
      "lineno": 124,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088303",
        "name": "model",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Model",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "model",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs.model",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009143",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2633,
        2641
      ],
      "filename": "_UBM_entities.js",
      "lineno": 128,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088305",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns.attrs",
    "scope": "static",
    "___id": "T000002R009144",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_diagram_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010863",
    "___s": true
  },
  {
    "comment": "/**\n* Enumerated values.\n * On the UI used as a lookup for attributes with dataType &#x60;Enum&#x60;\n* @type {ubm_enum_ns}\n*/",
    "meta": {
      "range": [
        4321,
        4349
      ],
      "filename": "_UBM_entities.js",
      "lineno": 221,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088356",
        "name": "ubm_enum",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Enumerated values.\nOn the UI used as a lookup for attributes with dataType &#x60;Enum&#x60;",
    "type": {
      "names": [
        "ubm_enum_ns"
      ]
    },
    "name": "ubm_enum",
    "longname": "module:@unitybase/ubm~ubm_enum",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009163",
    "___s": true
  },
  {
    "comment": "/**\n * Enumerated values.\n * On the UI used as a lookup for attributes with dataType &#x60;Enum&#x60;\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        3081,
        3125
      ],
      "filename": "_UBM_entities.js",
      "lineno": 151,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088316",
        "name": "ubm_enum_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Enumerated values.\nOn the UI used as a lookup for attributes with dataType &#x60;Enum&#x60;</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubm_enum_ns",
    "longname": "module:@unitybase/ubm~ubm_enum_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009148",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        3226,
        4188
      ],
      "filename": "_UBM_entities.js",
      "lineno": 153,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088321",
        "name": "ubm_enum_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"eGroup\":\"\",\"code\":\"\",\"shortName\":null,\"name\":\"\",\"sortOrder\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "static",
    "___id": "T000002R009149",
    "___s": true
  },
  {
    "comment": "/**\n  * Value code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3375,
        3383
      ],
      "filename": "_UBM_entities.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088330",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Value code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009152",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3317,
        3327
      ],
      "filename": "_UBM_entities.js",
      "lineno": 161,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088328",
        "name": "eGroup",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "eGroup",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.eGroup",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009151",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3279,
        3284
      ],
      "filename": "_UBM_entities.js",
      "lineno": 157,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088326",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009150",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3750,
        3775
      ],
      "filename": "_UBM_entities.js",
      "lineno": 189,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088340",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009157",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3844,
        3860
      ],
      "filename": "_UBM_entities.js",
      "lineno": 194,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088343",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009158",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4072,
        4097
      ],
      "filename": "_UBM_entities.js",
      "lineno": 209,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088350",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009161",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4166,
        4185
      ],
      "filename": "_UBM_entities.js",
      "lineno": 214,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088353",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009162",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3913,
        3938
      ],
      "filename": "_UBM_entities.js",
      "lineno": 199,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088345",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009159",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4007,
        4023
      ],
      "filename": "_UBM_entities.js",
      "lineno": 204,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088348",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009160",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3690,
        3701
      ],
      "filename": "_UBM_entities.js",
      "lineno": 184,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088338",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009156",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3464,
        3472
      ],
      "filename": "_UBM_entities.js",
      "lineno": 174,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088334",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009154",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3416,
        3431
      ],
      "filename": "_UBM_entities.js",
      "lineno": 170,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088332",
        "name": "shortName",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "shortName",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.shortName",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009153",
    "___s": true
  },
  {
    "comment": "/**\n  * This attribute is used for ordering enum on UI select. Default = 100 for easy change order to be more or less\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3619,
        3631
      ],
      "filename": "_UBM_entities.js",
      "lineno": 179,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088336",
        "name": "sortOrder",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "This attribute is used for ordering enum on UI select. Default = 100 for easy change order to be more or less",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "sortOrder",
    "longname": "module:@unitybase/ubm~ubm_enum_ns.attrs.sortOrder",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns.attrs",
    "scope": "static",
    "___id": "T000002R009155",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010687",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010686",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010864",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010684",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010683",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubm~ubm_enum_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_enum_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010685",
    "___s": true
  },
  {
    "comment": "/**\n* Definition of interface forms\n* @type {ubm_form_ns}\n*/",
    "meta": {
      "range": [
        5835,
        5863
      ],
      "filename": "_UBM_entities.js",
      "lineno": 289,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088393",
        "name": "ubm_form",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Definition of interface forms",
    "type": {
      "names": [
        "ubm_form_ns"
      ]
    },
    "name": "ubm_form",
    "longname": "module:@unitybase/ubm~ubm_form",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009177",
    "___s": true
  },
  {
    "comment": "/**\n * Definition of interface forms\n * @extends EntityNamespace\n */",
    "meta": {
      "range": [
        4419,
        4463
      ],
      "filename": "_UBM_entities.js",
      "lineno": 226,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088360",
        "name": "ubm_form_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Definition of interface forms</p>",
    "augments": [
      "EntityNamespace"
    ],
    "name": "ubm_form_ns",
    "longname": "module:@unitybase/ubm~ubm_form_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009164",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        4564,
        5767
      ],
      "filename": "_UBM_entities.js",
      "lineno": 228,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088365",
        "name": "ubm_form_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"description\":null,\"caption\":null,\"formType\":\"\",\"formDef\":null,\"formCode\":null,\"model\":null,\"entity\":null,\"isDefault\":\"\",\"mi_modifyDate\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "scope": "static",
    "___id": "T000002R009165",
    "___s": true
  },
  {
    "comment": "/**\n  * Keep it empty to use entity name as form caption\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4799,
        4812
      ],
      "filename": "_UBM_entities.js",
      "lineno": 245,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088376",
        "name": "caption",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Keep it empty to use entity name as form caption",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009169",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4655,
        4663
      ],
      "filename": "_UBM_entities.js",
      "lineno": 236,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088372",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009167",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4696,
        4713
      ],
      "filename": "_UBM_entities.js",
      "lineno": 240,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088374",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009168",
    "___s": true
  },
  {
    "comment": "/**\n  * Entity code\n  * This value is used for fount default entity form\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5371,
        5383
      ],
      "filename": "_UBM_entities.js",
      "lineno": 272,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088386",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Entity code\nThis value is used for fount default entity form",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009174",
    "___s": true
  },
  {
    "comment": "/**\n  * JS worm client logic\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5033,
        5047
      ],
      "filename": "_UBM_entities.js",
      "lineno": 260,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088382",
        "name": "formCode",
        "type": "Literal",
        "value": null
      }
    },
    "description": "JS worm client logic",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "formCode",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.formCode",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009172",
    "___s": true
  },
  {
    "comment": "/**\n  * Form interface definition\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4962,
        4975
      ],
      "filename": "_UBM_entities.js",
      "lineno": 255,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088380",
        "name": "formDef",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Form interface definition",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "formDef",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.formDef",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009171",
    "___s": true
  },
  {
    "comment": "/**\n  * Form definition type (auto or custom)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4887,
        4899
      ],
      "filename": "_UBM_entities.js",
      "lineno": 250,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088378",
        "name": "formType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Form definition type (auto or custom)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "formType",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.formType",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009170",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4617,
        4622
      ],
      "filename": "_UBM_entities.js",
      "lineno": 232,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088370",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009166",
    "___s": true
  },
  {
    "comment": "/**\n  * Default entity form\n  * On AdminUI execution of `doCommand.showForm` without passing a form code as a parameter client seek for form for entity, and if exist > 1 form - form with isDefault=true is selected\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        5627,
        5647
      ],
      "filename": "_UBM_entities.js",
      "lineno": 278,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088388",
        "name": "isDefault",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Default entity form\nOn AdminUI execution of <code>doCommand.showForm</code> without passing a form code as a parameter client seek for form for entity, and if exist &gt; 1 form - form with isDefault=true is selected",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isDefault",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.isDefault",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009175",
    "___s": true
  },
  {
    "comment": "/**\n  * Emulate a mStorage.mi_modifyDate for cache version calculation\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        5745,
        5764
      ],
      "filename": "_UBM_entities.js",
      "lineno": 283,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088390",
        "name": "mi_modifyDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Emulate a mStorage.mi_modifyDate for cache version calculation",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009176",
    "___s": true
  },
  {
    "comment": "/**\n  * Model where form is stored\n  * Model where form is stored. If empty - entity model is used. The purpose of this attribute is to develop a form for entities form other models\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5258,
        5269
      ],
      "filename": "_UBM_entities.js",
      "lineno": 266,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088384",
        "name": "model",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Model where form is stored\nModel where form is stored. If empty - entity model is used. The purpose of this attribute is to develop a form for entities form other models",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "model",
    "longname": "module:@unitybase/ubm~ubm_form_ns.attrs.model",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns.attrs",
    "scope": "static",
    "___id": "T000002R009173",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_form_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010865",
    "___s": true
  },
  {
    "comment": "/**\n* Metadata for build navbars\n* @type {ubm_navshortcut_ns}\n*/",
    "meta": {
      "range": [
        7525,
        7567
      ],
      "filename": "_UBM_entities.js",
      "lineno": 392,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088449",
        "name": "ubm_navshortcut",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Metadata for build navbars",
    "type": {
      "names": [
        "ubm_navshortcut_ns"
      ]
    },
    "name": "ubm_navshortcut",
    "longname": "module:@unitybase/ubm~ubm_navshortcut",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009199",
    "___s": true
  },
  {
    "comment": "/**\n* Description.\n * This entity used by $.currentUserOrUserGroupInAdmSubtable RLS macro\n* @type {ubm_navshortcut_adm_ns}\n*/",
    "meta": {
      "range": [
        8162,
        8212
      ],
      "filename": "_UBM_entities.js",
      "lineno": 420,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088470",
        "name": "ubm_navshortcut_adm",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Description.\nThis entity used by $.currentUserOrUserGroupInAdmSubtable RLS macro",
    "type": {
      "names": [
        "ubm_navshortcut_adm_ns"
      ]
    },
    "name": "ubm_navshortcut_adm",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "params": [],
    "___id": "T000002R009205",
    "___s": true
  },
  {
    "comment": "/**\n * Description.\n * This entity used by $.currentUserOrUserGroupInAdmSubtable RLS macro\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        7710,
        7765
      ],
      "filename": "_UBM_entities.js",
      "lineno": 399,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088453",
        "name": "ubm_navshortcut_adm_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Description.\nThis entity used by $.currentUserOrUserGroupInAdmSubtable RLS macro</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubm_navshortcut_adm_ns",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009200",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        7866,
        8029
      ],
      "filename": "_UBM_entities.js",
      "lineno": 401,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088458",
        "name": "ubm_navshortcut_adm_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"instanceID\":0,\"admSubjID\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "static",
    "___id": "T000002R009201",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8014,
        8026
      ],
      "filename": "_UBM_entities.js",
      "lineno": 413,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088467",
        "name": "admSubjID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "admSubjID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs.admSubjID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009204",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7930,
        7935
      ],
      "filename": "_UBM_entities.js",
      "lineno": 405,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088463",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009202",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7968,
        7981
      ],
      "filename": "_UBM_entities.js",
      "lineno": 409,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088465",
        "name": "instanceID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "instanceID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs.instanceID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns.attrs",
    "scope": "static",
    "___id": "T000002R009203",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010697",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010696",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010867",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010694",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010693",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_adm_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_adm_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010695",
    "___s": true
  },
  {
    "comment": "/**\n * Metadata for build navbars\n * @extends EntityNamespace\n * @mixes mStorage\n * @mixes tree\n */",
    "meta": {
      "range": [
        5964,
        6015
      ],
      "filename": "_UBM_entities.js",
      "lineno": 296,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088397",
        "name": "ubm_navshortcut_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Metadata for build navbars</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage",
      "tree"
    ],
    "name": "ubm_navshortcut_ns",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubm",
    "___id": "T000002R009178",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        6116,
        7453
      ],
      "filename": "_UBM_entities.js",
      "lineno": 298,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088402",
        "name": "ubm_navshortcut_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"desktopID\":0,\"parentID\":null,\"code\":\"\",\"isFolder\":\"\",\"caption\":\"\",\"cmdCode\":null,\"inWindow\":\"\",\"isCollapsed\":\"\",\"displayOrder\":0,\"iconCls\":null,\"mi_treePath\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "static",
    "___id": "T000002R009179",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6451,
        6462
      ],
      "filename": "_UBM_entities.js",
      "lineno": 323,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088417",
        "name": "caption",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "caption",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.caption",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009185",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6495,
        6508
      ],
      "filename": "_UBM_entities.js",
      "lineno": 327,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088419",
        "name": "cmdCode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "cmdCode",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.cmdCode",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009186",
    "___s": true
  },
  {
    "comment": "/**\n  * Unique shortcut code. Used for version upgrade\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6357,
        6365
      ],
      "filename": "_UBM_entities.js",
      "lineno": 315,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088413",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Unique shortcut code. Used for version upgrade",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009183",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6214,
        6226
      ],
      "filename": "_UBM_entities.js",
      "lineno": 306,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088409",
        "name": "desktopID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "desktopID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.desktopID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009181",
    "___s": true
  },
  {
    "comment": "/**\n  * Display order (in current node)\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6787,
        6802
      ],
      "filename": "_UBM_entities.js",
      "lineno": 343,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088425",
        "name": "displayOrder",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Display order (in current node)",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "displayOrder",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.displayOrder",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009189",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6835,
        6848
      ],
      "filename": "_UBM_entities.js",
      "lineno": 347,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088427",
        "name": "iconCls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "iconCls",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.iconCls",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009190",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6176,
        6181
      ],
      "filename": "_UBM_entities.js",
      "lineno": 302,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088407",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009180",
    "___s": true
  },
  {
    "comment": "/**\n  * Display in new window\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        6568,
        6587
      ],
      "filename": "_UBM_entities.js",
      "lineno": 332,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088421",
        "name": "inWindow",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Display in new window",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "inWindow",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.inWindow",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009187",
    "___s": true
  },
  {
    "comment": "/**\n  * Show collapsed at the first start\n  * It make sense if isFolder = true\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        6696,
        6718
      ],
      "filename": "_UBM_entities.js",
      "lineno": 338,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088423",
        "name": "isCollapsed",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Show collapsed at the first start\nIt make sense if isFolder = true",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isCollapsed",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.isCollapsed",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009188",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        6399,
        6418
      ],
      "filename": "_UBM_entities.js",
      "lineno": 319,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088415",
        "name": "isFolder",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isFolder",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.isFolder",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009184",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7015,
        7040
      ],
      "filename": "_UBM_entities.js",
      "lineno": 361,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088433",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009193",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7109,
        7125
      ],
      "filename": "_UBM_entities.js",
      "lineno": 366,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088436",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009194",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7337,
        7362
      ],
      "filename": "_UBM_entities.js",
      "lineno": 381,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088443",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009197",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7431,
        7450
      ],
      "filename": "_UBM_entities.js",
      "lineno": 386,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088446",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009198",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7178,
        7203
      ],
      "filename": "_UBM_entities.js",
      "lineno": 371,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088438",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009195",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7272,
        7288
      ],
      "filename": "_UBM_entities.js",
      "lineno": 376,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088441",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009196",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6955,
        6966
      ],
      "filename": "_UBM_entities.js",
      "lineno": 356,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088431",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009192",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6881,
        6896
      ],
      "filename": "_UBM_entities.js",
      "lineno": 351,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088429",
        "name": "mi_treePath",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "mi_treePath",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.mi_treePath",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009191",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6259,
        6273
      ],
      "filename": "_UBM_entities.js",
      "lineno": 310,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {
        "id": "astnode100088411",
        "name": "parentID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "parentID",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs.parentID",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns.attrs",
    "scope": "static",
    "___id": "T000002R009182",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010692",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010691",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010866",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010689",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010688",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubm~ubm_navshortcut_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubm~ubm_navshortcut_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010690",
    "___s": true
  },
  {
    "comment": "/**\n * Asynchronous task queue persisted into database. Contains jobs for sending e-mail and updating FTS indexes\n * @version 5.0.10\n * @module @unitybase/ubq\n */",
    "meta": {
      "filename": "_UBQ_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/ubq",
    "longname": "module:@unitybase/ubq",
    "readme": "<p>The asynchronous task queue persisted into database.\nThis module contains jobs for sending e-mail and updating FTS indexes.</p>",
    "___id": "T000002R007575",
    "___s": true
  },
  {
    "comment": "/**\n * Used by scheduler to build a full text search index.\n * Read queue with code **ASYNCFTS** (by portion of 1000 queue rows at once) and rebuild FTS indexes.\n *\n * Expect msgCmd value in form: {\"entity\":\"tst_document\",\"ID\":3000000005908,\"operation\":\"DELETE\"}\n * Possible operation is 'INSERT' 'UPDATE' 'DELETE'\n *\n * @module ubqFTSJob\n * @memberOf module:@unitybase/ubq\n */",
    "meta": {
      "filename": "ubqFTSJob.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "Used by scheduler to build a full text search index.\nRead queue with code <strong>ASYNCFTS</strong> (by portion of 1000 queue rows at once) and rebuild FTS indexes.</p>\n<p>Expect msgCmd value in form: {&quot;entity&quot;:&quot;tst_document&quot;,&quot;ID&quot;:3000000005908,&quot;operation&quot;:&quot;DELETE&quot;}\nPossible operation is 'INSERT' 'UPDATE' 'DELETE'",
    "kind": "module",
    "name": "ubqFTSJob",
    "memberof": "module:@unitybase/ubq",
    "scope": "static",
    "longname": "module:@unitybase/ubq.module:ubqFTSJob",
    "___id": "T000002R007650",
    "___s": true
  },
  {
    "comment": "/**\n * Mail sender for Scheduler\n * Read queue with code **mail** and send mails to recipient(s)\n * to attach files into the mail, use queue like this:\n\n msgCmd.attaches = [{entity: <entity>, attribute: 'document', id: <id>, atachName: <file name>}, ...]\n\n * for document image:\n\n {\n   entity: 'doc_document',\n   attribute: 'document',\n   id: <doc_document ID>,\n   atachName: \"document.pdf\"\n }\n\n * for attached files:\n *\n {\n   entity: \"doc_attachment\",\n   attribute: 'document',\n   id: <attachment ID>,\n   atachName: <attachment caption>\n }\n\n *\n * @module ubqMailJob\n * @memberOf module:@unitybase/ubq\n */",
    "meta": {
      "filename": "ubqMailJob.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "Mail sender for Scheduler\nRead queue with code <strong>mail</strong> and send mails to recipient(s)\nto attach files into the mail, use queue like this:</p>\n<p> msgCmd.attaches = [{entity: <entity>, attribute: 'document', id: <id>, atachName: <file name>}, ...]\nfor document image:</p>\n<p> {\n   entity: 'doc_document',\n   attribute: 'document',\n   id: &lt;doc_document ID&gt;,\n   atachName: &quot;document.pdf&quot;\n }\nfor attached files:</p>\n<p> {\n   entity: &quot;doc_attachment&quot;,\n   attribute: 'document',\n   id: <attachment ID>,\n   atachName: <attachment caption>\n }",
    "kind": "module",
    "name": "ubqMailJob",
    "memberof": "module:@unitybase/ubq",
    "scope": "static",
    "longname": "module:@unitybase/ubq.module:ubqMailJob",
    "___id": "T000002R007666",
    "___s": true
  },
  {
    "comment": "/**\n* Message queue.\n * Store messages posted by producers. Consumers read messages from this table and run corresponding tasks\n* @type {ubq_messages_ns}\n*/",
    "meta": {
      "range": [
        2024,
        2060
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 80,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077972",
        "name": "ubq_messages",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Message queue.\nStore messages posted by producers. Consumers read messages from this table and run corresponding tasks",
    "type": {
      "names": [
        "ubq_messages_ns"
      ]
    },
    "name": "ubq_messages",
    "longname": "module:@unitybase/ubq~ubq_messages",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "params": [],
    "___id": "T000002R007589",
    "___s": true
  },
  {
    "comment": "/**\n * Message queue.\n * Store messages posted by producers. Consumers read messages from this table and run corresponding tasks\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        656,
        704
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077937",
        "name": "ubq_messages_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Message queue.\nStore messages posted by producers. Consumers read messages from this table and run corresponding tasks</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubq_messages_ns",
    "longname": "module:@unitybase/ubq~ubq_messages_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "___id": "T000002R007576",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        805,
        1860
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 20,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077942",
        "name": "ubq_messages_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"queueCode\":\"\",\"msgCmd\":null,\"msgData\":null,\"msgPriority\":0,\"completeDate\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "static",
    "___id": "T000002R007577",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1447,
        1465
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077957",
        "name": "completeDate",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "completeDate",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.completeDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007583",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        862,
        867
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077947",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007578",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1584,
        1609
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 58,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077961",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007585",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1678,
        1694
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 63,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077964",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007586",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1747,
        1772
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 68,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077966",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007587",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1841,
        1857
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 73,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077969",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007588",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1524,
        1535
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 53,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077959",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007584",
    "___s": true
  },
  {
    "comment": "/**\n  * Command for receiver. Contain JSON serialized object with command parameters. Command must contain attributes receiver understand\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1178,
        1190
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 34,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077951",
        "name": "msgCmd",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Command for receiver. Contain JSON serialized object with command parameters. Command must contain attributes receiver understand",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "msgCmd",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.msgCmd",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007580",
    "___s": true
  },
  {
    "comment": "/**\n  * Additional data for message. May contain Base64 encoded binary data\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1295,
        1308
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 39,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077953",
        "name": "msgData",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Additional data for message. May contain Base64 encoded binary data",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "msgData",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.msgData",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007581",
    "___s": true
  },
  {
    "comment": "/**\n  * Priority of messages. 1&#x3D;High, 0&#x3D;Low, default 1\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1402,
        1416
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 44,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077955",
        "name": "msgPriority",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Priority of messages. 1&#x3D;High, 0&#x3D;Low, default 1",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "msgPriority",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.msgPriority",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007582",
    "___s": true
  },
  {
    "comment": "/**\n  * Receivers determinate handler by this code. For each queCode must be receiver which handle it\n  * @type {String}\n  */",
    "meta": {
      "range": [
        998,
        1011
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 29,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077949",
        "name": "queueCode",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Receivers determinate handler by this code. For each queCode must be receiver which handle it",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "queueCode",
    "longname": "module:@unitybase/ubq~ubq_messages_ns.attrs.queueCode",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns.attrs",
    "scope": "static",
    "___id": "T000002R007579",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010451",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010450",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010814",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010448",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010447",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubq~ubq_messages_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010449",
    "___s": true
  },
  {
    "comment": "/**\n* Scheduler run statistic.\n * Statistic for every scheduler item run and result\n* @type {ubq_runstat_ns}\n*/",
    "meta": {
      "range": [
        2976,
        3010
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 131,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078004",
        "name": "ubq_runstat",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Scheduler run statistic.\nStatistic for every scheduler item run and result",
    "type": {
      "names": [
        "ubq_runstat_ns"
      ]
    },
    "name": "ubq_runstat",
    "longname": "module:@unitybase/ubq~ubq_runstat",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "params": [],
    "___id": "T000002R007600",
    "___s": true
  },
  {
    "comment": "/**\n * Scheduler run statistic.\n * Statistic for every scheduler item run and result\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        2197,
        2244
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 87,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077976",
        "name": "ubq_runstat_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Scheduler run statistic.\nStatistic for every scheduler item run and result</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubq_runstat_ns",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "___id": "T000002R007590",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2345,
        2857
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 89,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077981",
        "name": "ubq_runstat_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"appName\":\"\",\"schedulerName\":\"\",\"startTime\":\"\",\"endTime\":null,\"logText\":null,\"resultError\":null,\"resultErrorMsg\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "static",
    "___id": "T000002R007591",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2439,
        2450
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 97,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077988",
        "name": "appName",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "appName",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.appName",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007593",
    "___s": true
  },
  {
    "comment": "/**\n  * Time of end scheduler item\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2647,
        2660
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 111,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077995",
        "name": "endTime",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Time of end scheduler item",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "endTime",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.endTime",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007596",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2401,
        2406
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 93,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077986",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007592",
    "___s": true
  },
  {
    "comment": "/**\n  * Log from runned script about all actions\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2738,
        2751
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 116,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077997",
        "name": "logText",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Log from runned script about all actions",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "logText",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.logText",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007597",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2784,
        2801
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 120,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077999",
        "name": "resultError",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "resultError",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.resultError",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007598",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2834,
        2854
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 124,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078001",
        "name": "resultErrorMsg",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "resultErrorMsg",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.resultErrorMsg",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007599",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2483,
        2500
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 101,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077990",
        "name": "schedulerName",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "schedulerName",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.schedulerName",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007594",
    "___s": true
  },
  {
    "comment": "/**\n  * Time of start scheduler item\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2564,
        2585
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 106,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100077992",
        "name": "startTime",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Time of start scheduler item",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "startTime",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns.attrs.startTime",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns.attrs",
    "scope": "static",
    "___id": "T000002R007595",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010456",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010455",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010815",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010453",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010452",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubq~ubq_runstat_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubq~ubq_runstat_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010454",
    "___s": true
  },
  {
    "comment": "/**\n* Scheduled jobs.\n * Virtual entity for show configured schedulers. Schedulers are placed in files MODEL_FOLDER&#x2F;_schedulers.json. To override a existed scheduler do not modify it directly, instead create the scheduler with the same name inside your model\n* @type {ubq_scheduler_ns}\n*/",
    "meta": {
      "range": [
        5469,
        5507
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 211,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078045",
        "name": "ubq_scheduler",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Scheduled jobs.\nVirtual entity for show configured schedulers. Schedulers are placed in files MODEL_FOLDER&#x2F;_schedulers.json. To override a existed scheduler do not modify it directly, instead create the scheduler with the same name inside your model",
    "type": {
      "names": [
        "ubq_scheduler_ns"
      ]
    },
    "name": "ubq_scheduler",
    "longname": "module:@unitybase/ubq~ubq_scheduler",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "params": [],
    "___id": "T000002R007616",
    "___s": true
  },
  {
    "comment": "/**\n * Scheduled jobs.\n * Virtual entity for show configured schedulers. Schedulers are placed in files MODEL_FOLDER&#x2F;_schedulers.json. To override a existed scheduler do not modify it directly, instead create the scheduler with the same name inside your model\n * @extends EntityNamespace\n */",
    "meta": {
      "range": [
        3308,
        3357
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 137,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078008",
        "name": "ubq_scheduler_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Scheduled jobs.\nVirtual entity for show configured schedulers. Schedulers are placed in files MODEL_FOLDER&#x2F;_schedulers.json. To override a existed scheduler do not modify it directly, instead create the scheduler with the same name inside your model</p>",
    "augments": [
      "EntityNamespace"
    ],
    "name": "ubq_scheduler_ns",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubq",
    "___id": "T000002R007601",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        3458,
        5168
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 139,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078013",
        "name": "ubq_scheduler_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"name\":\"\",\"schedulingCondition\":null,\"cron\":\"\",\"description\":null,\"command\":null,\"module\":null,\"singleton\":\"\",\"runAs\":null,\"logSuccessful\":\"\",\"overridden\":\"\",\"originalModel\":\"\",\"actualModel\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns",
    "scope": "static",
    "___id": "T000002R007602",
    "___s": true
  },
  {
    "comment": "/**\n  * A name of model where actual job definition file is stored. Can de not equal to &#x60;originalModel&#x60; if someone overrides the job\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5150,
        5165
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 204,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078042",
        "name": "actualModel",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "A name of model where actual job definition file is stored. Can de not equal to &#x60;originalModel&#x60; if someone overrides the job",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "actualModel",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.actualModel",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007615",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of function to be executed in a server context\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4230,
        4243
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 169,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078028",
        "name": "command",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name of function to be executed in a server context",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "command",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.command",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007608",
    "___s": true
  },
  {
    "comment": "/**\n  * A cron for job as in unix systems. Format: &#39;Seconds(0-59) Minutes(0-59) Hours(0-23) DayOfMonth(1-31) Months(0-11) DayOfWeek(0-6)&#39;\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4063,
        4071
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 159,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078024",
        "name": "cron",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "A cron for job as in unix systems. Format: 'Seconds(0-59) Minutes(0-59) Hours(0-23) DayOfMonth(1-31) Months(0-11) DayOfWeek(0-6)'",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "cron",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.cron",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007606",
    "___s": true
  },
  {
    "comment": "/**\n  * Job description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4124,
        4141
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 164,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078026",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Job description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007607",
    "___s": true
  },
  {
    "comment": "/**\n  * crc32(name)\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3532,
        3537
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 144,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078018",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "crc32(name)",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007603",
    "___s": true
  },
  {
    "comment": "/**\n  * If 1 (default) then successful job execution result will be logged into &#x60;ubq_runstat&#x60;, otherwise - only errors\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        4731,
        4755
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 189,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078036",
        "name": "logSuccessful",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "If 1 (default) then successful job execution result will be logged into &#x60;ubq_runstat&#x60;, otherwise - only errors",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "logSuccessful",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.logSuccessful",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007612",
    "___s": true
  },
  {
    "comment": "/**\n  * Name of module to require with scheduler job function as a default export\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4354,
        4366
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 174,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078030",
        "name": "module",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Name of module to require with scheduler job function as a default export",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "module",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.module",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007609",
    "___s": true
  },
  {
    "comment": "/**\n  * Unique job name. Models will override a jobs with the same name in order models are listen in server configuration\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3689,
        3697
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 149,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078020",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Unique job name. Models will override a jobs with the same name in order models are listen in server configuration",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007604",
    "___s": true
  },
  {
    "comment": "/**\n  * A model name where original job definition file is stored\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4961,
        4978
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 199,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078040",
        "name": "originalModel",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "A model name where original job definition file is stored",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "originalModel",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.originalModel",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007614",
    "___s": true
  },
  {
    "comment": "/**\n  * Indicate original job is overridden by other models\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        4845,
        4866
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 194,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078038",
        "name": "overridden",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Indicate original job is overridden by other models",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "overridden",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.overridden",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007613",
    "___s": true
  },
  {
    "comment": "/**\n  * A user name for a job execution\n  * @type {String}\n  */",
    "meta": {
      "range": [
        4561,
        4572
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 184,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078034",
        "name": "runAs",
        "type": "Literal",
        "value": null
      }
    },
    "description": "A user name for a job execution",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "runAs",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.runAs",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007611",
    "___s": true
  },
  {
    "comment": "/**\n  * Expression to be evaluated during server startup. In case result is empty or evaluated to &#x60;true&#x60; job will be scheduled\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3863,
        3888
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 154,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078022",
        "name": "schedulingCondition",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Expression to be evaluated during server startup. In case result is empty or evaluated to &#x60;true&#x60; job will be scheduled",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "schedulingCondition",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.schedulingCondition",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007605",
    "___s": true
  },
  {
    "comment": "/**\n  * If &#x60;1&#x60; - only single instance of a running job is allowed\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        4472,
        4492
      ],
      "filename": "_UBQ_entities.js",
      "lineno": 179,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078032",
        "name": "singleton",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "If &#x60;1&#x60; - only single instance of a running job is allowed",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "singleton",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns.attrs.singleton",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns.attrs",
    "scope": "static",
    "___id": "T000002R007610",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubq~ubq_scheduler_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010816",
    "___s": true
  },
  {
    "comment": "/**\n * Reports, User messages (notifications), Settings (aka about:config), Counters\n * @version 5.0.10\n * @module @unitybase/ubs\n */",
    "meta": {
      "filename": "_UBS_entities.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "version": "5.0.10",
    "kind": "module",
    "name": "@unitybase/ubs",
    "longname": "module:@unitybase/ubs",
    "readme": "<h1>The UnityBase Service model</h1><p>Includes:</p>\n<ul>\n<li>reports</li>\n<li>user notification (messages)</li>\n<li>generation numbers by pattern, for example to generate a documents number</li>\n<li>db-stored settings (like Windows registry)</li>\n<li>soft &amp; persistent lock support</li>\n</ul>",
    "___id": "T000002R007825",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side Report builder\n *\n * @example\n\n// Server side report generation\nconst fs = require('fs');\nconst UBReport = require('@unitybase/ubs/modules/UBServerReport');\nlet reportResult = UBReport.makeReport('test','pdf',{});\nif (reportResult.reportType === 'pdf') {\n console.debug('Generate a PDF report of size=', result.reportData.byteLength)\n fs.writeFileSync('d:/result.pdf', result.reportData )\n} else {\n console.debug('Generate a HTML report of size=', result.reportData.length)\n fs.writeFileSync('d:/result.html', result.reportData )\n}\n\n * @module UBServerReport\n * @memberOf module:@unitybase/ubs\n */",
    "meta": {
      "filename": "UBServerReport.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {}
    },
    "description": "Server-side Report builder",
    "examples": [
      "// Server side report generation\nconst fs = require('fs');\nconst UBReport = require('@unitybase/ubs/modules/UBServerReport');\nlet reportResult = UBReport.makeReport('test','pdf',{});\nif (reportResult.reportType === 'pdf') {\n console.debug('Generate a PDF report of size=', result.reportData.byteLength)\n fs.writeFileSync('d:/result.pdf', result.reportData )\n} else {\n console.debug('Generate a HTML report of size=', result.reportData.length)\n fs.writeFileSync('d:/result.html', result.reportData )\n}"
    ],
    "kind": "module",
    "name": "UBServerReport",
    "memberof": "module:@unitybase/ubs",
    "scope": "static",
    "longname": "module:@unitybase/ubs.module:UBServerReport",
    "___id": "T000002R010126",
    "___s": true
  },
  {
    "comment": "/**\n   * Render report with code `reportCode` on the server side\n   * Report templates and creation rules are defined in `ubs_report` entity.\n   *\n   * @param {string|Object} reportCode If reportCode type is Object it is a config object { code: String, type: String, params: String|Object }\n   * @param {string} [reportType='html'] Possible values: 'html'|'pdf'\n   * @param {*} params Any parameters passed to the buildReport function from report code block\n   * @returns {ReportResult}\n   */",
    "meta": {
      "range": [
        1133,
        1291
      ],
      "filename": "UBServerReport.js",
      "lineno": 31,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096040",
        "name": "makeReport",
        "type": "FunctionExpression"
      },
      "vars": {
        "report": "module:@unitybase/ubs.module:UBServerReport.makeReport~report"
      }
    },
    "description": "Render report with code <code>reportCode</code> on the server side\nReport templates and creation rules are defined in <code>ubs_report</code> entity.",
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Object"
          ]
        },
        "description": "If reportCode type is Object it is a config object { code: String, type: String, params: String|Object }",
        "name": "reportCode"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'html'",
        "description": "Possible values: 'html'|'pdf'",
        "name": "reportType"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Any parameters passed to the buildReport function from report code block",
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ReportResult"
          ]
        }
      }
    ],
    "name": "makeReport",
    "longname": "module:@unitybase/ubs.module:UBServerReport.makeReport",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport",
    "scope": "static",
    "___id": "T000002R010128",
    "___s": true
  },
  {
    "comment": "/**\n * Report generation result\n * @typedef {Object} ReportResult\n * @property {string} reportCode\n * @property {string} reportType\n * @property {Object} incomeParams\n * @property {Object} reportOptions\n * @property {string|ArrayBuffer|*} reportData Result of buildReport function execution\n */",
    "meta": {
      "filename": "UBServerReport.js",
      "lineno": 59,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {}
    },
    "description": "Report generation result",
    "kind": "typedef",
    "name": "ReportResult",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "reportCode"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "reportType"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "incomeParams"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "reportOptions"
      },
      {
        "type": {
          "names": [
            "string",
            "ArrayBuffer",
            "*"
          ]
        },
        "description": "<p>Result of buildReport function execution</p>",
        "name": "reportData"
      }
    ],
    "longname": "module:@unitybase/ubs.module:UBServerReport~ReportResult",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs.module:UBServerReport",
    "___id": "T000002R010143",
    "___s": true
  },
  {
    "comment": "/**\n * Server-side report builder\n * @class\n * @protected\n * @param {string|Object} reportCode\n * If reportCode type is Object it is a config object { code: String, type: String, params: String|Object }\n * @param {string} [reportType='html'] Possible values: 'html'|'pdf'\n * @param {{}} params\n * @param {String} [language=Session.userLang]\n */",
    "meta": {
      "range": [
        2649,
        3480
      ],
      "filename": "UBServerReport.js",
      "lineno": 79,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096152",
        "name": "UBServerReport",
        "type": "FunctionDeclaration",
        "paramnames": [
          "reportCode",
          "reportType",
          "params",
          "language"
        ]
      },
      "vars": {
        "this.reportCode": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportCode",
        "this.reportType": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportType",
        "this.incomeParams": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#incomeParams",
        "this.reportOptions": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportOptions",
        "this.lang": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#lang",
        "this.debug": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#debug"
      }
    },
    "description": "Server-side report builder",
    "kind": "class",
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Object"
          ]
        },
        "description": "If reportCode type is Object it is a config object { code: String, type: String, params: String|Object }",
        "name": "reportCode"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'html'",
        "description": "Possible values: 'html'|'pdf'",
        "name": "reportType"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "params"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "Session.userLang",
        "name": "language"
      }
    ],
    "name": "UBServerReport",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs.module:UBServerReport",
    "___id": "T000002R010144",
    "___s": true
  },
  {
    "comment": "/**\n* Render HTML report\n* @param {Object} reportData\n* @returns {string}\n*/",
    "meta": {
      "range": [
        5893,
        6328
      ],
      "filename": "UBServerReport.js",
      "lineno": 198,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096551",
        "name": "UBServerReport.prototype.buildHTML",
        "type": "FunctionExpression",
        "paramnames": [
          "reportData"
        ]
      },
      "vars": {
        "reportData": "module:@unitybase/ubs.module:UBServerReport~reportData"
      }
    },
    "description": "Render HTML report",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "reportData"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "buildHTML",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#buildHTML",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010182",
    "___s": true
  },
  {
    "comment": "/**\n * This function must be defined in report code block.\n *\n * Inside function you must:\n *\n *  - Prepare data\n *  - Run method this.buildHTML(reportData); where reportData is data for mustache template\n *  - If need create PDF run method this.buildPdf(htmlReport); where htmlReport is HTML\n *  - If is server side function must return report as string otherwise Promise\n *\n * @cfg {function} buildReport\n * @param {Object} reportParams\n * @returns {Promise|Object|String} If code run at server, method must return report data, else - Promise, which resolves to report data\n */",
    "meta": {
      "range": [
        9328,
        9476
      ],
      "filename": "UBServerReport.js",
      "lineno": 308,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096878",
        "name": "UBServerReport.prototype.buildReport",
        "type": "FunctionExpression",
        "paramnames": [
          "reportParams"
        ]
      }
    },
    "description": "<p>This function must be defined in report code block.</p>\n<p>Inside function you must:</p>\n<ul>\n<li>Prepare data</li>\n<li>Run method this.buildHTML(reportData); where reportData is data for mustache template</li>\n<li>If need create PDF run method this.buildPdf(htmlReport); where htmlReport is HTML</li>\n<li>If is server side function must return report as string otherwise Promise</li>\n</ul>",
    "tags": [
      {
        "originalTitle": "cfg",
        "title": "cfg",
        "text": "{function} buildReport",
        "value": "{function} buildReport"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "reportParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise",
            "Object",
            "String"
          ]
        },
        "description": "<p>If code run at server, method must return report data, else - Promise, which resolves to report data</p>"
      }
    ],
    "name": "buildReport",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#buildReport",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010223",
    "___s": true
  },
  {
    "comment": "/**\n* load document\n* @param {string} attribute\n* @returns {string}\n*/",
    "meta": {
      "range": [
        10993,
        11273
      ],
      "filename": "UBServerReport.js",
      "lineno": 370,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096894",
        "name": "UBServerReport.prototype.getDocument",
        "type": "FunctionExpression",
        "paramnames": [
          "attribute"
        ]
      },
      "vars": {
        "cfg": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#getDocument~cfg"
      }
    },
    "description": "load document",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attribute"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getDocument",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#getDocument",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010224",
    "___s": true
  },
  {
    "comment": "/**\n   * Report parameters\n   * @property {{}} incomeParams\n   */",
    "meta": {
      "range": [
        3007,
        3039
      ],
      "filename": "UBServerReport.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096174",
        "name": "this.incomeParams",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Report parameters",
    "properties": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "incomeParams"
      }
    ],
    "name": "incomeParams",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#incomeParams",
    "kind": "member",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010147",
    "___s": true
  },
  {
    "comment": "/**\n* Load report template and code.\n*/",
    "meta": {
      "range": [
        3522,
        4228
      ],
      "filename": "UBServerReport.js",
      "lineno": 115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096250",
        "name": "UBServerReport.prototype.init",
        "type": "FunctionExpression",
        "paramnames": []
      },
      "vars": {
        "reportInfo": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#init~reportInfo",
        "this.reportRW": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportRW",
        "this.reportRW.templateData": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportRW.templateData"
      }
    },
    "description": "Load report template and code.",
    "name": "init",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#init",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010155",
    "___s": true
  },
  {
    "comment": "/**\n * Render report on server\n * @example\n\nconst UBReport = require('@unitybase/ubs/modules/UBServerReport')\nlet reportResult = UBReport.makeReport('reportCode', 'html', {\n  login: email,\n  password: password,\n  activateUrl: registrationAddress,\n  appConfig: App.serverConfig\n})\n\n * @param {Object} [params]\n * @returns {ReportResult}\n */",
    "meta": {
      "range": [
        5265,
        5814
      ],
      "filename": "UBServerReport.js",
      "lineno": 171,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096459",
        "name": "UBServerReport.prototype.makeReport",
        "type": "FunctionExpression",
        "paramnames": [
          "params"
        ]
      },
      "vars": {
        "prm": "module:@unitybase/ubs.module:UBServerReport~prm",
        "promiseOrData": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#makeReport~promiseOrData",
        "report": "module:@unitybase/ubs.module:UBServerReport~report",
        "errInsidePromise": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#makeReport~errInsidePromise",
        "": null
      }
    },
    "description": "Render report on server",
    "examples": [
      "const UBReport = require('@unitybase/ubs/modules/UBServerReport')\nlet reportResult = UBReport.makeReport('reportCode', 'html', {\n  login: email,\n  password: password,\n  activateUrl: registrationAddress,\n  appConfig: App.serverConfig\n})"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ReportResult"
          ]
        }
      }
    ],
    "name": "makeReport",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#makeReport",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010173",
    "___s": true
  },
  {
    "comment": "/**\n   * Report code\n   * @property {string} reportCode\n   */",
    "meta": {
      "range": [
        2784,
        2812
      ],
      "filename": "UBServerReport.js",
      "lineno": 84,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096160",
        "name": "this.reportCode",
        "type": "Identifier",
        "value": "reportCode",
        "paramnames": []
      }
    },
    "description": "Report code",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "reportCode"
      }
    ],
    "name": "reportCode",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportCode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010145",
    "___s": true
  },
  {
    "comment": "/**\n   * The options of report. Known options: pageOrientation.\n   * @property {{}} reportOptions\n   */",
    "meta": {
      "range": [
        3148,
        3171
      ],
      "filename": "UBServerReport.js",
      "lineno": 99,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096182",
        "name": "this.reportOptions",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "The options of report. Known options: pageOrientation.",
    "properties": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "reportOptions"
      }
    ],
    "name": "reportOptions",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportOptions",
    "kind": "member",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010148",
    "___s": true
  },
  {
    "comment": "/**\n   * Possible values: 'html', 'pdf'\n   * @property {string} reportCode\n   */",
    "meta": {
      "range": [
        2898,
        2936
      ],
      "filename": "UBServerReport.js",
      "lineno": 89,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096166",
        "name": "this.reportType",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Possible values: 'html', 'pdf'",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "reportCode"
      }
    ],
    "name": "reportType",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#reportType",
    "kind": "member",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010146",
    "___s": true
  },
  {
    "comment": "/**\n* Prepare PDF report from html\n* @param {string} html\n* @param {Object} options\n* @param {Array|Object} [options.fonts]\n* [{ fontName: \"TimesNewRoman\", fontStyle: \"Normal\" }, ..]\n* @param {Boolean} [options.outputPdf] If it is not False build PDF output at end. By default it is True.\n* @returns {Promise} Promise resolve arrayBuffer with PDF or instance of PDF.csPrintToPdf with rendered HTML on it when options.outputPdf is false.\n*/",
    "meta": {
      "range": [
        6770,
        7872
      ],
      "filename": "UBServerReport.js",
      "lineno": 218,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs/modules",
      "code": {
        "id": "astnode100096613",
        "name": "UBServerReport.prototype.transformToPdf",
        "type": "FunctionExpression",
        "paramnames": [
          "html",
          "options"
        ]
      },
      "vars": {
        "PDF": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#transformToPdf~PDF",
        "pdfConfig": "module:@unitybase/ubs.module:UBServerReport~pdfConfig",
        "pdf": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#transformToPdf~pdf",
        "this.pdf": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#pdf"
      }
    },
    "description": "Prepare PDF report from html",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "html"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Array",
            "Object"
          ]
        },
        "optional": true,
        "description": "[{ fontName: &quot;TimesNewRoman&quot;, fontStyle: &quot;Normal&quot; }, ..]",
        "name": "options.fonts"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "If it is not False build PDF output at end. By default it is True.",
        "name": "options.outputPdf"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "<p>Promise resolve arrayBuffer with PDF or instance of PDF.csPrintToPdf with rendered HTML on it when options.outputPdf is false.</p>"
      }
    ],
    "name": "transformToPdf",
    "longname": "module:@unitybase/ubs.module:UBServerReport~UBServerReport#transformToPdf",
    "kind": "function",
    "memberof": "module:@unitybase/ubs.module:UBServerReport~UBServerReport",
    "scope": "instance",
    "___id": "T000002R010184",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsDefault_ns}\n*/",
    "meta": {
      "range": [
        9826,
        9866
      ],
      "filename": "_UBS_entities.js",
      "lineno": 562,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080669",
        "name": "fts_ftsDefault",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsDefault_ns"
      ]
    },
    "name": "fts_ftsDefault",
    "longname": "module:@unitybase/ubs~fts_ftsDefault",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007943",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsDefault_en_ns}\n*/",
    "meta": {
      "range": [
        12607,
        12653
      ],
      "filename": "_UBS_entities.js",
      "lineno": 760,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080792",
        "name": "fts_ftsDefault_en",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsDefault_en_ns"
      ]
    },
    "name": "fts_ftsDefault_en",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007991",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        11794,
        11847
      ],
      "filename": "_UBS_entities.js",
      "lineno": 700,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080755",
        "name": "fts_ftsDefault_en_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_ftsDefault_en_ns",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007976",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        11948,
        12559
      ],
      "filename": "_UBS_entities.js",
      "lineno": 702,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080760",
        "name": "fts_ftsDefault_en_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "static",
    "___id": "T000002R007977",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12358,
        12370
      ],
      "filename": "_UBS_entities.js",
      "lineno": 738,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080781",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007986",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12453,
        12467
      ],
      "filename": "_UBS_entities.js",
      "lineno": 746,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080785",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007988",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12311,
        12325
      ],
      "filename": "_UBS_entities.js",
      "lineno": 734,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080779",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007985",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12270,
        12278
      ],
      "filename": "_UBS_entities.js",
      "lineno": 730,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080777",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007984",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12229,
        12237
      ],
      "filename": "_UBS_entities.js",
      "lineno": 726,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080775",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007983",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12188,
        12196
      ],
      "filename": "_UBS_entities.js",
      "lineno": 722,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080773",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007982",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12095,
        12107
      ],
      "filename": "_UBS_entities.js",
      "lineno": 714,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080769",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007980",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12403,
        12420
      ],
      "filename": "_UBS_entities.js",
      "lineno": 742,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080783",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007987",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12140,
        12155
      ],
      "filename": "_UBS_entities.js",
      "lineno": 718,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080771",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007981",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12010,
        12018
      ],
      "filename": "_UBS_entities.js",
      "lineno": 706,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080765",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007978",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12546,
        12556
      ],
      "filename": "_UBS_entities.js",
      "lineno": 754,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080789",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007990",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12051,
        12062
      ],
      "filename": "_UBS_entities.js",
      "lineno": 710,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080767",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007979",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12500,
        12513
      ],
      "filename": "_UBS_entities.js",
      "lineno": 750,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080787",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007989",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010511",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010510",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010829",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010508",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010507",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_en_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010509",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes ftsservice\n */",
    "meta": {
      "range": [
        9022,
        9072
      ],
      "filename": "_UBS_entities.js",
      "lineno": 502,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080632",
        "name": "fts_ftsDefault_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "ftsservice"
    ],
    "name": "fts_ftsDefault_ns",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007928",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        9173,
        9781
      ],
      "filename": "_UBS_entities.js",
      "lineno": 504,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080637",
        "name": "fts_ftsDefault_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns",
    "scope": "static",
    "___id": "T000002R007929",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9580,
        9592
      ],
      "filename": "_UBS_entities.js",
      "lineno": 540,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080658",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007938",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9675,
        9689
      ],
      "filename": "_UBS_entities.js",
      "lineno": 548,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080662",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007940",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9533,
        9547
      ],
      "filename": "_UBS_entities.js",
      "lineno": 536,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080656",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007937",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9492,
        9500
      ],
      "filename": "_UBS_entities.js",
      "lineno": 532,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080654",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007936",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9451,
        9459
      ],
      "filename": "_UBS_entities.js",
      "lineno": 528,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080652",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007935",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9410,
        9418
      ],
      "filename": "_UBS_entities.js",
      "lineno": 524,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080650",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007934",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9317,
        9329
      ],
      "filename": "_UBS_entities.js",
      "lineno": 516,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080646",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007932",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9625,
        9642
      ],
      "filename": "_UBS_entities.js",
      "lineno": 544,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080660",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007939",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9362,
        9377
      ],
      "filename": "_UBS_entities.js",
      "lineno": 520,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080648",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007933",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9232,
        9240
      ],
      "filename": "_UBS_entities.js",
      "lineno": 508,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080642",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007930",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9768,
        9778
      ],
      "filename": "_UBS_entities.js",
      "lineno": 556,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080666",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007942",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        9273,
        9284
      ],
      "filename": "_UBS_entities.js",
      "lineno": 512,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080644",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007931",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        9722,
        9735
      ],
      "filename": "_UBS_entities.js",
      "lineno": 552,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080664",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns.attrs",
    "scope": "static",
    "___id": "T000002R007941",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010826",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsDefault_uk_ns}\n*/",
    "meta": {
      "range": [
        13526,
        13572
      ],
      "filename": "_UBS_entities.js",
      "lineno": 826,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080833",
        "name": "fts_ftsDefault_uk",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsDefault_uk_ns"
      ]
    },
    "name": "fts_ftsDefault_uk",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R008007",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        12713,
        12766
      ],
      "filename": "_UBS_entities.js",
      "lineno": 766,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080796",
        "name": "fts_ftsDefault_uk_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_ftsDefault_uk_ns",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007992",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        12867,
        13478
      ],
      "filename": "_UBS_entities.js",
      "lineno": 768,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080801",
        "name": "fts_ftsDefault_uk_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "static",
    "___id": "T000002R007993",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13277,
        13289
      ],
      "filename": "_UBS_entities.js",
      "lineno": 804,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080822",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008002",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13372,
        13386
      ],
      "filename": "_UBS_entities.js",
      "lineno": 812,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080826",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008004",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13230,
        13244
      ],
      "filename": "_UBS_entities.js",
      "lineno": 800,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080820",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008001",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13189,
        13197
      ],
      "filename": "_UBS_entities.js",
      "lineno": 796,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080818",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008000",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13148,
        13156
      ],
      "filename": "_UBS_entities.js",
      "lineno": 792,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080816",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007999",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13107,
        13115
      ],
      "filename": "_UBS_entities.js",
      "lineno": 788,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080814",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007998",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13014,
        13026
      ],
      "filename": "_UBS_entities.js",
      "lineno": 780,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080810",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007996",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13322,
        13339
      ],
      "filename": "_UBS_entities.js",
      "lineno": 808,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080824",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008003",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13059,
        13074
      ],
      "filename": "_UBS_entities.js",
      "lineno": 784,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080812",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007997",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        12929,
        12937
      ],
      "filename": "_UBS_entities.js",
      "lineno": 772,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080806",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007994",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13465,
        13475
      ],
      "filename": "_UBS_entities.js",
      "lineno": 820,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080830",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008006",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        12970,
        12981
      ],
      "filename": "_UBS_entities.js",
      "lineno": 776,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080808",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007995",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13419,
        13432
      ],
      "filename": "_UBS_entities.js",
      "lineno": 816,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080828",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008005",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010516",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010515",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010830",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010513",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010512",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_ftsDefault_uk_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsDefault_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010514",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsSubjectSearch_ns}\n*/",
    "meta": {
      "range": [
        14456,
        14508
      ],
      "filename": "_UBS_entities.js",
      "lineno": 892,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080874",
        "name": "fts_ftsSubjectSearch",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsSubjectSearch_ns"
      ]
    },
    "name": "fts_ftsSubjectSearch",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R008023",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsSubjectSearch_en_ns}\n*/",
    "meta": {
      "range": [
        15399,
        15457
      ],
      "filename": "_UBS_entities.js",
      "lineno": 958,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080915",
        "name": "fts_ftsSubjectSearch_en",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsSubjectSearch_en_ns"
      ]
    },
    "name": "fts_ftsSubjectSearch_en",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R008039",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        14568,
        14627
      ],
      "filename": "_UBS_entities.js",
      "lineno": 898,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080878",
        "name": "fts_ftsSubjectSearch_en_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_ftsSubjectSearch_en_ns",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R008024",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        14728,
        15345
      ],
      "filename": "_UBS_entities.js",
      "lineno": 900,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080883",
        "name": "fts_ftsSubjectSearch_en_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "static",
    "___id": "T000002R008025",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15144,
        15156
      ],
      "filename": "_UBS_entities.js",
      "lineno": 936,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080904",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008034",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15239,
        15253
      ],
      "filename": "_UBS_entities.js",
      "lineno": 944,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080908",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008036",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15097,
        15111
      ],
      "filename": "_UBS_entities.js",
      "lineno": 932,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080902",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008033",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15056,
        15064
      ],
      "filename": "_UBS_entities.js",
      "lineno": 928,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080900",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008032",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15015,
        15023
      ],
      "filename": "_UBS_entities.js",
      "lineno": 924,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080898",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008031",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14974,
        14982
      ],
      "filename": "_UBS_entities.js",
      "lineno": 920,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080896",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008030",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14881,
        14893
      ],
      "filename": "_UBS_entities.js",
      "lineno": 912,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080892",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008028",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15189,
        15206
      ],
      "filename": "_UBS_entities.js",
      "lineno": 940,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080906",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008035",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14926,
        14941
      ],
      "filename": "_UBS_entities.js",
      "lineno": 916,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080894",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008029",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14796,
        14804
      ],
      "filename": "_UBS_entities.js",
      "lineno": 904,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080888",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008026",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15332,
        15342
      ],
      "filename": "_UBS_entities.js",
      "lineno": 952,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080912",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008038",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14837,
        14848
      ],
      "filename": "_UBS_entities.js",
      "lineno": 908,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080890",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008027",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15286,
        15299
      ],
      "filename": "_UBS_entities.js",
      "lineno": 948,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080910",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R008037",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010521",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010520",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010832",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010518",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010517",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010519",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes ftsservice\n */",
    "meta": {
      "range": [
        13634,
        13690
      ],
      "filename": "_UBS_entities.js",
      "lineno": 832,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080837",
        "name": "fts_ftsSubjectSearch_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "ftsservice"
    ],
    "name": "fts_ftsSubjectSearch_ns",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R008008",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        13791,
        14405
      ],
      "filename": "_UBS_entities.js",
      "lineno": 834,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080842",
        "name": "fts_ftsSubjectSearch_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns",
    "scope": "static",
    "___id": "T000002R008009",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14204,
        14216
      ],
      "filename": "_UBS_entities.js",
      "lineno": 870,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080863",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008018",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14299,
        14313
      ],
      "filename": "_UBS_entities.js",
      "lineno": 878,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080867",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008020",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14157,
        14171
      ],
      "filename": "_UBS_entities.js",
      "lineno": 866,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080861",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008017",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14116,
        14124
      ],
      "filename": "_UBS_entities.js",
      "lineno": 862,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080859",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008016",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14075,
        14083
      ],
      "filename": "_UBS_entities.js",
      "lineno": 858,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080857",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008015",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14034,
        14042
      ],
      "filename": "_UBS_entities.js",
      "lineno": 854,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080855",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008014",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13941,
        13953
      ],
      "filename": "_UBS_entities.js",
      "lineno": 846,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080851",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008012",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14249,
        14266
      ],
      "filename": "_UBS_entities.js",
      "lineno": 874,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080865",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008019",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13986,
        14001
      ],
      "filename": "_UBS_entities.js",
      "lineno": 850,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080853",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008013",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        13856,
        13864
      ],
      "filename": "_UBS_entities.js",
      "lineno": 838,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080847",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008010",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        14392,
        14402
      ],
      "filename": "_UBS_entities.js",
      "lineno": 886,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080871",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008022",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        13897,
        13908
      ],
      "filename": "_UBS_entities.js",
      "lineno": 842,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080849",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008011",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        14346,
        14359
      ],
      "filename": "_UBS_entities.js",
      "lineno": 882,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080869",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns.attrs",
    "scope": "static",
    "___id": "T000002R008021",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010831",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_ftsSubjectSearch_uk_ns}\n*/",
    "meta": {
      "range": [
        16348,
        16406
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1024,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080956",
        "name": "fts_ftsSubjectSearch_uk",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_ftsSubjectSearch_uk_ns"
      ]
    },
    "name": "fts_ftsSubjectSearch_uk",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R008055",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        15517,
        15576
      ],
      "filename": "_UBS_entities.js",
      "lineno": 964,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080919",
        "name": "fts_ftsSubjectSearch_uk_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_ftsSubjectSearch_uk_ns",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R008040",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        15677,
        16294
      ],
      "filename": "_UBS_entities.js",
      "lineno": 966,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080924",
        "name": "fts_ftsSubjectSearch_uk_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "static",
    "___id": "T000002R008041",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16093,
        16105
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1002,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080945",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008050",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16188,
        16202
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1010,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080949",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008052",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16046,
        16060
      ],
      "filename": "_UBS_entities.js",
      "lineno": 998,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080943",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008049",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16005,
        16013
      ],
      "filename": "_UBS_entities.js",
      "lineno": 994,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080941",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008048",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15964,
        15972
      ],
      "filename": "_UBS_entities.js",
      "lineno": 990,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080939",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008047",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15923,
        15931
      ],
      "filename": "_UBS_entities.js",
      "lineno": 986,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080937",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008046",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15830,
        15842
      ],
      "filename": "_UBS_entities.js",
      "lineno": 978,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080933",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008044",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16138,
        16155
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1006,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080947",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008051",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15875,
        15890
      ],
      "filename": "_UBS_entities.js",
      "lineno": 982,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080935",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008045",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        15745,
        15753
      ],
      "filename": "_UBS_entities.js",
      "lineno": 970,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080929",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008042",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        16281,
        16291
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1018,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080953",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008054",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        15786,
        15797
      ],
      "filename": "_UBS_entities.js",
      "lineno": 974,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080931",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008043",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        16235,
        16248
      ],
      "filename": "_UBS_entities.js",
      "lineno": 1014,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080951",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R008053",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010526",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010525",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010833",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010523",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010522",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_ftsSubjectSearch_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010524",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_tst_ftsentity_en_ns}\n*/",
    "meta": {
      "range": [
        10748,
        10800
      ],
      "filename": "_UBS_entities.js",
      "lineno": 628,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080710",
        "name": "fts_tst_ftsentity_en",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_tst_ftsentity_en_ns"
      ]
    },
    "name": "fts_tst_ftsentity_en",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007959",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        9926,
        9982
      ],
      "filename": "_UBS_entities.js",
      "lineno": 568,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080673",
        "name": "fts_tst_ftsentity_en_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_tst_ftsentity_en_ns",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007944",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        10083,
        10697
      ],
      "filename": "_UBS_entities.js",
      "lineno": 570,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080678",
        "name": "fts_tst_ftsentity_en_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "static",
    "___id": "T000002R007945",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10496,
        10508
      ],
      "filename": "_UBS_entities.js",
      "lineno": 606,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080699",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007954",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10591,
        10605
      ],
      "filename": "_UBS_entities.js",
      "lineno": 614,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080703",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007956",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10449,
        10463
      ],
      "filename": "_UBS_entities.js",
      "lineno": 602,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080697",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007953",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10408,
        10416
      ],
      "filename": "_UBS_entities.js",
      "lineno": 598,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080695",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007952",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10367,
        10375
      ],
      "filename": "_UBS_entities.js",
      "lineno": 594,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080693",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007951",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10326,
        10334
      ],
      "filename": "_UBS_entities.js",
      "lineno": 590,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080691",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007950",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10233,
        10245
      ],
      "filename": "_UBS_entities.js",
      "lineno": 582,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080687",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007948",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10541,
        10558
      ],
      "filename": "_UBS_entities.js",
      "lineno": 610,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080701",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007955",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10278,
        10293
      ],
      "filename": "_UBS_entities.js",
      "lineno": 586,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080689",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007949",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10148,
        10156
      ],
      "filename": "_UBS_entities.js",
      "lineno": 574,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080683",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007946",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10684,
        10694
      ],
      "filename": "_UBS_entities.js",
      "lineno": 622,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080707",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007958",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        10189,
        10200
      ],
      "filename": "_UBS_entities.js",
      "lineno": 578,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080685",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007947",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        10638,
        10651
      ],
      "filename": "_UBS_entities.js",
      "lineno": 618,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080705",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns.attrs",
    "scope": "static",
    "___id": "T000002R007957",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010501",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010500",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010827",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010498",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010497",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_en_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010499",
    "___s": true
  },
  {
    "comment": "/**\n* \n* @type {fts_tst_ftsentity_uk_ns}\n*/",
    "meta": {
      "range": [
        11682,
        11734
      ],
      "filename": "_UBS_entities.js",
      "lineno": 694,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080751",
        "name": "fts_tst_ftsentity_uk",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "fts_tst_ftsentity_uk_ns"
      ]
    },
    "name": "fts_tst_ftsentity_uk",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007975",
    "___s": true
  },
  {
    "comment": "/**\n * \n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        10860,
        10916
      ],
      "filename": "_UBS_entities.js",
      "lineno": 634,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080714",
        "name": "fts_tst_ftsentity_uk_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "fts_tst_ftsentity_uk_ns",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007960",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        11017,
        11631
      ],
      "filename": "_UBS_entities.js",
      "lineno": 636,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080719",
        "name": "fts_tst_ftsentity_uk_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":null,\"rowid\":null,\"entity\":null,\"ftsentity\":null,\"dy\":null,\"dm\":null,\"dd\":null,\"datacode\":null,\"aclrls\":null,\"entitydescr\":null,\"databody\":null,\"snippet\":null,\"rank\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "static",
    "___id": "T000002R007961",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11430,
        11442
      ],
      "filename": "_UBS_entities.js",
      "lineno": 672,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080740",
        "name": "aclrls",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "aclrls",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.aclrls",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007970",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11525,
        11539
      ],
      "filename": "_UBS_entities.js",
      "lineno": 680,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080744",
        "name": "databody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "databody",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.databody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007972",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11383,
        11397
      ],
      "filename": "_UBS_entities.js",
      "lineno": 668,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080738",
        "name": "datacode",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "datacode",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.datacode",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007969",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11342,
        11350
      ],
      "filename": "_UBS_entities.js",
      "lineno": 664,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080736",
        "name": "dd",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dd",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.dd",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007968",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11301,
        11309
      ],
      "filename": "_UBS_entities.js",
      "lineno": 660,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080734",
        "name": "dm",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dm",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.dm",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007967",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11260,
        11268
      ],
      "filename": "_UBS_entities.js",
      "lineno": 656,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080732",
        "name": "dy",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "dy",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.dy",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007966",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11167,
        11179
      ],
      "filename": "_UBS_entities.js",
      "lineno": 648,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080728",
        "name": "entity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007964",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11475,
        11492
      ],
      "filename": "_UBS_entities.js",
      "lineno": 676,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080742",
        "name": "entitydescr",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entitydescr",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.entitydescr",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007971",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11212,
        11227
      ],
      "filename": "_UBS_entities.js",
      "lineno": 652,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080730",
        "name": "ftsentity",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ftsentity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.ftsentity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007965",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11082,
        11090
      ],
      "filename": "_UBS_entities.js",
      "lineno": 640,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080724",
        "name": "ID",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007962",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11618,
        11628
      ],
      "filename": "_UBS_entities.js",
      "lineno": 688,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080748",
        "name": "rank",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rank",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.rank",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007974",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        11123,
        11134
      ],
      "filename": "_UBS_entities.js",
      "lineno": 644,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080726",
        "name": "rowid",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "rowid",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.rowid",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007963",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        11572,
        11585
      ],
      "filename": "_UBS_entities.js",
      "lineno": 684,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080746",
        "name": "snippet",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "snippet",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs.snippet",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns.attrs",
    "scope": "static",
    "___id": "T000002R007973",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010506",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010505",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010828",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010503",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010502",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~fts_tst_ftsentity_uk_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010504",
    "___s": true
  },
  {
    "comment": "/**\n* Stored UI filters.\n * doCmd.showList.autofilter use this entity to store user filters definition\n* @type {ubs_filter_ns}\n*/",
    "meta": {
      "range": [
        1729,
        1761
      ],
      "filename": "_UBS_entities.js",
      "lineno": 82,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080367",
        "name": "ubs_filter",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Stored UI filters.\ndoCmd.showList.autofilter use this entity to store user filters definition",
    "type": {
      "names": [
        "ubs_filter_ns"
      ]
    },
    "name": "ubs_filter",
    "longname": "module:@unitybase/ubs~ubs_filter",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007839",
    "___s": true
  },
  {
    "comment": "/**\n * Stored UI filters.\n * doCmd.showList.autofilter use this entity to store user filters definition\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        602,
        648
      ],
      "filename": "_UBS_entities.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080332",
        "name": "ubs_filter_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Stored UI filters.\ndoCmd.showList.autofilter use this entity to store user filters definition</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_filter_ns",
    "longname": "module:@unitybase/ubs~ubs_filter_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007826",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        749,
        1592
      ],
      "filename": "_UBS_entities.js",
      "lineno": 20,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080337",
        "name": "ubs_filter_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"code\":\"\",\"name\":\"\",\"filter\":\"\",\"isGlobal\":\"\",\"owner\":0,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "static",
    "___id": "T000002R007827",
    "___s": true
  },
  {
    "comment": "/**\n  * Code of filter group\n  * @type {String}\n  */",
    "meta": {
      "range": [
        867,
        875
      ],
      "filename": "_UBS_entities.js",
      "lineno": 29,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080344",
        "name": "code",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Code of filter group",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007829",
    "___s": true
  },
  {
    "comment": "/**\n  * filter\n  * @type {String}\n  */",
    "meta": {
      "range": [
        976,
        986
      ],
      "filename": "_UBS_entities.js",
      "lineno": 39,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080348",
        "name": "filter",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "filter",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "filter",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.filter",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007831",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        804,
        809
      ],
      "filename": "_UBS_entities.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080342",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007828",
    "___s": true
  },
  {
    "comment": "/**\n  * Is this filter accessible for all users\n  * Is this filter accessible for all users\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1108,
        1127
      ],
      "filename": "_UBS_entities.js",
      "lineno": 45,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080350",
        "name": "isGlobal",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "Is this filter accessible for all users\nIs this filter accessible for all users",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "isGlobal",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.isGlobal",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007832",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1316,
        1341
      ],
      "filename": "_UBS_entities.js",
      "lineno": 60,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080356",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007835",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1410,
        1426
      ],
      "filename": "_UBS_entities.js",
      "lineno": 65,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080359",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007836",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        1479,
        1504
      ],
      "filename": "_UBS_entities.js",
      "lineno": 70,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080361",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007837",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1573,
        1589
      ],
      "filename": "_UBS_entities.js",
      "lineno": 75,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080364",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007838",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1256,
        1267
      ],
      "filename": "_UBS_entities.js",
      "lineno": 55,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080354",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007834",
    "___s": true
  },
  {
    "comment": "/**\n  * Filter name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        924,
        932
      ],
      "filename": "_UBS_entities.js",
      "lineno": 34,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080346",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Filter name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007830",
    "___s": true
  },
  {
    "comment": "/**\n  * Filter owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        1189,
        1197
      ],
      "filename": "_UBS_entities.js",
      "lineno": 50,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080352",
        "name": "owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Filter owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "owner",
    "longname": "module:@unitybase/ubs~ubs_filter_ns.attrs.owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007833",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010461",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010460",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010817",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010458",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010457",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_filter_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010459",
    "___s": true
  },
  {
    "comment": "/**\n* System messages.\n * System messages\n* @type {ubs_message_ns}\n*/",
    "meta": {
      "range": [
        3060,
        3094
      ],
      "filename": "_UBS_entities.js",
      "lineno": 162,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080415",
        "name": "ubs_message",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "System messages.\nSystem messages",
    "type": {
      "names": [
        "ubs_message_ns"
      ]
    },
    "name": "ubs_message",
    "longname": "module:@unitybase/ubs~ubs_message",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007856",
    "___s": true
  },
  {
    "comment": "/**\n* System messages.\n * System messages\n* @type {ubs_message_edit_ns}\n*/",
    "meta": {
      "range": [
        4303,
        4347
      ],
      "filename": "_UBS_entities.js",
      "lineno": 237,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080461",
        "name": "ubs_message_edit",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "System messages.\nSystem messages",
    "type": {
      "names": [
        "ubs_message_edit_ns"
      ]
    },
    "name": "ubs_message_edit",
    "longname": "module:@unitybase/ubs~ubs_message_edit",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007872",
    "___s": true
  },
  {
    "comment": "/**\n * System messages.\n * System messages\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        3189,
        3241
      ],
      "filename": "_UBS_entities.js",
      "lineno": 169,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080419",
        "name": "ubs_message_edit_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>System messages.\nSystem messages</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_message_edit_ns",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007857",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        3342,
        4221
      ],
      "filename": "_UBS_entities.js",
      "lineno": 171,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080424",
        "name": "ubs_message_edit_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"messageBody\":null,\"complete\":\"\",\"messageType\":\"\",\"startDate\":\"\",\"expireDate\":\"\",\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "static",
    "___id": "T000002R007858",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        3492,
        3511
      ],
      "filename": "_UBS_entities.js",
      "lineno": 183,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080433",
        "name": "complete",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "complete",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.complete",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007861",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3642,
        3664
      ],
      "filename": "_UBS_entities.js",
      "lineno": 195,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080440",
        "name": "expireDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "expireDate",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.expireDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007864",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3403,
        3408
      ],
      "filename": "_UBS_entities.js",
      "lineno": 175,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080429",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007859",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3441,
        3458
      ],
      "filename": "_UBS_entities.js",
      "lineno": 179,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080431",
        "name": "messageBody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "messageBody",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.messageBody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007860",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        3544,
        3559
      ],
      "filename": "_UBS_entities.js",
      "lineno": 187,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080435",
        "name": "messageType",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "messageType",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.messageType",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007862",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3783,
        3808
      ],
      "filename": "_UBS_entities.js",
      "lineno": 205,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080445",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007866",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3877,
        3893
      ],
      "filename": "_UBS_entities.js",
      "lineno": 210,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080448",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007867",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4105,
        4130
      ],
      "filename": "_UBS_entities.js",
      "lineno": 225,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080455",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007870",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4199,
        4218
      ],
      "filename": "_UBS_entities.js",
      "lineno": 230,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080458",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007871",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3946,
        3971
      ],
      "filename": "_UBS_entities.js",
      "lineno": 215,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080450",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007868",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4040,
        4056
      ],
      "filename": "_UBS_entities.js",
      "lineno": 220,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080453",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007869",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        3723,
        3734
      ],
      "filename": "_UBS_entities.js",
      "lineno": 200,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080443",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007865",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        3590,
        3611
      ],
      "filename": "_UBS_entities.js",
      "lineno": 191,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080437",
        "name": "startDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "startDate",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns.attrs.startDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns.attrs",
    "scope": "static",
    "___id": "T000002R007863",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010471",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010470",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010819",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010468",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010467",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_message_edit_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010469",
    "___s": true
  },
  {
    "comment": "/**\n * System messages.\n * System messages\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        1856,
        1903
      ],
      "filename": "_UBS_entities.js",
      "lineno": 89,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080371",
        "name": "ubs_message_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>System messages.\nSystem messages</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_message_ns",
    "longname": "module:@unitybase/ubs~ubs_message_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007840",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        2004,
        2983
      ],
      "filename": "_UBS_entities.js",
      "lineno": 91,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080376",
        "name": "ubs_message_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"messageBody\":null,\"complete\":\"\",\"messageType\":\"\",\"startDate\":\"\",\"expireDate\":\"\",\"recipients\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0,\"mi_deleteDate\":\"\",\"mi_deleteUser\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "static",
    "___id": "T000002R007841",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        2149,
        2168
      ],
      "filename": "_UBS_entities.js",
      "lineno": 103,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080385",
        "name": "complete",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "complete",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.complete",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007844",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2299,
        2321
      ],
      "filename": "_UBS_entities.js",
      "lineno": 115,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080392",
        "name": "expireDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "expireDate",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.expireDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007847",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2060,
        2065
      ],
      "filename": "_UBS_entities.js",
      "lineno": 95,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080381",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007842",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2098,
        2115
      ],
      "filename": "_UBS_entities.js",
      "lineno": 99,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080383",
        "name": "messageBody",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "messageBody",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.messageBody",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007843",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        2201,
        2216
      ],
      "filename": "_UBS_entities.js",
      "lineno": 107,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080387",
        "name": "messageType",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "messageType",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.messageType",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007845",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2545,
        2570
      ],
      "filename": "_UBS_entities.js",
      "lineno": 130,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080399",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007850",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2639,
        2655
      ],
      "filename": "_UBS_entities.js",
      "lineno": 135,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080402",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007851",
    "___s": true
  },
  {
    "comment": "/**\n  * Deletion date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2867,
        2892
      ],
      "filename": "_UBS_entities.js",
      "lineno": 150,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080409",
        "name": "mi_deleteDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Deletion date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_deleteDate",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_deleteDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007854",
    "___s": true
  },
  {
    "comment": "/**\n  * User who delete row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2961,
        2980
      ],
      "filename": "_UBS_entities.js",
      "lineno": 155,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080412",
        "name": "mi_deleteUser",
        "type": "Literal",
        "value": null
      }
    },
    "description": "User who delete row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_deleteUser",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_deleteUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007855",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2708,
        2733
      ],
      "filename": "_UBS_entities.js",
      "lineno": 140,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080404",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007852",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2802,
        2818
      ],
      "filename": "_UBS_entities.js",
      "lineno": 145,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080407",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007853",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2485,
        2496
      ],
      "filename": "_UBS_entities.js",
      "lineno": 125,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080397",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007849",
    "___s": true
  },
  {
    "comment": "/**\n  * System messages recipients -> ubs_message_recipient\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        2410,
        2426
      ],
      "filename": "_UBS_entities.js",
      "lineno": 120,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080395",
        "name": "recipients",
        "type": "Literal",
        "value": null
      }
    },
    "description": "System messages recipients -&gt; ubs_message_recipient",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "recipients",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.recipients",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007848",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        2247,
        2268
      ],
      "filename": "_UBS_entities.js",
      "lineno": 111,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080389",
        "name": "startDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "startDate",
    "longname": "module:@unitybase/ubs~ubs_message_ns.attrs.startDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns.attrs",
    "scope": "static",
    "___id": "T000002R007846",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_message_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010466",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_message_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010465",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_message_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010818",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_message_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010463",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_message_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010462",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_message_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010464",
    "___s": true
  },
  {
    "comment": "/**\n* System messages recipients.\n * System messages recipient\n* @type {ubs_message_recipient_ns}\n*/",
    "meta": {
      "range": [
        4937,
        4991
      ],
      "filename": "_UBS_entities.js",
      "lineno": 269,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080484",
        "name": "ubs_message_recipient",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "System messages recipients.\nSystem messages recipient",
    "type": {
      "names": [
        "ubs_message_recipient_ns"
      ]
    },
    "name": "ubs_message_recipient",
    "longname": "module:@unitybase/ubs~ubs_message_recipient",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007879",
    "___s": true
  },
  {
    "comment": "/**\n * System messages recipients.\n * System messages recipient\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        4463,
        4520
      ],
      "filename": "_UBS_entities.js",
      "lineno": 244,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080465",
        "name": "ubs_message_recipient_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>System messages recipients.\nSystem messages recipient</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_message_recipient_ns",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007873",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        4621,
        4829
      ],
      "filename": "_UBS_entities.js",
      "lineno": 246,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080470",
        "name": "ubs_message_recipient_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"messageID\":0,\"userID\":0,\"acceptDate\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "static",
    "___id": "T000002R007874",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        4810,
        4826
      ],
      "filename": "_UBS_entities.js",
      "lineno": 262,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080481",
        "name": "acceptDate",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "acceptDate",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs.acceptDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs",
    "scope": "static",
    "___id": "T000002R007878",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4687,
        4692
      ],
      "filename": "_UBS_entities.js",
      "lineno": 250,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080475",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs",
    "scope": "static",
    "___id": "T000002R007875",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4725,
        4737
      ],
      "filename": "_UBS_entities.js",
      "lineno": 254,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080477",
        "name": "messageID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "messageID",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs.messageID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs",
    "scope": "static",
    "___id": "T000002R007876",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        4770,
        4779
      ],
      "filename": "_UBS_entities.js",
      "lineno": 258,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080479",
        "name": "userID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "userID",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs.userID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns.attrs",
    "scope": "static",
    "___id": "T000002R007877",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010476",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010475",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010820",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010473",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010472",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_message_recipient_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010474",
    "___s": true
  },
  {
    "comment": "/**\n* Registration key counter\n* @type {ubs_numcounter_ns}\n*/",
    "meta": {
      "range": [
        5481,
        5521
      ],
      "filename": "_UBS_entities.js",
      "lineno": 297,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080505",
        "name": "ubs_numcounter",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Registration key counter",
    "type": {
      "names": [
        "ubs_numcounter_ns"
      ]
    },
    "name": "ubs_numcounter",
    "longname": "module:@unitybase/ubs~ubs_numcounter",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007885",
    "___s": true
  },
  {
    "comment": "/**\n * Registration key counter\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        5075,
        5125
      ],
      "filename": "_UBS_entities.js",
      "lineno": 275,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080488",
        "name": "ubs_numcounter_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Registration key counter</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_numcounter_ns",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007880",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        5226,
        5412
      ],
      "filename": "_UBS_entities.js",
      "lineno": 277,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080493",
        "name": "ubs_numcounter_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"regKey\":\"\",\"counter\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "static",
    "___id": "T000002R007881",
    "___s": true
  },
  {
    "comment": "/**\n  * Counter\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5399,
        5409
      ],
      "filename": "_UBS_entities.js",
      "lineno": 291,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080502",
        "name": "counter",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Counter",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "counter",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns.attrs.counter",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007884",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5285,
        5290
      ],
      "filename": "_UBS_entities.js",
      "lineno": 281,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080498",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007882",
    "___s": true
  },
  {
    "comment": "/**\n  * Registration key\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5344,
        5354
      ],
      "filename": "_UBS_entities.js",
      "lineno": 286,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080500",
        "name": "regKey",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Registration key",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "regKey",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns.attrs.regKey",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns.attrs",
    "scope": "static",
    "___id": "T000002R007883",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010481",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010480",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010821",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010478",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010477",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_numcounter_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010479",
    "___s": true
  },
  {
    "comment": "/**\n* Reserved counters for registration keys\n* @type {ubs_numcounterreserv_ns}\n*/",
    "meta": {
      "range": [
        6242,
        6294
      ],
      "filename": "_UBS_entities.js",
      "lineno": 335,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080530",
        "name": "ubs_numcounterreserv",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Reserved counters for registration keys",
    "type": {
      "names": [
        "ubs_numcounterreserv_ns"
      ]
    },
    "name": "ubs_numcounterreserv",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007893",
    "___s": true
  },
  {
    "comment": "/**\n * Reserved counters for registration keys\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        5620,
        5676
      ],
      "filename": "_UBS_entities.js",
      "lineno": 303,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080509",
        "name": "ubs_numcounterreserv_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Reserved counters for registration keys</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_numcounterreserv_ns",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007886",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        5777,
        6152
      ],
      "filename": "_UBS_entities.js",
      "lineno": 305,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080514",
        "name": "ubs_numcounterreserv_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"regKey\":\"\",\"counter\":0,\"reservedDate\":null,\"note\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "static",
    "___id": "T000002R007887",
    "___s": true
  },
  {
    "comment": "/**\n  * Counter\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5956,
        5966
      ],
      "filename": "_UBS_entities.js",
      "lineno": 319,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080523",
        "name": "counter",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Counter",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "counter",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs.counter",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "scope": "static",
    "___id": "T000002R007890",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        5842,
        5847
      ],
      "filename": "_UBS_entities.js",
      "lineno": 309,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080519",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "scope": "static",
    "___id": "T000002R007888",
    "___s": true
  },
  {
    "comment": "/**\n  * Description of reserved number (Department name, etc)\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6139,
        6149
      ],
      "filename": "_UBS_entities.js",
      "lineno": 329,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080527",
        "name": "note",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description of reserved number (Department name, etc)",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "note",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs.note",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "scope": "static",
    "___id": "T000002R007892",
    "___s": true
  },
  {
    "comment": "/**\n  * Registration key\n  * @type {String}\n  */",
    "meta": {
      "range": [
        5901,
        5911
      ],
      "filename": "_UBS_entities.js",
      "lineno": 314,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080521",
        "name": "regKey",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Registration key",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "regKey",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs.regKey",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "scope": "static",
    "___id": "T000002R007889",
    "___s": true
  },
  {
    "comment": "/**\n  * Reserved date for document\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6030,
        6048
      ],
      "filename": "_UBS_entities.js",
      "lineno": 324,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080525",
        "name": "reservedDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Reserved date for document",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "reservedDate",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs.reservedDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns.attrs",
    "scope": "static",
    "___id": "T000002R007891",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010486",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010485",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010822",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010483",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010482",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_numcounterreserv_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010484",
    "___s": true
  },
  {
    "comment": "/**\n* Report templates\n* @type {ubs_report_ns}\n*/",
    "meta": {
      "range": [
        7026,
        7058
      ],
      "filename": "_UBS_entities.js",
      "lineno": 380,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080559",
        "name": "ubs_report",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Report templates",
    "type": {
      "names": [
        "ubs_report_ns"
      ]
    },
    "name": "ubs_report",
    "longname": "module:@unitybase/ubs~ubs_report",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007903",
    "___s": true
  },
  {
    "comment": "/**\n * Report templates\n * @extends EntityNamespace\n */",
    "meta": {
      "range": [
        6351,
        6397
      ],
      "filename": "_UBS_entities.js",
      "lineno": 340,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080534",
        "name": "ubs_report_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Report templates</p>",
    "augments": [
      "EntityNamespace"
    ],
    "name": "ubs_report_ns",
    "longname": "module:@unitybase/ubs~ubs_report_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007894",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        6498,
        6969
      ],
      "filename": "_UBS_entities.js",
      "lineno": 342,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080539",
        "name": "ubs_report_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"model\":\"\",\"report_code\":\"\",\"name\":\"\",\"template\":null,\"code\":null,\"mi_modifyDate\":null}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns",
    "scope": "static",
    "___id": "T000002R007895",
    "___s": true
  },
  {
    "comment": "/**\n  * Javascript code\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6839,
        6849
      ],
      "filename": "_UBS_entities.js",
      "lineno": 369,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080554",
        "name": "code",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Javascript code",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "code",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.code",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007901",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        6553,
        6558
      ],
      "filename": "_UBS_entities.js",
      "lineno": 346,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080544",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007896",
    "___s": true
  },
  {
    "comment": "/**\n  * Emulate a mStorage.mi_modifyDate for cache version calculation\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        6947,
        6966
      ],
      "filename": "_UBS_entities.js",
      "lineno": 374,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080556",
        "name": "mi_modifyDate",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Emulate a mStorage.mi_modifyDate for cache version calculation",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007902",
    "___s": true
  },
  {
    "comment": "/**\n  * Model code where to store report\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6628,
        6637
      ],
      "filename": "_UBS_entities.js",
      "lineno": 351,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080546",
        "name": "model",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Model code where to store report",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "model",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.model",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007897",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6718,
        6726
      ],
      "filename": "_UBS_entities.js",
      "lineno": 359,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080550",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007899",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6670,
        6685
      ],
      "filename": "_UBS_entities.js",
      "lineno": 355,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080548",
        "name": "report_code",
        "type": "Literal",
        "value": ""
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "report_code",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.report_code",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007898",
    "___s": true
  },
  {
    "comment": "/**\n  * Template\n  * @type {String}\n  */",
    "meta": {
      "range": [
        6772,
        6786
      ],
      "filename": "_UBS_entities.js",
      "lineno": 364,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080552",
        "name": "template",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Template",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "template",
    "longname": "module:@unitybase/ubs~ubs_report_ns.attrs.template",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns.attrs",
    "scope": "static",
    "___id": "T000002R007900",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_report_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_report_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010823",
    "___s": true
  },
  {
    "comment": "/**\n* Entity with information about system settings\n* @type {ubs_settings_ns}\n*/",
    "meta": {
      "range": [
        8232,
        8268
      ],
      "filename": "_UBS_entities.js",
      "lineno": 453,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080600",
        "name": "ubs_settings",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Entity with information about system settings",
    "type": {
      "names": [
        "ubs_settings_ns"
      ]
    },
    "name": "ubs_settings",
    "longname": "module:@unitybase/ubs~ubs_settings",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007918",
    "___s": true
  },
  {
    "comment": "/**\n * Entity with information about system settings\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        7163,
        7211
      ],
      "filename": "_UBS_entities.js",
      "lineno": 386,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080563",
        "name": "ubs_settings_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Entity with information about system settings</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_settings_ns",
    "longname": "module:@unitybase/ubs~ubs_settings_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007904",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        7312,
        8144
      ],
      "filename": "_UBS_entities.js",
      "lineno": 388,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080568",
        "name": "ubs_settings_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"settingKey\":\"\",\"name\":\"\",\"description\":null,\"type\":null,\"settingValue\":null,\"defaultValue\":null,\"mi_owner\":0,\"mi_createDate\":\"\",\"mi_createUser\":0,\"mi_modifyDate\":\"\",\"mi_modifyUser\":0}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "static",
    "___id": "T000002R007905",
    "___s": true
  },
  {
    "comment": "/**\n  * Default value\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7731,
        7749
      ],
      "filename": "_UBS_entities.js",
      "lineno": 422,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080585",
        "name": "defaultValue",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Default value",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "defaultValue",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.defaultValue",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007912",
    "___s": true
  },
  {
    "comment": "/**\n  * Description\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7544,
        7561
      ],
      "filename": "_UBS_entities.js",
      "lineno": 407,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080579",
        "name": "description",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Description",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "description",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.description",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007909",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7369,
        7374
      ],
      "filename": "_UBS_entities.js",
      "lineno": 392,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080573",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007906",
    "___s": true
  },
  {
    "comment": "/**\n  * Creation date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        7868,
        7893
      ],
      "filename": "_UBS_entities.js",
      "lineno": 432,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080589",
        "name": "mi_createDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Creation date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_createDate",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.mi_createDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007914",
    "___s": true
  },
  {
    "comment": "/**\n  * User who create row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7962,
        7978
      ],
      "filename": "_UBS_entities.js",
      "lineno": 437,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080592",
        "name": "mi_createUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who create row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_createUser",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.mi_createUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007915",
    "___s": true
  },
  {
    "comment": "/**\n  * Modification date\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8031,
        8056
      ],
      "filename": "_UBS_entities.js",
      "lineno": 442,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080594",
        "name": "mi_modifyDate",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Modification date",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "mi_modifyDate",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.mi_modifyDate",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007916",
    "___s": true
  },
  {
    "comment": "/**\n  * User who modify row -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8125,
        8141
      ],
      "filename": "_UBS_entities.js",
      "lineno": 447,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080597",
        "name": "mi_modifyUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User who modify row -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_modifyUser",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.mi_modifyUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007917",
    "___s": true
  },
  {
    "comment": "/**\n  * Row owner -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        7808,
        7819
      ],
      "filename": "_UBS_entities.js",
      "lineno": 427,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080587",
        "name": "mi_owner",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Row owner -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "mi_owner",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.mi_owner",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007913",
    "___s": true
  },
  {
    "comment": "/**\n  * Setting name\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7487,
        7495
      ],
      "filename": "_UBS_entities.js",
      "lineno": 402,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080577",
        "name": "name",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Setting name",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "name",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.name",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007908",
    "___s": true
  },
  {
    "comment": "/**\n  * Setting key\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7423,
        7437
      ],
      "filename": "_UBS_entities.js",
      "lineno": 397,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080575",
        "name": "settingKey",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Setting key",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "settingKey",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.settingKey",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007907",
    "___s": true
  },
  {
    "comment": "/**\n  * Value\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7662,
        7680
      ],
      "filename": "_UBS_entities.js",
      "lineno": 417,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080583",
        "name": "settingValue",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Value",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "settingValue",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.settingValue",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007911",
    "___s": true
  },
  {
    "comment": "/**\n  * Value type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        7609,
        7619
      ],
      "filename": "_UBS_entities.js",
      "lineno": 412,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080581",
        "name": "type",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Value type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "type",
    "longname": "module:@unitybase/ubs~ubs_settings_ns.attrs.type",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns.attrs",
    "scope": "static",
    "___id": "T000002R007910",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010491",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010490",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010824",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010488",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010487",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_settings_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010489",
    "___s": true
  },
  {
    "comment": "/**\n* Soft lock\n* @type {ubs_softLock_ns}\n*/",
    "meta": {
      "range": [
        8924,
        8960
      ],
      "filename": "_UBS_entities.js",
      "lineno": 496,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080628",
        "name": "ubs_softLock",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Soft lock",
    "type": {
      "names": [
        "ubs_softLock_ns"
      ]
    },
    "name": "ubs_softLock",
    "longname": "module:@unitybase/ubs~ubs_softLock",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "params": [],
    "___id": "T000002R007927",
    "___s": true
  },
  {
    "comment": "/**\n * Soft lock\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        8337,
        8385
      ],
      "filename": "_UBS_entities.js",
      "lineno": 459,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080604",
        "name": "ubs_softLock_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>Soft lock</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ubs_softLock_ns",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ubs",
    "___id": "T000002R007919",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        8486,
        8872
      ],
      "filename": "_UBS_entities.js",
      "lineno": 461,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080609",
        "name": "ubs_softLock_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"entity\":\"\",\"lockID\":0,\"lockUser\":0,\"lockType\":\"\",\"lockTime\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "static",
    "___id": "T000002R007920",
    "___s": true
  },
  {
    "comment": "/**\n  * Entity\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8592,
        8602
      ],
      "filename": "_UBS_entities.js",
      "lineno": 470,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080616",
        "name": "entity",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Entity",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007922",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8543,
        8548
      ],
      "filename": "_UBS_entities.js",
      "lineno": 465,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080614",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007921",
    "___s": true
  },
  {
    "comment": "/**\n  * Instance ID\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8651,
        8660
      ],
      "filename": "_UBS_entities.js",
      "lineno": 475,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080618",
        "name": "lockID",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Instance ID",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "lockID",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.lockID",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007923",
    "___s": true
  },
  {
    "comment": "/**\n  * Lock time\n  * @type {Date}\n  */",
    "meta": {
      "range": [
        8849,
        8869
      ],
      "filename": "_UBS_entities.js",
      "lineno": 490,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080624",
        "name": "lockTime",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "Lock time",
    "type": {
      "names": [
        "Date"
      ]
    },
    "name": "lockTime",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.lockTime",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007926",
    "___s": true
  },
  {
    "comment": "/**\n  * Lock type\n  * @type {String}\n  */",
    "meta": {
      "range": [
        8792,
        8804
      ],
      "filename": "_UBS_entities.js",
      "lineno": 485,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080622",
        "name": "lockType",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Lock type",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "lockType",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.lockType",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007925",
    "___s": true
  },
  {
    "comment": "/**\n  * User, who locking record -> uba_user\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        8734,
        8745
      ],
      "filename": "_UBS_entities.js",
      "lineno": 480,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080620",
        "name": "lockUser",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "User, who locking record -&gt; uba_user",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "lockUser",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns.attrs.lockUser",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns.attrs",
    "scope": "static",
    "___id": "T000002R007924",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010496",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010495",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010825",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010493",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010492",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ubs~ubs_softLock_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ubs~ubs_softLock_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010494",
    "___s": true
  },
  {
    "comment": "/**\n   * @deprecated Use `const App = require('@unitybase/ub').App`\n   */",
    "meta": {
      "range": [
        4859,
        4875
      ],
      "filename": "modelUB.js",
      "lineno": 145,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051226",
        "name": "global.App",
        "type": "Identifier",
        "value": "App",
        "paramnames": []
      }
    },
    "deprecated": "Use `const App = require('@unitybase/ub').App`",
    "name": "App",
    "longname": "module:@unitybase/ub~global.App",
    "kind": "member",
    "scope": "static",
    "memberof": "module:@unitybase/ub~global",
    "___id": "T000002R004610",
    "___s": true
  },
  {
    "comment": "/**\n   * @deprecated Use `const UB = require('@unitybase/ub')`\n   */",
    "meta": {
      "range": [
        4766,
        4780
      ],
      "filename": "modelUB.js",
      "lineno": 141,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051220",
        "name": "global.UB",
        "type": "Identifier",
        "value": "UB",
        "paramnames": []
      }
    },
    "deprecated": "Use `const UB = require('@unitybase/ub')`",
    "name": "UB",
    "longname": "module:@unitybase/ub~global.UB",
    "kind": "member",
    "scope": "static",
    "memberof": "module:@unitybase/ub~global",
    "___id": "T000002R004609",
    "___s": true
  },
  {
    "comment": "/**\n * Creates namespaces to be used for scoping variables and classes so that they are not global.\n *\n *     UB.ns('DOC.Report');\n *     DOC.Report.myReport = function() { ... };\n *\n * @deprecated Try to avoid namespaces - instead create a modules and use require()\n * @param {String} namespacePath\n * @return {Object} The namespace object.\n */",
    "meta": {
      "range": [
        7970,
        8235
      ],
      "filename": "modelUB.js",
      "lineno": 223,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051552",
        "name": "ns",
        "type": "FunctionDeclaration",
        "paramnames": [
          "namespacePath"
        ]
      },
      "vars": {
        "root": "module:@unitybase/ub~root",
        "parts": "module:@unitybase/ub~ns~parts",
        "j": "module:@unitybase/ub~ns~j",
        "subLn": "module:@unitybase/ub~ns~subLn",
        "part": "module:@unitybase/ub~ns~part",
        "root[undefined]": "module:@unitybase/ub~ns~root.undefined]"
      }
    },
    "description": "<p>Creates namespaces to be used for scoping variables and classes so that they are not global.</p>\n<pre class=\"prettyprint source\"><code>UB.ns('DOC.Report');\nDOC.Report.myReport = function() { ... };</code></pre>",
    "deprecated": "Try to avoid namespaces - instead create a modules and use require()",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "namespacePath"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "<p>The namespace object.</p>"
      }
    ],
    "name": "ns",
    "longname": "module:@unitybase/ub~ns",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub",
    "___id": "T000002R004635",
    "___s": true
  },
  {
    "comment": "/**\n * Initialize UnityBase application:\n *  - create namespaces (global objects) for all `*.meta` files from domain\n *  - require all packages specified in config `application.domain.models`\n *  - emit {@link event:domainIsLoaded App.domainIsLoaded} event\n *  - register build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}\n */",
    "meta": {
      "range": [
        4633,
        6051
      ],
      "filename": "modelUB.js",
      "lineno": 135,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051210",
        "name": "start",
        "type": "FunctionDeclaration",
        "paramnames": []
      },
      "vars": {
        "global.UB": "module:@unitybase/ub~global.UB",
        "global.App": "module:@unitybase/ub~global.App",
        "orderedModels": "module:@unitybase/ub~start~orderedModels",
        "": null,
        "undefined": null
      }
    },
    "description": "<p>Initialize UnityBase application:</p>\n<ul>\n<li>create namespaces (global objects) for all <code>*.meta</code> files from domain</li>\n<li>require all packages specified in config <code>application.domain.models</code></li>\n<li>emit {@link event:domainIsLoaded App.domainIsLoaded} event</li>\n<li>register build-in UnityBase {@link module:@unitybase/ub.module:endpoints endpoints}</li>\n</ul>",
    "name": "start",
    "longname": "module:@unitybase/ub~start",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:@unitybase/ub",
    "params": [],
    "___id": "T000002R004608",
    "___s": true
  },
  {
    "comment": "/**\n* File BLOB history.\n * Store historical data for all file based BLOB stores\n* @type {ub_blobHistory_ns}\n*/",
    "meta": {
      "range": [
        1232,
        1272
      ],
      "filename": "_UB_entities.js",
      "lineno": 54,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051010",
        "name": "ub_blobHistory",
        "type": "NewExpression",
        "value": ""
      }
    },
    "description": "File BLOB history.\nStore historical data for all file based BLOB stores",
    "type": {
      "names": [
        "ub_blobHistory_ns"
      ]
    },
    "name": "ub_blobHistory",
    "longname": "module:@unitybase/ub~ub_blobHistory",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:@unitybase/ub",
    "params": [],
    "___id": "T000002R004571",
    "___s": true
  },
  {
    "comment": "/**\n * File BLOB history.\n * Store historical data for all file based BLOB stores\n * @extends EntityNamespace\n * @mixes mStorage\n */",
    "meta": {
      "range": [
        526,
        576
      ],
      "filename": "_UB_entities.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100050987",
        "name": "ub_blobHistory_ns",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "<p>File BLOB history.\nStore historical data for all file based BLOB stores</p>",
    "augments": [
      "EntityNamespace"
    ],
    "mixes": [
      "mStorage"
    ],
    "name": "ub_blobHistory_ns",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:@unitybase/ub",
    "___id": "T000002R004563",
    "___s": true
  },
  {
    "comment": "/** Attributes defined in metadata. This property not exist in real life and added just for help */",
    "meta": {
      "range": [
        677,
        1113
      ],
      "filename": "_UB_entities.js",
      "lineno": 20,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100050992",
        "name": "ub_blobHistory_ns.attrs",
        "type": "ObjectExpression",
        "value": "{\"ID\":0,\"instance\":0,\"attribute\":null,\"revision\":0,\"permanent\":\"\",\"blobInfo\":\"\"}",
        "paramnames": []
      }
    },
    "description": "Attributes defined in metadata. This property not exist in real life and added just for help",
    "name": "attrs",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "static",
    "___id": "T000002R004564",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {String}\n  */",
    "meta": {
      "range": [
        818,
        833
      ],
      "filename": "_UB_entities.js",
      "lineno": 32,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051001",
        "name": "attribute",
        "type": "Literal",
        "value": null
      }
    },
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "attribute",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.attribute",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004567",
    "___s": true
  },
  {
    "comment": "/**\n  * Content of historical Document attribute\n  * @type {String}\n  */",
    "meta": {
      "range": [
        1098,
        1110
      ],
      "filename": "_UB_entities.js",
      "lineno": 47,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051007",
        "name": "blobInfo",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Content of historical Document attribute",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "blobInfo",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.blobInfo",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004570",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        736,
        741
      ],
      "filename": "_UB_entities.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100050997",
        "name": "ID",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "ID",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.ID",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004565",
    "___s": true
  },
  {
    "comment": "/**\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        774,
        785
      ],
      "filename": "_UB_entities.js",
      "lineno": 28,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100050999",
        "name": "instance",
        "type": "Literal",
        "value": 0
      }
    },
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "instance",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.instance",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004566",
    "___s": true
  },
  {
    "comment": "/**\n  * 1 on case we do not delete this revision during history rotation\n  * @type {Boolean}\n  */",
    "meta": {
      "range": [
        1000,
        1020
      ],
      "filename": "_UB_entities.js",
      "lineno": 42,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051005",
        "name": "permanent",
        "type": "Identifier",
        "value": "undefined"
      }
    },
    "description": "1 on case we do not delete this revision during history rotation",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "permanent",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.permanent",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004569",
    "___s": true
  },
  {
    "comment": "/**\n  * Revision number\n  * @type {Number}\n  */",
    "meta": {
      "range": [
        886,
        897
      ],
      "filename": "_UB_entities.js",
      "lineno": 37,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100051003",
        "name": "revision",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Revision number",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "revision",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns.attrs.revision",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns.attrs",
    "scope": "static",
    "___id": "T000002R004568",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#addNew",
    "kind": "function",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.addNew"
    ],
    "mixed": true,
    "___id": "T000002R010371",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#delete",
    "kind": "function",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.delete"
    ],
    "mixed": true,
    "___id": "T000002R010370",
    "___s": true
  },
  {
    "comment": "/**\n     * Reference to entity metadata\n     * @type {UBEntity}\n     */",
    "meta": {
      "range": [
        3649,
        3677
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 135,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008758",
        "name": "this.entity",
        "type": "NewExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Reference to entity metadata",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "name": "entity",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#entity",
    "kind": "member",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "inherits": "EntityNamespace#entity",
    "inherited": true,
    "___id": "T000002R010798",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#insert",
    "kind": "function",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.insert"
    ],
    "mixed": true,
    "___id": "T000002R010368",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#select",
    "kind": "function",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.select"
    ],
    "mixed": true,
    "___id": "T000002R010367",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "module:@unitybase/ub~ub_blobHistory_ns#update",
    "kind": "function",
    "memberof": "module:@unitybase/ub~ub_blobHistory_ns",
    "scope": "instance",
    "access": "published",
    "mixes": [
      "mStorage.update"
    ],
    "mixed": true,
    "___id": "T000002R010369",
    "___s": true
  },
  {
    "comment": "/**\r\n * Stub for documenting build-in modules and classes.\r\n *\r\n * All `buildin` submodules can be required directly without adding namespace:\r\n *\r\n *      const assert = require('assert')\r\n *\r\n * All members are accessible in global:\r\n *\r\n *      console.log(process.cwd())\r\n * \r\n * In case submodule is not documented here - see documentation on [node.js](https://nodejs.org/dist/latest-v8.x/docs/api/) site\r\n *\r\n * @module buildin\r\n */",
    "meta": {
      "filename": "synode.js",
      "lineno": 10,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "buildin",
    "longname": "module:buildin",
    "readme": "<p>﻿Definition (stubs) for build-in UnityBase modules &amp; globals - such stubs are used by IDEs. </p>",
    "___id": "T000002R002664",
    "___s": true
  },
  {
    "comment": "/**\n * Do not create directly, use {@link console} instance from `global`.\n *\n *      console.debug('Yeh!');\n *\n * @class Console\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "console.js",
      "lineno": 26,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>Do not create directly, use {@link console} instance from <code>global</code>.</p>\n<pre class=\"prettyprint source\"><code> console.debug('Yeh!');</code></pre>",
    "kind": "class",
    "name": "Console",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.Console",
    "___id": "T000002R001379",
    "___s": true
  },
  {
    "comment": "/**\n * Assertions\n * @module assert\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "assert.js",
      "lineno": 27,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Assertions",
    "kind": "module",
    "name": "assert",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:assert",
    "___id": "T000002R000921",
    "___s": true
  },
  {
    "comment": "/**\n * Tests for deep equality.\n * @param actual\n * @param expected\n * @param [message]\n */",
    "meta": {
      "range": [
        5835,
        6029
      ],
      "filename": "assert.js",
      "lineno": 176,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009384",
        "name": "module.exports.deepEqual",
        "type": "FunctionExpression",
        "value": "deepEqual",
        "paramnames": [
          "actual",
          "expected",
          "message"
        ]
      }
    },
    "description": "Tests for deep equality.",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "deepEqual",
    "longname": "module:buildin.module:assert.deepEqual",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000956",
    "___s": true
  },
  {
    "comment": "/**\n * Expects block not to throw an error, see assert.throws for details.\n * @param block\n * @param [error]\n * @param [message]\n */",
    "meta": {
      "range": [
        15430,
        15560
      ],
      "filename": "assert.js",
      "lineno": 473,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010309",
        "name": "module.exports.doesNotThrow",
        "type": "FunctionExpression",
        "paramnames": [
          "block",
          "error",
          "message"
        ]
      },
      "vars": {
        "error": "module:buildin.module:assert.doesNotThrow.error",
        "message": "module:buildin.module:assert.doesNotThrow.message"
      }
    },
    "description": "Expects block not to throw an error, see assert.throws for details.",
    "params": [
      {
        "name": "block"
      },
      {
        "optional": true,
        "name": "error"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "doesNotThrow",
    "longname": "module:buildin.module:assert.doesNotThrow",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000998",
    "___s": true
  },
  {
    "comment": "/**\n * Tests shallow, coercive equality with the equal comparison operator ( == ).\n * @param actual\n * @param expected\n * @param {String} [message]\n */",
    "meta": {
      "range": [
        5019,
        5166
      ],
      "filename": "assert.js",
      "lineno": 148,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009329",
        "name": "module.exports.equal",
        "type": "FunctionExpression",
        "value": "equal",
        "paramnames": [
          "actual",
          "expected",
          "message"
        ]
      }
    },
    "description": "Tests shallow, coercive equality with the equal comparison operator ( == ).",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "message"
      }
    ],
    "name": "equal",
    "longname": "module:buildin.module:assert.equal",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000954",
    "___s": true
  },
  {
    "comment": "/**\n * Tests if value is not a false value, throws if it is a true value. Useful when testing the first argument, error in callbacks.\n * @param err\n */",
    "meta": {
      "range": [
        15715,
        15778
      ],
      "filename": "assert.js",
      "lineno": 481,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010328",
        "name": "module.exports.ifError",
        "type": "FunctionExpression",
        "paramnames": [
          "err"
        ]
      }
    },
    "description": "Tests if value is not a false value, throws if it is a true value. Useful when testing the first argument, error in callbacks.",
    "params": [
      {
        "name": "err"
      }
    ],
    "name": "ifError",
    "longname": "module:buildin.module:assert.ifError",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R001001",
    "___s": true
  },
  {
    "comment": "/**\n * Tests for any deep inequality.\n * @param actual\n * @param expected\n * @param [message]\n */",
    "meta": {
      "range": [
        11513,
        11718
      ],
      "filename": "assert.js",
      "lineno": 323,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009955",
        "name": "module.exports.notDeepEqual",
        "type": "FunctionExpression",
        "value": "notDeepEqual",
        "paramnames": [
          "actual",
          "expected",
          "message"
        ]
      }
    },
    "description": "Tests for any deep inequality.",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "notDeepEqual",
    "longname": "module:buildin.module:assert.notDeepEqual",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000977",
    "___s": true
  },
  {
    "comment": "/**\n * Tests shallow, coercive non-equality with the not equal comparison operator ( != ).\n * @param actual\n * @param expected\n * @param [message]\n */",
    "meta": {
      "range": [
        5457,
        5623
      ],
      "filename": "assert.js",
      "lineno": 161,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009356",
        "name": "module.exports.notEqual",
        "type": "FunctionExpression",
        "value": "notEqual",
        "paramnames": [
          "actual",
          "expected",
          "message"
        ]
      }
    },
    "description": "Tests shallow, coercive non-equality with the not equal comparison operator ( != ).",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "notEqual",
    "longname": "module:buildin.module:assert.notEqual",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000955",
    "___s": true
  },
  {
    "comment": "/**\n * Expects block to throw an error. error can be constructor, RegExp or validation function.\n *\n * Validate instanceof using constructor:\n *\n *      assert.throws(function() {\n *         throw new Error(\"Wrong value\");\n *      }, Error);\n *\n * Validate error message using RegExp:\n *\n *      assert.throws(function() {\n *         throw new Error(\"Wrong value\");\n *      }, /error/);\n *\n * Custom error validation:\n *\n *      assert.throws(\n *      function() {\n *         throw new Error(\"Wrong value\");\n *       },\n *      function(err) {\n *         if ( (err instanceof Error) && /value/.test(err) ) {\n *           return true;\n *         }\n *       },\n *      \"unexpected error\"\n *      );\n *\n * @param block\n * @param [error]\n * @param [message]\n */",
    "meta": {
      "range": [
        15110,
        15233
      ],
      "filename": "assert.js",
      "lineno": 462,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010290",
        "name": "module.exports.throws",
        "type": "FunctionExpression",
        "paramnames": [
          "block",
          "error",
          "message"
        ]
      },
      "vars": {
        "error": "module:buildin.module:assert.throws.error",
        "message": "module:buildin.module:assert.throws.message"
      }
    },
    "description": "<p>Expects block to throw an error. error can be constructor, RegExp or validation function.</p>\n<p>Validate instanceof using constructor:</p>\n<pre class=\"prettyprint source\"><code> assert.throws(function() {\n    throw new Error(&quot;Wrong value&quot;);\n }, Error);</code></pre><p>Validate error message using RegExp:</p>\n<pre class=\"prettyprint source\"><code> assert.throws(function() {\n    throw new Error(&quot;Wrong value&quot;);\n }, /error/);</code></pre><p>Custom error validation:</p>\n<pre class=\"prettyprint source\"><code> assert.throws(\n function() {\n    throw new Error(&quot;Wrong value&quot;);\n  },\n function(err) {\n    if ( (err instanceof Error) && /value/.test(err) ) {\n      return true;\n    }\n  },\n &quot;unexpected error&quot;\n );</code></pre>",
    "params": [
      {
        "name": "block"
      },
      {
        "optional": true,
        "name": "error"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "throws",
    "longname": "module:buildin.module:assert.throws",
    "kind": "function",
    "memberof": "module:buildin.module:assert",
    "scope": "static",
    "___id": "T000002R000995",
    "___s": true
  },
  {
    "comment": "/**\n * Generally identical to assert.deepEqual() with two exceptions.\n * First, primitive values are compared using the strict equality operator ( === ).\n * Second, object comparisons include a strict equality check of their prototypes.\n * @param actual\n * @param expected\n * @param [message]\n */",
    "meta": {
      "range": [
        6329,
        6538
      ],
      "filename": "assert.js",
      "lineno": 190,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009415",
        "name": "assert.deepStrictEqual",
        "type": "FunctionExpression",
        "value": "deepStrictEqual",
        "paramnames": [
          "actual",
          "expected",
          "message"
        ]
      }
    },
    "description": "Generally identical to assert.deepEqual() with two exceptions.\nFirst, primitive values are compared using the strict equality operator ( === ).\nSecond, object comparisons include a strict equality check of their prototypes.",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "optional": true,
        "name": "message"
      }
    ],
    "name": "deepStrictEqual",
    "longname": "module:buildin.module:assert~assert.deepStrictEqual",
    "kind": "function",
    "memberof": "module:buildin.module:assert~assert",
    "scope": "static",
    "___id": "T000002R000957",
    "___s": true
  },
  {
    "comment": "/**\n * Throws an exception that displays the values for actual and expected separated by the provided operator.\n * @param actual\n * @param expected\n * @param message\n * @param operator\n * @param stackStartFunction\n */",
    "meta": {
      "range": [
        3882,
        4131
      ],
      "filename": "assert.js",
      "lineno": 109,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009274",
        "name": "fail",
        "type": "FunctionDeclaration",
        "paramnames": [
          "actual",
          "expected",
          "message",
          "operator",
          "stackStartFunction"
        ]
      }
    },
    "description": "Throws an exception that displays the values for actual and expected separated by the provided operator.",
    "params": [
      {
        "name": "actual"
      },
      {
        "name": "expected"
      },
      {
        "name": "message"
      },
      {
        "name": "operator"
      },
      {
        "name": "stackStartFunction"
      }
    ],
    "name": "fail",
    "longname": "module:buildin.module:assert~fail",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:assert",
    "___id": "T000002R000945",
    "___s": true
  },
  {
    "comment": "/**\n * Tests if value is truthy, it is equivalent to assert.equal(true, !!value, message);\n * @param value\n * @param message\n */",
    "meta": {
      "range": [
        4636,
        4726
      ],
      "filename": "assert.js",
      "lineno": 133,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100009304",
        "name": "ok",
        "type": "FunctionDeclaration",
        "paramnames": [
          "value",
          "message"
        ]
      }
    },
    "description": "Tests if value is truthy, it is equivalent to assert.equal(true, !!value, message);",
    "params": [
      {
        "name": "value"
      },
      {
        "name": "message"
      }
    ],
    "name": "ok",
    "longname": "module:buildin.module:assert~ok",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:assert",
    "___id": "T000002R000952",
    "___s": true
  },
  {
    "comment": "/**\n * NodeJS compartible Buffer implemenattion.\n * See <a href=\"https://nodejs.org/docs/latest/api/buffer.html\">original Buffer doumnetation</a>\n *\n * One additional method is adedd for converting buffer content to any codepage `Buffer.prototype.cpSlice`:\n * \n * \t let arr = fs.readFileSync(path.join(__dirname, 'win1251Encoded.XML'), {encoding: 'binary'})\n *\t let buffer = Buffer.from(arr)\n *\t let strData = buffer.cpSlice(0, buffer.length, 1251)\n *\n * @module buffer\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "buffer.js",
      "lineno": 2,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>NodeJS compartible Buffer implemenattion.\nSee <a href=\"https://nodejs.org/docs/latest/api/buffer.html\">original Buffer doumnetation</a></p>\n<p>One additional method is adedd for converting buffer content to any codepage <code>Buffer.prototype.cpSlice</code>:</p>\n<pre class=\"prettyprint source\"><code> let arr = fs.readFileSync(path.join(__dirname, 'win1251Encoded.XML'), {encoding: 'binary'})\n let buffer = Buffer.from(arr)\n let strData = buffer.cpSlice(0, buffer.length, 1251)</code></pre>",
    "kind": "module",
    "name": "buffer",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:buffer",
    "___id": "T000002R001002",
    "___s": true
  },
  {
    "comment": "/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/",
    "meta": {
      "range": [
        4904,
        5398
      ],
      "filename": "buffer.js",
      "lineno": 171,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010742",
        "name": "Buffer.alloc",
        "type": "FunctionExpression",
        "paramnames": [
          "size",
          "fill",
          "encoding"
        ]
      },
      "vars": {
        "encoding": "module:buildin.module:buffer~encoding"
      }
    },
    "description": "Creates a new filled Buffer instance.\nalloc(size[, fill[, encoding]])",
    "name": "alloc",
    "longname": "module:buildin.module:buffer~Buffer.alloc",
    "kind": "function",
    "memberof": "module:buildin.module:buffer~Buffer",
    "scope": "static",
    "___id": "T000002R001040",
    "___s": true
  },
  {
    "comment": "/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set, will zero-fill the buffer.\n **/",
    "meta": {
      "range": [
        5557,
        5641
      ],
      "filename": "buffer.js",
      "lineno": 189,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010787",
        "name": "Buffer.allocUnsafe",
        "type": "FunctionExpression",
        "paramnames": [
          "size"
        ]
      }
    },
    "description": "Equivalent to Buffer(num), by default creates a non-zero-filled Buffer\ninstance. If <code>--zero-fill-buffers</code> is set, will zero-fill the buffer.",
    "name": "allocUnsafe",
    "longname": "module:buildin.module:buffer~Buffer.allocUnsafe",
    "kind": "function",
    "memberof": "module:buildin.module:buffer~Buffer",
    "scope": "static",
    "___id": "T000002R001042",
    "___s": true
  },
  {
    "comment": "/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set, will zero-fill the buffer.\n **/",
    "meta": {
      "range": [
        5858,
        5956
      ],
      "filename": "buffer.js",
      "lineno": 199,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010803",
        "name": "Buffer.allocUnsafeSlow",
        "type": "FunctionExpression",
        "paramnames": [
          "size"
        ]
      }
    },
    "description": "Equivalent to SlowBuffer(num), by default creates a non-zero-filled\nBuffer instance that is not allocated off the pre-initialized pool.\nIf <code>--zero-fill-buffers</code> is set, will zero-fill the buffer.",
    "name": "allocUnsafeSlow",
    "longname": "module:buildin.module:buffer~Buffer.allocUnsafeSlow",
    "kind": "function",
    "memberof": "module:buildin.module:buffer~Buffer",
    "scope": "static",
    "___id": "T000002R001043",
    "___s": true
  },
  {
    "comment": "/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/",
    "meta": {
      "range": [
        3854,
        4221
      ],
      "filename": "buffer.js",
      "lineno": 131,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010646",
        "name": "Buffer.from",
        "type": "FunctionExpression",
        "paramnames": [
          "value",
          "encodingOrOffset",
          "length"
        ]
      }
    },
    "description": "Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\nif value is a number.\nBuffer.from(str[, encoding])\nBuffer.from(array)\nBuffer.from(buffer)\nBuffer.from(arrayBuffer[, byteOffset[, length]])",
    "name": "from",
    "longname": "module:buildin.module:buffer~Buffer.from",
    "kind": "function",
    "memberof": "module:buildin.module:buffer~Buffer",
    "scope": "static",
    "___id": "T000002R001035",
    "___s": true
  },
  {
    "comment": "/**\n * The Buffer() construtor is \"soft deprecated\" ... that is, it is deprecated\n * in the documentation and should not be used moving forward. Rather,\n * developers should use one of the three new factory APIs: Buffer.from(),\n * Buffer.allocUnsafe() or Buffer.alloc() based on their specific needs. There\n * is no hard deprecation because of the extent to which the Buffer constructor\n * is used in the ecosystem currently -- a hard deprecation would introduce too\n * much breakage at this time. It's not likely that the Buffer constructors\n * would ever actually be removed.\n **/",
    "meta": {
      "range": [
        2916,
        2939
      ],
      "filename": "buffer.js",
      "lineno": 100,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100010584",
        "name": "newBufferWarned",
        "type": "Literal",
        "value": false
      }
    },
    "description": "The Buffer() construtor is &quot;soft deprecated&quot; ... that is, it is deprecated\nin the documentation and should not be used moving forward. Rather,\ndevelopers should use one of the three new factory APIs: Buffer.from(),\nBuffer.allocUnsafe() or Buffer.alloc() based on their specific needs. There\nis no hard deprecation because of the extent to which the Buffer constructor\nis used in the ecosystem currently -- a hard deprecation would introduce too\nmuch breakage at this time. It's not likely that the Buffer constructors\nwould ever actually be removed.",
    "name": "newBufferWarned",
    "longname": "module:buildin.module:buffer~newBufferWarned",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:buildin.module:buffer",
    "params": [],
    "___id": "T000002R001032",
    "___s": true
  },
  {
    "comment": "/**\n * Console & log output functions\n * Put something to log with log levels depending on method. In case of GUI server do echo to GUI log (if enabled).\n * In case of command line - echo to `stdout`.\n *\n * Do not create this class directly - use global {@link console} already created by UB.\n *\n *      console.log('%s is a %s usually with weight less then %dgr', 'apple', 'fruit', 100);\n *      //Will output \"apple is a fruit usually with weight less then 100gr\"\n *      console.log('apple', 'fruit', 100);\n *      //will output \"apple fruit 100\"\n *      console.debug('something');\n *      // will output to log only in \"Debug\" build (UBD.exe)\n *\n * Arguments, passed to console output functions are transformed to string using {@link util.format} call.\n *\n * @module console\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "console.js",
      "lineno": 6,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Console &amp; log output functions\nPut something to log with log levels depending on method. In case of GUI server do echo to GUI log (if enabled).\nIn case of command line - echo to <code>stdout</code>.</p>\n<p>Do not create this class directly - use global {@link console} already created by UB.</p>\n<pre class=\"prettyprint source\"><code> console.log('%s is a %s usually with weight less then %dgr', 'apple', 'fruit', 100);\n //Will output &quot;apple is a fruit usually with weight less then 100gr&quot;\n console.log('apple', 'fruit', 100);\n //will output &quot;apple fruit 100&quot;\n console.debug('something');\n // will output to log only in &quot;Debug&quot; build (UBD.exe)</code></pre><p>Arguments, passed to console output functions are transformed to string using {@link util.format} call.",
    "kind": "module",
    "name": "console",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:console",
    "___id": "T000002R001378",
    "___s": true
  },
  {
    "comment": "/**\n * Similar to {@link assert#ok}, but the error message is formatted as {@link util#format util.format(message...)}.\n * @param expression\n */",
    "meta": {
      "range": [
        4828,
        5023
      ],
      "filename": "console.js",
      "lineno": 174,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015906",
        "name": "Console.prototype.assert",
        "type": "FunctionExpression",
        "paramnames": [
          "expression"
        ]
      },
      "vars": {
        "arr": "module:buildin.module:console~Console#assert~arr"
      }
    },
    "description": "Similar to {@link assert#ok}, but the error message is formatted as {@link util#format util.format(message...)}.",
    "params": [
      {
        "name": "expression"
      }
    ],
    "name": "assert",
    "longname": "module:buildin.module:console~Console#assert",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001405",
    "___s": true
  },
  {
    "comment": "/**\n * Output to log with log level `Debug`. In case {@link process.isDebug} is false - do nothing\n * @method\n * @param {...*}\n */",
    "meta": {
      "range": [
        2805,
        2964
      ],
      "filename": "console.js",
      "lineno": 91,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015676",
        "name": "Console.prototype.debug",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Output to log with log level <code>Debug</code>. In case {@link process.isDebug} is false - do nothing",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": ""
      }
    ],
    "name": "debug",
    "longname": "module:buildin.module:console~Console#debug",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001391",
    "___s": true
  },
  {
    "comment": "/**\n * Uses util.inspect on obj and prints resulting string to stdout.\n * @param {Object} object\n */",
    "meta": {
      "range": [
        3688,
        3783
      ],
      "filename": "console.js",
      "lineno": 126,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015775",
        "name": "Console.prototype.dir",
        "type": "FunctionExpression",
        "paramnames": [
          "object"
        ]
      }
    },
    "description": "Uses util.inspect on obj and prints resulting string to stdout.",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "object"
      }
    ],
    "name": "dir",
    "longname": "module:buildin.module:console~Console#dir",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001395",
    "___s": true
  },
  {
    "comment": "/**\n * Output to log with log level `Error`. In case of OS console echo output to stderr\n * @param {...*}\n */",
    "meta": {
      "range": [
        3462,
        3584
      ],
      "filename": "console.js",
      "lineno": 118,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015748",
        "name": "Console.prototype.error",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Output to log with log level <code>Error</code>. In case of OS console echo output to stderr",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": ""
      }
    ],
    "name": "error",
    "longname": "module:buildin.module:console~Console#error",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001394",
    "___s": true
  },
  {
    "comment": "/**\n * Output to log with log level `Info` (alias for console.log)\n * @method\n * @param {...*}\n */",
    "meta": {
      "range": [
        3066,
        3112
      ],
      "filename": "console.js",
      "lineno": 103,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015709",
        "name": "Console.prototype.info",
        "type": "MemberExpression",
        "value": "Console.prototype.log",
        "paramnames": []
      }
    },
    "description": "Output to log with log level <code>Info</code> (alias for console.log)",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": ""
      }
    ],
    "name": "info",
    "longname": "module:buildin.module:console~Console#info",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001392",
    "___s": true
  },
  {
    "comment": "/**\n * Output to log with log level `Info`. Internally use util.format for create output, so\n * format chars can be used:\n *\n *  - %s - String.\n *  - %d - Number (both integer and float).\n *  - %j - JSON.\n *  - % - single percent sign ('%'). This does not consume an argument.\n *\n *      console.log('%s is a %s usually with weight less then %dgr', 'apple', 'fruit', 100);\n *      //Will output \"apple is a fruit usually with weight less then 100gr\"\n *\n *      console.log('apple', 'fruit', 100);\n *      //will output \"apple fruit 100\"\n *\n *      console.log('the object JSON is %j', {a: 12, b: {inner: 11}});\n *      // will output a JSON object instead of [object Object]\n *\n * @param {...*}\n */",
    "meta": {
      "range": [
        2568,
        2671
      ],
      "filename": "console.js",
      "lineno": 82,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015650",
        "name": "Console.prototype.log",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "<p>Output to log with log level <code>Info</code>. Internally use util.format for create output, so\nformat chars can be used:</p>\n<ul>\n<li>%s - String.</li>\n<li>%d - Number (both integer and float).</li>\n<li>%j - JSON.</li>\n<li><p>% - single percent sign ('%'). This does not consume an argument.</p>\n<p>  console.log('%s is a %s usually with weight less then %dgr', 'apple', 'fruit', 100);\n  //Will output &quot;apple is a fruit usually with weight less then 100gr&quot;</p>\n<p>  console.log('apple', 'fruit', 100);\n  //will output &quot;apple fruit 100&quot;</p>\n<p>  console.log('the object JSON is %j', {a: 12, b: {inner: 11}});\n  // will output a JSON object instead of [object Object]</p>\n</li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": ""
      }
    ],
    "name": "log",
    "longname": "module:buildin.module:console~Console#log",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001390",
    "___s": true
  },
  {
    "comment": "/**\n * Mark a time.\n * @param {String} label\n */",
    "meta": {
      "range": [
        3835,
        3914
      ],
      "filename": "console.js",
      "lineno": 134,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015799",
        "name": "Console.prototype.time",
        "type": "FunctionExpression",
        "paramnames": [
          "label"
        ]
      },
      "vars": {
        "this._times[undefined]": "module:buildin.module:console~Console#time#_times[undefined]"
      }
    },
    "description": "Mark a time.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "label"
      }
    ],
    "name": "time",
    "longname": "module:buildin.module:console~Console#time",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001396",
    "___s": true
  },
  {
    "comment": "/**\n * Finish timer, record output\n * @example\n *\n *      console.time('100-elements');\n *        for (var i = 0; i < 100; i++) {\n *         ;\n *      }\n *      console.timeEnd('100-elements');\n *\n * @param {string} label\n */",
    "meta": {
      "range": [
        4143,
        4367
      ],
      "filename": "console.js",
      "lineno": 150,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015820",
        "name": "Console.prototype.timeEnd",
        "type": "FunctionExpression",
        "paramnames": [
          "label"
        ]
      },
      "vars": {
        "time": "module:buildin.module:console~Console#timeEnd~time",
        "duration": "module:buildin.module:console~Console#timeEnd~duration"
      }
    },
    "description": "Finish timer, record output",
    "examples": [
      "console.time('100-elements');\n       for (var i = 0; i < 100; i++) {\n        ;\n     }\n     console.timeEnd('100-elements');"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "label"
      }
    ],
    "name": "timeEnd",
    "longname": "module:buildin.module:console~Console#timeEnd",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001398",
    "___s": true
  },
  {
    "comment": "/**\n * Output to log with log level `Warning`. In case of OS console echo output to stderr\n * @param {...*}\n */",
    "meta": {
      "range": [
        3228,
        3349
      ],
      "filename": "console.js",
      "lineno": 110,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100015721",
        "name": "Console.prototype.warn",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Output to log with log level <code>Warning</code>. In case of OS console echo output to stderr",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": ""
      }
    ],
    "name": "warn",
    "longname": "module:buildin.module:console~Console#warn",
    "kind": "function",
    "memberof": "module:buildin.module:console~Console",
    "scope": "instance",
    "___id": "T000002R001393",
    "___s": true
  },
  {
    "comment": "/**\n * @module events\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "events.js",
      "lineno": 2,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "events",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:events",
    "___id": "T000002R001415",
    "___s": true
  },
  {
    "comment": "/**\n * NodeJS like EventEmitter. See also <a href=\"http://nodejs.org/api/events.html\">NodeJS events documentation</a>\n *\n * To add event emitting ability to any object:\n *\n\n     var myObject = {},\n     //compatibility EventEmitter = require('events').EventEmitter;\n     EventEmitter = require('events');\n     // add EventEmitter to myObject\n     EventEmitter.call(myObject);\n     var util = require('util');\n     util._extend(myObject, EventEmitter.prototype);\n\n * In case object created via constructor function\n\n     function MyObject() {\n        EventEmitter.call(this);\n     }\n     util.inherits(MyObject, EventEmitter);\n\n     var myObject = new MyObject();\n\n * Usage:\n\n     myObject.on('myEvent', function(num, str){console.log(num, str) });\n\n     myObject.emit('myEvent', 1, 'two'); // output: 1 two\n\n *\n * @class EventEmitter\n * @mixin\n */",
    "meta": {
      "filename": "events.js",
      "lineno": 7,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>NodeJS like EventEmitter. See also <a href=\"http://nodejs.org/api/events.html\">NodeJS events documentation</a></p>\n<p>To add event emitting ability to any object:</p>\n<pre class=\"prettyprint source\"><code> var myObject = {},\n //compatibility EventEmitter = require('events').EventEmitter;\n EventEmitter = require('events');\n // add EventEmitter to myObject\n EventEmitter.call(myObject);\n var util = require('util');\n util._extend(myObject, EventEmitter.prototype);</code></pre><p>In case object created via constructor function</p>\n<pre class=\"prettyprint source\"><code> function MyObject() {\n    EventEmitter.call(this);\n }\n util.inherits(MyObject, EventEmitter);\n\n var myObject = new MyObject();</code></pre><p>Usage:</p>\n<pre class=\"prettyprint source\"><code> myObject.on('myEvent', function(num, str){console.log(num, str) });\n\n myObject.emit('myEvent', 1, 'two'); // output: 1 two</code></pre>",
    "kind": "mixin",
    "name": "EventEmitter",
    "longname": "module:buildin.module:events~EventEmitter",
    "scope": "inner",
    "memberof": "module:buildin.module:events",
    "___id": "T000002R001416",
    "___s": true
  },
  {
    "comment": "/**\n * Return the number of listeners for a given event.\n * @param {EventEmitter} emitter\n * @param {String} type\n * @return {Number}\n */",
    "meta": {
      "range": [
        13694,
        13904
      ],
      "filename": "events.js",
      "lineno": 524,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017359",
        "name": "EventEmitter.listenerCount",
        "type": "FunctionExpression",
        "paramnames": [
          "emitter",
          "type"
        ]
      }
    },
    "description": "Return the number of listeners for a given event.",
    "params": [
      {
        "type": {
          "names": [
            "EventEmitter"
          ]
        },
        "name": "emitter"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "listenerCount",
    "longname": "module:buildin.module:events~EventEmitter.listenerCount",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "static",
    "___id": "T000002R001529",
    "___s": true
  },
  {
    "comment": "/**\n * Adds a listener to the end of the listeners array for the specified event.\n * Will emit `newListener` event on success.\n *\n * Usage sample:\n *\n *      Session.on('login', function () {\n *          console.log('someone connected!');\n *      });\n *\n * Returns emitter, so calls can be chained.\n *\n * @param {String} type Event name\n * @param {Function} listener\n * @return {EventEmitter}\n */",
    "meta": {
      "range": [
        6983,
        8733
      ],
      "filename": "events.js",
      "lineno": 275,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016644",
        "name": "EventEmitter.prototype.addListener",
        "type": "FunctionExpression",
        "value": "addListener",
        "paramnames": [
          "type",
          "listener"
        ]
      },
      "vars": {
        "m": "module:buildin.module:events~m",
        "events": "module:buildin.module:events~events",
        "existing": "module:buildin.module:events~existing",
        "this._events": "module:buildin.module:events~EventEmitter#addListener#_events",
        "this._eventsCount": "module:buildin.module:events~EventEmitter#addListener#_eventsCount",
        "events[undefined]": "module:buildin.module:events~events.undefined]",
        "existing.warned": "module:buildin.module:events~existing.warned"
      }
    },
    "description": "Adds a listener to the end of the listeners array for the specified event.\nWill emit <code>newListener</code> event on success.</p>\n<p>Usage sample:</p>\n<pre class=\"prettyprint source\"><code> Session.on('login', function () {\n     console.log('someone connected!');\n });</code></pre><p>Returns emitter, so calls can be chained.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "listener"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventEmitter"
          ]
        }
      }
    ],
    "name": "addListener",
    "longname": "module:buildin.module:events~EventEmitter#addListener",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001471",
    "___s": true
  },
  {
    "comment": "/**\n * Execute each of the listeners in order with the supplied arguments.\n * Returns true if event had listeners, false otherwise.\n *\n * @param {String} type Event name\n * @param {...*} eventArgs Arguments, passed to listeners\n * @return {boolean}\n */",
    "meta": {
      "range": [
        4762,
        6583
      ],
      "filename": "events.js",
      "lineno": 182,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016437",
        "name": "EventEmitter.prototype.emit",
        "type": "FunctionExpression",
        "value": "emit",
        "paramnames": [
          "type"
        ]
      },
      "vars": {
        "er": "module:buildin.module:events~er",
        "handler": "module:buildin.module:events~handler",
        "len": "module:buildin.module:events~len",
        "args": "module:buildin.module:events~args",
        "i": "module:buildin.module:events~i",
        "events": "module:buildin.module:events~events",
        "doError": "module:buildin.module:events~doError",
        "err": "module:buildin.module:events~EventEmitter#emit~err",
        "err.context": "module:buildin.module:events~EventEmitter#emit~err.context",
        "isFn": "module:buildin.module:events~EventEmitter#emit~isFn",
        "args[undefined]": "module:buildin.module:events~args.undefined]"
      }
    },
    "description": "Execute each of the listeners in order with the supplied arguments.\nReturns true if event had listeners, false otherwise.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "description": "Arguments, passed to listeners",
        "name": "eventArgs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "emit",
    "longname": "module:buildin.module:events~EventEmitter#emit",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001452",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @return {Number}\n */",
    "meta": {
      "range": [
        2761,
        2865
      ],
      "filename": "events.js",
      "lineno": 113,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016172",
        "name": "EventEmitter.prototype.getMaxListeners",
        "type": "FunctionExpression",
        "value": "getMaxListeners",
        "paramnames": []
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "getMaxListeners",
    "longname": "module:buildin.module:events~EventEmitter#getMaxListeners",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001431",
    "___s": true
  },
  {
    "comment": "/**\n * Returns an array of listeners for the specified event.\n * @param {String} type Event name\n * @return {Array.<Function>}\n */",
    "meta": {
      "range": [
        13169,
        13553
      ],
      "filename": "events.js",
      "lineno": 498,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017294",
        "name": "EventEmitter.prototype.listeners",
        "type": "FunctionExpression",
        "value": "listeners",
        "paramnames": [
          "type"
        ]
      },
      "vars": {
        "evlistener": "module:buildin.module:events~evlistener",
        "ret": "module:buildin.module:events~ret",
        "events": "module:buildin.module:events~EventEmitter#listeners~events"
      }
    },
    "description": "Returns an array of listeners for the specified event.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<function()>"
          ]
        }
      }
    ],
    "name": "listeners",
    "longname": "module:buildin.module:events~EventEmitter#listeners",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001520",
    "___s": true
  },
  {
    "comment": "/**\n * Alias for {@link EventEmitter#addListener addListener}\n * @method\n * @param {String} type Event name\n * @param {Function} listener\n * @return {EventEmitter}\n */",
    "meta": {
      "range": [
        8904,
        8966
      ],
      "filename": "events.js",
      "lineno": 339,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016824",
        "name": "EventEmitter.prototype.on",
        "type": "MemberExpression",
        "value": "EventEmitter.prototype.addListener",
        "paramnames": []
      }
    },
    "description": "Alias for {@link EventEmitter#addListener addListener}",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "listener"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventEmitter"
          ]
        }
      }
    ],
    "name": "on",
    "longname": "module:buildin.module:events~EventEmitter#on",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001487",
    "___s": true
  },
  {
    "comment": "/**\n * Adds a one time listener for the event. This listener is invoked only the next time the event is fired, after which it is removed.\n * @param {String} type Event name\n * @param {Function} listener\n * @return {EventEmitter}\n */",
    "meta": {
      "range": [
        9202,
        9583
      ],
      "filename": "events.js",
      "lineno": 347,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016836",
        "name": "EventEmitter.prototype.once",
        "type": "FunctionExpression",
        "value": "once",
        "paramnames": [
          "type",
          "listener"
        ]
      },
      "vars": {
        "fired": "module:buildin.module:events~EventEmitter#once~fired",
        "g": "module:buildin.module:events~EventEmitter#once~g",
        "g.listener": "module:buildin.module:events~EventEmitter#once~g.listener"
      }
    },
    "description": "Adds a one time listener for the event. This listener is invoked only the next time the event is fired, after which it is removed.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "listener"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventEmitter"
          ]
        }
      }
    ],
    "name": "once",
    "longname": "module:buildin.module:events~EventEmitter#once",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001488",
    "___s": true
  },
  {
    "comment": "/**\n * Removes all listeners, or those of the specified event.\n * It's not a good idea to remove listeners that were added elsewhere in the code,\n * especially when it's on an emitter that you didn't create (e.g. sockets or file streams).\n *\n * Returns emitter, so calls can be chained.\n * @param {String} type Event name\n * @return {EventEmitter}\n */",
    "meta": {
      "range": [
        11683,
        13035
      ],
      "filename": "events.js",
      "lineno": 443,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017108",
        "name": "EventEmitter.prototype.removeAllListeners",
        "type": "FunctionExpression",
        "value": "removeAllListeners",
        "paramnames": [
          "type"
        ]
      },
      "vars": {
        "listeners": "module:buildin.module:events~listeners",
        "events": "module:buildin.module:events~events",
        "this._events": "module:buildin.module:events~EventEmitter#removeAllListeners#_events",
        "this._eventsCount": "module:buildin.module:events~EventEmitter#removeAllListeners#_eventsCount",
        "keys": "module:buildin.module:events~EventEmitter#removeAllListeners~keys",
        "i": "module:buildin.module:events~EventEmitter#removeAllListeners~i",
        "key": "module:buildin.module:events~key"
      }
    },
    "description": "Removes all listeners, or those of the specified event.\nIt's not a good idea to remove listeners that were added elsewhere in the code,\nespecially when it's on an emitter that you didn't create (e.g. sockets or file streams).</p>\n<p>Returns emitter, so calls can be chained.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "EventEmitter"
          ]
        }
      }
    ],
    "name": "removeAllListeners",
    "longname": "module:buildin.module:events~EventEmitter#removeAllListeners",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001506",
    "___s": true
  },
  {
    "comment": "/**\n * Remove a listener from the listener array for the specified event.\n * Caution: changes array indices in the listener array behind the listener.\n * Emits a 'removeListener' event if the listener was removed.\n *\n * @param {String} type Event name\n * @param {Function} listener\n */",
    "meta": {
      "range": [
        9873,
        11328
      ],
      "filename": "events.js",
      "lineno": 377,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016901",
        "name": "EventEmitter.prototype.removeListener",
        "type": "FunctionExpression",
        "value": "removeListener",
        "paramnames": [
          "type",
          "listener"
        ]
      },
      "vars": {
        "list": "module:buildin.module:events~list",
        "events": "module:buildin.module:events~events",
        "position": "module:buildin.module:events~position",
        "i": "module:buildin.module:events~i",
        "this._events": "module:buildin.module:events~EventEmitter#removeListener#_events",
        "list[0]": "module:buildin.module:events~list.0]"
      }
    },
    "description": "Remove a listener from the listener array for the specified event.\nCaution: changes array indices in the listener array behind the listener.\nEmits a 'removeListener' event if the listener was removed.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Event name",
        "name": "type"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "listener"
      }
    ],
    "name": "removeListener",
    "longname": "module:buildin.module:events~EventEmitter#removeListener",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001493",
    "___s": true
  },
  {
    "comment": "/**\n * Obviously not all Emitters should be limited to 10. This function allows\n * that to be increased. Set to zero for unlimited.\n * @param {Number} n\n */",
    "meta": {
      "range": [
        2357,
        2576
      ],
      "filename": "events.js",
      "lineno": 96,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100016118",
        "name": "EventEmitter.prototype.setMaxListeners",
        "type": "FunctionExpression",
        "value": "setMaxListeners",
        "paramnames": [
          "n"
        ]
      },
      "vars": {
        "this._maxListeners": "module:buildin.module:events~EventEmitter#setMaxListeners#_maxListeners"
      }
    },
    "description": "Obviously not all Emitters should be limited to 10. This function allows\nthat to be increased. Set to zero for unlimited.",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "n"
      }
    ],
    "name": "setMaxListeners",
    "longname": "module:buildin.module:events~EventEmitter#setMaxListeners",
    "kind": "function",
    "memberof": "module:buildin.module:events~EventEmitter",
    "scope": "instance",
    "___id": "T000002R001428",
    "___s": true
  },
  {
    "comment": "/**\n * SyNode file-system routines. We try to implement here the same interface as in <a href=\"http://nodejs.org/api/fs.html\">NodeJS fs</a>\n *\n *      var fs = require('fs');\n *      var content = fs.readFileSync('c:\\\\a.txt', 'utf-8);\n *\n * @module fs\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "fs.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>SyNode file-system routines. We try to implement here the same interface as in <a href=\"http://nodejs.org/api/fs.html\">NodeJS fs</a></p>\n<pre class=\"prettyprint source\"><code> var fs = require('fs');\n var content = fs.readFileSync('c:\\\\a.txt', 'utf-8);</code></pre>",
    "kind": "module",
    "name": "fs",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:fs",
    "___id": "T000002R001544",
    "___s": true
  },
  {
    "comment": "/**\n * Append data to a file, creating the file if it not yet exists\n * Actually implement {UBWriter#write}\n * @param {String} fileName  Full absolute file path\n * @param {ArrayBuffer|Object|String} data Data to write. `Object` are stringified before write\n * @param {Object} [options]\n * @param {String} [options.encoding] Encode data to `encoding` before write.\n *  Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *  Possible values: \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        8652,
        8978
      ],
      "filename": "fs.js",
      "lineno": 291,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018330",
        "name": "exports.appendFileSync",
        "type": "FunctionExpression",
        "value": "appendFileSync",
        "paramnames": [
          "fileName",
          "data",
          "options"
        ]
      },
      "vars": {
        "encoding": "module:buildin.module:fs.appendFileSync~encoding",
        "res": "module:buildin.module:fs~res"
      }
    },
    "description": "Append data to a file, creating the file if it not yet exists\nActually implement {UBWriter#write}",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Full absolute file path",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. <code>Object</code> are stringified before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write.\n Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n Possible values: &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "options.encoding"
      }
    ],
    "name": "appendFileSync",
    "longname": "module:buildin.module:fs.appendFileSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001629",
    "___s": true
  },
  {
    "comment": "/**\n * Check `path` exists (can be file, folder or symlync)\n * @param path\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        9081,
        9159
      ],
      "filename": "fs.js",
      "lineno": 306,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018376",
        "name": "exports.existsSync",
        "type": "FunctionExpression",
        "value": "existsSync",
        "paramnames": [
          "path"
        ]
      }
    },
    "description": "Check <code>path</code> exists (can be file, folder or symlync)",
    "params": [
      {
        "name": "path"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "existsSync",
    "longname": "module:buildin.module:fs.existsSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001633",
    "___s": true
  },
  {
    "comment": "/**\n * Check specified path is folder (or symlynk to folder)\n * @param path\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        2151,
        2224
      ],
      "filename": "fs.js",
      "lineno": 84,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017730",
        "name": "exports.isDir",
        "type": "FunctionExpression",
        "value": "isDir",
        "paramnames": [
          "path"
        ]
      }
    },
    "description": "Check specified path is folder (or symlynk to folder)",
    "params": [
      {
        "name": "path"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "isDir",
    "longname": "module:buildin.module:fs.isDir",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001578",
    "___s": true
  },
  {
    "comment": "/**\n * Check specified path is file (or symlynk to file)\n * @param path\n * @return {Boolean}\n */",
    "meta": {
      "range": [
        1976,
        2047
      ],
      "filename": "fs.js",
      "lineno": 75,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017717",
        "name": "exports.isFile",
        "type": "FunctionExpression",
        "value": "isFile",
        "paramnames": [
          "path"
        ]
      }
    },
    "description": "Check specified path is file (or symlynk to file)",
    "params": [
      {
        "name": "path"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "name": "isFile",
    "longname": "module:buildin.module:fs.isFile",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001577",
    "___s": true
  },
  {
    "comment": "/**\n * Reads the entire contents of a TEXT file.\n * If BOM found - decode text file to string using BOM\n * If BOM not found - use forceUFT8 parameter.\n * @param {String} fileName\n * @param {Boolean} [forceUFT8] If no BOM found and forceUFT8 is True (default) - we expect file in UTF8 format, else in ascii\n * @returns {String}\n */",
    "meta": {
      "range": [
        3285,
        3379
      ],
      "filename": "fs.js",
      "lineno": 123,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017837",
        "name": "exports.loadFile",
        "type": "FunctionExpression",
        "paramnames": [
          "fileName",
          "forceUFT8"
        ]
      }
    },
    "description": "Reads the entire contents of a TEXT file.\nIf BOM found - decode text file to string using BOM\nIf BOM not found - use forceUFT8 parameter.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "If no BOM found and forceUFT8 is True (default) - we expect file in UTF8 format, else in ascii",
        "name": "forceUFT8"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "loadFile",
    "longname": "module:buildin.module:fs.loadFile",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001588",
    "___s": true
  },
  {
    "comment": "/**\n * Create all missing folders in the given path. Only absolute path supported. Throw error in case of fail\n * @param {String} path path for creation.\n * @param {Number} [mode] Ignored under Windows\n */",
    "meta": {
      "range": [
        5609,
        5762
      ],
      "filename": "fs.js",
      "lineno": 197,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018087",
        "name": "exports.mkdirSync",
        "type": "FunctionExpression",
        "value": "mkdirSync",
        "paramnames": [
          "path",
          "mode"
        ]
      }
    },
    "description": "Create all missing folders in the given path. Only absolute path supported. Throw error in case of fail",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "path for creation.",
        "name": "path"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "Ignored under Windows",
        "name": "mode"
      }
    ],
    "name": "mkdirSync",
    "longname": "module:buildin.module:fs.mkdirSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001606",
    "___s": true
  },
  {
    "comment": "/**\n * Fake class for nodeJS compatibility\n */",
    "meta": {
      "range": [
        9899,
        9930
      ],
      "filename": "fs.js",
      "lineno": 347,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018463",
        "name": "exports.ReadStream",
        "type": "Identifier",
        "value": "ReadStream",
        "paramnames": []
      }
    },
    "description": "Fake class for nodeJS compatibility",
    "name": "ReadStream",
    "longname": "module:buildin.module:fs.ReadStream",
    "kind": "member",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001639",
    "___s": true
  },
  {
    "comment": "/**\n * Synchronous realpath(3). Returns the resolved path (resolve symlinks, junctions on Windows, /../)\n */",
    "meta": {
      "range": [
        2374,
        2951
      ],
      "filename": "fs.js",
      "lineno": 92,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017751",
        "name": "exports.realpathSync",
        "type": "FunctionExpression",
        "value": "realpathSync",
        "paramnames": [
          "p",
          "options"
        ]
      },
      "vars": {
        "options": "module:buildin.module:fs~options",
        "p": "module:buildin.module:fs~p",
        "cache": "module:buildin.module:fs.realpathSync~cache",
        "maybeCachedResult": "module:buildin.module:fs.realpathSync~maybeCachedResult",
        "res": "module:buildin.module:fs.realpathSync~res"
      }
    },
    "description": "Synchronous realpath(3). Returns the resolved path (resolve symlinks, junctions on Windows, /../)",
    "name": "realpathSync",
    "longname": "module:buildin.module:fs.realpathSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001580",
    "___s": true
  },
  {
    "comment": "/**\n * Move (rename) file.\n * @param {String} oldPath\n * @param {String} newPath\n */",
    "meta": {
      "range": [
        9661,
        9849
      ],
      "filename": "fs.js",
      "lineno": 337,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018432",
        "name": "exports.renameSync",
        "type": "FunctionExpression",
        "value": "renameSync",
        "paramnames": [
          "oldPath",
          "newPath"
        ]
      }
    },
    "description": "Move (rename) file.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "oldPath"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "newPath"
      }
    ],
    "name": "renameSync",
    "longname": "module:buildin.module:fs.renameSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001638",
    "___s": true
  },
  {
    "comment": "/**\n * Delete non-empty directory. See {@link removeDir} for details\n * @param {String} path path to remove\n */",
    "meta": {
      "range": [
        9498,
        9573
      ],
      "filename": "fs.js",
      "lineno": 328,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018419",
        "name": "exports.rmdirSync",
        "type": "FunctionExpression",
        "value": "rmdirSync",
        "paramnames": [
          "path"
        ]
      }
    },
    "description": "Delete non-empty directory. See {@link removeDir} for details",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "path to remove",
        "name": "path"
      }
    ],
    "name": "rmdirSync",
    "longname": "module:buildin.module:fs.rmdirSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001637",
    "___s": true
  },
  {
    "comment": "/**\n * Write to file\n * Actually implements {@link UBWriter#write}\n * @param {String} fileName  Full absolute file path\n * @param {ArrayBuffer|Object|String} data Data to write. If Object - it stringify before write\n * @param {Object} [options]\n * @param {String} [options.encoding] Encode data to `encoding` before write. Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *                              One of \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        7780,
        8145
      ],
      "filename": "fs.js",
      "lineno": 270,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018284",
        "name": "exports.writeFileSync",
        "type": "FunctionExpression",
        "value": "writeFileSync",
        "paramnames": [
          "fileName",
          "data",
          "options"
        ]
      },
      "vars": {
        "encoding": "module:buildin.module:fs.writeFileSync~encoding",
        "res": "module:buildin.module:fs~res"
      }
    },
    "description": "Write to file\nActually implements {@link UBWriter#write}",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Full absolute file path",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. If Object - it stringify before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write. Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n                             One of &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "options.encoding"
      }
    ],
    "name": "writeFileSync",
    "longname": "module:buildin.module:fs.writeFileSync",
    "kind": "function",
    "memberof": "module:buildin.module:fs",
    "scope": "static",
    "___id": "T000002R001625",
    "___s": true
  },
  {
    "comment": "/** Read file names from directory (include folder names).\n * Return array of file names. In case directory not exists - throw error\n * @param {String} path\n * @return {Array.<String>}\n */",
    "meta": {
      "range": [
        5954,
        6133
      ],
      "filename": "fs.js",
      "lineno": 208,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018108",
        "name": "readdirSync",
        "type": "FunctionDeclaration",
        "paramnames": [
          "path"
        ]
      },
      "vars": {
        "res": "module:buildin.module:fs~readdirSync~res"
      }
    },
    "description": "Read file names from directory (include folder names).\nReturn array of file names. In case directory not exists - throw error",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "path"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<String>"
          ]
        }
      }
    ],
    "name": "readdirSync",
    "longname": "module:buildin.module:fs~readdirSync",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:fs",
    "___id": "T000002R001607",
    "___s": true
  },
  {
    "comment": "/**\n * Reads the entire contents of a file. If options.encoding == 'bin', then the ArrayBuffer is returned.\n * If no options is specified at all - result is String as in {@link fs.loadFile}\n * @param {String} fileName  Absolute path to file\n * @param {Object} [options]\n * @param {String|Null} [options.encoding] Default to null. Possible values: 'bin'|'ascii'|'utf-8'\n * @returns {String|ArrayBuffer}\n */",
    "meta": {
      "range": [
        3788,
        4559
      ],
      "filename": "fs.js",
      "lineno": 135,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100017850",
        "name": "readFileSync",
        "type": "FunctionDeclaration",
        "paramnames": [
          "fileName",
          "options"
        ]
      },
      "vars": {
        "stat": "module:buildin.module:fs~readFileSync~stat",
        "options": "module:buildin.module:fs~options",
        "buf": "module:buildin.module:fs~buf"
      }
    },
    "description": "Reads the entire contents of a file. If options.encoding == 'bin', then the ArrayBuffer is returned.\nIf no options is specified at all - result is String as in {@link fs.loadFile}",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Absolute path to file",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String",
            "Null"
          ]
        },
        "optional": true,
        "description": "Default to null. Possible values: 'bin'|'ascii'|'utf-8'",
        "name": "options.encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer"
          ]
        }
      }
    ],
    "name": "readFileSync",
    "longname": "module:buildin.module:fs~readFileSync",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:fs",
    "___id": "T000002R001589",
    "___s": true
  },
  {
    "comment": "/**\n * Get file statistics. Will throw in case file or folder does not exists.\n * @param fileName\n * @returns {Boolean|{atime: Date, mtime: Date, ctime: Date, size: number, _fileName: string, isDirectory: function}}\n */",
    "meta": {
      "range": [
        6445,
        6914
      ],
      "filename": "fs.js",
      "lineno": 225,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018148",
        "name": "statSync",
        "type": "FunctionDeclaration",
        "paramnames": [
          "fileName"
        ]
      },
      "vars": {
        "oStat": "module:buildin.module:fs~oStat",
        "oStat._fileName": "module:buildin.module:fs~oStat._fileName",
        "oStat.isDirectory": "module:buildin.module:fs~oStat.isDirectory",
        "": null,
        "oStat.isFile": "module:buildin.module:fs~oStat.isFile",
        "oStat.isSymbolicLink": "module:buildin.module:fs~oStat.isSymbolicLink"
      }
    },
    "description": "Get file statistics. Will throw in case file or folder does not exists.",
    "params": [
      {
        "name": "fileName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean",
            "Object"
          ]
        }
      }
    ],
    "name": "statSync",
    "longname": "module:buildin.module:fs~statSync",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:fs",
    "___id": "T000002R001611",
    "___s": true
  },
  {
    "comment": "/**\n * Delete file.\n */",
    "meta": {
      "range": [
        9186,
        9298
      ],
      "filename": "fs.js",
      "lineno": 313,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018390",
        "name": "unlinkSync",
        "type": "FunctionDeclaration",
        "paramnames": [
          "path"
        ]
      }
    },
    "description": "Delete file.",
    "name": "unlinkSync",
    "longname": "module:buildin.module:fs~unlinkSync",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:fs",
    "params": [],
    "___id": "T000002R001634",
    "___s": true
  },
  {
    "comment": "/**\n * HTTP client.\n * @example\n *\n var http = require('http');\n var request = http.request({\n    //alternative to host/port/path is\n    //URL: 'http://localhost:888/getAppInfo',\n    host: 'localhost', port: '80', path: '/getAppInfo',\n    method: 'POST',\n    sendTimeout: 30000, receiveTimeout: 30000,\n    keepAlive: true,\n    compressionEnable: true\n });\n request.write('Add string to response');\n var fileContent = fs.readFileSync('d:\\binaryFile.txt'); // return ArrayBuffer, since encoding not passed\n request.write(fileContent, 'base64'); // write file content as base64 encoded string\n var response = request.end();\n\n var http = require('http');\n var assert = require('assert');\n var DOMParser = require('xmldom').DOMParser;\n // set global proxy settings if client is behind a proxy\n // http.setGlobalProxyConfiguration('proxy.main:3249', 'localhost');\n var resp = http.get('https://synopse.info/fossil/wiki/Synopse+OpenSource');\n // check we are actually behind a proxy\n // assert.ok(resp.headers('via').startsWith('1.1 proxy.main'), 'proxy used');\n var index = resp.read();\n console.log(index);\n // var doc = new DOMParser().parseFromString(index);\n // assert.ok(doc.documentElement.textContent.startsWith('mORMot'), 'got mORMot from mORMot');\n *\n * @module http\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "http.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "HTTP client.",
    "examples": [
      "var http = require('http');\n var request = http.request({\n    //alternative to host/port/path is\n    //URL: 'http://localhost:888/getAppInfo',\n    host: 'localhost', port: '80', path: '/getAppInfo',\n    method: 'POST',\n    sendTimeout: 30000, receiveTimeout: 30000,\n    keepAlive: true,\n    compressionEnable: true\n });\n request.write('Add string to response');\n var fileContent = fs.readFileSync('d:\\binaryFile.txt'); // return ArrayBuffer, since encoding not passed\n request.write(fileContent, 'base64'); // write file content as base64 encoded string\n var response = request.end();\n\n var http = require('http');\n var assert = require('assert');\n var DOMParser = require('xmldom').DOMParser;\n // set global proxy settings if client is behind a proxy\n // http.setGlobalProxyConfiguration('proxy.main:3249', 'localhost');\n var resp = http.get('https://synopse.info/fossil/wiki/Synopse+OpenSource');\n // check we are actually behind a proxy\n // assert.ok(resp.headers('via').startsWith('1.1 proxy.main'), 'proxy used');\n var index = resp.read();\n console.log(index);\n // var doc = new DOMParser().parseFromString(index);\n // assert.ok(doc.documentElement.textContent.startsWith('mORMot'), 'got mORMot from mORMot');"
    ],
    "kind": "module",
    "name": "http",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:http",
    "___id": "T000002R001641",
    "___s": true
  },
  {
    "comment": "/**\n * Add parameters to URL\n *\n *      http.buildURL('/myMethod', {a: 1, b: \"1212\"}; // '/myMethod?a=1&b=1212\n *\n * @param {String} url\n * @param {Object} params\n * @returns {String}\n */",
    "meta": {
      "range": [
        7570,
        8093
      ],
      "filename": "http.js",
      "lineno": 180,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018956",
        "name": "exports.buildURL",
        "type": "FunctionExpression",
        "value": "buildURL",
        "paramnames": [
          "url",
          "params"
        ]
      },
      "vars": {
        "parts": "module:buildin.module:http.buildURL~parts",
        "": null
      }
    },
    "description": "<p>Add parameters to URL</p>\n<pre class=\"prettyprint source\"><code> http.buildURL('/myMethod', {a: 1, b: &quot;1212&quot;}; // '/myMethod?a=1&b=1212</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "url"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "buildURL",
    "longname": "module:buildin.module:http.buildURL",
    "kind": "function",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001689",
    "___s": true
  },
  {
    "comment": "/**\n * Since most requests are GET requests without bodies, we provides this convenience method.\n * The two difference between this method and http.request() is that\n *\n *   - it sets the method to GET and calls req.end() automatically\n *   - can optionally take URLParams Object {paramName: paramValue, ..} and add parameters to request path\n *\n * @param {Object} options Request options as described in {@link http.request}\n * @param {Object} [URLParams] optional parameters to add to options.path\n * @returns {IncomingMessage}\n */",
    "meta": {
      "range": [
        8662,
        8862
      ],
      "filename": "http.js",
      "lineno": 216,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019065",
        "name": "exports.get",
        "type": "FunctionExpression",
        "value": "get",
        "paramnames": [
          "options",
          "URLParams"
        ]
      },
      "vars": {
        "req": "module:buildin.module:http.get~req"
      }
    },
    "description": "<p>Since most requests are GET requests without bodies, we provides this convenience method.\nThe two difference between this method and http.request() is that</p>\n<ul>\n<li>it sets the method to GET and calls req.end() automatically</li>\n<li>can optionally take URLParams Object {paramName: paramValue, ..} and add parameters to request path</li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Request options as described in {@link http.request}",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "optional parameters to add to options.path",
        "name": "URLParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "IncomingMessage"
          ]
        }
      }
    ],
    "name": "get",
    "longname": "module:buildin.module:http.get",
    "kind": "function",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001694",
    "___s": true
  },
  {
    "comment": "/**\n * Create new HTTP server connection. In case server behind the proxy - see {@link http.setGlobalProxyConfiguration} function.\n * @param {Object|String} options Either URL string in format `protocol://host:port/path` or config\n * @param {String} [options.URL] Service URL in format `protocol://host:port/path`. Will override `useHTTPS`, `server`, `host`, `port` and `path` if passed\n * @param {String} [options.server] DEPRECATED. Server to connect in format 'host:port' or 'host' in case port == 80.\n * @param {String} [options.host] Host to connect. If `server` not specified this value used\n * @param {String} [options.port] Port. Default is 80 for HTTP or 443 for HTTPS\n * @param {String} [options.path='/'] Request path. Defaults to '/'. Should include query string if any. E.G. '/index.html?page=12'\n * @param {String} [options.method='GET'] HTTP method to use for request\n * @param {Object<string, string>} [options.headers] An object containing request headers\n * @param {Boolean} [options.useHTTPS=false]\n * @param {Boolean} [options.useCompression=true] Send 'Accept-encoding: gzip' header to server & unzip zipper responses\n * @param {Boolean} [options.keepAlive=false] Use keep Alive HTTP protocol feature if server support it.\n * @param {Number} [options.sendTimeout=30000] Send timeout in ms.\n * @param {Number} [options.receiveTimeout=30000] Receive timeout in ms.\n * @param {Number} [options.connectTimeout=30000] Connect timeout in ms.\n * @return {ClientRequest}\n */",
    "meta": {
      "range": [
        5599,
        7167
      ],
      "filename": "http.js",
      "lineno": 123,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018626",
        "name": "exports.request",
        "type": "FunctionExpression",
        "value": "request",
        "paramnames": [
          "options"
        ]
      },
      "vars": {
        "parsedURL": "module:buildin.module:http~parsedURL",
        "options": "module:buildin.module:http~options",
        "options.host": "module:buildin.module:http~options.host",
        "host_port": "module:buildin.module:http.request~host_port",
        "options.port": "module:buildin.module:http~options.port",
        "options.hostname": "module:buildin.module:http~options.hostname",
        "options.path": "module:buildin.module:http~options.path",
        "options.headers": "module:buildin.module:http~options.headers",
        "options.useHTTPS": "module:buildin.module:http~options.useHTTPS",
        "options.useCompression": "module:buildin.module:http~options.useCompression",
        "options.keepAlive": "module:buildin.module:http~options.keepAlive",
        "options.sendTimeout": "module:buildin.module:http~options.sendTimeout",
        "options.receiveTimeout": "module:buildin.module:http~options.receiveTimeout",
        "options.connectTimeout": "module:buildin.module:http~options.connectTimeout",
        "options.method": "module:buildin.module:http~options.method"
      }
    },
    "description": "Create new HTTP server connection. In case server behind the proxy - see {@link http.setGlobalProxyConfiguration} function.",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "String"
          ]
        },
        "description": "Either URL string in format <code>protocol://host:port/path</code> or config",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Service URL in format <code>protocol://host:port/path</code>. Will override <code>useHTTPS</code>, <code>server</code>, <code>host</code>, <code>port</code> and <code>path</code> if passed",
        "name": "options.URL"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "DEPRECATED. Server to connect in format 'host:port' or 'host' in case port == 80.",
        "name": "options.server"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Host to connect. If <code>server</code> not specified this value used",
        "name": "options.host"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Port. Default is 80 for HTTP or 443 for HTTPS",
        "name": "options.port"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'/'",
        "description": "Request path. Defaults to '/'. Should include query string if any. E.G. '/index.html?page=12'",
        "name": "options.path"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'GET'",
        "description": "HTTP method to use for request",
        "name": "options.method"
      },
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "An object containing request headers",
        "name": "options.headers"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "options.useHTTPS"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Send 'Accept-encoding: gzip' header to server &amp; unzip zipper responses",
        "name": "options.useCompression"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Use keep Alive HTTP protocol feature if server support it.",
        "name": "options.keepAlive"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Send timeout in ms.",
        "name": "options.sendTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Receive timeout in ms.",
        "name": "options.receiveTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Connect timeout in ms.",
        "name": "options.connectTimeout"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ClientRequest"
          ]
        }
      }
    ],
    "name": "request",
    "longname": "module:buildin.module:http.request",
    "kind": "function",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001664",
    "___s": true
  },
  {
    "comment": "/**\n *  Override global ( on the `http` module level) connectiuon defaults.\n *\n *  Settings applied only for  newly created {ClientRequest} instances.\n *\n *          var http = require('http');\n *          http.setGlobalConnectionDefaults({receiveTimeout: 60000}); // set receive timeout to 60 sec.\n *\n * @param {Object} defaults\n * @param {Boolean} [defaults.useHTTPS=false]\n * @param {Boolean} [defaults.useCompression=true] Send 'Accept-encoding: gzip' header to server & unzip zipper responses\n * @param {Boolean} [defaults.keepAlive=false] Use keep Alive HTTP protocol feature if server support it.\n * @param {Number} [defaults.sendTimeout=30000] Send timeout in ms.\n * @param {Number} [defaults.receiveTimeout=30000] Receive timeout in ms.\n * @param {Number} [defaults.connectTimeout=60000] Connect timeout in ms.\n */",
    "meta": {
      "range": [
        3836,
        4109
      ],
      "filename": "http.js",
      "lineno": 96,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018584",
        "name": "exports.setGlobalConnectionDefaults",
        "type": "FunctionExpression",
        "value": "setGlobalConnectionDefaults",
        "paramnames": [
          "defaults"
        ]
      },
      "vars": {
        "defaults": "module:buildin.module:http~defaults",
        "": null
      }
    },
    "description": "<p>Override global ( on the <code>http</code> module level) connectiuon defaults.</p>\n<p> Settings applied only for  newly created {ClientRequest} instances.</p>\n<pre class=\"prettyprint source\"><code>     var http = require('http');\n     http.setGlobalConnectionDefaults({receiveTimeout: 60000}); // set receive timeout to 60 sec.</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "defaults"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "defaults.useHTTPS"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "Send 'Accept-encoding: gzip' header to server &amp; unzip zipper responses",
        "name": "defaults.useCompression"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Use keep Alive HTTP protocol feature if server support it.",
        "name": "defaults.keepAlive"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Send timeout in ms.",
        "name": "defaults.sendTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 30000,
        "description": "Receive timeout in ms.",
        "name": "defaults.receiveTimeout"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 60000,
        "description": "Connect timeout in ms.",
        "name": "defaults.connectTimeout"
      }
    ],
    "name": "setGlobalConnectionDefaults",
    "longname": "module:buildin.module:http.setGlobalConnectionDefaults",
    "kind": "function",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001661",
    "___s": true
  },
  {
    "comment": "/**\n *  Configure global ( on the `http` module level) proxy server in case you can't configure it using\n *  either **`proxycfg.exe -u`** on Windows XP or **`netsh winhttp import proxy source=ie`** for other win version\n *  or by pass `options.proxyName` parameter.\n *\n *  Settings applied only for  newly created {ClientRequest} instances.\n *\n *  See for details <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa383996(v=vs.85).aspx\">this MS article</a>\n *\n * @param {String} proxy     name of the proxy server to use in format `[[http|https]://]host[:port]` For example 'http://proxy.my.domain:3249'\n * @param {String|Array} [bypass]  semicolon delimited list jr array of host names or IP addresses, or host masks or both, that should not be routed through the proxy\n */",
    "meta": {
      "range": [
        2781,
        3010
      ],
      "filename": "http.js",
      "lineno": 72,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100018543",
        "name": "exports.setGlobalProxyConfiguration",
        "type": "FunctionExpression",
        "value": "setGlobalProxyConfiguration",
        "paramnames": [
          "proxy",
          "bypass"
        ]
      },
      "vars": {
        "proxyConfig.proxy": "module:buildin.module:http~proxyConfig.proxy",
        "bypass": "module:buildin.module:http~bypass",
        "proxyConfig.bypass": "module:buildin.module:http~proxyConfig.bypass"
      }
    },
    "description": "Configure global ( on the <code>http</code> module level) proxy server in case you can't configure it using\n either <strong><code>proxycfg.exe -u</code></strong> on Windows XP or <strong><code>netsh winhttp import proxy source=ie</code></strong> for other win version\n or by pass <code>options.proxyName</code> parameter.</p>\n<p> Settings applied only for  newly created {ClientRequest} instances.</p>\n<p> See for details <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa383996(v=vs.85).aspx\">this MS article</a>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "name of the proxy server to use in format <code>[[http|https]://]host[:port]</code> For example 'http://proxy.my.domain:3249'",
        "name": "proxy"
      },
      {
        "type": {
          "names": [
            "String",
            "Array"
          ]
        },
        "optional": true,
        "description": "semicolon delimited list jr array of host names or IP addresses, or host masks or both, that should not be routed through the proxy",
        "name": "bypass"
      }
    ],
    "name": "setGlobalProxyConfiguration",
    "longname": "module:buildin.module:http.setGlobalProxyConfiguration",
    "kind": "function",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001657",
    "___s": true
  },
  {
    "comment": "/**\n * HTTP status codes.\n * @type {Object.<number, string>}\n */",
    "meta": {
      "range": [
        15515,
        17396
      ],
      "filename": "http.js",
      "lineno": 442,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019791",
        "name": "exports.STATUS_CODES",
        "type": "ObjectExpression",
        "value": "{\"undefined\":\"Network Authentication Required\"}",
        "paramnames": []
      }
    },
    "description": "HTTP status codes.",
    "type": {
      "names": [
        "Object.<number, string>"
      ]
    },
    "name": "STATUS_CODES",
    "longname": "module:buildin.module:http.STATUS_CODES",
    "kind": "member",
    "memberof": "module:buildin.module:http",
    "scope": "static",
    "___id": "T000002R001747",
    "___s": true
  },
  {
    "comment": "/**\n * HTTPS client.\n * @module https\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "https.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "HTTPS client.",
    "kind": "module",
    "name": "https",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:https",
    "___id": "T000002R001804",
    "___s": true
  },
  {
    "comment": "/**\n * This object is created internally and returned from {@link http.request}\n * It represents an in-progress request whose header has already been queued.\n * The header is still mutable using the {@link ClientRequest.setHeader setHeader(name, value)},\n *   {@link ClientRequest#getHeader getHeader(name)}, {@link ClientRequest#removeHeader removeHeader(name)} API.\n * The actual header will be sent along with the {@link ClientRequest#end end()}.\n *\n * `path` & `method` parameter is still mutable using {@link ClientRequest#setPath setPath(path)} & {@link ClientRequest#setMethod setMethod(HTTPMethod)}\n\n * @class ClientRequest\n * @implements {UBWriter}\n * @protected\n * @param {Object} options\n */",
    "meta": {
      "filename": "http.js",
      "lineno": 225,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "This object is created internally and returned from {@link http.request}\nIt represents an in-progress request whose header has already been queued.\nThe header is still mutable using the {@link ClientRequest.setHeader setHeader(name, value)},\n  {@link ClientRequest#getHeader getHeader(name)}, {@link ClientRequest#removeHeader removeHeader(name)} API.\nThe actual header will be sent along with the {@link ClientRequest#end end()}.</p>\n<p><code>path</code> &amp; <code>method</code> parameter is still mutable using {@link ClientRequest#setPath setPath(path)} &amp; {@link ClientRequest#setMethod setMethod(HTTPMethod)}",
    "kind": "class",
    "name": "ClientRequest",
    "implements": [
      "UBWriter"
    ],
    "access": "protected",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "longname": "module:buildin.module:http~ClientRequest",
    "scope": "inner",
    "memberof": "module:buildin.module:http",
    "___id": "T000002R001696",
    "___s": true
  },
  {
    "comment": "/**\n * End request by writing a last chunk of data (optional) and send request to server.\n * See {@link UBWriter#write} for parameters\n * @returns {IncomingMessage}\n */",
    "meta": {
      "range": [
        11065,
        11829
      ],
      "filename": "http.js",
      "lineno": 288,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019309",
        "name": "ClientRequest.prototype.end",
        "type": "FunctionExpression",
        "paramnames": [
          "data",
          "encoding"
        ]
      },
      "vars": {
        "_http": "module:buildin.module:http~ClientRequest#end~_http",
        "rUlr": "module:buildin.module:http~rUlr",
        "_http.method": "module:buildin.module:http~ClientRequest#end~_http.method",
        "_http.headers": "module:buildin.module:http~ClientRequest#end~_http.headers",
        "msg": "module:buildin.module:http~ClientRequest#end~msg"
      }
    },
    "description": "End request by writing a last chunk of data (optional) and send request to server.\nSee {@link UBWriter#write} for parameters",
    "returns": [
      {
        "type": {
          "names": [
            "IncomingMessage"
          ]
        }
      }
    ],
    "name": "end",
    "longname": "module:buildin.module:http~ClientRequest#end",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001712",
    "___s": true
  },
  {
    "comment": "/**\n * Reads out a header that's already been queued but not sent to the client.\n * @param {String} name\n * @returns {String}\n */",
    "meta": {
      "range": [
        13078,
        13262
      ],
      "filename": "http.js",
      "lineno": 345,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019538",
        "name": "ClientRequest.prototype.getHeader",
        "type": "FunctionExpression",
        "paramnames": [
          "name"
        ]
      }
    },
    "description": "Reads out a header that's already been queued but not sent to the client.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "getHeader",
    "longname": "module:buildin.module:http~ClientRequest#getHeader",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001725",
    "___s": true
  },
  {
    "comment": "/**\n * Removes a header that's queued for implicit sending\n * @param {String} name\n */",
    "meta": {
      "range": [
        13351,
        13541
      ],
      "filename": "http.js",
      "lineno": 356,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019567",
        "name": "ClientRequest.prototype.removeHeader",
        "type": "FunctionExpression",
        "paramnames": [
          "name"
        ]
      }
    },
    "description": "Removes a header that's queued for implicit sending",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "name"
      }
    ],
    "name": "removeHeader",
    "longname": "module:buildin.module:http~ClientRequest#removeHeader",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001726",
    "___s": true
  },
  {
    "comment": "/**\n * Sets a single header value for implicit headers.\n * If this header already exists in the to-be-sent headers, its value will be replaced.\n * Use an array of strings here if you need to send multiple headers with the same name\n *\n *      request.setHeader('Content-Type', 'text/html');\n *      request.setHeader('Set-Cookie', ['type=ninja', 'language=javascript']);\n *\n * @param {String} name\n * @param {String|Array} value\n */",
    "meta": {
      "range": [
        12806,
        12946
      ],
      "filename": "http.js",
      "lineno": 336,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019506",
        "name": "ClientRequest.prototype.setHeader",
        "type": "FunctionExpression",
        "paramnames": [
          "name",
          "value"
        ]
      },
      "vars": {
        "this.options.headers[undefined]": "module:buildin.module:http~ClientRequest#setHeader#options.headers[undefined]"
      }
    },
    "description": "<p>Sets a single header value for implicit headers.\nIf this header already exists in the to-be-sent headers, its value will be replaced.\nUse an array of strings here if you need to send multiple headers with the same name</p>\n<pre class=\"prettyprint source\"><code> request.setHeader('Content-Type', 'text/html');\n request.setHeader('Set-Cookie', ['type=ninja', 'language=javascript']);</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "name"
      },
      {
        "type": {
          "names": [
            "String",
            "Array"
          ]
        },
        "name": "value"
      }
    ],
    "name": "setHeader",
    "longname": "module:buildin.module:http~ClientRequest#setHeader",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001723",
    "___s": true
  },
  {
    "comment": "/**\n * Set all headers delimited by CRLF by once\n * @param {String} allHeaders\n */",
    "meta": {
      "range": [
        10508,
        10623
      ],
      "filename": "http.js",
      "lineno": 269,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019239",
        "name": "ClientRequest.prototype.setHeadersAsString",
        "type": "FunctionExpression",
        "paramnames": [
          "allHeaders"
        ]
      },
      "vars": {
        "this.options._headersAsString": "module:buildin.module:http~ClientRequest#setHeadersAsString#options._headersAsString"
      }
    },
    "description": "Set all headers delimited by CRLF by once",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "allHeaders"
      }
    ],
    "name": "setHeadersAsString",
    "longname": "module:buildin.module:http~ClientRequest#setHeadersAsString",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001706",
    "___s": true
  },
  {
    "comment": "/**\n * Set new HTTP method for request. Usually used during several request to the same server to avoid socket recreation.\n * @param {String} method\n */",
    "meta": {
      "range": [
        12283,
        12371
      ],
      "filename": "http.js",
      "lineno": 321,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019488",
        "name": "ClientRequest.prototype.setMethod",
        "type": "FunctionExpression",
        "paramnames": [
          "method"
        ]
      },
      "vars": {
        "this.options.method": "module:buildin.module:http~ClientRequest#setMethod#options.method"
      }
    },
    "description": "Set new HTTP method for request. Usually used during several request to the same server to avoid socket recreation.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "method"
      }
    ],
    "name": "setMethod",
    "longname": "module:buildin.module:http~ClientRequest#setMethod",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001721",
    "___s": true
  },
  {
    "comment": "/**\n * Set new path for request. Usually used during several request to the same server to avoid socket recreation.\n * @param {String} path New path. Should include query string if any. E.G. '/index.html?page=12'\n */",
    "meta": {
      "range": [
        12048,
        12128
      ],
      "filename": "http.js",
      "lineno": 313,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019470",
        "name": "ClientRequest.prototype.setPath",
        "type": "FunctionExpression",
        "paramnames": [
          "path"
        ]
      },
      "vars": {
        "this.options.path": "module:buildin.module:http~ClientRequest#setPath#options.path"
      }
    },
    "description": "Set new path for request. Usually used during several request to the same server to avoid socket recreation.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "New path. Should include query string if any. E.G. '/index.html?page=12'",
        "name": "path"
      }
    ],
    "name": "setPath",
    "longname": "module:buildin.module:http~ClientRequest#setPath",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "___id": "T000002R001719",
    "___s": true
  },
  {
    "comment": "/**\n * Write to source.\n * @param {ArrayBuffer|Object|String} data Data to write. If Object - it stringify before write\n * @param {String} [encoding] Encode data to `encoding` before write. Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *          One of \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        4139,
        4194
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 125,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008489",
        "name": "UBWriter.prototype.write",
        "type": "FunctionExpression",
        "paramnames": [
          "data",
          "encoding"
        ]
      }
    },
    "description": "Write to source.",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. If Object - it stringify before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write. Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n         One of &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "encoding"
      }
    ],
    "name": "write",
    "longname": "module:buildin.module:http~ClientRequest#write",
    "kind": "function",
    "memberof": "module:buildin.module:http~ClientRequest",
    "scope": "instance",
    "implements": [
      "UBWriter#write"
    ],
    "___id": "T000002R010878",
    "___s": true
  },
  {
    "comment": "/**\n * Result of HTTP request\n * @class IncomingMessage\n * @implements {UBReader}\n * @param {THTTPClient} httpClient\n * @protected\n */",
    "meta": {
      "filename": "http.js",
      "lineno": 363,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Result of HTTP request",
    "kind": "class",
    "name": "IncomingMessage",
    "implements": [
      "UBReader"
    ],
    "params": [
      {
        "type": {
          "names": [
            "THTTPClient"
          ]
        },
        "name": "httpClient"
      }
    ],
    "access": "protected",
    "longname": "module:buildin.module:http~IncomingMessage",
    "scope": "inner",
    "memberof": "module:buildin.module:http",
    "___id": "T000002R001727",
    "___s": true
  },
  {
    "comment": "/**\n     * Default encoding for read call\n     * @type {String}\n     */",
    "meta": {
      "range": [
        13822,
        13845
      ],
      "filename": "http.js",
      "lineno": 376,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019607",
        "name": "this.encoding",
        "type": "Literal",
        "value": "utf-8",
        "paramnames": []
      }
    },
    "description": "Default encoding for read call",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "encoding",
    "longname": "module:buildin.module:http~IncomingMessage#encoding",
    "kind": "member",
    "memberof": "module:buildin.module:http~IncomingMessage",
    "scope": "instance",
    "___id": "T000002R001730",
    "___s": true
  },
  {
    "comment": "/**\n * Read a response body. See {@link UBReader#read} for parameters\n * @param {String} [encoding] If omitted `this.encoding` in used\n */",
    "meta": {
      "range": [
        14717,
        14825
      ],
      "filename": "http.js",
      "lineno": 410,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019681",
        "name": "IncomingMessage.prototype.read",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      }
    },
    "description": "Read a response body. See {@link UBReader#read} for parameters",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "If omitted <code>this.encoding</code> in used",
        "name": "encoding"
      }
    ],
    "name": "read",
    "longname": "module:buildin.module:http~IncomingMessage#read",
    "kind": "function",
    "memberof": "module:buildin.module:http~IncomingMessage",
    "scope": "instance",
    "implements": [
      "UBReader#read"
    ],
    "___id": "T000002R001736",
    "___s": true
  },
  {
    "comment": "/**\n * Change default encoding for read request\n * @param {String} encoding\n */",
    "meta": {
      "range": [
        14486,
        14576
      ],
      "filename": "http.js",
      "lineno": 402,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019665",
        "name": "IncomingMessage.prototype.setEncoding",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      },
      "vars": {
        "this.encoding": "module:buildin.module:http~IncomingMessage#setEncoding#encoding"
      }
    },
    "description": "Change default encoding for read request",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "encoding"
      }
    ],
    "name": "setEncoding",
    "longname": "module:buildin.module:http~IncomingMessage#setEncoding",
    "kind": "function",
    "memberof": "module:buildin.module:http~IncomingMessage",
    "scope": "instance",
    "___id": "T000002R001734",
    "___s": true
  },
  {
    "comment": "/**\n     * HTTP status code. See also {STATUS_CODES}\n     * @type {Number}\n     * @readonly\n     */",
    "meta": {
      "range": [
        14001,
        14044
      ],
      "filename": "http.js",
      "lineno": 384,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100019619",
        "name": "this.statusCode",
        "type": "MemberExpression",
        "value": "this._http.responseStatus",
        "paramnames": []
      }
    },
    "description": "HTTP status code. See also {STATUS_CODES}",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "statusCode",
    "longname": "module:buildin.module:http~IncomingMessage#statusCode",
    "kind": "member",
    "memberof": "module:buildin.module:http~IncomingMessage",
    "scope": "instance",
    "___id": "T000002R001732",
    "___s": true
  },
  {
    "comment": "/**\n * @module os\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "os.js",
      "lineno": 4,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "os",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:os",
    "___id": "T000002R002018",
    "___s": true
  },
  {
    "comment": "/**\n * See <a href=\"https://nodejs.org/api/path.html\">Node <strong>path</strong> module documentation</a>\n * @module path\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "path.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "See <a href=\"https://nodejs.org/api/path.html\">Node <strong>path</strong> module documentation</a>",
    "kind": "module",
    "name": "path",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:path",
    "___id": "T000002R002031",
    "___s": true
  },
  {
    "comment": "/**\n * @module querystring\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "querystring.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "querystring",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:querystring",
    "___id": "T000002R002483",
    "___s": true
  },
  {
    "comment": "/**\n * The escape function used by querystring.stringify, provided so that it could be overridden if necessary.\n * @param str\n * @return {string}\n */",
    "meta": {
      "range": [
        3354,
        3426
      ],
      "filename": "querystring.js",
      "lineno": 119,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100028818",
        "name": "QueryString.escape",
        "type": "FunctionExpression",
        "paramnames": [
          "str"
        ]
      }
    },
    "description": "The escape function used by querystring.stringify, provided so that it could be overridden if necessary.",
    "params": [
      {
        "name": "str"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "escape",
    "longname": "module:buildin.module:querystring~QueryString.escape",
    "kind": "function",
    "memberof": "module:buildin.module:querystring~QueryString",
    "scope": "static",
    "___id": "T000002R002519",
    "___s": true
  },
  {
    "comment": "/**\n * Serialize an object to a query string. Optionally override the default separator ('&') and assignment ('=') characters.\n *\n *   Example:\n *\n *        querystring.stringify({ foo: 'bar', baz: ['qux', 'quux'], corge: '' })\n *        // returns\n *        'foo=bar&baz=qux&baz=quux&corge='\n *\n *        querystring.stringify({foo: 'bar', baz: 'qux'}, ';', ':')\n *        // returns\n *        'foo:bar;baz:qux'\n *\n * @param {Object} obj\n * @param {String} [sep=\"&\"]\n * @param {String} [eq=\"=\"]\n */",
    "meta": {
      "range": [
        4175,
        4896
      ],
      "filename": "querystring.js",
      "lineno": 156,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100028862",
        "name": "QueryString.stringify",
        "type": "AssignmentExpression",
        "value": "QueryString.encode",
        "paramnames": []
      }
    },
    "description": "<p>Serialize an object to a query string. Optionally override the default separator ('&amp;') and assignment ('=') characters.</p>\n<p>  Example:</p>\n<pre class=\"prettyprint source\"><code>   querystring.stringify({ foo: 'bar', baz: ['qux', 'quux'], corge: '' })\n   // returns\n   'foo=bar&baz=qux&baz=quux&corge='\n\n   querystring.stringify({foo: 'bar', baz: 'qux'}, ';', ':')\n   // returns\n   'foo:bar;baz:qux'</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "obj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\"&\"",
        "name": "sep"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\"=\"",
        "name": "eq"
      }
    ],
    "name": "stringify",
    "longname": "module:buildin.module:querystring~QueryString.stringify",
    "kind": "member",
    "memberof": "module:buildin.module:querystring~QueryString",
    "scope": "static",
    "___id": "T000002R002521",
    "___s": true
  },
  {
    "comment": "/**\n * The unescape function used by querystring.parse, provided so that it could be overridden if necessary.\n *\n * @param s\n * @param decodeSpaces\n * @return {*}\n */",
    "meta": {
      "range": [
        3084,
        3201
      ],
      "filename": "querystring.js",
      "lineno": 110,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100028799",
        "name": "QueryString.unescape",
        "type": "FunctionExpression",
        "paramnames": [
          "s",
          "decodeSpaces"
        ]
      }
    },
    "description": "The unescape function used by querystring.parse, provided so that it could be overridden if necessary.",
    "params": [
      {
        "name": "s"
      },
      {
        "name": "decodeSpaces"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "unescape",
    "longname": "module:buildin.module:querystring~QueryString.unescape",
    "kind": "function",
    "memberof": "module:buildin.module:querystring~QueryString",
    "scope": "static",
    "___id": "T000002R002518",
    "___s": true
  },
  {
    "comment": "/**\n * See <a href=\"https://nodejs.org/api/stream.html\">Node <strong>stream</strong> module documentation</a>\n * @module stream\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "stream.js",
      "lineno": 2,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "See <a href=\"https://nodejs.org/api/stream.html\">Node <strong>stream</strong> module documentation</a>",
    "kind": "module",
    "name": "stream",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:stream",
    "___id": "T000002R002556",
    "___s": true
  },
  {
    "comment": "/** \n * @module string_decoder \n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "string_decoder.js",
      "lineno": 2,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "string_decoder",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:string_decoder",
    "___id": "T000002R002578",
    "___s": true
  },
  {
    "comment": "/**\n* MPV - Fake implementation of nodejs tty\n* Always return `false` to isatty() call\n* @module tty\n* @memberOf module:buildin\n*/",
    "meta": {
      "filename": "tty.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "MPV - Fake implementation of nodejs tty\nAlways return <code>false</code> to isatty() call",
    "kind": "module",
    "name": "tty",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:tty",
    "___id": "T000002R002725",
    "___s": true
  },
  {
    "comment": "/**\n * See <a href=\"https://nodejs.org/api/url.html\">Node <strong>url</strong> module documentation</a>\n * @module url\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "url.js",
      "lineno": 1,
      "columnno": 1,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "See <a href=\"https://nodejs.org/api/url.html\">Node <strong>url</strong> module documentation</a>",
    "kind": "module",
    "name": "url",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:url",
    "___id": "T000002R002727",
    "___s": true
  },
  {
    "comment": "/** \n * @module util \n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "util.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "module",
    "name": "util",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:util",
    "___id": "T000002R003009",
    "___s": true
  },
  {
    "comment": "/**\n * Returns a formatted string using the first argument as a printf-like format.\n *\n * The first argument is a string that contains zero or more placeholders. Each placeholder is replaced with the converted value from its corresponding argument. Supported placeholders are:\n *\n *  - %s - String.\n *  - %d - Number (both integer and float).\n *  - %j - JSON.\n *  - % - single percent sign ('%'). This does not consume an argument.\n *\n * If the placeholder does not have a corresponding argument, the placeholder is not replaced:\n *\n *      util.format('%s:%s', 'foo'); // 'foo:%s'\n *\n * If there are more arguments than placeholders, the extra arguments are converted to strings with util.inspect() and these strings are concatenated, delimited by a space:\n *\n *      util.format('%s:%s', 'foo', 'bar', 'baz'); // 'foo:bar baz'\n *\n * If the first argument is not a format string then util.format() returns a string that is the concatenation of all its arguments separated by spaces. Each argument is converted to a string with util.inspect():\n *\n *      util.format(1, 2, 3); // '1 2 3'\n *\n * @param f\n * @return {string}\n */",
    "meta": {
      "range": [
        3640,
        5348
      ],
      "filename": "util.js",
      "lineno": 109,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100035159",
        "name": "exports.format",
        "type": "FunctionExpression",
        "paramnames": [
          "f"
        ]
      },
      "vars": {
        "objects": "module:buildin.module:util.format~objects",
        "index": "module:buildin.module:util.format~index",
        "objects[undefined]": "module:buildin.module:util.format~objects.undefined]",
        "argLen": "module:buildin.module:util.format~argLen",
        "str": "module:buildin.module:util~str",
        "a": "module:buildin.module:util.format~a",
        "lastPos": "module:buildin.module:util~lastPos",
        "i": "module:buildin.module:util~i",
        "x": "module:buildin.module:util.format~x"
      }
    },
    "description": "<p>Returns a formatted string using the first argument as a printf-like format.</p>\n<p>The first argument is a string that contains zero or more placeholders. Each placeholder is replaced with the converted value from its corresponding argument. Supported placeholders are:</p>\n<ul>\n<li>%s - String.</li>\n<li>%d - Number (both integer and float).</li>\n<li>%j - JSON.</li>\n<li>% - single percent sign ('%'). This does not consume an argument.</li>\n</ul>\n<p>If the placeholder does not have a corresponding argument, the placeholder is not replaced:</p>\n<pre class=\"prettyprint source\"><code> util.format('%s:%s', 'foo'); // 'foo:%s'</code></pre><p>If there are more arguments than placeholders, the extra arguments are converted to strings with util.inspect() and these strings are concatenated, delimited by a space:</p>\n<pre class=\"prettyprint source\"><code> util.format('%s:%s', 'foo', 'bar', 'baz'); // 'foo:bar baz'</code></pre><p>If the first argument is not a format string then util.format() returns a string that is the concatenation of all its arguments separated by spaces. Each argument is converted to a string with util.inspect():</p>\n<pre class=\"prettyprint source\"><code> util.format(1, 2, 3); // '1 2 3'</code></pre>",
    "params": [
      {
        "name": "f"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "format",
    "longname": "module:buildin.module:util.format",
    "kind": "function",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003033",
    "___s": true
  },
  {
    "comment": "/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n * @throws {TypeError} Will error if either constructor is null, or if\n *     the super constructor lacks a prototype.\n */",
    "meta": {
      "range": [
        30594,
        31227
      ],
      "filename": "util.js",
      "lineno": 1079,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038633",
        "name": "exports.inherits",
        "type": "FunctionExpression",
        "paramnames": [
          "ctor",
          "superCtor"
        ]
      },
      "vars": {
        "ctor.super_": "module:buildin.module:util~ctor.super_"
      }
    },
    "description": "Inherit the prototype methods from one constructor into another.</p>\n<p>The Function.prototype.inherits from lang.js rewritten as a standalone\nfunction (not on Function.prototype). NOTE: If this file is to be loaded\nduring bootstrapping this function needs to be rewritten using some native\nfunctions as prototype setup using normal JavaScript does not work as\nexpected during bootstrapping (see mirror.js in r114903).",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Constructor function which needs to inherit the\n    prototype.",
        "name": "ctor"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Constructor function to inherit prototype from.",
        "name": "superCtor"
      }
    ],
    "exceptions": [
      {
        "type": {
          "names": [
            "TypeError"
          ]
        },
        "description": "<p>Will error if either constructor is null, or if\n    the super constructor lacks a prototype.</p>"
      }
    ],
    "name": "inherits",
    "longname": "module:buildin.module:util.inherits",
    "kind": "function",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003311",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param ar\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27239,
        27270
      ],
      "filename": "util.js",
      "lineno": 899,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038304",
        "name": "exports.isArray",
        "type": "MemberExpression",
        "value": "Array.isArray",
        "paramnames": []
      }
    },
    "params": [
      {
        "name": "ar"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isArray",
    "longname": "module:buildin.module:util.isArray",
    "kind": "member",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003278",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param b\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        29131,
        29165
      ],
      "filename": "util.js",
      "lineno": 1034,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038514",
        "name": "exports.isBuffer",
        "type": "MemberExpression",
        "value": "Buffer.isBuffer",
        "paramnames": []
      }
    },
    "params": [
      {
        "name": "b"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isBuffer",
    "longname": "module:buildin.module:util.isBuffer",
    "kind": "member",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003304",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param e\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        28711,
        28736
      ],
      "filename": "util.js",
      "lineno": 1006,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038469",
        "name": "exports.isError",
        "type": "Identifier",
        "value": "isError",
        "paramnames": []
      }
    },
    "params": [
      {
        "name": "e"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isError",
    "longname": "module:buildin.module:util.isError",
    "kind": "member",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003299",
    "___s": true
  },
  {
    "comment": "/**\n * Output with timestamp on stdout.\n * @param {String} msg\n */",
    "meta": {
      "range": [
        29747,
        29856
      ],
      "filename": "util.js",
      "lineno": 1059,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038610",
        "name": "exports.log",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Output with timestamp on stdout.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "msg"
      }
    ],
    "name": "log",
    "longname": "module:buildin.module:util.log",
    "kind": "function",
    "memberof": "module:buildin.module:util",
    "scope": "static",
    "___id": "T000002R003310",
    "___s": true
  },
  {
    "comment": "/**\n * Will block the process and output string immediately to stderr:\n *\n *      require('util').debug('message on stderr');\n *\n * @method debug\n * @deprecated Use {@link console.error} instead\n * @param {*} msg\n */",
    "meta": {
      "filename": "util.js",
      "lineno": 1146,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>Will block the process and output string immediately to stderr:</p>\n<pre class=\"prettyprint source\"><code> require('util').debug('message on stderr');</code></pre>",
    "kind": "function",
    "name": "debug",
    "deprecated": "Use {@link console.error} instead",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "msg"
      }
    ],
    "longname": "module:buildin.module:util~debug",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003326",
    "___s": true
  },
  {
    "comment": "/**\n * Same as {@link util#debug} except this will output *all* arguments immediately to stderr.\n *\n * @method error\n * @deprecated Use {@link console.error} instead\n * @param {...*} arguments\n */",
    "meta": {
      "filename": "util.js",
      "lineno": 1161,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Same as {@link util#debug} except this will output <em>all</em> arguments immediately to stderr.",
    "kind": "function",
    "name": "error",
    "deprecated": "Use {@link console.error} instead",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "arguments"
      }
    ],
    "longname": "module:buildin.module:util~error",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003328",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27319,
        27381
      ],
      "filename": "util.js",
      "lineno": 906,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038311",
        "name": "isBoolean",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isBoolean",
    "longname": "module:buildin.module:util~isBoolean",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003279",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param d\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        28589,
        28639
      ],
      "filename": "util.js",
      "lineno": 996,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038452",
        "name": "isDate",
        "type": "FunctionDeclaration",
        "paramnames": [
          "d"
        ]
      }
    },
    "params": [
      {
        "name": "d"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isDate",
    "longname": "module:buildin.module:util~isDate",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003297",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        28786,
        28850
      ],
      "filename": "util.js",
      "lineno": 1013,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038474",
        "name": "isFunction",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isFunction",
    "longname": "module:buildin.module:util~isFunction",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003300",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27460,
        27507
      ],
      "filename": "util.js",
      "lineno": 916,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038326",
        "name": "isNull",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isNull",
    "longname": "module:buildin.module:util~isNull",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003281",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27580,
        27659
      ],
      "filename": "util.js",
      "lineno": 926,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038340",
        "name": "isNullOrUndefined",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isNullOrUndefined",
    "longname": "module:buildin.module:util~isNullOrUndefined",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003283",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27754,
        27814
      ],
      "filename": "util.js",
      "lineno": 936,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038358",
        "name": "isNumber",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isNumber",
    "longname": "module:buildin.module:util~isNumber",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003285",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        28437,
        28513
      ],
      "filename": "util.js",
      "lineno": 986,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038433",
        "name": "isObject",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isObject",
    "longname": "module:buildin.module:util~isObject",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003295",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @returns {boolean}\n */",
    "meta": {
      "range": [
        28932,
        29049
      ],
      "filename": "util.js",
      "lineno": 1023,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038489",
        "name": "isPrimitive",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isPrimitive",
    "longname": "module:buildin.module:util~isPrimitive",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003302",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param re\n * @return {boolean}\n */",
    "meta": {
      "range": [
        28304,
        28360
      ],
      "filename": "util.js",
      "lineno": 976,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038417",
        "name": "isRegExp",
        "type": "FunctionDeclaration",
        "paramnames": [
          "re"
        ]
      }
    },
    "params": [
      {
        "name": "re"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isRegExp",
    "longname": "module:buildin.module:util~isRegExp",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003293",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        27891,
        27951
      ],
      "filename": "util.js",
      "lineno": 946,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038373",
        "name": "isString",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isString",
    "longname": "module:buildin.module:util~isString",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003287",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        28028,
        28088
      ],
      "filename": "util.js",
      "lineno": 956,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038388",
        "name": "isSymbol",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isSymbol",
    "longname": "module:buildin.module:util~isSymbol",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003289",
    "___s": true
  },
  {
    "comment": "/**\n *\n * @param arg\n * @return {boolean}\n */",
    "meta": {
      "range": [
        28165,
        28222
      ],
      "filename": "util.js",
      "lineno": 966,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100038403",
        "name": "isUndefined",
        "type": "FunctionDeclaration",
        "paramnames": [
          "arg"
        ]
      }
    },
    "params": [
      {
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isUndefined",
    "longname": "module:buildin.module:util~isUndefined",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003291",
    "___s": true
  },
  {
    "comment": "/**\n * A synchronous output function. Will block the process, cast each argument to a string then output to stdout. Does not place newlines after each argument:\n *\n *      util.print('one', 'two', 3); // onetwo3\n *\n * @method print\n * @deprecated Use {@link console.log} instead\n * @param {...*} arguments\n */",
    "meta": {
      "filename": "util.js",
      "lineno": 1115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>A synchronous output function. Will block the process, cast each argument to a string then output to stdout. Does not place newlines after each argument:</p>\n<pre class=\"prettyprint source\"><code> util.print('one', 'two', 3); // onetwo3</code></pre>",
    "kind": "function",
    "name": "print",
    "deprecated": "Use {@link console.log} instead",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "arguments"
      }
    ],
    "longname": "module:buildin.module:util~print",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003318",
    "___s": true
  },
  {
    "comment": "/**\n *  A synchronous output function. Will block the process and output all arguments to stdout with newlines after each argument.\n *\n *      util.puts('one', 'two', 3); // one\n *                                  // two\n *                                  // 3\n * @method puts\n * @deprecated Use {@link console.log} instead\n * @param {...*} arguments\n */",
    "meta": {
      "filename": "util.js",
      "lineno": 1130,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>A synchronous output function. Will block the process and output all arguments to stdout with newlines after each argument.</p>\n<pre class=\"prettyprint source\"><code> util.puts('one', 'two', 3); // one\n                             // two\n                             // 3</code></pre>",
    "kind": "function",
    "name": "puts",
    "deprecated": "Use {@link console.log} instead",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "arguments"
      }
    ],
    "longname": "module:buildin.module:util~puts",
    "scope": "inner",
    "memberof": "module:buildin.module:util",
    "___id": "T000002R003322",
    "___s": true
  },
  {
    "comment": "/** \n * Fake vm\n * @module vm\n * @memberOf module:buildin\n */",
    "meta": {
      "filename": "vm.js",
      "lineno": 1,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Fake vm",
    "kind": "module",
    "name": "vm",
    "memberof": "module:buildin",
    "scope": "static",
    "longname": "module:buildin.module:vm",
    "___id": "T000002R003348",
    "___s": true
  },
  {
    "comment": "/** \n * Node expect this config\n{\n    filename: filename,\n    lineOffset: 0,\n    displayErrors: true\n  }\n */",
    "meta": {
      "range": [
        236,
        337
      ],
      "filename": "vm.js",
      "lineno": 16,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100039060",
        "name": "exports.runInThisContext",
        "type": "FunctionExpression",
        "paramnames": [
          "code",
          "config"
        ]
      }
    },
    "description": "Node expect this config\n{\n    filename: filename,\n    lineOffset: 0,\n    displayErrors: true\n  }",
    "name": "runInThisContext",
    "longname": "module:buildin.module:vm.runInThisContext",
    "kind": "function",
    "memberof": "module:buildin.module:vm",
    "scope": "static",
    "___id": "T000002R003351",
    "___s": true
  },
  {
    "comment": "/**\r\n* @namespace process\r\n* @property {string} startupPath Use a process.cwd() instead\r\n* @property {string} execPath The main executable full path (including .exe file name)\r\n*/",
    "meta": {
      "filename": "synode.js",
      "lineno": 26,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "kind": "namespace",
    "name": "process",
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Use a process.cwd() instead</p>",
        "name": "startupPath"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The main executable full path (including .exe file name)</p>",
        "name": "execPath"
      }
    ],
    "longname": "module:buildin~process",
    "scope": "inner",
    "memberof": "module:buildin",
    "___id": "T000002R002665",
    "___s": true
  },
  {
    "comment": "/**\r\n     * Current working directory\r\n     * @return {string|String}\r\n     */",
    "meta": {
      "range": [
        1074,
        1145
      ],
      "filename": "synode.js",
      "lineno": 37,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100030790",
        "name": "process.cwd",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Current working directory",
    "returns": [
      {
        "type": {
          "names": [
            "string",
            "String"
          ]
        }
      }
    ],
    "name": "cwd",
    "longname": "module:buildin~process.cwd",
    "kind": "function",
    "scope": "static",
    "memberof": "module:buildin~process",
    "___id": "T000002R002667",
    "___s": true
  },
  {
    "comment": "/**\r\n     * This function is just to be compatible with node.js\r\n     * @param {Function} callback Callback (called immediately in SyNode)\r\n     */",
    "meta": {
      "range": [
        3077,
        3800
      ],
      "filename": "synode.js",
      "lineno": 88,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100030915",
        "name": "process.nextTick",
        "type": "FunctionExpression",
        "paramnames": [
          "callback",
          "arg1",
          "arg2",
          "arg3"
        ]
      },
      "vars": {
        "i": "module:buildin~i",
        "args": "module:buildin~args",
        "args[undefined]": "module:buildin~args.undefined]"
      }
    },
    "description": "This function is just to be compatible with node.js",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Callback (called immediately in SyNode)",
        "name": "callback"
      }
    ],
    "name": "nextTick",
    "longname": "module:buildin~process.nextTick",
    "kind": "function",
    "scope": "static",
    "memberof": "module:buildin~process",
    "___id": "T000002R002677",
    "___s": true
  },
  {
    "comment": "/**\n * This module provides utilities for dealing with query strings. Call `require('url')` to use it. This is port of NodeJS <a href=\"http://nodejs.org/api/querystring.html\">querystring</a> module.\n * Small sample:\n *\n *        var querystring = require('querystring');\n *        querystring.stringify({param1: 'value1', param2: ['arr1', 'arr2'], paramEmpty: '' })\n *        // returns 'param1=value1&param2=arr1&param2=arr2&paramEmpty='\n *\n * @module querystring\n */",
    "meta": {
      "filename": "querystring.js",
      "lineno": 12,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>This module provides utilities for dealing with query strings. Call <code>require('url')</code> to use it. This is port of NodeJS <a href=\"http://nodejs.org/api/querystring.html\">querystring</a> module.\nSmall sample:</p>\n<pre class=\"prettyprint source\"><code>   var querystring = require('querystring');\n   querystring.stringify({param1: 'value1', param2: ['arr1', 'arr2'], paramEmpty: '' })\n   // returns 'param1=value1&param2=arr1&param2=arr2&paramEmpty='</code></pre>",
    "kind": "module",
    "name": "querystring",
    "longname": "module:querystring",
    "scope": "inner",
    "memberof": "module:buildin.module:querystring",
    "___id": "T000002R002485",
    "___s": true
  },
  {
    "comment": "/**\n * Deserialize a query string to an object. Optionally override the default separator ('&') and assignment ('=') characters.\n *\n * Options object may contain maxKeys property (equal to 1000 by default), it'll be used to limit processed keys. Set it to 0 to remove key count limitation.\n *\n * Example:\n *\n *         querystring.parse('foo=bar&baz=qux&baz=quux&corge')\n *         // returns\n *         { foo: 'bar', baz: ['qux', 'quux'], corge: '' }\n *\n * @method parse\n * @param {Object} obj\n * @param {String} [sep=\"&\"]\n * @param {String} [eq=\"=\"]\n * @param {Object} [options]\n * @param {Number} [options.maxKeys=1000]\n */",
    "meta": {
      "filename": "querystring.js",
      "lineno": 182,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "<p>Deserialize a query string to an object. Optionally override the default separator ('&amp;') and assignment ('=') characters.</p>\n<p>Options object may contain maxKeys property (equal to 1000 by default), it'll be used to limit processed keys. Set it to 0 to remove key count limitation.</p>\n<p>Example:</p>\n<pre class=\"prettyprint source\"><code>    querystring.parse('foo=bar&baz=qux&baz=quux&corge')\n    // returns\n    { foo: 'bar', baz: ['qux', 'quux'], corge: '' }</code></pre>",
    "kind": "function",
    "name": "parse",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "obj"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\"&\"",
        "name": "sep"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\"=\"",
        "name": "eq"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 1000,
        "name": "options.maxKeys"
      }
    ],
    "longname": "module:querystring~parse",
    "scope": "inner",
    "memberof": "module:querystring",
    "___id": "T000002R002527",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Provide CRUID operations for entity database persistent (ORM) using `ubql` query syntax\n * @mixin\n */",
    "meta": {
      "range": [
        3837,
        5045
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 144,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008765",
        "name": "mStorage",
        "type": "ObjectExpression",
        "value": "{\"select\":\"\",\"insert\":\"\",\"update\":\"\",\"delete\":\"\",\"addNew\":\"\"}"
      }
    },
    "description": "Mixin. Provide CRUID operations for entity database persistent (ORM) using <code>ubql</code> query syntax",
    "kind": "mixin",
    "name": "mStorage",
    "longname": "mStorage",
    "scope": "global",
    "params": [],
    "___id": "T000002R000850",
    "___s": true
  },
  {
    "comment": "/**\n   * Create record with filled default values and return it to caller.\n   * Newly created record is not inserted to database. For inserting record to the database `insert` method should be called\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        5018,
        5043
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 180,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008784",
        "name": "addNew",
        "type": "FunctionExpression"
      }
    },
    "description": "Create record with filled default values and return it to caller.\nNewly created record is not inserted to database. For inserting record to the database <code>insert</code> method should be called",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "addNew",
    "longname": "mStorage.addNew",
    "kind": "function",
    "memberof": "mStorage",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000855",
    "___s": true
  },
  {
    "comment": "/**\n   * Delete data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.execParams.ID element ID to be deleted\n   */",
    "meta": {
      "range": [
        4732,
        4757
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 173,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008780",
        "name": "delete",
        "type": "FunctionExpression"
      }
    },
    "description": "Delete data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be deleted",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "delete",
    "longname": "mStorage.delete",
    "kind": "function",
    "memberof": "mStorage",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000854",
    "___s": true
  },
  {
    "comment": "/**\n   * Insert new row to the entity.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   */",
    "meta": {
      "range": [
        4245,
        4270
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 158,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008772",
        "name": "insert",
        "type": "FunctionExpression"
      }
    },
    "description": "Insert new row to the entity.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      }
    ],
    "name": "insert",
    "longname": "mStorage.insert",
    "kind": "function",
    "memberof": "mStorage",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000852",
    "___s": true
  },
  {
    "comment": "/**\n   * Read entity data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {UBQL} ctx.mParams ORM query in UBQL format\n   */",
    "meta": {
      "range": [
        3991,
        4016
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 151,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008768",
        "name": "select",
        "type": "FunctionExpression"
      }
    },
    "description": "Read entity data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "name": "select",
    "longname": "mStorage.select",
    "kind": "function",
    "memberof": "mStorage",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000851",
    "___s": true
  },
  {
    "comment": "/**\n   * Update data\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {Object|TubList} ctx.mParams.execParams Object keys is entity attributes names, key values is a value to be inserted\n   * @param {number} ctx.mParams.execParams.ID element ID to be updated\n   */",
    "meta": {
      "range": [
        4553,
        4578
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 166,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008776",
        "name": "update",
        "type": "FunctionExpression"
      }
    },
    "description": "Update data",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "Object keys is entity attributes names, key values is a value to be inserted",
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "element ID to be updated",
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "name": "update",
    "longname": "mStorage.update",
    "kind": "function",
    "memberof": "mStorage",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000853",
    "___s": true
  },
  {
    "comment": "/**\n * Native CRC32 implementation. Much (x100) faster compared to JS implemenattion\n * @param {Number} initialValue Must be 0 in case no initial value\n * @param {String|ArrayBuffer|ArrayBufferView} data Data to calculate CRC32. In case of string will be transformed to UFT8 before calculation\n * @returns {number}\n */",
    "meta": {
      "range": [
        2709,
        2758
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 88,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008459",
        "name": "ncrc32",
        "type": "FunctionDeclaration",
        "paramnames": [
          "initialValue",
          "data"
        ]
      }
    },
    "description": "Native CRC32 implementation. Much (x100) faster compared to JS implemenattion",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Must be 0 in case no initial value",
        "name": "initialValue"
      },
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer",
            "ArrayBufferView"
          ]
        },
        "description": "Data to calculate CRC32. In case of string will be transformed to UFT8 before calculation",
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "name": "ncrc32",
    "longname": "ncrc32",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R000796",
    "___s": true
  },
  {
    "comment": "/**\n * Send a notification to an entity participants\n * @param {string} entityName\n * @param {number} instanceID\n * @param {string|string[]} [roles] Zero, one or more participation roles.\n * @param {object} [message]\n * @param {UBNotifyParticipantsOptions} [options]\n * @return {number}\n */",
    "meta": {
      "range": [
        5985,
        6608
      ],
      "filename": "userNotifier.js",
      "lineno": 174,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100098230",
        "name": "notifyParticipants",
        "type": "FunctionDeclaration",
        "paramnames": [
          "entityName",
          "instanceID",
          "roles",
          "message",
          "options"
        ]
      },
      "vars": {
        "pptEntityName": "notifyParticipants~pptEntityName",
        "subjectIDs": "notifyParticipants~subjectIDs"
      }
    },
    "description": "Send a notification to an entity participants",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "instanceID"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "optional": true,
        "description": "Zero, one or more participation roles.",
        "name": "roles"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "message"
      },
      {
        "type": {
          "names": [
            "UBNotifyParticipantsOptions"
          ]
        },
        "optional": true,
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "name": "notifyParticipants",
    "longname": "notifyParticipants",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010350",
    "___s": true
  },
  {
    "comment": "/**\n * Send message to particular subject.\n *\n * @param {number|number[]|undefined} subjectIDs\n *   If not specified, will be passed to `Session.uData.userID`.\n *   subjectID of the message recipient: UnityBase `userID` OR `roleID` or `groupID`\n *   If ORG model is used, could also be `staffUnitID` or `departmentID` or `organizationID`,\n * @param {object} message\n *   The event data object to send, value is converted to JSON string before sending\n * @param {string} [subTopic]\n *   name of the notification source\n *   this should be unique name to be able for client to distinguish the source of notification message\n * @return {number}\n *   Event ID\n */",
    "meta": {
      "range": [
        2522,
        3442
      ],
      "filename": "userNotifier.js",
      "lineno": 77,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097945",
        "name": "notifyUser",
        "type": "FunctionDeclaration",
        "paramnames": [
          "subjectIDs",
          "message",
          "subTopic"
        ]
      },
      "vars": {
        "subjectIDs": "notifyUser~subjectIDs",
        "message.eventID": "message.eventID",
        "subjectID": "notifyUser~subjectID",
        "topic": "notifyUser~topic"
      }
    },
    "description": "Send message to particular subject.",
    "params": [
      {
        "type": {
          "names": [
            "number",
            "Array.<number>",
            "undefined"
          ]
        },
        "description": "If not specified, will be passed to <code>Session.uData.userID</code>.\n  subjectID of the message recipient: UnityBase <code>userID</code> OR <code>roleID</code> or <code>groupID</code>\n  If ORG model is used, could also be <code>staffUnitID</code> or <code>departmentID</code> or <code>organizationID</code>,",
        "name": "subjectIDs"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The event data object to send, value is converted to JSON string before sending",
        "name": "message"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "name of the notification source\n  this should be unique name to be able for client to distinguish the source of notification message",
        "name": "subTopic"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Event ID</p>"
      }
    ],
    "name": "notifyUser",
    "longname": "notifyUser",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010332",
    "___s": true
  },
  {
    "comment": "/**\n * Native SHA256 implementation. Much (x10) faster compared to JS implementation\n * @param {String|ArrayBuffer|ArrayBufferView} data Data to calculate SHA256. In case of string will be transformed to UFT8 before calculation\n * @returns {String} hexa string SHA256 representation\n */",
    "meta": {
      "range": [
        3047,
        3086
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 95,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008466",
        "name": "nsha256",
        "type": "FunctionDeclaration",
        "paramnames": [
          "data"
        ]
      }
    },
    "description": "Native SHA256 implementation. Much (x10) faster compared to JS implementation",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "ArrayBuffer",
            "ArrayBufferView"
          ]
        },
        "description": "Data to calculate SHA256. In case of string will be transformed to UFT8 before calculation",
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>hexa string SHA256 representation</p>"
      }
    ],
    "name": "nsha256",
    "longname": "nsha256",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R000797",
    "___s": true
  },
  {
    "comment": "/**\n     * Add provider to endpoint\n     * @param {String} name\n     * @param {Object} providerConfig\n     * @param {String} providerConfig.authUrl Provider's authorisation url\n     * @param {String} providerConfig.tokenUrl Provider's token url\n     * @param {String} providerConfig.userInfoUrl provider's userinfo url\n     * @param {String} [providerConfig.logoutUrl] Logout url\n     * @param {String} [providerConfig.userInfoHTTPMethod='GET'] Http method for userinfo request. Default GET\n     * @param {String} providerConfig.scope requested scopes delimited by '+' symbol\n     * @param {String} [providerConfig.nonce] nonce  TODO - generate random and cache in GlobalCache with expire\n     * @param {String} providerConfig.response_type response type. Must contain code. This module use code responce type.\n     * @param {String} providerConfig.client_id client_id. Get it from provider\n     * @param {String} providerConfig.client_secret client_secret. Get it from provider\n     * @param {Function} providerConfig.getCustomFABody Function, that returns custom text included to final html success/fail response\n     * @param {String} providerConfig.response_mode One of: form_post, fragment, query\n     * @param {Function} providerConfig.getOnFinishAction Function, that returns client-side code to be run after success/fail response from OpenID provider.\n     *  For example: `opener.$App.onFinishOpenIDAuth`. In case of success will be called with `{success: true, data: userData, secretWord: secretWord}`\n     *  In case of fail `{success: false}`\n     * @param {Function} providerConfig.getUserID Called with one 1 parameter - provider's response for userInfo request. Must return user ID from uba_user entity if user is authorised or null else\n     * @memberOf openIDEndpoint\n     */",
    "meta": {
      "range": [
        3881,
        4259
      ],
      "filename": "openIDConnect.js",
      "lineno": 89,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/openid-connect",
      "code": {
        "id": "astnode100076531",
        "name": "registerProvider",
        "type": "FunctionExpression"
      },
      "vars": {
        "providers[undefined]": "module:@unitybase/openid-connect~registerOpenIDEndpoint~providers.undefined]"
      }
    },
    "description": "Add provider to endpoint",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "name"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "providerConfig"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Provider's authorisation url",
        "name": "providerConfig.authUrl"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Provider's token url",
        "name": "providerConfig.tokenUrl"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "provider's userinfo url",
        "name": "providerConfig.userInfoUrl"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Logout url",
        "name": "providerConfig.logoutUrl"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'GET'",
        "description": "Http method for userinfo request. Default GET",
        "name": "providerConfig.userInfoHTTPMethod"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "requested scopes delimited by '+' symbol",
        "name": "providerConfig.scope"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "nonce  TODO - generate random and cache in GlobalCache with expire",
        "name": "providerConfig.nonce"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "response type. Must contain code. This module use code responce type.",
        "name": "providerConfig.response_type"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "client_id. Get it from provider",
        "name": "providerConfig.client_id"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "client_secret. Get it from provider",
        "name": "providerConfig.client_secret"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Function, that returns custom text included to final html success/fail response",
        "name": "providerConfig.getCustomFABody"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "One of: form_post, fragment, query",
        "name": "providerConfig.response_mode"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Function, that returns client-side code to be run after success/fail response from OpenID provider.\n For example: <code>opener.$App.onFinishOpenIDAuth</code>. In case of success will be called with <code>{success: true, data: userData, secretWord: secretWord}</code>\n In case of fail <code>{success: false}</code>",
        "name": "providerConfig.getOnFinishAction"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Called with one 1 parameter - provider's response for userInfo request. Must return user ID from uba_user entity if user is authorised or null else",
        "name": "providerConfig.getUserID"
      }
    ],
    "memberof": "openIDEndpoint",
    "name": "registerProvider",
    "longname": "openIDEndpoint.registerProvider",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R007475",
    "___s": true
  },
  {
    "comment": "/**\n * Sets properly values for org_staffunit.captions. Can be called from scheduler\n * @method updatePendingStaffUnitCaptions\n * @memberOf org_employeeonstaff_ns.prototype\n * @memberOfModule @unitybase/org\n * @published\n */",
    "meta": {
      "filename": "org_employeeonstaff.js",
      "lineno": 35,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {}
    },
    "description": "Sets properly values for org_staffunit.captions. Can be called from scheduler",
    "kind": "function",
    "name": "updatePendingStaffUnitCaptions",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/org",
        "value": "@unitybase/org"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "longname": "org_employeeonstaff_ns#updatePendingStaffUnitCaptions",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009936",
    "___s": true
  },
  {
    "comment": "/**\n * Updates all  multilingual captions for org_staffunit\n * @method updatestaffunitcaption\n * @memberOf org_employeeonstaff_ns.prototype\n * @memberOfModule @unitybase/org\n * @param {Number} staffUnitID\n */",
    "meta": {
      "filename": "org_employeeonstaff.js",
      "lineno": 14,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/org",
      "code": {}
    },
    "description": "Updates all  multilingual captions for org_staffunit",
    "kind": "function",
    "name": "updatestaffunitcaption",
    "memberof": "module:@unitybase/org~org_employeeonstaff_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/org",
        "value": "@unitybase/org"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "staffUnitID"
      }
    ],
    "longname": "org_employeeonstaff_ns#updatestaffunitcaption",
    "scope": "instance",
    "___id": "T000002R009927",
    "___s": true
  },
  {
    "kind": "package",
    "longname": "package:undefined",
    "files": [
      "/home/andrey/dev/ubjs/packages/base/FileBasedStoreLoader.js",
      "/home/andrey/dev/ubjs/packages/base/ServerRepository.js",
      "/home/andrey/dev/ubjs/packages/base/SyncConnection.js",
      "/home/andrey/dev/ubjs/packages/base/argv.js",
      "/home/andrey/dev/ubjs/packages/base/base.js",
      "/home/andrey/dev/ubjs/packages/base/csv1.js",
      "/home/andrey/dev/ubjs/packages/base/dataLoader.js",
      "/home/andrey/dev/ubjs/packages/base/options.js",
      "/home/andrey/dev/ubjs/packages/base/uba_common.js",
      "/home/andrey/dev/ubjs/packages/base/worker.js",
      "/home/andrey/dev/ubjs/packages/stubs/UB.js",
      "/home/andrey/dev/ubjs/packages/stubs/_UBCommonGlobals-stub.js",
      "/home/andrey/dev/ubjs/packages/stubs/_UBServerThreadGlobals-stub.js",
      "/home/andrey/dev/ubjs/packages/stubs/assert.js",
      "/home/andrey/dev/ubjs/packages/stubs/buffer.js",
      "/home/andrey/dev/ubjs/packages/stubs/child_process.js",
      "/home/andrey/dev/ubjs/packages/stubs/console.js",
      "/home/andrey/dev/ubjs/packages/stubs/crypto.js",
      "/home/andrey/dev/ubjs/packages/stubs/events.js",
      "/home/andrey/dev/ubjs/packages/stubs/fs.js",
      "/home/andrey/dev/ubjs/packages/stubs/http.js",
      "/home/andrey/dev/ubjs/packages/stubs/https.js",
      "/home/andrey/dev/ubjs/packages/stubs/module.js",
      "/home/andrey/dev/ubjs/packages/stubs/net.js",
      "/home/andrey/dev/ubjs/packages/stubs/os.js",
      "/home/andrey/dev/ubjs/packages/stubs/path.js",
      "/home/andrey/dev/ubjs/packages/stubs/querystring.js",
      "/home/andrey/dev/ubjs/packages/stubs/stream.js",
      "/home/andrey/dev/ubjs/packages/stubs/string_decoder.js",
      "/home/andrey/dev/ubjs/packages/stubs/synode.js",
      "/home/andrey/dev/ubjs/packages/stubs/timers.js",
      "/home/andrey/dev/ubjs/packages/stubs/tty.js",
      "/home/andrey/dev/ubjs/packages/stubs/url.js",
      "/home/andrey/dev/ubjs/packages/stubs/util.js",
      "/home/andrey/dev/ubjs/packages/stubs/vm.js",
      "/home/andrey/dev/ubjs/packages/stubs/zlib.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/CustomRepository.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/LocalDataStore.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/UBDomain.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/UBSession.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/_UBQL.js",
      "/home/andrey/dev/ubjs/packages/cs-shared/cs-shared.js",
      "/home/andrey/dev/ubjs/packages/blob-stores/blobStoreCustom.js",
      "/home/andrey/dev/ubjs/packages/blob-stores/blobStores.js",
      "/home/andrey/dev/ubjs/packages/blob-stores/fileSystemBlobStore.js",
      "/home/andrey/dev/ubjs/packages/blob-stores/fileSystemPDFBlobStore.js",
      "/home/andrey/dev/ubjs/packages/blob-stores/mdbBlobStore.js",
      "/home/andrey/dev/ubjs/packages/ub/TubDataStore.js",
      "/home/andrey/dev/ubjs/packages/ub/_UB_entities.js",
      "/home/andrey/dev/ubjs/packages/ub/modelUB.js",
      "/home/andrey/dev/ubjs/packages/uba/_UBA_entities.js",
      "/home/andrey/dev/ubjs/packages/uba/onUserLogin.js",
      "/home/andrey/dev/ubjs/packages/uba/uba.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_als.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_audit.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_auditTrail.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_els.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_grouprole.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_otp.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_role.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_user.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_usercertificate.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_usergroup.js",
      "/home/andrey/dev/ubjs/packages/uba/uba_userrole.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/App.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/DBConnections.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/HTTPRequest.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/HTTPResponse.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/RLS.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/Session.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/endpoints.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/httpUtils.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/i18n.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/metaMerge.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/modelLoader.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/onlyOfficeEndpoints.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/ubErrors.js",
      "/home/andrey/dev/ubjs/packages/ub/modules/web-sockets.js",
      "/home/andrey/dev/ubjs/packages/ubcli/bin/ubcli.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/autotest.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/checkServerNotStarted.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/createCodeInsightHelper.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/createStore.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/ftsReindex.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/generateDDL.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/generateDoc.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/generateModels.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/generateNginxCfg.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/initDB.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/initialize.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/meta-tr.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/prepareGZIP.js",
      "/home/andrey/dev/ubjs/packages/ubcli/lib/upgradeConfig.js",
      "/home/andrey/dev/ubjs/packages/http-proxy/HttpProxy.js",
      "/home/andrey/dev/ubjs/packages/com-bridge/UBComBridge.js",
      "/home/andrey/dev/ubjs/packages/mailer/UBMail.js",
      "/home/andrey/dev/ubjs/packages/mailer/_UBMailClasses.js",
      "/home/andrey/dev/ubjs/packages/openid-connect/openIDConnect.js",
      "/home/andrey/dev/ubjs/packages/compressors/UBCompressors.js",
      "/home/andrey/dev/ubjs/packages/ubq/_UBQ_entities.js",
      "/home/andrey/dev/ubjs/packages/ubq/ubq.js",
      "/home/andrey/dev/ubjs/packages/ubq/ubqFTSJob.js",
      "/home/andrey/dev/ubjs/packages/ubq/ubqMailJob.js",
      "/home/andrey/dev/ubjs/packages/ubq/ubq_messages.js",
      "/home/andrey/dev/ubjs/packages/ubq/ubq_scheduler.js",
      "/home/andrey/dev/ubjs/packages/ubs/_UBS_entities.js",
      "/home/andrey/dev/ubjs/packages/ubs/_wsThreadInitialization.js",
      "/home/andrey/dev/ubjs/packages/ubs/rls.ubs_filter.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_filter.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_globalCache.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_message.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_message_edit.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_message_recipient.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_numcounter.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_numcounterreserv.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_report.js",
      "/home/andrey/dev/ubjs/packages/ubs/ubs_settings.js",
      "/home/andrey/dev/ubjs/packages/cdn/_CDN_entities.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_adminunit.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_bank.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_contact.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_contacttype.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_corrindex.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_currency.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_orgaccount.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_organization.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_person.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_profession.js",
      "/home/andrey/dev/ubjs/packages/cdn/cdn_region.js",
      "/home/andrey/dev/ubjs/packages/ubm/_UBM_entities.js",
      "/home/andrey/dev/ubjs/packages/ubm/ubm.js",
      "/home/andrey/dev/ubjs/packages/ubm/ubm_diagram.js",
      "/home/andrey/dev/ubjs/packages/ubm/ubm_form.js",
      "/home/andrey/dev/ubjs/packages/org/_ORG_entities.js",
      "/home/andrey/dev/ubjs/packages/org/org.js",
      "/home/andrey/dev/ubjs/packages/org/org_department.js",
      "/home/andrey/dev/ubjs/packages/org/org_employee.js",
      "/home/andrey/dev/ubjs/packages/org/org_employeeonstaff.js",
      "/home/andrey/dev/ubjs/packages/org/org_orgaccount.js",
      "/home/andrey/dev/ubjs/packages/org/org_organization.js",
      "/home/andrey/dev/ubjs/packages/org/org_profession.js",
      "/home/andrey/dev/ubjs/packages/org/org_staffunit.js",
      "/home/andrey/dev/ubjs/packages/org/org_unit.js",
      "/home/andrey/dev/ubjs/packages/ubs/modules/UBServerReport.js",
      "/home/andrey/dev/bpm/packages/messaging/exchange/endpoint-exchange.js",
      "/home/andrey/dev/bpm/packages/messaging/exchange/index.js",
      "/home/andrey/dev/bpm/packages/messaging/exchange/messageHandlers.js",
      "/home/andrey/dev/bpm/packages/messaging/notification/endpoint-notification.js",
      "/home/andrey/dev/bpm/packages/messaging/notification/index.js",
      "/home/andrey/dev/bpm/packages/messaging/notification/notificationMixin.js",
      "/home/andrey/dev/bpm/packages/messaging/notification/tokenIssuer.js",
      "/home/andrey/dev/bpm/packages/messaging/notification/userNotifier.js",
      "/home/andrey/dev/bpm/packages/messaging/messaging.js"
    ],
    "___id": "T000002R010366",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {Object} parsedSQLResult\n * @property {string} parsedSql\n * @property {Array} parsedParams\n */",
    "meta": {
      "filename": "DBConnections.js",
      "lineno": 27,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "typedef",
    "name": "parsedSQLResult",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "parsedSql"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "name": "parsedParams"
      }
    ],
    "longname": "parsedSQLResult",
    "scope": "global",
    "___id": "T000002R005812",
    "___s": true
  },
  {
    "comment": "/**\n * Current process (ub executable)\n * @namespace\n * @global\n */",
    "meta": {
      "range": [
        8975,
        8987
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 270,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008637",
        "name": "process",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Current process (ub executable)",
    "kind": "namespace",
    "scope": "global",
    "name": "process",
    "longname": "process",
    "params": [],
    "___id": "T000002R000820",
    "___s": true
  },
  {
    "comment": "/**\n * The full path to the UB executable\n * @type {string}\n * @readonly\n */",
    "meta": {
      "range": [
        9065,
        9085
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 276,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008641",
        "name": "process.binPath",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "The full path to the UB executable",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "binPath",
    "longname": "process.binPath",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000821",
    "___s": true
  },
  {
    "comment": "/**\n * The path to the application configuration file\n * @type {String}\n * @readonly\n */",
    "meta": {
      "range": [
        9176,
        9199
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 283,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008647",
        "name": "process.configPath",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "The path to the application configuration file",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "configPath",
    "longname": "process.configPath",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000822",
    "___s": true
  },
  {
    "comment": "/**\n * === 1 if server executed with `-dev` command line switch.\n * @type {Number}\n * @readonly\n */",
    "meta": {
      "range": [
        9687,
        9706
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 311,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008671",
        "name": "process.isDebug",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "=== 1 if server executed with <code>-dev</code> command line switch.",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "isDebug",
    "longname": "process.isDebug",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000826",
    "___s": true
  },
  {
    "comment": "/**\n * For server-side thread === 1, else (client thread) ===  0\n * @type {Number}\n * @readonly\n */",
    "meta": {
      "range": [
        9301,
        9321
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 290,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008653",
        "name": "process.isServer",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "For server-side thread === 1, else (client thread) ===  0",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "isServer",
    "longname": "process.isServer",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000823",
    "___s": true
  },
  {
    "comment": "/**\n * When WebSocket is enabled === 1 else not defined\n * @type {Number}\n * @readonly\n */",
    "meta": {
      "range": [
        9555,
        9585
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 304,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008665",
        "name": "process.isWebSocketEnabled",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "When WebSocket is enabled === 1 else not defined",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "isWebSocketEnabled",
    "longname": "process.isWebSocketEnabled",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000825",
    "___s": true
  },
  {
    "comment": "/**\n * In case this is WebSocket server-side thread === 1 else not defined\n * @type {Number}\n * @readonly\n */",
    "meta": {
      "range": [
        9433,
        9462
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 297,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008659",
        "name": "process.isWebSocketServer",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "In case this is WebSocket server-side thread === 1 else not defined",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "isWebSocketServer",
    "longname": "process.isWebSocketServer",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000824",
    "___s": true
  },
  {
    "comment": "/**\n * The UB process startup mode. One of \"Console\", \"CmdLine\"\n * @type {string}\n * @readonly\n */",
    "meta": {
      "range": [
        9807,
        9838
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 318,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008677",
        "name": "process.startupMode",
        "type": "Literal",
        "value": "CmdLine",
        "paramnames": []
      }
    },
    "description": "The UB process startup mode. One of &quot;Console&quot;, &quot;CmdLine&quot;",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "startupMode",
    "longname": "process.startupMode",
    "kind": "member",
    "memberof": "process",
    "scope": "static",
    "___id": "T000002R000827",
    "___s": true
  },
  {
    "comment": "/** @type {AppCustomSettingRabbitMQ} */",
    "meta": {
      "range": [
        255,
        339
      ],
      "filename": "tokenIssuer.js",
      "lineno": 7,
      "columnno": 6,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {
        "id": "astnode100097398",
        "name": "rabbitCustomSettings",
        "type": "LogicalExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "AppCustomSettingRabbitMQ"
      ]
    },
    "name": "rabbitCustomSettings",
    "longname": "rabbitCustomSettings",
    "kind": "constant",
    "scope": "global",
    "params": [],
    "___id": "T000002R010284",
    "___s": true
  },
  {
    "comment": "/**\n * Remove comments from JSON string (actually replace all comment content with ' ')\n * @param {String} JSONString String to remove comments from\n * @return {String} JSON string without comment's\n */",
    "meta": {
      "range": [
        1335,
        1382
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 38,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008429",
        "name": "removeCommentsFromJSON",
        "type": "FunctionDeclaration",
        "paramnames": [
          "JSONString"
        ]
      }
    },
    "description": "Remove comments from JSON string (actually replace all comment content with ' ')",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "String to remove comments from",
        "name": "JSONString"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>JSON string without comment's</p>"
      }
    ],
    "name": "removeCommentsFromJSON",
    "longname": "removeCommentsFromJSON",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R000789",
    "___s": true
  },
  {
    "comment": "/**\r\n     * Load a module. Acts like a <a href=\"http://nodejs.org/api/modules.html\">Node JS</a> require, with 1 difference:\r\n     *\r\n     *   - in case we run in production mode (`!process.isDebug`) and minimized version of main module exists, it will be loaded.\r\n     *     By \"minimized version\" we mean package.json `main` entry with `.min.js` extension <br>\r\n     *\r\n     *  *In case you need to debug from there module is loaded set OS Environment variable*\r\n     *  `>SET NODE_DEBUG=modules` *and restart server - require will put to debug log all information about how module are loaded.* Do not do this on production, of course :)\r\n     *\r\n     * @global\r\n     * @method\r\n     * @param {String} moduleName\r\n     * @returns {*}\r\n     */",
    "meta": {
      "range": [
        2199,
        2240
      ],
      "filename": "synode.js",
      "lineno": 66,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100030829",
        "name": "global.require",
        "type": "MemberExpression",
        "value": "Module.prototype.require",
        "paramnames": []
      }
    },
    "description": "<p>Load a module. Acts like a <a href=\"http://nodejs.org/api/modules.html\">Node JS</a> require, with 1 difference:</p>\n<ul>\n<li><p>in case we run in production mode (<code>!process.isDebug</code>) and minimized version of main module exists, it will be loaded.\nBy &quot;minimized version&quot; we mean package.json <code>main</code> entry with <code>.min.js</code> extension <br></p>\n<p><em>In case you need to debug from there module is loaded set OS Environment variable</em>\n<code>&gt;SET NODE_DEBUG=modules</code> <em>and restart server - require will put to debug log all information about how module are loaded.</em> Do not do this on production, of course :)</p>\n</li>\n</ul>",
    "scope": "global",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "moduleName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "require",
    "longname": "require",
    "___id": "T000002R002671",
    "___s": true
  },
  {
    "comment": "/**\n * @namespace\n */",
    "meta": {
      "range": [
        280,
        301
      ],
      "filename": "RLS.js",
      "lineno": 12,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062033",
        "name": "RLS",
        "type": "AssignmentExpression",
        "value": "global.RLS"
      }
    },
    "kind": "namespace",
    "name": "RLS",
    "longname": "RLS",
    "scope": "global",
    "params": [],
    "___id": "T000002R005951",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Provide Row Level Security.\n *\n * Will override `select` method and add a SQL expression returned by function specified in `rls.expression`\n * to `where` section for each `select` operation.\n *\n * Scenarios where RLS might be useful:\n *    Show only tasks assigned to a current user, disallow to see any other tasks\n *    Show only menu items, available to the roles of the current ser\n *    Show only documents, where the current user is a participant\n *\n * See tutorial {@tutorial mixin_rls} for details.\n * @mixin\n */",
    "meta": {
      "range": [
        6761,
        6771
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 248,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008817",
        "name": "rls",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin. Provide Row Level Security.</p>\n<p>Will override <code>select</code> method and add a SQL expression returned by function specified in <code>rls.expression</code>\nto <code>where</code> section for each <code>select</code> operation.</p>\n<p>Scenarios where RLS might be useful:\n   Show only tasks assigned to a current user, disallow to see any other tasks\n   Show only menu items, available to the roles of the current ser\n   Show only documents, where the current user is a participant</p>\n<p>See tutorial {@tutorial mixin_rls} for details.",
    "kind": "mixin",
    "name": "rls",
    "longname": "rls",
    "scope": "global",
    "params": [],
    "___id": "T000002R000863",
    "___s": true
  },
  {
    "comment": "/**\n * is current ( Session.userID) user have role with name groupname\n * @param groupname group name from uba_role\n * @return {*}\n */",
    "meta": {
      "range": [
        1354,
        1598
      ],
      "filename": "RLS.js",
      "lineno": 50,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062136",
        "name": "RLS.currentUserInGroup",
        "type": "FunctionExpression",
        "paramnames": [
          "sender",
          "groupname"
        ]
      },
      "vars": {
        "groupID": "RLS.currentUserInGroup~groupID"
      }
    },
    "description": "is current ( Session.userID) user have role with name groupname",
    "params": [
      {
        "description": "group name from uba_role",
        "name": "groupname"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "currentUserInGroup",
    "longname": "RLS.currentUserInGroup",
    "kind": "function",
    "memberof": "RLS",
    "scope": "static",
    "___id": "T000002R005962",
    "___s": true
  },
  {
    "comment": "/**\n * Dirty hack for federalized entities (for example ubs_numcounter) work without FED model.\n *\n * FED model define good realization of RLS.federalize - this is only stub\n */",
    "meta": {
      "range": [
        238,
        287
      ],
      "filename": "rls.ubs_filter.js",
      "lineno": 9,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {
        "id": "astnode100080992",
        "name": "RLS.federalize",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Dirty hack for federalized entities (for example ubs_numcounter) work without FED model.</p>\n<p>FED model define good realization of RLS.federalize - this is only stub",
    "name": "federalize",
    "longname": "RLS.federalize",
    "kind": "function",
    "memberof": "RLS",
    "scope": "static",
    "___id": "T000002R008060",
    "___s": true
  },
  {
    "comment": "/**\n*   Check user in adm subtable\n*   no user group check performed!\n*/",
    "meta": {
      "range": [
        1673,
        1857
      ],
      "filename": "RLS.js",
      "lineno": 66,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062180",
        "name": "RLS.userInAdmSubtable",
        "type": "FunctionExpression",
        "paramnames": [
          "sender",
          "user"
        ]
      }
    },
    "description": "Check user in adm subtable\n  no user group check performed!",
    "name": "userInAdmSubtable",
    "longname": "RLS.userInAdmSubtable",
    "kind": "function",
    "memberof": "RLS",
    "scope": "static",
    "___id": "T000002R005965",
    "___s": true
  },
  {
    "comment": "/**\n * todo - OPTIMIZE using role cache\n * @param user\n * @param groupname\n * @return {String}\n */",
    "meta": {
      "range": [
        1013,
        1217
      ],
      "filename": "RLS.js",
      "lineno": 41,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062120",
        "name": "RLS.userInGroup",
        "type": "FunctionExpression",
        "paramnames": [
          "user",
          "groupname"
        ]
      }
    },
    "description": "todo - OPTIMIZE using role cache",
    "params": [
      {
        "name": "user"
      },
      {
        "name": "groupname"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "userInGroup",
    "longname": "RLS.userInGroup",
    "kind": "function",
    "memberof": "RLS",
    "scope": "static",
    "___id": "T000002R005961",
    "___s": true
  },
  {
    "comment": "/** Check user or any of user groups in adm subtable\n/*  xmax using ORACLE\n* _todo check oracle syntax!!\n*/",
    "meta": {
      "range": [
        2067,
        2450
      ],
      "filename": "RLS.js",
      "lineno": 78,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062212",
        "name": "RLS.userOrUserGroupInAdmSubtable",
        "type": "FunctionExpression",
        "paramnames": [
          "sender",
          "user"
        ]
      },
      "vars": {
        "result": "RLS.userOrUserGroupInAdmSubtable~result"
      }
    },
    "description": "Check user or any of user groups in adm subtable\n/*  xmax using ORACLE\n_todo check oracle syntax!!",
    "name": "userOrUserGroupInAdmSubtable",
    "longname": "RLS.userOrUserGroupInAdmSubtable",
    "kind": "function",
    "memberof": "RLS",
    "scope": "static",
    "___id": "T000002R005967",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Server side repository.\n * Overrided {@link ServerRepository#select} method return initialized {@link TubDataStore}\n *\n * Usually is created by using one of the fabric functions:\n *\n *   - {@link UB.Repository UB.Repository} for entities from this server instance\n *   - {@link SyncConnection#Repository conn.Repository} for access remote UB server\n *\n\n     let store = UB.Repository('my_entity')\n       .attrs('id')\n       .where('code', 'in', ['1', '2', '3'])  // code in ('1', '2', '3')\n       .where('name', 'contains', 'Homer') // name like '%homer%'\n       .where('birtday', 'geq', new Date()) //(birtday >= '2012-01-01')\n       .where('birtday', 'leq', new Date() + 10) // AND (birtday <= '2012-01-02')\n       .where('[age] -10', '>=', {age: 15}, 'byAge') // (age + 10 >= 15)\n       .where('', 'match', 'myvalue') // perform full text search for entity (require fts mixin)\n       .logic('(byStrfType OR bySrfKindID)AND(dasdsa)')\n       .select()\n\n * @extends CustomRepository\n */",
    "meta": {
      "range": [
        1259,
        6363
      ],
      "filename": "ServerRepository.js",
      "lineno": 36,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001069",
        "name": "ServerRepository",
        "type": "ClassDeclaration",
        "paramnames": [
          "connection",
          "entityName"
        ]
      }
    },
    "classdesc": "<p>Server side repository.\nOverrided {@link ServerRepository#select} method return initialized {@link TubDataStore}</p>\n<p>Usually is created by using one of the fabric functions:</p>\n<ul>\n<li>{@link UB.Repository UB.Repository} for entities from this server instance</li>\n<li>{@link SyncConnection#Repository conn.Repository} for access remote UB server</li>\n</ul>\n<pre class=\"prettyprint source\"><code> let store = UB.Repository('my_entity')\n   .attrs('id')\n   .where('code', 'in', ['1', '2', '3'])  // code in ('1', '2', '3')\n   .where('name', 'contains', 'Homer') // name like '%homer%'\n   .where('birtday', 'geq', new Date()) //(birtday >= '2012-01-01')\n   .where('birtday', 'leq', new Date() + 10) // AND (birtday &lt;= '2012-01-02')\n   .where('[age] -10', '>=', {age: 15}, 'byAge') // (age + 10 >= 15)\n   .where('', 'match', 'myvalue') // perform full text search for entity (require fts mixin)\n   .logic('(byStrfType OR bySrfKindID)AND(dasdsa)')\n   .select()</code></pre>",
    "augments": [
      "CustomRepository"
    ],
    "name": "ServerRepository",
    "longname": "ServerRepository",
    "kind": "class",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "SyncConnection",
            "null"
          ]
        },
        "description": "The remote server connection or <code>null</code> for internal server thread",
        "name": "connection"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "name of Entity we create for",
        "name": "entityName"
      }
    ],
    "___id": "T000002R000079",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds attribute(s) or expression(s).\n   *\n   * Can take expression as a field. In this case entity attribute name must be wrapped into [] brackets.\n   * In case of client-side execution the only valid expression is one of:\n   *\n   * - **'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE'**\n   *\n   * @example\n\n // chaining\n UB.Repository('uba_user').attrs('ID').attrs('name', 'firstName').attrs('disabled').selectAsObject()\n\n // calculate sum over some attribute\n UB.Repository('uba_user').attrs('SUM([disabled])').where('disabled', '=', true).selectScalar()\n\n // In case of server-side execution any valid SQL expression is accepted by attr:\n UB.Repository('uba_user').attrs('[ID] / 100 + 1').selectAsArray()\n\n // JOIN `uba_userrole.roleID` is a attribute of type Entity. ORM choose `left join` in case attribute is `allowNull: true`\n UB.Repository('uba_userrole').attrs(['userID', 'userID.name']).selectAsObject()\n\n // todo Define a way to join for UNITY (@)\n\n // get values for attribute of type MANY\n UB.Repository('tst_maindata')\n   .attrs('ID', 'manyValue', 'manyValue.caption')\n   .where('code', '=', 'Код1')\n   .selectAsObject({'manyValue.caption': 'captions'})\n // result is `[{\"ID\":331947938939292,\"manyValue\":\"1,2\",\"captions\":\"caption 10,caption 20\"}]`\n\n // Get attribute value for multilaguage (\"isMultiLang\": true in meta file) attribute other when current session language\n UB.Repository('org_employee').attrs(['ID', 'lastName_en^']).selectAsObject()\n\n   * @param {string|Array<string>} attrs\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        3815,
        4075
      ],
      "filename": "CustomRepository.js",
      "lineno": 136,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039217",
        "name": "CustomRepository#attrs",
        "type": "MethodDefinition",
        "paramnames": [
          "attrs"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds attribute(s) or expression(s).</p>\n<p>Can take expression as a field. In this case entity attribute name must be wrapped into [] brackets.\nIn case of client-side execution the only valid expression is one of:</p>\n<ul>\n<li><strong>'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE'</strong></li>\n</ul>",
    "examples": [
      "// chaining\n UB.Repository('uba_user').attrs('ID').attrs('name', 'firstName').attrs('disabled').selectAsObject()\n\n // calculate sum over some attribute\n UB.Repository('uba_user').attrs('SUM([disabled])').where('disabled', '=', true).selectScalar()\n\n // In case of server-side execution any valid SQL expression is accepted by attr:\n UB.Repository('uba_user').attrs('[ID] / 100 + 1').selectAsArray()\n\n // JOIN `uba_userrole.roleID` is a attribute of type Entity. ORM choose `left join` in case attribute is `allowNull: true`\n UB.Repository('uba_userrole').attrs(['userID', 'userID.name']).selectAsObject()\n\n // todo Define a way to join for UNITY (@)\n\n // get values for attribute of type MANY\n UB.Repository('tst_maindata')\n   .attrs('ID', 'manyValue', 'manyValue.caption')\n   .where('code', '=', 'Код1')\n   .selectAsObject({'manyValue.caption': 'captions'})\n // result is `[{\"ID\":331947938939292,\"manyValue\":\"1,2\",\"captions\":\"caption 10,caption 20\"}]`\n\n // Get attribute value for multilaguage (\"isMultiLang\": true in meta file) attribute other when current session language\n UB.Repository('org_employee').attrs(['ID', 'lastName_en^']).selectAsObject()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "name": "attrs",
        "variable": true
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "attrs",
    "longname": "ServerRepository#attrs",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#attrs",
    "inherited": true,
    "___id": "T000002R010768",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#attrs CustomRepository.attrs}.\n   * Calls `attrs` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @example\n\n   let isPessimisticLock = !!UB.connection.domain.get('uba_user').attributes.mi_modifyDate\n   // with whereIf\n   let repo = UB.Repository('uba_user').attrs('ID').attrsIf(isPessimisticLock, 'mi_modifyDate')\n   //without whereIf\n   let repo = UB.Repository('uba_user').attrs('ID')\n   if (isPessimisticLock) repo = repo.attrs('mi_modifyDate')\n\n   * @param {*} addingCondition Attributes will be added only in case addingCondition is truthy\n   * @param {string|Array<string>} attrs\n   * @return {CustomRepository}attrs\n   */",
    "meta": {
      "range": [
        4832,
        4951
      ],
      "filename": "CustomRepository.js",
      "lineno": 165,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039276",
        "name": "CustomRepository#attrsIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "attrs"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#attrs CustomRepository.attrs}.\nCalls <code>attrs</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "examples": [
      "let isPessimisticLock = !!UB.connection.domain.get('uba_user').attributes.mi_modifyDate\n   // with whereIf\n   let repo = UB.Repository('uba_user').attrs('ID').attrsIf(isPessimisticLock, 'mi_modifyDate')\n   //without whereIf\n   let repo = UB.Repository('uba_user').attrs('ID')\n   if (isPessimisticLock) repo = repo.attrs('mi_modifyDate')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Attributes will be added only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "name": "attrs",
        "variable": true
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "<p>attrs</p>"
      }
    ],
    "name": "attrsIf",
    "longname": "ServerRepository#attrsIf",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#attrsIf",
    "inherited": true,
    "___id": "T000002R010769",
    "___s": true
  },
  {
    "comment": "/**\n   * Creates a clone of this repository\n   * @example\n\n   let repo1 = UB.Repository('uba_user').attrs('ID', 'code').where('ID', '>', 15, 'byID')\n   let repo2 = repo1.clone()\n   repo1.orderBy('code')\n   repo2.attrs('name').where('ID', '>', 100, 'byID')\n   repo1.selectAsObject() // return ordered users with ID > 15\n   repo2.selectAsObject() // return unordered users with their names and ID > 100\n\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        28279,
        28322
      ],
      "filename": "CustomRepository.js",
      "lineno": 803,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040340",
        "name": "CustomRepository#clone",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Creates a clone of this repository",
    "examples": [
      "let repo1 = UB.Repository('uba_user').attrs('ID', 'code').where('ID', '>', 15, 'byID')\n   let repo2 = repo1.clone()\n   repo1.orderBy('code')\n   repo2.attrs('name').where('ID', '>', 100, 'byID')\n   repo1.selectAsObject() // return ordered users with ID > 15\n   repo2.selectAsObject() // return unordered users with their names and ID > 100"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "clone",
    "longname": "ServerRepository#clone",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "params": [],
    "inherits": "CustomRepository#clone",
    "inherited": true,
    "___id": "T000002R010787",
    "___s": true
  },
  {
    "comment": "/**\n   * If current repository is used as a sub-query for `exists`, `notExists`, `in` or `notIn` conditions\n   * [correlation](https://en.wikipedia.org/wiki/Correlated_subquery) with a master repository will added\n   *\n   * @param {string} subQueryAttribute\n   * @param {string} masterAttribute\n   * @param {WhereCondition|String} [condition=eq] A subset from WhereCondition list applicable for correlation join\n   * @param {string} [clauseName] Optional clause name to be used in {@link class:CustomRepository#logic logic}.\n   *   If not passed unique clause names ('c1', 'c2', ...) where will be generated\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        14421,
        14768
      ],
      "filename": "CustomRepository.js",
      "lineno": 379,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039763",
        "name": "CustomRepository#correlation",
        "type": "MethodDefinition",
        "paramnames": [
          "subQueryAttribute",
          "masterAttribute",
          "condition",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "If current repository is used as a sub-query for <code>exists</code>, <code>notExists</code>, <code>in</code> or <code>notIn</code> conditions\n<a href=\"https://en.wikipedia.org/wiki/Correlated_subquery\">correlation</a> with a master repository will added",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "subQueryAttribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "masterAttribute"
      },
      {
        "type": {
          "names": [
            "WhereCondition",
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "eq",
        "description": "A subset from WhereCondition list applicable for correlation join",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {@link class:CustomRepository#logic logic}.\n  If not passed unique clause names ('c1', 'c2', ...) where will be generated",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "correlation",
    "longname": "ServerRepository#correlation",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#correlation",
    "inherited": true,
    "___id": "T000002R010774",
    "___s": true
  },
  {
    "comment": "/**\n   *  Adds where condition with `EXISTS` sub-query. Inside a sub-query there are two macros:\n   *\n   *  - `{master}` will be replaced by master entity alias\n   *  - `{self}` will be replaced by sub-query entity alias\n   *\n   * @example\n\nUB.Repository('uba_user').attrs(['ID', 'name']) //select users\n  // who are not disabled\n  .where('disabled', '=', 0)\n  // which allowed access from Kiev\n  .where('trustedIP', 'in',\n   UB.Repository('geo_ip').attrs('IPAddr')\n     .where('city', '=', 'Kiev')\n  )\n  // who do not login during this year\n  .notExists(\n   UB.Repository('uba_audit')\n     .correlation('actionUser', 'name')  // here we link to uba_user.name\n     .where('actionTime', '>', new Date(2016, 1, 1))\n     .where('actionType', '=', 'LOGIN')\n  )\n  // but modify some data\n  .exists(\n   UB.Repository('uba_auditTrail')\n     .correlation('actionUser', 'ID') // here we link to uba_user.ID\n     .where('actionTime', '>', new Date(2016, 1, 1))\n  )\n  .select()\n\n   * @param {CustomRepository} subRepository  Repository, what represent a sub-query to be execute inside EXISTS statement\n   * @param {string} [clauseName] Optional clause name\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        13232,
        13335
      ],
      "filename": "CustomRepository.js",
      "lineno": 353,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039733",
        "name": "CustomRepository#exists",
        "type": "MethodDefinition",
        "paramnames": [
          "subRepository",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds where condition with <code>EXISTS</code> sub-query. Inside a sub-query there are two macros:</p>\n<ul>\n<li><code>{master}</code> will be replaced by master entity alias</li>\n<li><code>{self}</code> will be replaced by sub-query entity alias</li>\n</ul>",
    "examples": [
      "UB.Repository('uba_user').attrs(['ID', 'name']) //select users\n  // who are not disabled\n  .where('disabled', '=', 0)\n  // which allowed access from Kiev\n  .where('trustedIP', 'in',\n   UB.Repository('geo_ip').attrs('IPAddr')\n     .where('city', '=', 'Kiev')\n  )\n  // who do not login during this year\n  .notExists(\n   UB.Repository('uba_audit')\n     .correlation('actionUser', 'name')  // here we link to uba_user.name\n     .where('actionTime', '>', new Date(2016, 1, 1))\n     .where('actionType', '=', 'LOGIN')\n  )\n  // but modify some data\n  .exists(\n   UB.Repository('uba_auditTrail')\n     .correlation('actionUser', 'ID') // here we link to uba_user.ID\n     .where('actionTime', '>', new Date(2016, 1, 1))\n  )\n  .select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "Repository, what represent a sub-query to be execute inside EXISTS statement",
        "name": "subRepository"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "exists",
    "longname": "ServerRepository#exists",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#exists",
    "inherited": true,
    "___id": "T000002R010772",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds grouping\n   * @example\n\nUB.Repository('my_entity').attrs('ID')\n .groupBy('code')\nUB.Repository('uba_user').attrs('disabled')\n .groupBy('disabled').select()\nUB.Repository('uba_user').attrs(['disabled','uPassword','COUNT([ID])'])\n .groupBy(['disabled','uPassword']).select()\n\n   * @param {string|Array<string>} attr Grouped attribute(s)\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        19289,
        19480
      ],
      "filename": "CustomRepository.js",
      "lineno": 524,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039973",
        "name": "CustomRepository#groupBy",
        "type": "MethodDefinition",
        "paramnames": [
          "attr"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds grouping",
    "examples": [
      "UB.Repository('my_entity').attrs('ID')\n .groupBy('code')\nUB.Repository('uba_user').attrs('disabled')\n .groupBy('disabled').select()\nUB.Repository('uba_user').attrs(['disabled','uPassword','COUNT([ID])'])\n .groupBy(['disabled','uPassword']).select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string",
            "Array.<string>"
          ]
        },
        "description": "Grouped attribute(s)",
        "name": "attr"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "groupBy",
    "longname": "ServerRepository#groupBy",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#groupBy",
    "inherited": true,
    "___id": "T000002R010780",
    "___s": true
  },
  {
    "comment": "/**\n   * Force `where expressions` to be used in join part of SQL statement instead of where part. Applicable only for not cached entities\n   * @exapmle\n\n// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)\n\n   * @param {string} whereItemName name of where item to use in join.\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        16446,
        16524
      ],
      "filename": "CustomRepository.js",
      "lineno": 432,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039826",
        "name": "CustomRepository#join",
        "type": "MethodDefinition",
        "paramnames": [
          "whereItemName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Force <code>where expressions</code> to be used in join part of SQL statement instead of where part. Applicable only for not cached entities",
    "tags": [
      {
        "originalTitle": "exapmle",
        "title": "exapmle",
        "text": "// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)",
        "value": "// will generate\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON (B.instanceID = A.ID and B.ubUser = 10)\n// instead of\n// SELECT A.ID, B.code FROM tst_document A LEFT JOIN tst_category B\n//    ON B.instanceID = A.ID\n//    WHERE B.ubUser = 10\nUB.Repository('tst_document').attrs(['ID', '[caregory.code]'])\n .where('[caregory.ubUser]', '=', 10, 'wantInJoin')\n .join('wantInJoin')\n .selectAsObject().done(UB.logDebug)"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "name of where item to use in join.",
        "name": "whereItemName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "join",
    "longname": "ServerRepository#join",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#join",
    "inherited": true,
    "___id": "T000002R010776",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds join condition. Fix some known issues\n   *\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in [].\n   * @param {CustomRepository.WhereCondition} condition    Any value from WhereCondition list.\n   * @param {*} [values] Condition value. In case expression is complex can take {Object} as value.\n   *   In case values === undefined no values property passed to where list\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}.\n   *   If not passed where will generate unique clause named 'c1', 'c2', ......\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        17236,
        17590
      ],
      "filename": "CustomRepository.js",
      "lineno": 449,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039841",
        "name": "CustomRepository#joinCondition",
        "type": "MethodDefinition",
        "paramnames": [
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds join condition. Fix some known issues",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in [].",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition"
          ]
        },
        "description": "Any value from WhereCondition list.",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. In case expression is complex can take {Object} as value.\n  In case values === undefined no values property passed to where list",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}.\n  If not passed where will generate unique clause named 'c1', 'c2', ......",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "joinCondition",
    "longname": "ServerRepository#joinCondition",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#joinCondition",
    "inherited": true,
    "___id": "T000002R010777",
    "___s": true
  },
  {
    "comment": "/**\n   * How many rows to select\n   * @example\n\n// will return first two ID's from my_entity\nlet store = UB.Repository('my_entity').attrs('id').limit(2).selectAsObject()\n\n   * @param {number} rowsLimit\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        20032,
        20106
      ],
      "filename": "CustomRepository.js",
      "lineno": 559,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040029",
        "name": "CustomRepository#limit",
        "type": "MethodDefinition",
        "paramnames": [
          "rowsLimit"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "How many rows to select",
    "examples": [
      "// will return first two ID's from my_entity\nlet store = UB.Repository('my_entity').attrs('id').limit(2).selectAsObject()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "rowsLimit"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "limit",
    "longname": "ServerRepository#limit",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#limit",
    "inherited": true,
    "___id": "T000002R010782",
    "___s": true
  },
  {
    "comment": "/**\n   * Arrange named `where expressions` in logical order. By default `where expressions` are joined by AND logical predicate.\n   * It is possible to join it in custom order using `logic`.\n   * Pay attention to condition name we pass as a 4-th parameter to `.where()`\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('id')\n // code in ('1', '2', '3')\n .where('code', 'in', ['1', '2', '3'], 'byCode')\n // name like '%homer%'\n .where('name', 'contains', 'Homer', 'byName')\n //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n .where('birtday', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n // (age + 10 >= 15)\n .where('[age] -10', '>=', {age: 15}, 'byAge')\n // (byCode OR byName) AND (all where items, not included in logic)\n .logic('(([byCode]) OR ([byName]))')\n\n   * @param {string} predicate logical predicate.\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        15651,
        15733
      ],
      "filename": "CustomRepository.js",
      "lineno": 408,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039811",
        "name": "CustomRepository#logic",
        "type": "MethodDefinition",
        "paramnames": [
          "predicate"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Arrange named <code>where expressions</code> in logical order. By default <code>where expressions</code> are joined by AND logical predicate.\nIt is possible to join it in custom order using <code>logic</code>.\nPay attention to condition name we pass as a 4-th parameter to <code>.where()</code>",
    "examples": [
      "UB.Repository('my_entity').attrs('id')\n // code in ('1', '2', '3')\n .where('code', 'in', ['1', '2', '3'], 'byCode')\n // name like '%homer%'\n .where('name', 'contains', 'Homer', 'byName')\n //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n .where('birtday', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n // (age + 10 >= 15)\n .where('[age] -10', '>=', {age: 15}, 'byAge')\n // (byCode OR byName) AND (all where items, not included in logic)\n .logic('(([byCode]) OR ([byName]))')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "logical predicate.",
        "name": "predicate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "logic",
    "longname": "ServerRepository#logic",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#logic",
    "inherited": true,
    "___id": "T000002R010775",
    "___s": true
  },
  {
    "comment": "/**\n   * Apply miscellaneous options to resulting UBQL\n   * @example\n\n  // this server-side call will select all currency, including deleted\n  UB.Repository('cdn_currency').attrs(['ID'])\n    .misc({__allowSelectSafeDeleted: true}).selectAsArray();\n\n   * @param {Object} flags\n   * @param {Date} [flags.__mip_ondate] Specify date on which to select data for entities with `dataHistory` mixin. Default to Now()\n   * @param {Boolean} [flags.__mip_recordhistory=false] Select only record history data for specified ID (for entities with `dataHistory` mixin)\n   * @param {Boolean} [flags.__mip_recordhistory_all=false] Ignore __mip_ondate and select all data (acts as select for entities without `dataHistory` mixin)\n   * @param {Boolean} [flags.__mip_disablecache=false] For entities with cacheType in [\"Session\", \"SessionEntity\"] not check is data modified and always return result\n   * @param {Boolean} [flags.__skipOptimisticLock=false] Skip optimistic lock for entities with `mStorage.simpleAudit = true`\n   * @param {Boolean} [flags.__allowSelectSafeDeleted=false] Include softly deleted rows to the result\n   * @param {Boolean} [flags.__skipSelectAfterUpdate=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipSelectAfterInsert=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipRls=false] **Server-side only.**\n   * @param {Boolean} [flags.__skipAclRls=false] **Server-side only.**\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        26232,
        26476
      ],
      "filename": "CustomRepository.js",
      "lineno": 738,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040264",
        "name": "CustomRepository#misc",
        "type": "MethodDefinition",
        "paramnames": [
          "flags"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Apply miscellaneous options to resulting UBQL",
    "examples": [
      "// this server-side call will select all currency, including deleted\n  UB.Repository('cdn_currency').attrs(['ID'])\n    .misc({__allowSelectSafeDeleted: true}).selectAsArray();"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "flags"
      },
      {
        "type": {
          "names": [
            "Date"
          ]
        },
        "optional": true,
        "description": "Specify date on which to select data for entities with <code>dataHistory</code> mixin. Default to Now()",
        "name": "flags.__mip_ondate"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Select only record history data for specified ID (for entities with <code>dataHistory</code> mixin)",
        "name": "flags.__mip_recordhistory"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Ignore __mip_ondate and select all data (acts as select for entities without <code>dataHistory</code> mixin)",
        "name": "flags.__mip_recordhistory_all"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "For entities with cacheType in [&quot;Session&quot;, &quot;SessionEntity&quot;] not check is data modified and always return result",
        "name": "flags.__mip_disablecache"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Skip optimistic lock for entities with <code>mStorage.simpleAudit = true</code>",
        "name": "flags.__skipOptimisticLock"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Include softly deleted rows to the result",
        "name": "flags.__allowSelectSafeDeleted"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipSelectAfterUpdate"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipSelectAfterInsert"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipRls"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<strong>Server-side only.</strong>",
        "name": "flags.__skipAclRls"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "misc",
    "longname": "ServerRepository#misc",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#misc",
    "inherited": true,
    "___id": "T000002R010784",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#misc CustomRepository.misc}.\n   * Calls `misc` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @param {*} addingCondition flags will be applied only in case addingCondition is truthy\n   * @param {Object} flags\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        26852,
        26983
      ],
      "filename": "CustomRepository.js",
      "lineno": 759,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040308",
        "name": "CustomRepository#miscIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "flags"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#misc CustomRepository.misc}.\nCalls <code>misc</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "flags will be applied only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "flags"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "miscIf",
    "longname": "ServerRepository#miscIf",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#miscIf",
    "inherited": true,
    "___id": "T000002R010785",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds where condition with `NOT EXISTS` sub-query. See CustomRepository.exists for sample\n   *\n   * @param {CustomRepository} subRepository  Repository, what represent a sub-query to be execute inside EXISTS statement\n   * @param {string} [clauseName] Optional clause name\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        13660,
        13769
      ],
      "filename": "CustomRepository.js",
      "lineno": 364,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039748",
        "name": "CustomRepository#notExists",
        "type": "MethodDefinition",
        "paramnames": [
          "subRepository",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds where condition with <code>NOT EXISTS</code> sub-query. See CustomRepository.exists for sample",
    "params": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        },
        "description": "Repository, what represent a sub-query to be execute inside EXISTS statement",
        "name": "subRepository"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "notExists",
    "longname": "ServerRepository#notExists",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#notExists",
    "inherited": true,
    "___id": "T000002R010773",
    "___s": true
  },
  {
    "comment": "/**\n   * Sorting\n   * @example\n\n   let repo = UB.Repository('my_entity').attrs('ID').orderBy('code')\n   let orderedData = await repo.selectAsObject() // ordered. await is for client-side only\n   repo.orderBy('code', null) // remove order by code\n   let unorderedData = await repo.selectAsObject() // NOT ordered\n\n   * @param {string} attr Sorted attribute\n   * @param {string|null} [direction='asc'] Sort direction ('asc'|'desc'). If `null` - remove sorting by this attr\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        18105,
        18443
      ],
      "filename": "CustomRepository.js",
      "lineno": 474,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039892",
        "name": "CustomRepository#orderBy",
        "type": "MethodDefinition",
        "paramnames": [
          "attr",
          "direction"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Sorting",
    "examples": [
      "let repo = UB.Repository('my_entity').attrs('ID').orderBy('code')\n   let orderedData = await repo.selectAsObject() // ordered. await is for client-side only\n   repo.orderBy('code', null) // remove order by code\n   let unorderedData = await repo.selectAsObject() // NOT ordered"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Sorted attribute",
        "name": "attr"
      },
      {
        "type": {
          "names": [
            "string",
            "null"
          ]
        },
        "optional": true,
        "defaultvalue": "'asc'",
        "description": "Sort direction ('asc'|'desc'). If <code>null</code> - remove sorting by this attr",
        "name": "direction"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "orderBy",
    "longname": "ServerRepository#orderBy",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#orderBy",
    "inherited": true,
    "___id": "T000002R010778",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds descend sorting. The same as orderBy(attr, 'desc')\n   *\n   * To remove such sorting call orderBy(attr, null)\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('ID')\n  // ORDER BY code, date_create DESC\n  .orderBy('code').orderByDesc('date_create')\n\n   * @param {string} attr\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        18779,
        18896
      ],
      "filename": "CustomRepository.js",
      "lineno": 502,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039954",
        "name": "CustomRepository#orderByDesc",
        "type": "MethodDefinition",
        "paramnames": [
          "attr"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Adds descend sorting. The same as orderBy(attr, 'desc')</p>\n<p>To remove such sorting call orderBy(attr, null)",
    "examples": [
      "UB.Repository('my_entity').attrs('ID')\n  // ORDER BY code, date_create DESC\n  .orderBy('code').orderByDesc('date_create')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "attr"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "orderByDesc",
    "longname": "ServerRepository#orderByDesc",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#orderByDesc",
    "inherited": true,
    "___id": "T000002R010779",
    "___s": true
  },
  {
    "comment": "/**\n   * @param {TubDataStore} [instance] Optional instance for in-thread execution context. If passed - run select for it (not create new instance) and return instance as a result.\n   * @return {TubDataStore}\n   */",
    "meta": {
      "range": [
        5079,
        5142
      ],
      "filename": "ServerRepository.js",
      "lineno": 128,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001360",
        "name": "ServerRepository#select",
        "type": "MethodDefinition",
        "paramnames": [
          "instance"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "TubDataStore"
          ]
        },
        "optional": true,
        "description": "Optional instance for in-thread execution context. If passed - run select for it (not create new instance) and return instance as a result.",
        "name": "instance"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubDataStore"
          ]
        }
      }
    ],
    "name": "select",
    "longname": "ServerRepository#select",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#select",
    "___id": "T000002R000100",
    "___s": true
  },
  {
    "comment": "/**\n   * @param {Boolean} [resultInPlainText=false] If true - result is {String}\n   * @return {TubCachedData|String} // todo this is TubCachedData structure!!!\n   */",
    "meta": {
      "range": [
        3183,
        3898
      ],
      "filename": "ServerRepository.js",
      "lineno": 85,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001209",
        "name": "ServerRepository#selectAsArray",
        "type": "MethodDefinition",
        "paramnames": [
          "resultInPlainText"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true - result is {String}",
        "name": "resultInPlainText"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubCachedData",
            "String"
          ]
        },
        "description": "<p>// todo this is TubCachedData structure!!!</p>"
      }
    ],
    "name": "selectAsArray",
    "longname": "ServerRepository#selectAsArray",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#selectAsArray",
    "___id": "T000002R000090",
    "___s": true
  },
  {
    "comment": "/**\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute\n   *  names during transform array to object\n   * @param {Boolean} [resultInPlainText=false] If true - result is {String}\n   * @return {Array.<Object>|String}\n   */",
    "meta": {
      "range": [
        1931,
        3011
      ],
      "filename": "ServerRepository.js",
      "lineno": 57,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001089",
        "name": "ServerRepository#selectAsObject",
        "type": "MethodDefinition",
        "paramnames": [
          "fieldAliases",
          "resultInPlainText"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute\n names during transform array to object",
        "name": "fieldAliases"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true - result is {String}",
        "name": "resultInPlainText"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Object>",
            "String"
          ]
        }
      }
    ],
    "name": "selectAsObject",
    "longname": "ServerRepository#selectAsObject",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#selectAsObject",
    "___id": "T000002R000082",
    "___s": true
  },
  {
    "comment": "/**\n   * Create new, or use passed as parameter {@link TubDataStore} and run {@link class:TubDataStore#select TubDataStore.select} method passing result of {@link class:CustomRepository#ubql CustomRepository.ubql()} as config.\n   * Do not work for remote connection.\n   *\n   * @param {TubDataStore} [instance] Optional instance for in-thread execution context. If passed - run select for it (not create new instance) and return instance as a result.\n   *   Be careful - method do not check instance is created for entity you pass to Repository constructor.\n   * @return {TubDataStore|Array.<Object>}\n   */",
    "meta": {
      "range": [
        4510,
        4857
      ],
      "filename": "ServerRepository.js",
      "lineno": 112,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001310",
        "name": "ServerRepository#selectAsStore",
        "type": "MethodDefinition",
        "paramnames": [
          "instance"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Create new, or use passed as parameter {@link TubDataStore} and run {@link class:TubDataStore#select TubDataStore.select} method passing result of {@link class:CustomRepository#ubql CustomRepository.ubql()} as config.\nDo not work for remote connection.",
    "params": [
      {
        "type": {
          "names": [
            "TubDataStore"
          ]
        },
        "optional": true,
        "description": "Optional instance for in-thread execution context. If passed - run select for it (not create new instance) and return instance as a result.\n  Be careful - method do not check instance is created for entity you pass to Repository constructor.",
        "name": "instance"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubDataStore",
            "Array.<Object>"
          ]
        }
      }
    ],
    "name": "selectAsStore",
    "longname": "ServerRepository#selectAsStore",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#selectAsStore",
    "___id": "T000002R000096",
    "___s": true
  },
  {
    "comment": "/**\n   * Select a single row by ID. If ubql result is empty - return {undefined}.\n   *\n   * @param {Number} ID Row identifier\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute\n   *  names during transform array to object\n   * @return {Object|undefined}\n   */",
    "meta": {
      "range": [
        6260,
        6361
      ],
      "filename": "ServerRepository.js",
      "lineno": 163,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001418",
        "name": "ServerRepository#selectById",
        "type": "MethodDefinition",
        "paramnames": [
          "ID",
          "fieldAliases"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Select a single row by ID. If ubql result is empty - return {undefined}.",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Row identifier",
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute\n names during transform array to object",
        "name": "fieldAliases"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectById",
    "longname": "ServerRepository#selectById",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#selectById",
    "___id": "T000002R000104",
    "___s": true
  },
  {
    "comment": "/**\n   * Perform select and return a value of the first attribute from the first row\n   *\n   * WARNING method do not check repository contains the single row\n   * @return {Object|undefined}\n   */",
    "meta": {
      "range": [
        5797,
        5957
      ],
      "filename": "ServerRepository.js",
      "lineno": 150,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001384",
        "name": "ServerRepository#selectScalar",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Perform select and return a value of the first attribute from the first row</p>\n<p>WARNING method do not check repository contains the single row",
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectScalar",
    "longname": "ServerRepository#selectScalar",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "params": [],
    "overrides": "CustomRepository#selectScalar",
    "___id": "T000002R000102",
    "___s": true
  },
  {
    "comment": "/**\n   * Select a single row. If ubql result is empty - return {undefined}.\n   *\n   * WARNING method do not check repository conntains the single row and always return a first row from result.\n   * @param {Object<string, string>} [fieldAliases] Optional object to change attribute\n   *  names during transform array to object\n   * @return {Object|undefined}\n   */",
    "meta": {
      "range": [
        5512,
        5595
      ],
      "filename": "ServerRepository.js",
      "lineno": 140,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001371",
        "name": "ServerRepository#selectSingle",
        "type": "MethodDefinition",
        "paramnames": [
          "fieldAliases"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Select a single row. If ubql result is empty - return {undefined}.</p>\n<p>WARNING method do not check repository conntains the single row and always return a first row from result.",
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, string>"
          ]
        },
        "optional": true,
        "description": "Optional object to change attribute\n names during transform array to object",
        "name": "fieldAliases"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "undefined"
          ]
        }
      }
    ],
    "name": "selectSingle",
    "longname": "ServerRepository#selectSingle",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "overrides": "CustomRepository#selectSingle",
    "___id": "T000002R000101",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve first `start` rows\n   * @example\n\nlet store = UB.Repository('my_entity').attrs('id')\n //will return ID's from 15 to 25\n .start(15).limit(10).select()\n\n   * @param {Number} start\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        19720,
        19786
      ],
      "filename": "CustomRepository.js",
      "lineno": 544,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040014",
        "name": "CustomRepository#start",
        "type": "MethodDefinition",
        "paramnames": [
          "start"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve first <code>start</code> rows",
    "examples": [
      "let store = UB.Repository('my_entity').attrs('id')\n //will return ID's from 15 to 25\n .start(15).limit(10).select()"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "start"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "start",
    "longname": "ServerRepository#start",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#start",
    "inherited": true,
    "___id": "T000002R010781",
    "___s": true
  },
  {
    "comment": "/**\n   * Construct a UBQL JSON\n   * @example\n\nlet repo = UB.Repository('my_entity').attrs('ID').where('code', '=', 'a')\nlet inst = UB.DataStore(my_entity)\ninst.run('select', repo.ubql())\n\n   * @return {UBQL}\n   */",
    "meta": {
      "range": [
        20326,
        21160
      ],
      "filename": "CustomRepository.js",
      "lineno": 574,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040044",
        "name": "CustomRepository#ubql",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Construct a UBQL JSON",
    "examples": [
      "let repo = UB.Repository('my_entity').attrs('ID').where('code', '=', 'a')\nlet inst = UB.DataStore(my_entity)\ninst.run('select', repo.ubql())"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBQL"
          ]
        }
      }
    ],
    "name": "ubql",
    "longname": "ServerRepository#ubql",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "params": [],
    "inherits": "CustomRepository#ubql",
    "inherited": true,
    "___id": "T000002R010783",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve a data from server using `methodName` entity method.\n   * By default `select` method will be used.\n   * @param {string} methodName\n   */",
    "meta": {
      "range": [
        2182,
        2251
      ],
      "filename": "CustomRepository.js",
      "lineno": 94,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039204",
        "name": "CustomRepository#using",
        "type": "MethodDefinition",
        "paramnames": [
          "methodName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Retrieve a data from server using <code>methodName</code> entity method.\nBy default <code>select</code> method will be used.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "methodName"
      }
    ],
    "name": "using",
    "longname": "ServerRepository#using",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#using",
    "inherited": true,
    "___id": "T000002R010767",
    "___s": true
  },
  {
    "comment": "/**\n   * Adds where expression\n   *\n   *  - the expression may contain one of the following functions: 'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE',\n   *    'LENGTH', 'LOWER', 'UPPER', 'DAY', 'MONTH', 'YEAR', 'ROUND', 'FLOOR', 'CEILING'\n   *\n   *  - for a Date/DateTime attributes special macros `#maxdate` or `#currentdate` can be used as a value:\n   *\n   *        .where('dateValue', '=', '#maxdate')\n   *        .where('dateTimeValue', '<', '#currentdate')\n   *\n   *  - `in` and 'notIn` conditions can take a sub-repository as a values parameter value.\n   *  See {@link class:CustomRepository#exists CustomRepository.exists} for sample\n   *\n   * @example\n\nUB.Repository('my_entity').attrs('id')\n  // code in ('1', '2', '3')\n  .where('code', 'in', ['1', '2', '3'])\n  // code in (select code from my_codes where id = 10)\n  .where('code', 'in', UB.Repository('my_codes').attr('code').where('ID', '<', 10)\n  // name like '%homer%'\n  .where('[name]', 'contains', 'Homer').\n  //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n  .where('[birtday]', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n  // (age + 10 >= 15)\n  .where('[age] -10', '>=', {age: 15}, 'byAge')\n  .where('LENGTH([code]), '<', 5)\n  // for condition match expression not need\n  .where('', 'match', 'myvalue')\n\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in []\n   * @param {CustomRepository.WhereCondition|String} condition  Any value from {@link CustomRepository#WhereCondition WhereCondition}\n   * @param {*} [values] Condition value. If `undefined` values not passed to ubql\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}\n   *   If not passed unique clause name will be generated ('_1', '_2', ..).\n   *   In case a condition with the same name exists, it will be overwritten.\n   *\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        6896,
        10635
      ],
      "filename": "CustomRepository.js",
      "lineno": 211,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039295",
        "name": "CustomRepository#where",
        "type": "MethodDefinition",
        "paramnames": [
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Adds where expression</p>\n<ul>\n<li><p>the expression may contain one of the following functions: 'SUM', 'COUNT', 'AVG', 'MAX', 'MIN', 'CAST', 'COALESCE',\n'LENGTH', 'LOWER', 'UPPER', 'DAY', 'MONTH', 'YEAR', 'ROUND', 'FLOOR', 'CEILING'</p>\n</li>\n<li><p>for a Date/DateTime attributes special macros <code>#maxdate</code> or <code>#currentdate</code> can be used as a value:</p>\n<pre class=\"prettyprint source\"><code>.where('dateValue', '=', '#maxdate')\n.where('dateTimeValue', '&lt;', '#currentdate')</code></pre></li>\n<li><p><code>in</code> and 'notIn` conditions can take a sub-repository as a values parameter value.\nSee {@link class:CustomRepository#exists CustomRepository.exists} for sample</p>\n</li>\n</ul>",
    "examples": [
      "UB.Repository('my_entity').attrs('id')\n  // code in ('1', '2', '3')\n  .where('code', 'in', ['1', '2', '3'])\n  // code in (select code from my_codes where id = 10)\n  .where('code', 'in', UB.Repository('my_codes').attr('code').where('ID', '<', 10)\n  // name like '%homer%'\n  .where('[name]', 'contains', 'Homer').\n  //(birtday >= '2012-01-01') AND (birtday <= '2012-01-02')\n  .where('[birtday]', 'geq', new Date()).where('birtday', 'leq', new Date() + 10)\n  // (age + 10 >= 15)\n  .where('[age] -10', '>=', {age: 15}, 'byAge')\n  .where('LENGTH([code]), '<', 5)\n  // for condition match expression not need\n  .where('', 'match', 'myvalue')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in []",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition",
            "String"
          ]
        },
        "description": "Any value from {@link CustomRepository#WhereCondition WhereCondition}",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. If <code>undefined</code> values not passed to ubql",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}\n  If not passed unique clause name will be generated ('_1', '_2', ..).\n  In case a condition with the same name exists, it will be overwritten.",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "where",
    "longname": "ServerRepository#where",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#where",
    "inherited": true,
    "___id": "T000002R010770",
    "___s": true
  },
  {
    "comment": "/**\n * Enumeration of all condition types. This enumeration defines a set of String values.\n * It exists primarily for documentation purposes - in code use the actual string values like '>', don't reference them through this class like WhereCondition.more.\n *\n * We define several aliases for the same condition. In case of direct HTTP request (without Repository) use only non-aliased values (i.e. `more` instead of '>' or 'gt')\n * @memberOf CustomRepository\n * @enum {string}\n */",
    "meta": {
      "range": [
        29319,
        33064
      ],
      "filename": "CustomRepository.js",
      "lineno": 832,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040375",
        "name": "CustomRepository.prototype.WhereCondition",
        "type": "ObjectExpression",
        "value": "{\"undefined\":\"custom\"}",
        "paramnames": []
      }
    },
    "description": "Enumeration of all condition types. This enumeration defines a set of String values.\nIt exists primarily for documentation purposes - in code use the actual string values like '&gt;', don't reference them through this class like WhereCondition.more.</p>\n<p>We define several aliases for the same condition. In case of direct HTTP request (without Repository) use only non-aliased values (i.e. <code>more</code> instead of '&gt;' or 'gt')",
    "memberof": "ServerRepository",
    "kind": "member",
    "isEnum": true,
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "WhereCondition",
    "longname": "ServerRepository#WhereCondition",
    "scope": "instance",
    "properties": [
      {
        "comment": "/** @description Alias for `more` */",
        "meta": {
          "range": [
            29406,
            29418
          ],
          "filename": "CustomRepository.js",
          "lineno": 834,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040382",
            "name": "gt",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Alias for <code>more</code>",
        "name": "gt",
        "longname": "CustomRepository#WhereCondition.gt",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more"
      },
      {
        "comment": "/** @description Alias for `more` */",
        "meta": {
          "range": [
            29461,
            29472
          ],
          "filename": "CustomRepository.js",
          "lineno": 836,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040384",
            "name": "\">\"",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Alias for <code>more</code>",
        "name": "\">\"",
        "longname": "CustomRepository#WhereCondition.\">\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more"
      },
      {
        "comment": "/** @description Greater than */",
        "meta": {
          "range": [
            29511,
            29525
          ],
          "filename": "CustomRepository.js",
          "lineno": 838,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040386",
            "name": "more",
            "type": "Literal",
            "value": "more"
          }
        },
        "description": "Greater than",
        "name": "more",
        "longname": "CustomRepository#WhereCondition.more",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "more"
      },
      {
        "comment": "/** @description Alias for `less` */",
        "meta": {
          "range": [
            29568,
            29580
          ],
          "filename": "CustomRepository.js",
          "lineno": 840,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040388",
            "name": "lt",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Alias for <code>less</code>",
        "name": "lt",
        "longname": "CustomRepository#WhereCondition.lt",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less"
      },
      {
        "comment": "/** @description Alias for `less` */",
        "meta": {
          "range": [
            29623,
            29634
          ],
          "filename": "CustomRepository.js",
          "lineno": 842,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040390",
            "name": "\"<\"",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Alias for <code>less</code>",
        "name": "\"<\"",
        "longname": "CustomRepository#WhereCondition.\"<\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less"
      },
      {
        "comment": "/** @description Less than */",
        "meta": {
          "range": [
            29670,
            29684
          ],
          "filename": "CustomRepository.js",
          "lineno": 844,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040392",
            "name": "less",
            "type": "Literal",
            "value": "less"
          }
        },
        "description": "Less than",
        "name": "less",
        "longname": "CustomRepository#WhereCondition.less",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "less"
      },
      {
        "comment": "/** @description Alias for `equal` */",
        "meta": {
          "range": [
            29729,
            29742
          ],
          "filename": "CustomRepository.js",
          "lineno": 847,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040394",
            "name": "eq",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Alias for <code>equal</code>",
        "name": "eq",
        "longname": "CustomRepository#WhereCondition.eq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal"
      },
      {
        "comment": "/** @description Alias for `equal` */",
        "meta": {
          "range": [
            29786,
            29798
          ],
          "filename": "CustomRepository.js",
          "lineno": 849,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040396",
            "name": "\"=\"",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Alias for <code>equal</code>",
        "name": "\"=\"",
        "longname": "CustomRepository#WhereCondition.\"=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal"
      },
      {
        "comment": "/** @description Equal to */",
        "meta": {
          "range": [
            29833,
            29849
          ],
          "filename": "CustomRepository.js",
          "lineno": 851,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040398",
            "name": "equal",
            "type": "Literal",
            "value": "equal"
          }
        },
        "description": "Equal to",
        "name": "equal",
        "longname": "CustomRepository#WhereCondition.equal",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "equal"
      },
      {
        "comment": "/** @description Alias for `moreEqual` */",
        "meta": {
          "range": [
            29898,
            29915
          ],
          "filename": "CustomRepository.js",
          "lineno": 854,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040400",
            "name": "ge",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "ge",
        "longname": "CustomRepository#WhereCondition.ge",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual"
      },
      {
        "comment": "/** @description  Alias for `moreEqual` */",
        "meta": {
          "range": [
            29964,
            29982
          ],
          "filename": "CustomRepository.js",
          "lineno": 856,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040402",
            "name": "geq",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "geq",
        "longname": "CustomRepository#WhereCondition.geq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual"
      },
      {
        "comment": "/** @description  Alias for `moreEqual` */",
        "meta": {
          "range": [
            30031,
            30048
          ],
          "filename": "CustomRepository.js",
          "lineno": 858,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040404",
            "name": "\">=\"",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Alias for <code>moreEqual</code>",
        "name": "\">=\"",
        "longname": "CustomRepository#WhereCondition.\">=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual"
      },
      {
        "comment": "/** @description  Greater than or equal */",
        "meta": {
          "range": [
            30097,
            30121
          ],
          "filename": "CustomRepository.js",
          "lineno": 860,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040406",
            "name": "moreEqual",
            "type": "Literal",
            "value": "moreEqual"
          }
        },
        "description": "Greater than or equal",
        "name": "moreEqual",
        "longname": "CustomRepository#WhereCondition.moreEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "moreEqual"
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30170,
            30187
          ],
          "filename": "CustomRepository.js",
          "lineno": 863,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040408",
            "name": "le",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "le",
        "longname": "CustomRepository#WhereCondition.le",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual"
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30235,
            30253
          ],
          "filename": "CustomRepository.js",
          "lineno": 865,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040410",
            "name": "leq",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "leq",
        "longname": "CustomRepository#WhereCondition.leq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual"
      },
      {
        "comment": "/** @description Alias for `lessEqual` */",
        "meta": {
          "range": [
            30301,
            30318
          ],
          "filename": "CustomRepository.js",
          "lineno": 867,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040412",
            "name": "\"<=\"",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Alias for <code>lessEqual</code>",
        "name": "\"<=\"",
        "longname": "CustomRepository#WhereCondition.\"<=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual"
      },
      {
        "comment": "/** @description Less than or equal */",
        "meta": {
          "range": [
            30363,
            30387
          ],
          "filename": "CustomRepository.js",
          "lineno": 869,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040414",
            "name": "lessEqual",
            "type": "Literal",
            "value": "lessEqual"
          }
        },
        "description": "Less than or equal",
        "name": "lessEqual",
        "longname": "CustomRepository#WhereCondition.lessEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "lessEqual"
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30435,
            30451
          ],
          "filename": "CustomRepository.js",
          "lineno": 872,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040416",
            "name": "ne",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "ne",
        "longname": "CustomRepository#WhereCondition.ne",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30498,
            30515
          ],
          "filename": "CustomRepository.js",
          "lineno": 874,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040418",
            "name": "neq",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "neq",
        "longname": "CustomRepository#WhereCondition.neq",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30562,
            30578
          ],
          "filename": "CustomRepository.js",
          "lineno": 876,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040420",
            "name": "\"<>\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"<>\"",
        "longname": "CustomRepository#WhereCondition.\"<>\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30625,
            30641
          ],
          "filename": "CustomRepository.js",
          "lineno": 878,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040422",
            "name": "\"!=\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"!=\"",
        "longname": "CustomRepository#WhereCondition.\"!=\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Alias for `notEqual` */",
        "meta": {
          "range": [
            30688,
            30705
          ],
          "filename": "CustomRepository.js",
          "lineno": 880,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040424",
            "name": "\"!==\"",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Alias for <code>notEqual</code>",
        "name": "\"!==\"",
        "longname": "CustomRepository#WhereCondition.\"!==\"",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Not equal */",
        "meta": {
          "range": [
            30741,
            30763
          ],
          "filename": "CustomRepository.js",
          "lineno": 882,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040426",
            "name": "notEqual",
            "type": "Literal",
            "value": "notEqual"
          }
        },
        "description": "Not equal",
        "name": "notEqual",
        "longname": "CustomRepository#WhereCondition.notEqual",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notEqual"
      },
      {
        "comment": "/** @description Alias for `like` */",
        "meta": {
          "range": [
            30807,
            30825
          ],
          "filename": "CustomRepository.js",
          "lineno": 885,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040428",
            "name": "contains",
            "type": "Literal",
            "value": "like"
          }
        },
        "description": "Alias for <code>like</code>",
        "name": "contains",
        "longname": "CustomRepository#WhereCondition.contains",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "like"
      },
      {
        "comment": "/** @description Like condition. For attributes of type `String` only */",
        "meta": {
          "range": [
            30904,
            30918
          ],
          "filename": "CustomRepository.js",
          "lineno": 887,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040430",
            "name": "like",
            "type": "Literal",
            "value": "like"
          }
        },
        "description": "Like condition. For attributes of type <code>String</code> only",
        "name": "like",
        "longname": "CustomRepository#WhereCondition.like",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "like"
      },
      {
        "comment": "/** @description Alias for `notLike` */",
        "meta": {
          "range": [
            30965,
            30989
          ],
          "filename": "CustomRepository.js",
          "lineno": 890,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040432",
            "name": "notContains",
            "type": "Literal",
            "value": "notLike"
          }
        },
        "description": "Alias for <code>notLike</code>",
        "name": "notContains",
        "longname": "CustomRepository#WhereCondition.notContains",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notLike"
      },
      {
        "comment": "/** @description Not like condition. For attributes of type `String` only */",
        "meta": {
          "range": [
            31072,
            31092
          ],
          "filename": "CustomRepository.js",
          "lineno": 892,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040434",
            "name": "notLike",
            "type": "Literal",
            "value": "notLike"
          }
        },
        "description": "Not like condition. For attributes of type <code>String</code> only",
        "name": "notLike",
        "longname": "CustomRepository#WhereCondition.notLike",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notLike"
      },
      {
        "comment": "/** @description Is null */",
        "meta": {
          "range": [
            31127,
            31145
          ],
          "filename": "CustomRepository.js",
          "lineno": 895,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040436",
            "name": "isNull",
            "type": "Literal",
            "value": "isNull"
          }
        },
        "description": "Is null",
        "name": "isNull",
        "longname": "CustomRepository#WhereCondition.isNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "isNull"
      },
      {
        "comment": "/** @description Alias for `isNull` */",
        "meta": {
          "range": [
            31190,
            31206
          ],
          "filename": "CustomRepository.js",
          "lineno": 897,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040438",
            "name": "null",
            "type": "Literal",
            "value": "isNull"
          }
        },
        "description": "Alias for <code>isNull</code>",
        "name": "null",
        "longname": "CustomRepository#WhereCondition.null",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "isNull"
      },
      {
        "comment": "/** @description Alias for `notIsNull` */",
        "meta": {
          "range": [
            31255,
            31277
          ],
          "filename": "CustomRepository.js",
          "lineno": 900,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040440",
            "name": "notNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Alias for <code>notIsNull</code>",
        "name": "notNull",
        "longname": "CustomRepository#WhereCondition.notNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull"
      },
      {
        "comment": "/** @description Not is null */",
        "meta": {
          "range": [
            31315,
            31339
          ],
          "filename": "CustomRepository.js",
          "lineno": 902,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040442",
            "name": "notIsNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Not is null",
        "name": "notIsNull",
        "longname": "CustomRepository#WhereCondition.notIsNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull"
      },
      {
        "comment": "/** @description Alias for `notIsNull` */",
        "meta": {
          "range": [
            31387,
            31411
          ],
          "filename": "CustomRepository.js",
          "lineno": 904,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040444",
            "name": "isNotNull",
            "type": "Literal",
            "value": "notIsNull"
          }
        },
        "description": "Alias for <code>notIsNull</code>",
        "name": "isNotNull",
        "longname": "CustomRepository#WhereCondition.isNotNull",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIsNull"
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31460,
            31484
          ],
          "filename": "CustomRepository.js",
          "lineno": 907,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040446",
            "name": "beginWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "beginWith",
        "longname": "CustomRepository#WhereCondition.beginWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith"
      },
      {
        "comment": "/** @description Start with. For attributes of type `String` only */",
        "meta": {
          "range": [
            31559,
            31583
          ],
          "filename": "CustomRepository.js",
          "lineno": 909,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040448",
            "name": "startWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Start with. For attributes of type <code>String</code> only",
        "name": "startWith",
        "longname": "CustomRepository#WhereCondition.startWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith"
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31631,
            31656
          ],
          "filename": "CustomRepository.js",
          "lineno": 911,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040450",
            "name": "startsWith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "startsWith",
        "longname": "CustomRepository#WhereCondition.startsWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith"
      },
      {
        "comment": "/** @description Alias for `startWith` */",
        "meta": {
          "range": [
            31704,
            31729
          ],
          "filename": "CustomRepository.js",
          "lineno": 913,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040452",
            "name": "startswith",
            "type": "Literal",
            "value": "startWith"
          }
        },
        "description": "Alias for <code>startWith</code>",
        "name": "startswith",
        "longname": "CustomRepository#WhereCondition.startswith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "startWith"
      },
      {
        "comment": "/** @description Alias for `notStartWith` */",
        "meta": {
          "range": [
            31781,
            31811
          ],
          "filename": "CustomRepository.js",
          "lineno": 916,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040454",
            "name": "notBeginWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Alias for <code>notStartWith</code>",
        "name": "notBeginWith",
        "longname": "CustomRepository#WhereCondition.notBeginWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith"
      },
      {
        "comment": "/** @description Not start with. For attributes of type `String` only */",
        "meta": {
          "range": [
            31890,
            31920
          ],
          "filename": "CustomRepository.js",
          "lineno": 918,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040456",
            "name": "notStartWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Not start with. For attributes of type <code>String</code> only",
        "name": "notStartWith",
        "longname": "CustomRepository#WhereCondition.notStartWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith"
      },
      {
        "comment": "/** @description Alias for `notStartWith` */",
        "meta": {
          "range": [
            31971,
            32002
          ],
          "filename": "CustomRepository.js",
          "lineno": 920,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040458",
            "name": "notStartsWith",
            "type": "Literal",
            "value": "notStartWith"
          }
        },
        "description": "Alias for <code>notStartWith</code>",
        "name": "notStartsWith",
        "longname": "CustomRepository#WhereCondition.notStartsWith",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notStartWith"
      },
      {
        "comment": "/** @description Alias for `in` */",
        "meta": {
          "range": [
            32044,
            32060
          ],
          "filename": "CustomRepository.js",
          "lineno": 923,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040460",
            "name": "includes",
            "type": "Literal",
            "value": "in"
          }
        },
        "description": "Alias for <code>in</code>",
        "name": "includes",
        "longname": "CustomRepository#WhereCondition.includes",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "in"
      },
      {
        "comment": "/** @description One of. Can accept array of string on array of Int/Int64 as values depending on attribute type. */",
        "meta": {
          "range": [
            32182,
            32192
          ],
          "filename": "CustomRepository.js",
          "lineno": 925,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040462",
            "name": "in",
            "type": "Literal",
            "value": "in"
          }
        },
        "description": "One of. Can accept array of string on array of Int/Int64 as values depending on attribute type.",
        "name": "in",
        "longname": "CustomRepository#WhereCondition.in",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "in"
      },
      {
        "comment": "/** @description Alias for `notIn` */",
        "meta": {
          "range": [
            32237,
            32259
          ],
          "filename": "CustomRepository.js",
          "lineno": 928,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040464",
            "name": "notIncludes",
            "type": "Literal",
            "value": "notIn"
          }
        },
        "description": "Alias for <code>notIn</code>",
        "name": "notIncludes",
        "longname": "CustomRepository#WhereCondition.notIncludes",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIn"
      },
      {
        "comment": "/** @description Not one of. See WhereCondition.in for details */",
        "meta": {
          "range": [
            32331,
            32347
          ],
          "filename": "CustomRepository.js",
          "lineno": 930,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040466",
            "name": "notIn",
            "type": "Literal",
            "value": "notIn"
          }
        },
        "description": "Not one of. See WhereCondition.in for details",
        "name": "notIn",
        "longname": "CustomRepository#WhereCondition.notIn",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "notIn"
      },
      {
        "comment": "/** @description For entities with FTS mixin enabled. TODO - expand */",
        "meta": {
          "range": [
            32425,
            32441
          ],
          "filename": "CustomRepository.js",
          "lineno": 933,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040468",
            "name": "match",
            "type": "Literal",
            "value": "match"
          }
        },
        "description": "For entities with FTS mixin enabled. TODO - expand",
        "name": "match",
        "longname": "CustomRepository#WhereCondition.match",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "match"
      },
      {
        "comment": "/** @description Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method */",
        "meta": {
          "range": [
            32609,
            32631
          ],
          "filename": "CustomRepository.js",
          "lineno": 936,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040470",
            "name": "subquery",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a sub-query passed in values. Better to use 'in' condition with Repository as a values parameter or a CustomRepository.exists method",
        "name": "subquery",
        "longname": "CustomRepository#WhereCondition.subquery",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery"
      },
      {
        "comment": "/** @description Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method */",
        "meta": {
          "range": [
            32748,
            32768
          ],
          "filename": "CustomRepository.js",
          "lineno": 938,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040472",
            "name": "exists",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a exists(sub-query) passed in values. Better to use CustomRepository.exists method",
        "name": "exists",
        "longname": "CustomRepository#WhereCondition.exists",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery"
      },
      {
        "comment": "/** @description Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method */",
        "meta": {
          "range": [
            32892,
            32915
          ],
          "filename": "CustomRepository.js",
          "lineno": 940,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040474",
            "name": "notExists",
            "type": "Literal",
            "value": "subquery"
          }
        },
        "description": "Execute a not exists(sub-query) passed in values. Better to use CustomRepository.notExists method",
        "name": "notExists",
        "longname": "CustomRepository#WhereCondition.notExists",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "subquery"
      },
      {
        "comment": "/** @description Custom condition. For Server-side call only. For this condition `expression` can be any SQL statement */",
        "meta": {
          "range": [
            33044,
            33062
          ],
          "filename": "CustomRepository.js",
          "lineno": 943,
          "columnno": 2,
          "path": "/home/andrey/dev/ubjs/packages/cs-shared",
          "code": {
            "id": "astnode100040476",
            "name": "custom",
            "type": "Literal",
            "value": "custom"
          }
        },
        "description": "Custom condition. For Server-side call only. For this condition <code>expression</code> can be any SQL statement",
        "name": "custom",
        "longname": "CustomRepository#WhereCondition.custom",
        "kind": "member",
        "memberof": "CustomRepository#WhereCondition",
        "scope": "static",
        "type": {
          "names": [
            "string"
          ]
        },
        "defaultvalue": "custom"
      }
    ],
    "inherits": "CustomRepository#WhereCondition",
    "inherited": true,
    "___id": "T000002R010790",
    "___s": true
  },
  {
    "comment": "/**\n   * Helper method for {@link class:CustomRepository#where CustomRepository.where}.\n   * Calls `where` in case addingCondition is <a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy>truthy</a>\n   *\n   * @example\n\n   let filterString = 'foundAllLikeThis' // or may be empty string\n   // with whereIf\n   let repo = UB.Repository('my_entity').attrs('ID').whereIf(filterString, 'myAttr', 'like', filterString)\n\n   //without whereIf\n   let repo = UB.Repository('my_entity').attrs('ID')\n   if (filterString) repo = repo.where('myAttr', 'like', filterString)\n\n   * @param {*} addingCondition Where expression will be added only in case addingCondition is truthy\n   * @param {string} expression   Attribute name (with or without []) or valid expression with attributes in []\n   * @param {CustomRepository.WhereCondition|String} condition  Any value from {@link CustomRepository#WhereCondition WhereCondition}\n   * @param {*} [values] Condition value. If `undefined` values not passed to ubql\n   * @param {string} [clauseName] Optional clause name to be used in {CustomRepository.logicalPredicates}\n   *   If not passed where will generate unique clause named 'c1', 'c2', ......\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        11866,
        12042
      ],
      "filename": "CustomRepository.js",
      "lineno": 312,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100039712",
        "name": "CustomRepository#whereIf",
        "type": "MethodDefinition",
        "paramnames": [
          "addingCondition",
          "expression",
          "condition",
          "values",
          "clauseName"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Helper method for {@link class:CustomRepository#where CustomRepository.where}.\nCalls <code>where</code> in case addingCondition is &lt;a href=https://developer.mozilla.org/en-US/docs/Glossary/truthy&gt;truthy</a>",
    "examples": [
      "let filterString = 'foundAllLikeThis' // or may be empty string\n   // with whereIf\n   let repo = UB.Repository('my_entity').attrs('ID').whereIf(filterString, 'myAttr', 'like', filterString)\n\n   //without whereIf\n   let repo = UB.Repository('my_entity').attrs('ID')\n   if (filterString) repo = repo.where('myAttr', 'like', filterString)"
    ],
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Where expression will be added only in case addingCondition is truthy",
        "name": "addingCondition"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Attribute name (with or without []) or valid expression with attributes in []",
        "name": "expression"
      },
      {
        "type": {
          "names": [
            "CustomRepository.WhereCondition",
            "String"
          ]
        },
        "description": "Any value from {@link CustomRepository#WhereCondition WhereCondition}",
        "name": "condition"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Condition value. If <code>undefined</code> values not passed to ubql",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Optional clause name to be used in {CustomRepository.logicalPredicates}\n  If not passed where will generate unique clause named 'c1', 'c2', ......",
        "name": "clauseName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "whereIf",
    "longname": "ServerRepository#whereIf",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "inherits": "CustomRepository#whereIf",
    "inherited": true,
    "___id": "T000002R010771",
    "___s": true
  },
  {
    "comment": "/**\n   * Calculate total row number. WARNING!! This is VERY slow operation on DB level in case of many record\n   *\n   * Result of calculation is returned in __totalRecCount parameter value in case `selectAsArray()` client call:\n   *\n        let result = UB.Repository('uba_user').attrs(['ID', 'description'])\n           .withTotal().selectAsArray();\n        console.log('Total count is:', result.__totalRecCount)\n   *\n   * Or into TubDataStore.totalRowCount in case of server side `selectAsStore()` call:\n   *\n         let store = UB.Repository('uba_user').attrs(['ID', 'description'])\n           .withTotal().selectAsStore();\n         console.log('Total count is:', store.totalRowCount);\n   *\n   * @return {CustomRepository}\n   */",
    "meta": {
      "range": [
        27761,
        27833
      ],
      "filename": "CustomRepository.js",
      "lineno": 785,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100040326",
        "name": "CustomRepository#withTotal",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>Calculate total row number. WARNING!! This is VERY slow operation on DB level in case of many record</p>\n<p>Result of calculation is returned in __totalRecCount parameter value in case <code>selectAsArray()</code> client call:</p>\n<pre class=\"prettyprint source\"><code>    let result = UB.Repository('uba_user').attrs(['ID', 'description'])\n       .withTotal().selectAsArray();\n    console.log('Total count is:', result.__totalRecCount)</code></pre><p>Or into TubDataStore.totalRowCount in case of server side <code>selectAsStore()</code> call:</p>\n<pre class=\"prettyprint source\"><code>     let store = UB.Repository('uba_user').attrs(['ID', 'description'])\n       .withTotal().selectAsStore();\n     console.log('Total count is:', store.totalRowCount);</code></pre>",
    "returns": [
      {
        "type": {
          "names": [
            "CustomRepository"
          ]
        }
      }
    ],
    "name": "withTotal",
    "longname": "ServerRepository#withTotal",
    "kind": "function",
    "memberof": "ServerRepository",
    "scope": "instance",
    "params": [],
    "inherits": "CustomRepository#withTotal",
    "inherited": true,
    "___id": "T000002R010786",
    "___s": true
  },
  {
    "comment": "/**\n * Contains information about the logged in user.\n * Server reassign properties of this object each time `endpoint` handler are executed\n *\n * Implements {@link EventEmitter} and will emit `login` event each time user logged in\n * or `loginFailed` event with 2 parameters(userID, isLocked) when user UB authentication failed\n * @namespace\n * @global\n * @mixes EventEmitter\n */",
    "meta": {
      "range": [
        812,
        825
      ],
      "filename": "Session.js",
      "lineno": 25,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062377",
        "name": "Session",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Contains information about the logged in user.\nServer reassign properties of this object each time <code>endpoint</code> handler are executed</p>\n<p>Implements {@link EventEmitter} and will emit <code>login</code> event each time user logged in\nor <code>loginFailed</code> event with 2 parameters(userID, isLocked) when user UB authentication failed",
    "kind": "namespace",
    "scope": "global",
    "mixes": [
      "EventEmitter"
    ],
    "name": "Session",
    "longname": "Session",
    "params": [],
    "___id": "T000002R005985",
    "___s": true
  },
  {
    "comment": "/**\n * IP address of a user. May differ from IP address current user login from.\n * May be empty if request come from localhost.\n * @member {string} callerIP\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 148,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "IP address of a user. May differ from IP address current user login from.\nMay be empty if request come from localhost.",
    "kind": "member",
    "name": "callerIP",
    "type": {
      "names": [
        "string"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.callerIP",
    "___id": "T000002R006008",
    "___s": true
  },
  {
    "comment": "/**\n * Fires just after user successfully logged-in but before auth response is written to client.\n * Model developer can subscribe to this event and add some model specific data to Session.uData.\n *\n * Since all uData content is passed to client and accessible on client via\n *  $App.connection.userData(`someCustomProperty`) do not add there a security sensitive data.\n *\n * Standard models like `@unitybase/uba` and `@unitybase/org` are subscribed to this event and add\n * most useful information to the uData - {@link namespace:Session.uData Session.uData} documentation.\n * Never override `uData` using `Session.uData = {...}`, in this case you delete uData properties,\n * defined in other application models.\n * Instead define or remove properties using `Session.uData.myProperty = ...`\n * or use `delete Session.uData.myProperty` if you need to undefine something.\n *\n * Example below add `someCustomProperty` to Session.uData:\n *\n *      // @param {THTTPRequest} req\n *      Session.on('login', function (req) {\n *          var uData = Session.uData\n *          uData.someCustomProperty = 'Hello!'\n *      })\n *\n * See real life example inside `@unitybase/org/org.js`.\n * @event login\n * @memberOf Session\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 210,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Fires just after user successfully logged-in but before auth response is written to client.\nModel developer can subscribe to this event and add some model specific data to Session.uData.</p>\n<p>Since all uData content is passed to client and accessible on client via\n $App.connection.userData(<code>someCustomProperty</code>) do not add there a security sensitive data.</p>\n<p>Standard models like <code>@unitybase/uba</code> and <code>@unitybase/org</code> are subscribed to this event and add\nmost useful information to the uData - {@link namespace:Session.uData Session.uData} documentation.\nNever override <code>uData</code> using <code>Session.uData = {...}</code>, in this case you delete uData properties,\ndefined in other application models.\nInstead define or remove properties using <code>Session.uData.myProperty = ...</code>\nor use <code>delete Session.uData.myProperty</code> if you need to undefine something.</p>\n<p>Example below add <code>someCustomProperty</code> to Session.uData:</p>\n<pre class=\"prettyprint source\"><code> // @param {THTTPRequest} req\n Session.on('login', function (req) {\n     var uData = Session.uData\n     uData.someCustomProperty = 'Hello!'\n })</code></pre><p>See real life example inside <code>@unitybase/org/org.js</code>.",
    "kind": "event",
    "name": "login",
    "memberof": "Session",
    "scope": "static",
    "longname": "Session.event:login",
    "___id": "T000002R006019",
    "___s": true
  },
  {
    "comment": "/**\n * Fires in case `auth` endpoint is called with authentication schema UB and userName is founded in database,\n * but password is incorrect.\n *\n * If wrong passord is entered more  than `UBA.passwordPolicy.maxInvalidAttempts`(from ubs_settings) times\n * user will be locked\n *\n * 2 parameters are passes to this event userID(Number) and isUserLocked(Boolean)\n *\n *      Session.on('loginFailed', function(userID, isLocked){\n *          if (isLocked)\n *              console.log('User with id ', userID, 'entered wrong password and locked');\n *          else\n *              console.log('User with id ', userID, 'entered wrong password');\n *      })\n *\n * @memberOf Session\n * @event loginFailed\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 304,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "<p>Fires in case <code>auth</code> endpoint is called with authentication schema UB and userName is founded in database,\nbut password is incorrect.</p>\n<p>If wrong passord is entered more  than <code>UBA.passwordPolicy.maxInvalidAttempts</code>(from ubs_settings) times\nuser will be locked</p>\n<p>2 parameters are passes to this event userID(Number) and isUserLocked(Boolean)</p>\n<pre class=\"prettyprint source\"><code> Session.on('loginFailed', function(userID, isLocked){\n     if (isLocked)\n         console.log('User with id ', userID, 'entered wrong password and locked');\n     else\n         console.log('User with id ', userID, 'entered wrong password');\n })</code></pre>",
    "memberof": "Session",
    "kind": "event",
    "name": "loginFailed",
    "scope": "static",
    "longname": "Session.event:loginFailed",
    "___id": "T000002R006022",
    "___s": true
  },
  {
    "comment": "/**\n * Legacy event **CERT authentication schema** only\n *\n * For CERT schema user registered means `auth` endpoint is called with registration=1 parameter.\n *\n * Called before start event \"registration\" and before starting check the user. You can create new user inside this event.\n *\n * Parameter is look like\n *\n *      {\n *          \"authType\": 'CERT',\n *          \"serialSign\": '<serialSign>',\n *          \"name\": '<user name>',\n *          \"additional\": '',\n *          \"issuer\": '<issuer>',\n *          \"serial\": '<serial>',\n *          \"certification_b64\": '<certification_b64>'\n *      }\n *\n * @memberOf Session\n * @event newUserRegistration\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 281,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "<p>Legacy event <strong>CERT authentication schema</strong> only</p>\n<p>For CERT schema user registered means <code>auth</code> endpoint is called with registration=1 parameter.</p>\n<p>Called before start event &quot;registration&quot; and before starting check the user. You can create new user inside this event.</p>\n<p>Parameter is look like</p>\n<pre class=\"prettyprint source\"><code> {\n     &quot;authType&quot;: 'CERT',\n     &quot;serialSign&quot;: '&lt;serialSign>',\n     &quot;name&quot;: '&lt;user name>',\n     &quot;additional&quot;: '',\n     &quot;issuer&quot;: '&lt;issuer>',\n     &quot;serial&quot;: '&lt;serial>',\n     &quot;certification_b64&quot;: '&lt;certification_b64>'\n }</code></pre>",
    "memberof": "Session",
    "kind": "event",
    "name": "newUserRegistration",
    "scope": "static",
    "longname": "Session.event:newUserRegistration",
    "___id": "T000002R006021",
    "___s": true
  },
  {
    "comment": "/**\n * Fires in case new user registered in system and authentication schema support\n * \"registration\" feature.\n *\n * Currently only CERT and UB schemas support this feature.\n *\n * For CERT schema user registered means `auth` endpoint is called with registration=1 parameter.\n *\n * For UB schema user registered means 'publicRegistration' endpoint has been called and user confirmed\n * registration by email otp.\n *\n * Inside event handler server-side Session object is in INCONSISTENT state and you must not use it!!\n * Only parameter (stringified object), passed to event is valid user-relative information.\n *\n * For CERT schema parameter is look like\n *\n *      {\n *          \"authType\": 'CERT',\n *          \"id_cert\": '<id_cert>',\n *          \"user_name\": '<user_name>',\n *          \"additional\": '',\n *          \"certification_b64\": '<certification_b64>'\n *      }\n *\n * For UB schema parameter is look like\n *\n *      {\n *          \"authType\": 'UB',\n *          \"publicRegistration\": true,\n *          userID,\n            userOtpData\n *      }\n *\n * Each AUTH schema can pass his own object as a event parameter, but all schema add `authType`.\n * Below is a sample code for CERT schema:\n *\n *      Session.on('registration', function(registrationParams){\n *\n *      }\n *\n * @memberOf Session\n * @event registration\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 237,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "<p>Fires in case new user registered in system and authentication schema support\n&quot;registration&quot; feature.</p>\n<p>Currently only CERT and UB schemas support this feature.</p>\n<p>For CERT schema user registered means <code>auth</code> endpoint is called with registration=1 parameter.</p>\n<p>For UB schema user registered means 'publicRegistration' endpoint has been called and user confirmed\nregistration by email otp.</p>\n<p>Inside event handler server-side Session object is in INCONSISTENT state and you must not use it!!\nOnly parameter (stringified object), passed to event is valid user-relative information.</p>\n<p>For CERT schema parameter is look like</p>\n<pre class=\"prettyprint source\"><code> {\n     &quot;authType&quot;: 'CERT',\n     &quot;id_cert&quot;: '&lt;id_cert>',\n     &quot;user_name&quot;: '&lt;user_name>',\n     &quot;additional&quot;: '',\n     &quot;certification_b64&quot;: '&lt;certification_b64>'\n }</code></pre><p>For UB schema parameter is look like</p>\n<pre class=\"prettyprint source\"><code> {\n     &quot;authType&quot;: 'UB',\n     &quot;publicRegistration&quot;: true,\n     userID,\n        userOtpData\n }</code></pre><p>Each AUTH schema can pass his own object as a event parameter, but all schema add <code>authType</code>.\nBelow is a sample code for CERT schema:</p>\n<pre class=\"prettyprint source\"><code> Session.on('registration', function(registrationParams){\n\n }</code></pre>",
    "memberof": "Session",
    "kind": "event",
    "name": "registration",
    "scope": "static",
    "longname": "Session.event:registration",
    "___id": "T000002R006020",
    "___s": true
  },
  {
    "comment": "/**\n * Fires in case of any security violation:\n *\n *  - user is blocked or not exists (in uba_user)\n *  - user provide wrong credential (password, domain, encripted secret key, certificate etc)\n *  - for 2-factor auth schemas - too many sessions in pending state (max is 128)\n *  - access to endpoint \"%\" deny for user (endpoint name not present in uba_role.allowedAppMethods for eny user roles)\n *  - password for user is expired (see ubs_settings UBA.passwordPolicy.maxDurationDays key)\n *  - entity method access deny by ELS (see rules in uba_els)\n *\n * Single parameter is passes to this event `reason: string`\n *\n *      Session.on('securityViolation', function(reason){\n *          console.log('Security violation for user with ID', Session.userID, 'from', Session.callerIP, 'reason', reason);\n *      })\n *\n * @memberOf Session\n * @event securityViolation\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 324,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "<p>Fires in case of any security violation:</p>\n<ul>\n<li>user is blocked or not exists (in uba_user)</li>\n<li>user provide wrong credential (password, domain, encripted secret key, certificate etc)</li>\n<li>for 2-factor auth schemas - too many sessions in pending state (max is 128)</li>\n<li>access to endpoint &quot;%&quot; deny for user (endpoint name not present in uba_role.allowedAppMethods for eny user roles)</li>\n<li>password for user is expired (see ubs_settings UBA.passwordPolicy.maxDurationDays key)</li>\n<li>entity method access deny by ELS (see rules in uba_els)</li>\n</ul>\n<p>Single parameter is passes to this event <code>reason: string</code></p>\n<pre class=\"prettyprint source\"><code> Session.on('securityViolation', function(reason){\n     console.log('Security violation for user with ID', Session.userID, 'from', Session.callerIP, 'reason', reason);\n })</code></pre>",
    "memberof": "Session",
    "kind": "event",
    "name": "securityViolation",
    "scope": "static",
    "longname": "Session.event:securityViolation",
    "___id": "T000002R006023",
    "___s": true
  },
  {
    "comment": "/**\n * Current session identifier. === 0 if session not started, ===1 in case authentication not used, >1 in case user authorized\n * @member {number} id\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 32,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Current session identifier. === 0 if session not started, ===1 in case authentication not used, &gt;1 in case user authorized",
    "kind": "member",
    "name": "id",
    "type": {
      "names": [
        "number"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.id",
    "___id": "T000002R005986",
    "___s": true
  },
  {
    "comment": "/**\n * Call function as build-in `admin` user. `runAs*` functions allow maximum of 2 level depth of recursion.\n *\n * Built-in \"always alive\"(newer expired) `admin` session is always created when the application starts,\n * so this is very cheap method - it will not trigger Session.login event every time context is switched (Session.setUser and Session.runAsUser does)\n * Can be used in scheduled tasks, not-authorized methods, etc. to obtain a `admin` Session context\n * @param {Function} func Function to be called in admin context\n * @returns {*}\n */",
    "meta": {
      "range": [
        7347,
        7533
      ],
      "filename": "Session.js",
      "lineno": 181,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062601",
        "name": "Session.runAsAdmin",
        "type": "FunctionExpression",
        "paramnames": [
          "func"
        ]
      },
      "vars": {
        "result": "Session.runAsAdmin~result"
      }
    },
    "description": "Call function as build-in <code>admin</code> user. <code>runAs*</code> functions allow maximum of 2 level depth of recursion.</p>\n<p>Built-in &quot;always alive&quot;(newer expired) <code>admin</code> session is always created when the application starts,\nso this is very cheap method - it will not trigger Session.login event every time context is switched (Session.setUser and Session.runAsUser does)\nCan be used in scheduled tasks, not-authorized methods, etc. to obtain a <code>admin</code> Session context",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Function to be called in admin context",
        "name": "func"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "runAsAdmin",
    "longname": "Session.runAsAdmin",
    "kind": "function",
    "memberof": "Session",
    "scope": "static",
    "___id": "T000002R006013",
    "___s": true
  },
  {
    "comment": "/**\n * Call function as a specified user. `runAs*` functions allow maximum of 2 level depth of recursion.\n *\n * New session will be created. Will fire `login` event.\n * @param userID ID of  user\n * @param func Function to be called in user's session.\n * @returns {*}\n */",
    "meta": {
      "range": [
        7805,
        8001
      ],
      "filename": "Session.js",
      "lineno": 199,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062632",
        "name": "Session.runAsUser",
        "type": "FunctionExpression",
        "paramnames": [
          "userID",
          "func"
        ]
      },
      "vars": {
        "result": "Session.runAsUser~result"
      }
    },
    "description": "Call function as a specified user. <code>runAs*</code> functions allow maximum of 2 level depth of recursion.</p>\n<p>New session will be created. Will fire <code>login</code> event.",
    "params": [
      {
        "description": "ID of  user",
        "name": "userID"
      },
      {
        "description": "Function to be called in user's session.",
        "name": "func"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "runAsUser",
    "longname": "Session.runAsUser",
    "kind": "function",
    "memberof": "Session",
    "scope": "static",
    "___id": "T000002R006016",
    "___s": true
  },
  {
    "comment": "/**\n * Create new session for userID\n * @method\n * @param {Number} userID ID of  user\n * @param {String} [secret] secret word. If defined then session secretWord is `JSON.parse(returns).result+secret`\n * @returns {String} JSON string like answer on auth request\n */",
    "meta": {
      "range": [
        6749,
        6792
      ],
      "filename": "Session.js",
      "lineno": 171,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100062593",
        "name": "Session.setUser",
        "type": "MemberExpression",
        "value": "sessionBinding.switchUser",
        "paramnames": []
      }
    },
    "description": "Create new session for userID",
    "kind": "function",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "ID of  user",
        "name": "userID"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "secret word. If defined then session secretWord is <code>JSON.parse(returns).result+secret</code>",
        "name": "secret"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<p>JSON string like answer on auth request</p>"
      }
    ],
    "name": "setUser",
    "longname": "Session.setUser",
    "memberof": "Session",
    "scope": "static",
    "___id": "T000002R006012",
    "___s": true
  },
  {
    "comment": "/**\n * Custom properties, defined in {@link Session.login Session.on('login')} handlers for logged-in user.\n * We strongly recommend to **not modify** value of uData outside the `Session.on('login')` handler -\n * such modification is not persisted between calls.\n *\n * Properties documented below are added by `@unitybase/uba` model, but other model can define his own properties.\n *\n * @member {Object} uData\n * @memberOf Session\n * @property {number} userID Logged in user ID. The same as Session.userID. Added by `ub` model\n * @property {string} login Logged in user name. Added by `ub` model\n * @property {string} roles Logged in user roles names separated by comma. In most case better to use uData.roleIDs array. Added by `ub` model\n * @property {Array<number>} roleIDs Array or role IDs for logged in user roles. Added by `ub` model\n * @property {Array<number>} groupIDs Array or group IDs for logged in user roles. Added by `ub` model\n * @property {string} [employeeShortFIO] Short name of employee. Added by `ub` model from uba_user.firstName. `org` model override it\n * @property {string} [employeeFullFIO] Full name of employee. Added by `ub` model from uba_user.fullName. `org` model override it\n * @property {number} [employeeID] Employee ID\n * @property {string} [staffUnitFullName]\n * @property {string} [staffUnitName]\n * @property {number} [staffUnitID] permanent staffUnitID. Added by `org` model\n * @property {number} [employeeOnStaffID] permanent employeeOnStaffID. Added by `org` model\n * @property {number} [parentID] permanent staffUnitID parent. Added by `org` model\n * @property {string} [parentUnityEntity] permanent staffUnitID parent entity type. Added by `org` model\n * @property {string} [orgUnitIDs] all orgUnit's IDs as CSV string. Added by `org` model\n * @property {string} [permanentOrgUnitIDs] all user orgUnit ID's permanent employeeOnStaffIDs in CSV. Added by `org` model\n * @property {string} [tempStaffUnitIDs] array temporary staffUnitIDs in CSV. Added by `org` model\n * @property {string} [tempEmployeeOnStaffIDs] array of temporary employeeOnStaffIDs in CSV. Added by `org` model\n * @property {string} [assistantStaffUnitIDs] array of assistant staffUnitIDs in CSV. Added by `org` model\n * @property {string} [assistantEmployeeOnStaffIDs] array of assistant employeeOnStaffIDs  in CSV. Added by `org` model\n * @property {string} [allStaffUnitIDs] array of all (permanent + temporary + assistant) staffUnitIDs in CSV. Added by `org` model\n * @property {string} [allEmployeeOnStaffIDs] array of all (permanent + temporary + assistant) employeeOnStaffIds in CSV. Added by `org` model\n * @property {string} [tempPositions] stringified array ob temporary position objects: {staffUnitID, employeeOnStaffID}. Added by `org` model\n * @property {string} [assistantPositions] stringified array ob assistant position objects: {staffUnitID, employeeOnStaffID}. Added by `org` model\n * @property {string} [allPositions] stringified array of permanent + temporary + assistant position objects: {staffUnitID, employeeOnStaffID}. Added by `org` model\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 102,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Custom properties, defined in {@link Session.login Session.on('login')} handlers for logged-in user.\nWe strongly recommend to <strong>not modify</strong> value of uData outside the <code>Session.on('login')</code> handler -\nsuch modification is not persisted between calls.</p>\n<p>Properties documented below are added by <code>@unitybase/uba</code> model, but other model can define his own properties.",
    "kind": "member",
    "name": "uData",
    "type": {
      "names": [
        "Object"
      ]
    },
    "memberof": "Session",
    "properties": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Logged in user ID. The same as Session.userID. Added by <code>ub</code> model</p>",
        "name": "userID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Logged in user name. Added by <code>ub</code> model</p>",
        "name": "login"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Logged in user roles names separated by comma. In most case better to use uData.roleIDs array. Added by <code>ub</code> model</p>",
        "name": "roles"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "<p>Array or role IDs for logged in user roles. Added by <code>ub</code> model</p>",
        "name": "roleIDs"
      },
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "<p>Array or group IDs for logged in user roles. Added by <code>ub</code> model</p>",
        "name": "groupIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Short name of employee. Added by <code>ub</code> model from uba_user.firstName. <code>org</code> model override it</p>",
        "name": "employeeShortFIO"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Full name of employee. Added by <code>ub</code> model from uba_user.fullName. <code>org</code> model override it</p>",
        "name": "employeeFullFIO"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>Employee ID</p>",
        "name": "employeeID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "staffUnitFullName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "staffUnitName"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>permanent staffUnitID. Added by <code>org</code> model</p>",
        "name": "staffUnitID"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>permanent employeeOnStaffID. Added by <code>org</code> model</p>",
        "name": "employeeOnStaffID"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>permanent staffUnitID parent. Added by <code>org</code> model</p>",
        "name": "parentID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>permanent staffUnitID parent entity type. Added by <code>org</code> model</p>",
        "name": "parentUnityEntity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>all orgUnit's IDs as CSV string. Added by <code>org</code> model</p>",
        "name": "orgUnitIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>all user orgUnit ID's permanent employeeOnStaffIDs in CSV. Added by <code>org</code> model</p>",
        "name": "permanentOrgUnitIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array temporary staffUnitIDs in CSV. Added by <code>org</code> model</p>",
        "name": "tempStaffUnitIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array of temporary employeeOnStaffIDs in CSV. Added by <code>org</code> model</p>",
        "name": "tempEmployeeOnStaffIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array of assistant staffUnitIDs in CSV. Added by <code>org</code> model</p>",
        "name": "assistantStaffUnitIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array of assistant employeeOnStaffIDs  in CSV. Added by <code>org</code> model</p>",
        "name": "assistantEmployeeOnStaffIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array of all (permanent + temporary + assistant) staffUnitIDs in CSV. Added by <code>org</code> model</p>",
        "name": "allStaffUnitIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>array of all (permanent + temporary + assistant) employeeOnStaffIds in CSV. Added by <code>org</code> model</p>",
        "name": "allEmployeeOnStaffIDs"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>stringified array ob temporary position objects: {staffUnitID, employeeOnStaffID}. Added by <code>org</code> model</p>",
        "name": "tempPositions"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>stringified array ob assistant position objects: {staffUnitID, employeeOnStaffID}. Added by <code>org</code> model</p>",
        "name": "assistantPositions"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>stringified array of permanent + temporary + assistant position objects: {staffUnitID, employeeOnStaffID}. Added by <code>org</code> model</p>",
        "name": "allPositions"
      }
    ],
    "readonly": true,
    "scope": "static",
    "longname": "Session.uData",
    "___id": "T000002R006003",
    "___s": true
  },
  {
    "comment": "/**\n * Logged-in user identifier (from uba_user.ID). Undefined if Session.id is 0 or 1 (no authentication running)\n * @member {number} userID\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 44,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Logged-in user identifier (from uba_user.ID). Undefined if Session.id is 0 or 1 (no authentication running)",
    "kind": "member",
    "name": "userID",
    "type": {
      "names": [
        "number"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.userID",
    "___id": "T000002R005989",
    "___s": true
  },
  {
    "comment": "/**\n * Logged-in user language. ===\"\" if no authentication running\n * @member {string} userLang\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 86,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Logged-in user language. ===&quot;&quot; if no authentication running",
    "kind": "member",
    "name": "userLang",
    "type": {
      "names": [
        "string"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.userLang",
    "___id": "T000002R005999",
    "___s": true
  },
  {
    "comment": "/**\n * Logged-in user role names in CSV format. ===\"\" if no authentication running\n * @deprecated Use Session.uData.roles\n * @member {string} userRoleNames\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 72,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Logged-in user role names in CSV format. ===&quot;&quot; if no authentication running",
    "deprecated": "Use Session.uData.roles",
    "kind": "member",
    "name": "userRoleNames",
    "type": {
      "names": [
        "string"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.userRoleNames",
    "___id": "T000002R005996",
    "___s": true
  },
  {
    "comment": "/**\n * Logged-in user role IDs in CSV format. ===\"\" if no authentication running\n * @deprecated Use Session.uData.roleIDs - an array of roles IDs\n * @member {number} userRoles\n * @memberOf Session\n * @readonly\n */",
    "meta": {
      "filename": "Session.js",
      "lineno": 56,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "description": "Logged-in user role IDs in CSV format. ===&quot;&quot; if no authentication running",
    "deprecated": "Use Session.uData.roleIDs - an array of roles IDs",
    "kind": "member",
    "name": "userRoles",
    "type": {
      "names": [
        "number"
      ]
    },
    "memberof": "Session",
    "readonly": true,
    "scope": "static",
    "longname": "Session.userRoles",
    "___id": "T000002R005992",
    "___s": true
  },
  {
    "comment": "/**\r\n     * This function is  to be compatible with node.js\r\n     * @global\t\t\r\n     * @param {Function} callback\r\n     * @param {...*} arg\r\n     * @return {Number} immediateId\t\r\n     */",
    "meta": {
      "range": [
        4000,
        4715
      ],
      "filename": "synode.js",
      "lineno": 124,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100031019",
        "name": "global.setImmediate",
        "type": "FunctionExpression",
        "paramnames": [
          "callback",
          "arg1",
          "arg2",
          "arg3"
        ]
      },
      "vars": {
        "i": "module:buildin~i",
        "args": "module:buildin~args",
        "args[undefined]": "module:buildin~args.undefined]"
      }
    },
    "description": "This function is  to be compatible with node.js",
    "scope": "global",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "arg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>immediateId</p>"
      }
    ],
    "name": "setImmediate",
    "longname": "setImmediate",
    "kind": "function",
    "___id": "T000002R002685",
    "___s": true
  },
  {
    "comment": "/**\r\n     * Block thread for a specified number of milliseconds\r\n     * @param {Number} ms millisecond to sleep\r\n     * @global\t\r\n     */",
    "meta": {
      "range": [
        2496,
        2542
      ],
      "filename": "synode.js",
      "lineno": 75,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100030851",
        "name": "global.sleep",
        "type": "MemberExpression",
        "value": ".sleep",
        "paramnames": []
      }
    },
    "description": "Block thread for a specified number of milliseconds",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "millisecond to sleep",
        "name": "ms"
      }
    ],
    "scope": "global",
    "name": "sleep",
    "longname": "sleep",
    "kind": "member",
    "___id": "T000002R002673",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Pessimistic Lock implementation\n * @mixin\n */",
    "meta": {
      "range": [
        5646,
        6218
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 207,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008797",
        "name": "softLock",
        "type": "ObjectExpression",
        "value": "{\"lock\":\"\",\"unlock\":\"\",\"renewLock\":\"\",\"isLocked\":\"\"}"
      }
    },
    "description": "Mixin. Pessimistic Lock implementation",
    "kind": "mixin",
    "name": "softLock",
    "longname": "softLock",
    "scope": "global",
    "params": [],
    "___id": "T000002R000858",
    "___s": true
  },
  {
    "comment": "/**\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        6189,
        6216
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 231,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008812",
        "name": "isLocked",
        "type": "FunctionExpression"
      }
    },
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "isLocked",
    "longname": "softLock.isLocked",
    "kind": "function",
    "memberof": "softLock",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000862",
    "___s": true
  },
  {
    "comment": "/**\n   * Lock entity row. In case entity row not locked `update` & `delete` operation are not permitted\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.ID\n   */",
    "meta": {
      "range": [
        5858,
        5881
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 214,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008800",
        "name": "lock",
        "type": "FunctionExpression"
      }
    },
    "description": "Lock entity row. In case entity row not locked <code>update</code> &amp; <code>delete</code> operation are not permitted",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctx.mParams.ID"
      }
    ],
    "name": "lock",
    "longname": "softLock.lock",
    "kind": "function",
    "memberof": "softLock",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000859",
    "___s": true
  },
  {
    "comment": "/**\n   * @published\n   * @param {ubMethodParams} ctx\n   */",
    "meta": {
      "range": [
        6096,
        6124
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 226,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008808",
        "name": "renewLock",
        "type": "FunctionExpression"
      }
    },
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "name": "renewLock",
    "longname": "softLock.renewLock",
    "kind": "function",
    "memberof": "softLock",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000861",
    "___s": true
  },
  {
    "comment": "/**\n   * Unlock entity row.\n   * @published\n   * @param {ubMethodParams} ctx\n   * @param {number} ctx.mParams.ID\n   */",
    "meta": {
      "range": [
        6006,
        6031
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 221,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008804",
        "name": "unlock",
        "type": "FunctionExpression"
      }
    },
    "description": "Unlock entity row.",
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctx.mParams.ID"
      }
    ],
    "name": "unlock",
    "longname": "softLock.unlock",
    "kind": "function",
    "memberof": "softLock",
    "scope": "static",
    "access": "published",
    "___id": "T000002R000860",
    "___s": true
  },
  {
    "comment": "/** @type {ubq_scheduler_ns} */",
    "meta": {
      "range": [
        1529,
        1549
      ],
      "filename": "ubq.js",
      "lineno": 39,
      "columnno": 40,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078232",
        "name": "item",
        "type": "MemberExpression",
        "value": "schedulers[undefined]"
      }
    },
    "type": {
      "names": [
        "ubq_scheduler_ns"
      ]
    },
    "name": "item",
    "longname": "startSchedulers~item",
    "kind": "member",
    "memberof": "startSchedulers",
    "scope": "inner",
    "params": [],
    "___id": "T000002R007627",
    "___s": true
  },
  {
    "comment": "/** @type {Array<ubq_scheduler_ns>} */",
    "meta": {
      "range": [
        1362,
        1433
      ],
      "filename": "ubq.js",
      "lineno": 37,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {
        "id": "astnode100078201",
        "name": "schedulers",
        "type": "CallExpression",
        "value": ""
      }
    },
    "type": {
      "names": [
        "Array.<ubq_scheduler_ns>"
      ]
    },
    "name": "schedulers",
    "longname": "startSchedulers~schedulers",
    "kind": "member",
    "memberof": "startSchedulers",
    "scope": "inner",
    "params": [],
    "___id": "T000002R007624",
    "___s": true
  },
  {
    "comment": "/**\n * Set up a hook for message type.\n * Function suppose to be called on server start.\n *\n * @param {string} messageType\n * @param {function} handler\n */",
    "meta": {
      "range": [
        750,
        1190
      ],
      "filename": "messageHandlers.js",
      "lineno": 36,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/exchange",
      "code": {
        "id": "astnode100097144",
        "name": "subscribeToMessageType",
        "type": "FunctionDeclaration",
        "paramnames": [
          "messageType",
          "handler"
        ]
      },
      "vars": {
        "messageTypeHandlers[undefined]": null
      }
    },
    "description": "Set up a hook for message type.\nFunction suppose to be called on server start.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "messageType"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "handler"
      }
    ],
    "name": "subscribeToMessageType",
    "longname": "subscribeToMessageType",
    "kind": "function",
    "scope": "global",
    "___id": "T000002R010253",
    "___s": true
  },
  {
    "comment": "/**\n * Synchronous server-side connection to the UnityBase instance. To be used only inside UnityBase.\n * For nodeJS & browser use asynchronous UBConnection class from @unitybase/ub-pub package.\n *\n * The most used method is {@link SyncConnection#query  SyncConnection.query} - a authorized request to `ubql` endpoint.\n *\n\n    const SyncConnection = require('@unitybase/base').SyncConnection\n    let conn = new SyncConnection({URL: 'http://localhost:888'})\n    conn.onRequestAuthParams = function(){ return {authSchema: 'UB', login: 'admin', password: 'admin'} }\n    var domain = conn.getDomainInfo();\n    if (domain.has('my_entity')){\n             ..\n    }\n\n * @class\n * @param {Object} options Connection parameters. See {@link module:http http.request} for details\n */",
    "meta": {
      "range": [
        1280,
        11318
      ],
      "filename": "SyncConnection.js",
      "lineno": 32,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001516",
        "name": "SyncConnection",
        "type": "FunctionDeclaration",
        "paramnames": [
          "options"
        ]
      },
      "vars": {
        "me": "SyncConnection~me",
        "client": "SyncConnection~client",
        "_domain": "SyncConnection~_domain",
        "ubSession": "SyncConnection~ubSession",
        "lookupCache": "SyncConnection~lookupCache",
        "userDataDefault": "SyncConnection~userDataDefault",
        "appInfo": "SyncConnection~appInfo",
        "this.clientRequest": "SyncConnection#clientRequest",
        "appName": "SyncConnection~appName",
        "servicePath": "SyncConnection~servicePath",
        "this.servicePath": "SyncConnection#servicePath",
        "this.appName": "SyncConnection#appName",
        "this.onRequestAuthParams": "SyncConnection#onRequestAuthParams",
        "this.getAppInfo": "SyncConnection#getAppInfo",
        "": null,
        "this.getDomainInfo": "SyncConnection#getDomainInfo",
        "this.queryMethod": "SyncConnection#queryMethod",
        "this.encryptContent": "SyncConnection#encryptContent",
        "this.serverCertificate": "SyncConnection#serverCertificate",
        "this.sessionKeyLifeTime": "SyncConnection#sessionKeyLifeTime",
        "this.authMethods": "SyncConnection#authMethods",
        "this.authNeed": "SyncConnection#authNeed",
        "this.appConfig": "SyncConnection#appConfig",
        "this.authorize": "SyncConnection#authorize",
        "this.isAuthorized": "SyncConnection#isAuthorized",
        "this.userLogin": "SyncConnection#userLogin",
        "this.userLang": "SyncConnection#userLang",
        "this.userData": "SyncConnection#userData",
        "this.lookup": "SyncConnection#lookup"
      }
    },
    "description": "<p>Synchronous server-side connection to the UnityBase instance. To be used only inside UnityBase.\nFor nodeJS &amp; browser use asynchronous UBConnection class from @unitybase/ub-pub package.</p>\n<p>The most used method is {@link SyncConnection#query  SyncConnection.query} - a authorized request to <code>ubql</code> endpoint.</p>\n<pre class=\"prettyprint source\"><code>const SyncConnection = require('@unitybase/base').SyncConnection\nlet conn = new SyncConnection({URL: 'http://localhost:888'})\nconn.onRequestAuthParams = function(){ return {authSchema: 'UB', login: 'admin', password: 'admin'} }\nvar domain = conn.getDomainInfo();\nif (domain.has('my_entity')){\n         ..\n}</code></pre>",
    "kind": "class",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Connection parameters. See {@link module:http http.request} for details",
        "name": "options"
      }
    ],
    "name": "SyncConnection",
    "longname": "SyncConnection",
    "scope": "global",
    "___id": "T000002R000118",
    "___s": true
  },
  {
    "comment": "/**\n   * AdminUI settings\n   * @type {Object}\n   */",
    "meta": {
      "range": [
        4996,
        5031
      ],
      "filename": "SyncConnection.js",
      "lineno": 160,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001805",
        "name": "this.appConfig",
        "type": "MemberExpression",
        "value": "appInfo['adminUI']",
        "paramnames": []
      }
    },
    "description": "AdminUI settings",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "appConfig",
    "longname": "SyncConnection#appConfig",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000150",
    "___s": true
  },
  {
    "comment": "/**\n   * Name of UnityBase application\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2311,
        2333
      ],
      "filename": "SyncConnection.js",
      "lineno": 69,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001649",
        "name": "this.appName",
        "type": "Identifier",
        "value": "appName",
        "paramnames": []
      }
    },
    "description": "Name of UnityBase application",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "appName",
    "longname": "SyncConnection#appName",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000134",
    "___s": true
  },
  {
    "comment": "/**\n   * Possible server authentication method\n   * @type {Array.<string>}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4700,
        4738
      ],
      "filename": "SyncConnection.js",
      "lineno": 146,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001781",
        "name": "this.authMethods",
        "type": "MemberExpression",
        "value": "appInfo.authMethods",
        "paramnames": []
      }
    },
    "description": "Possible server authentication method",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "readonly": true,
    "name": "authMethods",
    "longname": "SyncConnection#authMethods",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000148",
    "___s": true
  },
  {
    "comment": "/**\n   * Is UnityBase server require authorization\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4837,
        4898
      ],
      "filename": "SyncConnection.js",
      "lineno": 153,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001789",
        "name": "this.authNeed",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Is UnityBase server require authorization",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "authNeed",
    "longname": "SyncConnection#authNeed",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000149",
    "___s": true
  },
  {
    "comment": "/**\n  * Internal instance of HTTP client\n  * @type {ClientRequest}\n  * @protected\n  * @readonly\n  */",
    "meta": {
      "range": [
        1619,
        1646
      ],
      "filename": "SyncConnection.js",
      "lineno": 48,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001554",
        "name": "this.clientRequest",
        "type": "Identifier",
        "value": "client",
        "paramnames": []
      }
    },
    "description": "Internal instance of HTTP client",
    "type": {
      "names": [
        "ClientRequest"
      ]
    },
    "access": "protected",
    "readonly": true,
    "name": "clientRequest",
    "longname": "SyncConnection#clientRequest",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000127",
    "___s": true
  },
  {
    "comment": "/** Is server require content encryption\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4217,
        4270
      ],
      "filename": "SyncConnection.js",
      "lineno": 127,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001751",
        "name": "this.encryptContent",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Is server require content encryption",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "encryptContent",
    "longname": "SyncConnection#encryptContent",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000145",
    "___s": true
  },
  {
    "comment": "/**\n * Perform get request to `endpoint` with optional URLParams.\n * @param {String} endpoint\n * @param {*} [URLParams]\n * @returns {ArrayBuffer|Object|String}\n */",
    "meta": {
      "range": [
        15467,
        15675
      ],
      "filename": "SyncConnection.js",
      "lineno": 440,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002886",
        "name": "SyncConnection.prototype.get",
        "type": "FunctionExpression",
        "paramnames": [
          "endpoint",
          "URLParams"
        ]
      },
      "vars": {
        "params": "SyncConnection#get~params",
        "params.URLParams": "SyncConnection#get~params.URLParams"
      }
    },
    "description": "Perform get request to <code>endpoint</code> with optional URLParams.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "endpoint"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "name": "URLParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        }
      }
    ],
    "name": "get",
    "longname": "SyncConnection#get",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000234",
    "___s": true
  },
  {
    "comment": "/**\n   * Return information about how application is configured as returned by `getAppInfo` endpoint\n   * @return {Object}\n   */",
    "meta": {
      "range": [
        3208,
        3262
      ],
      "filename": "SyncConnection.js",
      "lineno": 93,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001669",
        "name": "this.getAppInfo",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return information about how application is configured as returned by <code>getAppInfo</code> endpoint",
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "getAppInfo",
    "longname": "SyncConnection#getAppInfo",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000137",
    "___s": true
  },
  {
    "comment": "/**\n * Retrieve content of `document` type attribute field from server. Usage samples:\n *\n *      //Retrieve content of document as string using GET\n *      let frmContent = conn.getDocument({\n *          entity:'ubm_form',\n *          attribute: 'formDef',\n *          ID: 100000232003\n *       })\n *       console.log(typeof frmContent)\n *\n *      //The same, but using POST for bypass cache\n *      let frmContent = conn.getDocument({\n *          entity:'ubm_form',\n *          attribute: 'formDef',\n *          ID: 100000232003\n *       }, {\n *          bypassCache: true\n *       })\n *       console.log(typeof frmContent) // string\n *\n *\n *      //Retrieve content of document as ArrayBuffer and bypass cache\n *      let frmContent = conn.getDocument({\n *          entity:'ubm_form',\n *          attribute: 'formDef',\n *          ID: 100000232003\n *       }, {\n *          bypassCache: true, resultIsBinary: true\n *       })\n *       console.log('Result is', typeof frmContent, 'of length' , frmContent.byteLength, 'bytes'); //output: Result is object of length 2741 bytes\n *\n * @param {Object} params\n * @param {String} params.entity Code of entity to retrieve from\n * @param {String} params.attribute `document` type attribute code\n * @param {Number} params.id Instance ID\n * @param {String} [params.forceMime] If passed and server support transformation from source MIME type to `forceMime` server perform transformation and return documenRt representation in the passed MIME\n * @param {Number} [params.revision] Optional revision of the documnet (if supported by server-side store configuration). Default is current revision.\n * @param {String} [params.fileName] ????\n * @param {Boolean} [params.isDirty=false] Optional ability to retrieve document in **dirty** state\n * @param {String} [params.store] ????\n *\n * @param {Object} [options] Additional request options\n * @param {Boolean} [options.resultIsBinary=false] if true - return document content as arrayBuffer\n * @param {Boolean} [options.bypassCache] HTTP POST verb will be used instead of GET for bypass browser cache\n * @returns {ArrayBuffer|String} Document content (either ArrayBuffer in case options.resultIsBinary===true or text/json)\n */",
    "meta": {
      "range": [
        21530,
        22147
      ],
      "filename": "SyncConnection.js",
      "lineno": 597,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003124",
        "name": "SyncConnection.prototype.getDocument",
        "type": "FunctionExpression",
        "paramnames": [
          "params",
          "options"
        ]
      },
      "vars": {
        "opt": "SyncConnection#getDocument~opt",
        "reqParams": "SyncConnection#getDocument~reqParams",
        "reqParams.responseType": "SyncConnection#getDocument~reqParams.responseType",
        "reqParams.data": "SyncConnection#getDocument~reqParams.data",
        "": null,
        "reqParams.URLParams": "SyncConnection#getDocument~reqParams.URLParams"
      }
    },
    "description": "<p>Retrieve content of <code>document</code> type attribute field from server. Usage samples:</p>\n<pre class=\"prettyprint source\"><code> //Retrieve content of document as string using GET\n let frmContent = conn.getDocument({\n     entity:'ubm_form',\n     attribute: 'formDef',\n     ID: 100000232003\n  })\n  console.log(typeof frmContent)\n\n //The same, but using POST for bypass cache\n let frmContent = conn.getDocument({\n     entity:'ubm_form',\n     attribute: 'formDef',\n     ID: 100000232003\n  }, {\n     bypassCache: true\n  })\n  console.log(typeof frmContent) // string\n\n\n //Retrieve content of document as ArrayBuffer and bypass cache\n let frmContent = conn.getDocument({\n     entity:'ubm_form',\n     attribute: 'formDef',\n     ID: 100000232003\n  }, {\n     bypassCache: true, resultIsBinary: true\n  })\n  console.log('Result is', typeof frmContent, 'of length' , frmContent.byteLength, 'bytes'); //output: Result is object of length 2741 bytes</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "params"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Code of entity to retrieve from",
        "name": "params.entity"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "<code>document</code> type attribute code",
        "name": "params.attribute"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Instance ID",
        "name": "params.id"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "If passed and server support transformation from source MIME type to <code>forceMime</code> server perform transformation and return documenRt representation in the passed MIME",
        "name": "params.forceMime"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "Optional revision of the documnet (if supported by server-side store configuration). Default is current revision.",
        "name": "params.revision"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "????",
        "name": "params.fileName"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "Optional ability to retrieve document in <strong>dirty</strong> state",
        "name": "params.isDirty"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "????",
        "name": "params.store"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Additional request options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "if true - return document content as arrayBuffer",
        "name": "options.resultIsBinary"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "description": "HTTP POST verb will be used instead of GET for bypass browser cache",
        "name": "options.bypassCache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "description": "<p>Document content (either ArrayBuffer in case options.resultIsBinary===true or text/json)</p>"
      }
    ],
    "name": "getDocument",
    "longname": "SyncConnection#getDocument",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000269",
    "___s": true
  },
  {
    "comment": "/**\n   * Retrieve application domain information.\n   * @param {Boolean} [isExtended=false] For member of admin group cen return a addinitonal domain information, such as mappings, connection details, indexes\n   * @return {UBDomain}\n   */",
    "meta": {
      "range": [
        3506,
        3895
      ],
      "filename": "SyncConnection.js",
      "lineno": 102,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001678",
        "name": "this.getDomainInfo",
        "type": "FunctionExpression",
        "paramnames": [
          "isExtended"
        ]
      },
      "vars": {
        "domainData": "SyncConnection#getDomainInfo~domainData",
        "_domain": "SyncConnection#getDomainInfo~_domain"
      }
    },
    "description": "Retrieve application domain information.",
    "params": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "For member of admin group cen return a addinitonal domain information, such as mappings, connection details, indexes",
        "name": "isExtended"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "UBDomain"
          ]
        }
      }
    ],
    "name": "getDomainInfo",
    "longname": "SyncConnection#getDomainInfo",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000138",
    "___s": true
  },
  {
    "comment": "/**\n * Execute insert method by add method: 'insert' to `ubq` query (if req.method not already set)\n *\n * If `ubq.fieldList` contain only `ID` return inserted ID, else return array of attribute values passed to `fieldList`.\n * If no field list passed at all - return response.resultData (null usually).\n *\n        var testRole = conn.insert({\n            entity: 'uba_role',\n            fieldList: ['ID', 'mi_modifyDate'],\n            execParams: {\n                name: 'testRole1',\n                allowedAppMethods: 'runList'\n            }\n        });\n        console.log(testRole); //[3000000000200,\"2014-10-21T11:56:37Z\"]\n\n        var testRoleID = conn.insert({\n            entity: 'uba_role',\n            fieldList: ['ID'],\n            execParams: {\n                name: 'testRole1',\n                allowedAppMethods: 'runList'\n            }\n        });\n        console.log(testRoleID); //3000000000200\n *\n * @param {ubRequest} ubq\n * @return {*}\n */",
    "meta": {
      "range": [
        23108,
        23462
      ],
      "filename": "SyncConnection.js",
      "lineno": 648,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003230",
        "name": "SyncConnection.prototype.insert",
        "type": "FunctionExpression",
        "paramnames": [
          "ubq"
        ]
      },
      "vars": {
        "req": "SyncConnection#insert~req",
        "req.method": "SyncConnection#insert~req.method",
        "res": "SyncConnection#insert~res",
        "req.fieldList[0]": "SyncConnection#insert~req.fieldList[0]"
      }
    },
    "description": "<p>Execute insert method by add method: 'insert' to <code>ubq</code> query (if req.method not already set)</p>\n<p>If <code>ubq.fieldList</code> contain only <code>ID</code> return inserted ID, else return array of attribute values passed to <code>fieldList</code>.\nIf no field list passed at all - return response.resultData (null usually).</p>\n<pre class=\"prettyprint source\"><code>    var testRole = conn.insert({\n        entity: 'uba_role',\n        fieldList: ['ID', 'mi_modifyDate'],\n        execParams: {\n            name: 'testRole1',\n            allowedAppMethods: 'runList'\n        }\n    });\n    console.log(testRole); //[3000000000200,&quot;2014-10-21T11:56:37Z&quot;]\n\n    var testRoleID = conn.insert({\n        entity: 'uba_role',\n        fieldList: ['ID'],\n        execParams: {\n            name: 'testRole1',\n            allowedAppMethods: 'runList'\n        }\n    });\n    console.log(testRoleID); //3000000000200</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "ubRequest"
          ]
        },
        "name": "ubq"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "insert",
    "longname": "SyncConnection#insert",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000277",
    "___s": true
  },
  {
    "comment": "/**\n   * Check is current connection already perform authentication request\n   * @returns {boolean}\n   */",
    "meta": {
      "range": [
        8323,
        8390
      ],
      "filename": "SyncConnection.js",
      "lineno": 240,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002220",
        "name": "this.isAuthorized",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Check is current connection already perform authentication request",
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "isAuthorized",
    "longname": "SyncConnection#isAuthorized",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000190",
    "___s": true
  },
  {
    "comment": "/**\n * Logout from server if logged in\n */",
    "meta": {
      "range": [
        17366,
        17512
      ],
      "filename": "SyncConnection.js",
      "lineno": 493,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003020",
        "name": "SyncConnection.prototype.logout",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Logout from server if logged in",
    "name": "logout",
    "longname": "SyncConnection#logout",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000254",
    "___s": true
  },
  {
    "comment": "/**\n   * Lookup value in entity using aCondition.\n   *\n   *      // create condition using Repository\n   *      var myID = conn.lookup('ubm_enum', 'ID',\n   *           conn.Repository('ubm_enum').where('eGroup', '=', 'UBA_RULETYPE').where('code', '=', 'A').ubql().whereList\n   *          );\n   *      // or pass condition directly\n   *      var adminID = conn.lookup('uba_user', 'ID', {\n   *             expression: 'name', condition: 'equal', values: {nameVal: 'admin'}\n   *          });\n   *\n   * @param {String} aEntity - entity to lookup\n   * @param {String} lookupAttribute - attribute to lookup\n   * @param {String|Object} aCondition - lookup condition. String in case of custom expression,\n   *      or whereListItem {expression: condition: values: },\n   *      or whereList {condition1: {expression: condition: values: }, condition2: {}, ....}\n   * @param {Boolean} [doNotUseCache=false]\n   * @return {*} `lookupAttribute` value of first result row or null if not found.\n   */",
    "meta": {
      "range": [
        10263,
        11316
      ],
      "filename": "SyncConnection.js",
      "lineno": 297,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002288",
        "name": "this.lookup",
        "type": "FunctionExpression",
        "paramnames": [
          "aEntity",
          "lookupAttribute",
          "aCondition",
          "doNotUseCache"
        ]
      },
      "vars": {
        "me": "SyncConnection#lookup~me",
        "cKey": "SyncConnection#lookup~cKey",
        "request": "SyncConnection#lookup~request",
        "request.whereList": "SyncConnection#lookup~request.whereList",
        "resData": "SyncConnection#lookup~resData",
        "lookupCache[undefined]": "SyncConnection~lookupCache.undefined]"
      }
    },
    "description": "<p>Lookup value in entity using aCondition.</p>\n<pre class=\"prettyprint source\"><code> // create condition using Repository\n var myID = conn.lookup('ubm_enum', 'ID',\n      conn.Repository('ubm_enum').where('eGroup', '=', 'UBA_RULETYPE').where('code', '=', 'A').ubql().whereList\n     );\n // or pass condition directly\n var adminID = conn.lookup('uba_user', 'ID', {\n        expression: 'name', condition: 'equal', values: {nameVal: 'admin'}\n     });</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "entity to lookup",
        "name": "aEntity"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "attribute to lookup",
        "name": "lookupAttribute"
      },
      {
        "type": {
          "names": [
            "String",
            "Object"
          ]
        },
        "description": "lookup condition. String in case of custom expression,\n     or whereListItem {expression: condition: values: },\n     or whereList {condition1: {expression: condition: values: }, condition2: {}, ....}",
        "name": "aCondition"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "name": "doNotUseCache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p><code>lookupAttribute</code> value of first result row or null if not found.</p>"
      }
    ],
    "name": "lookup",
    "longname": "SyncConnection#lookup",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000195",
    "___s": true
  },
  {
    "comment": "/**\n   * Callback for resolving user credential.\n   * Take a {@link SyncConnection} as a parameter, must return authorization parameters object:\n   *\n   *      {authSchema: authType, login: login, password: password, [apiKey: ]}\n   *\n   * For a internal usage (requests from a locahost or other systems, etc.) and in case `authShema == 'UB'` it is possible to pass a\n   * `apiKey` instead of a password. apiKey is actually a `uba_user.uPasswordHashHexa` content\n   *\n   * @type {function}\n   */",
    "meta": {
      "range": [
        2833,
        2864
      ],
      "filename": "SyncConnection.js",
      "lineno": 81,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001655",
        "name": "this.onRequestAuthParams",
        "type": "Literal",
        "value": null,
        "paramnames": []
      }
    },
    "description": "Callback for resolving user credential.\nTake a {@link SyncConnection} as a parameter, must return authorization parameters object:</p>\n<pre class=\"prettyprint source\"><code> {authSchema: authType, login: login, password: password, [apiKey: ]}</code></pre><p>For a internal usage (requests from a locahost or other systems, etc.) and in case <code>authShema == 'UB'</code> it is possible to pass a\n<code>apiKey</code> instead of a password. apiKey is actually a <code>uba_user.uPasswordHashHexa</code> content",
    "type": {
      "names": [
        "function"
      ]
    },
    "name": "onRequestAuthParams",
    "longname": "SyncConnection#onRequestAuthParams",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000135",
    "___s": true
  },
  {
    "comment": "/**\n * Shortcut method to perform authorized `POST` request to application we connected\n * @param {String} endpoint\n * @param {ArrayBuffer|Object|String} data\n * @returns {ArrayBuffer|Object|String|Array<object>}\n */",
    "meta": {
      "range": [
        15894,
        16007
      ],
      "filename": "SyncConnection.js",
      "lineno": 455,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002920",
        "name": "SyncConnection.prototype.post",
        "type": "FunctionExpression",
        "paramnames": [
          "endpoint",
          "data"
        ]
      }
    },
    "description": "Shortcut method to perform authorized <code>POST</code> request to application we connected",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "endpoint"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String",
            "Array.<object>"
          ]
        }
      }
    ],
    "name": "post",
    "longname": "SyncConnection#post",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000239",
    "___s": true
  },
  {
    "comment": "/**\n * Perform authorized UBQL request.\n * Can take one QB Query or an array of UB Query and execute it at once.\n * @param {Object|Array<Object>} ubq\n * @returns {Object|Array}\n */",
    "meta": {
      "range": [
        11501,
        11722
      ],
      "filename": "SyncConnection.js",
      "lineno": 334,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002447",
        "name": "SyncConnection.prototype.query",
        "type": "FunctionExpression",
        "paramnames": [
          "ubq"
        ]
      }
    },
    "description": "Perform authorized UBQL request.\nCan take one QB Query or an array of UB Query and execute it at once.",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "Array.<Object>"
          ]
        },
        "name": "ubq"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object",
            "Array"
          ]
        }
      }
    ],
    "name": "query",
    "longname": "SyncConnection#query",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000209",
    "___s": true
  },
  {
    "comment": "/**\n   * Endpoint name for query (`runList` before 1.12, `ubql` after 1.12)\n   * @type {string}\n   */",
    "meta": {
      "range": [
        4003,
        4128
      ],
      "filename": "SyncConnection.js",
      "lineno": 121,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001728",
        "name": "this.queryMethod",
        "type": "ConditionalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Endpoint name for query (<code>runList</code> before 1.12, <code>ubql</code> after 1.12)",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "queryMethod",
    "longname": "SyncConnection#queryMethod",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000144",
    "___s": true
  },
  {
    "comment": "/**\n * Create a new instance of repository\n * @param {String} entityName name of Entity we create for\n * @returns {ServerRepository}\n */",
    "meta": {
      "range": [
        23865,
        23976
      ],
      "filename": "SyncConnection.js",
      "lineno": 675,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003341",
        "name": "SyncConnection.prototype.Repository",
        "type": "FunctionExpression",
        "paramnames": [
          "entityName"
        ]
      }
    },
    "description": "Create a new instance of repository",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "name of Entity we create for",
        "name": "entityName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ServerRepository"
          ]
        }
      }
    ],
    "name": "Repository",
    "longname": "SyncConnection#Repository",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000286",
    "___s": true
  },
  {
    "comment": "/**\n * Shortcut method to perform authorized `POST` request to `ubql` endpoint.\n * Can take one ubRequest and wrap it to array\n * @deprecated Since UB 1.11 use SyncConnection.query\n * @param {ubRequest} request\n * @returns {Object}\n */",
    "meta": {
      "range": [
        17200,
        17321
      ],
      "filename": "SyncConnection.js",
      "lineno": 486,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002995",
        "name": "SyncConnection.prototype.run",
        "type": "FunctionExpression",
        "paramnames": [
          "request"
        ]
      }
    },
    "description": "Shortcut method to perform authorized <code>POST</code> request to <code>ubql</code> endpoint.\nCan take one ubRequest and wrap it to array",
    "deprecated": "Since UB 1.11 use SyncConnection.query",
    "params": [
      {
        "type": {
          "names": [
            "ubRequest"
          ]
        },
        "name": "request"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "name": "run",
    "longname": "SyncConnection#run",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000251",
    "___s": true
  },
  {
    "comment": "/**\n * Send request to any endpoint. For entity-level method execution (`ubql` endpoint) better to use {@link SyncConnection#query SyncConnection.query}\n * @returns {*} body of HTTP request result. If !simpleTextResult and response type is json - then parsed to object\n */",
    "meta": {
      "range": [
        16624,
        16962
      ],
      "filename": "SyncConnection.js",
      "lineno": 474,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002963",
        "name": "SyncConnection.prototype.runCustom",
        "type": "FunctionExpression",
        "paramnames": [
          "endpoint",
          "aBody",
          "aURLParams",
          "simpleTextResult",
          "aHTTPMethod"
        ]
      }
    },
    "description": "Send request to any endpoint. For entity-level method execution (<code>ubql</code> endpoint) better to use {@link SyncConnection#query SyncConnection.query}",
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>body of HTTP request result. If !simpleTextResult and response type is json - then parsed to object</p>"
      }
    ],
    "name": "runCustom",
    "longname": "SyncConnection#runCustom",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000245",
    "___s": true
  },
  {
    "comment": "/** `base64` encoded server certificate used for cryptographic operation\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4391,
        4447
      ],
      "filename": "SyncConnection.js",
      "lineno": 133,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001761",
        "name": "this.serverCertificate",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "<code>base64</code> encoded server certificate used for cryptographic operation",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "serverCertificate",
    "longname": "SyncConnection#serverCertificate",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000146",
    "___s": true
  },
  {
    "comment": "/**\n   * Root path to all application-level method\n   * @type {String}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2195,
        2225
      ],
      "filename": "SyncConnection.js",
      "lineno": 62,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001643",
        "name": "this.servicePath",
        "type": "Identifier",
        "value": "servicePath",
        "paramnames": []
      }
    },
    "description": "Root path to all application-level method",
    "type": {
      "names": [
        "String"
      ]
    },
    "readonly": true,
    "name": "servicePath",
    "longname": "SyncConnection#servicePath",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000133",
    "___s": true
  },
  {
    "comment": "/** Lifetime (in second) of session encryption\n   * @type {Number}\n   * @readonly\n   */",
    "meta": {
      "range": [
        4541,
        4598
      ],
      "filename": "SyncConnection.js",
      "lineno": 139,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001771",
        "name": "this.sessionKeyLifeTime",
        "type": "LogicalExpression",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Lifetime (in second) of session encryption",
    "type": {
      "names": [
        "Number"
      ]
    },
    "readonly": true,
    "name": "sessionKeyLifeTime",
    "longname": "SyncConnection#sessionKeyLifeTime",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000147",
    "___s": true
  },
  {
    "comment": "/**\n * Saves a file content as a potential value of the specified entity instance attribute to the TEMP store.\n *\n * Call this function before entity insert of update. Result of this function is what shall be assigned to the\n * attribute value, to \"execParams\".\n * @param {string} entity Entity name\n * @param {string} attribute Entity attribute name\n * @param {number} id ID of the record\n * @param {ArrayBuffer|string} data File content\n * @param {string} origName\n * @param {string} [fileName] If not specified, origName will be used.\n * @param {string} dataEncoding Specify `data` parameter encoding. Either omit for binary data\n *   or set to `base64` for base64 encoded data\n * @return {string}\n *\n * @example\n    const myObj = conn.Repository(entityName)\n      .attrs('ID', 'mi_modifyDate')\n      .where('code', '=', code)\n      .selectSingle()\n    const {ID, mi_modifyDate} = myObj\n    const data = fs.readFileSync(fileName, {encoding: 'bin'})\n    const tempStoreResult = conn.setDocument(entityName, 'configuration', ID, data, fn)\n    conn.query({\n      entity: entityName,\n      method: 'update',\n      execParams: {ID, configuration: tempStoreResult, mi_modifyDate}\n    })\n */",
    "meta": {
      "range": [
        18702,
        19187
      ],
      "filename": "SyncConnection.js",
      "lineno": 531,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003045",
        "name": "SyncConnection.prototype.setDocument",
        "type": "FunctionExpression",
        "paramnames": [
          "entity",
          "attribute",
          "id",
          "data",
          "origName",
          "fileName",
          "dataEncoding"
        ]
      },
      "vars": {
        "urlParams": "SyncConnection#setDocument~urlParams",
        "urlParams.encoding": "SyncConnection#setDocument~urlParams.encoding",
        "setDocumentResponse": "SyncConnection#setDocument~setDocumentResponse"
      }
    },
    "description": "Saves a file content as a potential value of the specified entity instance attribute to the TEMP store.</p>\n<p>Call this function before entity insert of update. Result of this function is what shall be assigned to the\nattribute value, to &quot;execParams&quot;.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Entity name",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Entity attribute name",
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "ID of the record",
        "name": "id"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "string"
          ]
        },
        "description": "File content",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "origName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If not specified, origName will be used.",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Specify <code>data</code> parameter encoding. Either omit for binary data\n  or set to <code>base64</code> for base64 encoded data",
        "name": "dataEncoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "examples": [
      "const myObj = conn.Repository(entityName)\n      .attrs('ID', 'mi_modifyDate')\n      .where('code', '=', code)\n      .selectSingle()\n    const {ID, mi_modifyDate} = myObj\n    const data = fs.readFileSync(fileName, {encoding: 'bin'})\n    const tempStoreResult = conn.setDocument(entityName, 'configuration', ID, data, fn)\n    conn.query({\n      entity: entityName,\n      method: 'update',\n      execParams: {ID, configuration: tempStoreResult, mi_modifyDate}\n    })"
    ],
    "name": "setDocument",
    "longname": "SyncConnection#setDocument",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000255",
    "___s": true
  },
  {
    "comment": "/**\n * Execute update method by add method: 'update' to `ubq` query (if req.method not already set)\n */",
    "meta": {
      "range": [
        23568,
        23726
      ],
      "filename": "SyncConnection.js",
      "lineno": 663,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100003305",
        "name": "SyncConnection.prototype.update",
        "type": "FunctionExpression",
        "paramnames": [
          "ubq"
        ]
      },
      "vars": {
        "req": "SyncConnection#update~req",
        "req.method": "SyncConnection#update~req.method",
        "res": "SyncConnection#update~res"
      }
    },
    "description": "Execute update method by add method: 'update' to <code>ubq</code> query (if req.method not already set)",
    "name": "update",
    "longname": "SyncConnection#update",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000282",
    "___s": true
  },
  {
    "comment": "/**\n   * Return custom data for logged in user, or {lang: 'en'} in case not logged in\n   *\n   * If key is provided - return only key part of user data:\n   *\n   *      $App.connection.userData('lang');\n   *      // or the same but dedicated alias\n   *      $App.connection.userLang()\n   *\n   * @param {String} [key] Optional key\n   * @returns {*}\n   */",
    "meta": {
      "range": [
        9125,
        9272
      ],
      "filename": "SyncConnection.js",
      "lineno": 272,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002261",
        "name": "this.userData",
        "type": "FunctionExpression",
        "paramnames": [
          "key"
        ]
      },
      "vars": {
        "uData": "SyncConnection#userData~uData"
      }
    },
    "description": "<p>Return custom data for logged in user, or {lang: 'en'} in case not logged in</p>\n<p>If key is provided - return only key part of user data:</p>\n<pre class=\"prettyprint source\"><code> $App.connection.userData('lang');\n // or the same but dedicated alias\n $App.connection.userLang()</code></pre>",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional key",
        "name": "key"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "userData",
    "longname": "SyncConnection#userData",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000193",
    "___s": true
  },
  {
    "comment": "/**\n   * Return current user language or 'en' in case not logged in\n   * @returns {String}\n   */",
    "meta": {
      "range": [
        8701,
        8767
      ],
      "filename": "SyncConnection.js",
      "lineno": 256,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002248",
        "name": "this.userLang",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return current user language or 'en' in case not logged in",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "userLang",
    "longname": "SyncConnection#userLang",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000192",
    "___s": true
  },
  {
    "comment": "/**\n   * Return current user logon or 'anonymous' in case not logged in\n   * @returns {String}\n   */",
    "meta": {
      "range": [
        8497,
        8598
      ],
      "filename": "SyncConnection.js",
      "lineno": 248,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002231",
        "name": "this.userLogin",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Return current user logon or 'anonymous' in case not logged in",
    "returns": [
      {
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "name": "userLogin",
    "longname": "SyncConnection#userLogin",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000191",
    "___s": true
  },
  {
    "comment": "/**\n * HTTP request to UB server. In case of success response return body parsed to {Object} or {ArrayBuffer} depending of Content-Type response header\n *\n * @example\n *  conn.xhr({\n *      endpoint: 'runSQL',\n *      URLParams: {CONNECTION: 'dba'},\n *      data: 'DROP SCHEMA IF EXISTS ub_autotest CASCADE; DROP USER IF EXISTS ub_autotest;'\n *  });\n *\n * @param {Object} options\n * @param {String} options.endpoint\n * @param {String} [options.UBMethod] This parameter is **DEPRECATED**. Use `options.endpoint` instead\n * @param {String} [options.HTTPMethod='POST']\n * @param {Object} [options.headers] Optional request headers in format {headerName: headerValue, ..}\n * @param {Boolean} [options.simpleTextResult=false] do not parse response and return it as is even if response content type is JSON\n * @param {*} [options.URLParams] Optional parameters added to URL using http.buildURL\n * @param {ArrayBuffer|Object|String} [options.data] Optional body\n * @param  {String} [options.responseType] see <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType\">responseType</a>.\n *    Currently only `arraybuffer` supported.\n * @returns {ArrayBuffer|Object|String|Array<Object>}\n */",
    "meta": {
      "range": [
        12931,
        15301
      ],
      "filename": "SyncConnection.js",
      "lineno": 364,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100002492",
        "name": "SyncConnection.prototype.xhr",
        "type": "FunctionExpression",
        "paramnames": [
          "options"
        ]
      },
      "vars": {
        "me": "SyncConnection#xhr~me",
        "req": "SyncConnection#xhr~req",
        "resp": "SyncConnection#xhr~resp",
        "result": "SyncConnection#xhr~result",
        "path": "SyncConnection#xhr~path",
        "session": "SyncConnection#xhr~session",
        "": null,
        "status": "SyncConnection#xhr~status",
        "txtRes": "SyncConnection#xhr~txtRes",
        "me._inRelogin": "SyncConnection#xhr~me._inRelogin",
        "respObj": "SyncConnection#xhr~respObj"
      }
    },
    "description": "HTTP request to UB server. In case of success response return body parsed to {Object} or {ArrayBuffer} depending of Content-Type response header",
    "examples": [
      "conn.xhr({\n     endpoint: 'runSQL',\n     URLParams: {CONNECTION: 'dba'},\n     data: 'DROP SCHEMA IF EXISTS ub_autotest CASCADE; DROP USER IF EXISTS ub_autotest;'\n });"
    ],
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "options.endpoint"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "This parameter is <strong>DEPRECATED</strong>. Use <code>options.endpoint</code> instead",
        "name": "options.UBMethod"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "'POST'",
        "name": "options.HTTPMethod"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Optional request headers in format {headerName: headerValue, ..}",
        "name": "options.headers"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "do not parse response and return it as is even if response content type is JSON",
        "name": "options.simpleTextResult"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "Optional parameters added to URL using http.buildURL",
        "name": "options.URLParams"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "optional": true,
        "description": "Optional body",
        "name": "options.data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "see <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType\">responseType</a>.\n   Currently only <code>arraybuffer</code> supported.",
        "name": "options.responseType"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String",
            "Array.<Object>"
          ]
        }
      }
    ],
    "name": "xhr",
    "longname": "SyncConnection#xhr",
    "kind": "function",
    "memberof": "SyncConnection",
    "scope": "instance",
    "___id": "T000002R000214",
    "___s": true
  },
  {
    "comment": "/** @type UBDomain */",
    "meta": {
      "range": [
        1401,
        1408
      ],
      "filename": "SyncConnection.js",
      "lineno": 36,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/base",
      "code": {
        "id": "astnode100001533",
        "name": "_domain"
      }
    },
    "type": {
      "names": [
        "UBDomain"
      ]
    },
    "name": "_domain",
    "longname": "SyncConnection~_domain",
    "kind": "member",
    "memberof": "SyncConnection",
    "scope": "inner",
    "params": [],
    "___id": "T000002R000121",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} t_getDocumentOffice_req_params\n * @property {string} attribute - name of the \"Attribute\" in \"Entity\"\n * @property {string} entity - name of \"Entity\"\n * @property {string} filename - name of file in storage\n * @property {string} ID - of the \"Entity\"\n * @property {string} isDirty - get stored document or from temporary storage\n * @property {string} origName - name of file when uploaded\n * @property {string} store - name of file storage\n */",
    "meta": {
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 135,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "typedef",
    "name": "t_getDocumentOffice_req_params",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of the &quot;Attribute&quot; in &quot;Entity&quot;</p>",
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of &quot;Entity&quot;</p>",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of file in storage</p>",
        "name": "filename"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>of the &quot;Entity&quot;</p>",
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>get stored document or from temporary storage</p>",
        "name": "isDirty"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of file when uploaded</p>",
        "name": "origName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of file storage</p>",
        "name": "store"
      }
    ],
    "longname": "t_getDocumentOffice_req_params",
    "scope": "global",
    "___id": "T000002R006286",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} t_notifyDocumentSaved_req_body\n * @property {string} key - document identifier\n * @property {number} status - editing result\n * @property {string} url - link to resulting document\n * @property {string} userdata - custom information (information about document)\n * @property {string[]} users - list of users responsible for changes\n * @property {boolean} notmodified - document were actually changed\n */",
    "meta": {
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 146,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "typedef",
    "name": "t_notifyDocumentSaved_req_body",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>document identifier</p>",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>editing result</p>",
        "name": "status"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>link to resulting document</p>",
        "name": "url"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>custom information (information about document)</p>",
        "name": "userdata"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "<p>list of users responsible for changes</p>",
        "name": "users"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "<p>document were actually changed</p>",
        "name": "notmodified"
      }
    ],
    "longname": "t_notifyDocumentSaved_req_body",
    "scope": "global",
    "___id": "T000002R006287",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} t_setOnlyOfficeDocument_params\n * @property {string} entity - name of \"Entity\"\n * @property {string} attribute - name of the \"Attribute\" in \"Entity\"\n * @property {string} ID - of the \"Entity\"\n * @property {string} filename - name of file in storage\n */",
    "meta": {
      "filename": "onlyOfficeEndpoints.js",
      "lineno": 156,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "kind": "typedef",
    "name": "t_setOnlyOfficeDocument_params",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of &quot;Entity&quot;</p>",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of the &quot;Attribute&quot; in &quot;Entity&quot;</p>",
        "name": "attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>of the &quot;Entity&quot;</p>",
        "name": "ID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>name of file in storage</p>",
        "name": "filename"
      }
    ],
    "longname": "t_setOnlyOfficeDocument_params",
    "scope": "global",
    "___id": "T000002R006288",
    "___s": true
  },
  {
    "comment": "/**\n * @property {string} responseHeaders\n */",
    "meta": {
      "range": [
        6656,
        6698
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 191,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008536",
        "name": "THTTPClient.prototype.responseHeaders",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "responseHeaders"
      }
    ],
    "name": "responseHeaders",
    "longname": "THTTPClient#responseHeaders",
    "kind": "member",
    "memberof": "THTTPClient",
    "scope": "instance",
    "___id": "T000002R000808",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * An `THTTPRequest` object is created by UB server and passed as the first\n * argument to the `endpoint's` methods or as a second argument to the `rest` entity method's event.\n *\n * It may be used to access HTTP request status, headers and data.\n * @class THTTPRequest\n * @implements {UBReader}\n */",
    "meta": {
      "filename": "HTTPRequest.js",
      "lineno": 4,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "classdesc": "<p>An <code>THTTPRequest</code> object is created by UB server and passed as the first\nargument to the <code>endpoint's</code> methods or as a second argument to the <code>rest</code> entity method's event.</p>\n<p>It may be used to access HTTP request status, headers and data.</p>",
    "kind": "class",
    "name": "THTTPRequest",
    "implements": [
      "UBReader"
    ],
    "longname": "THTTPRequest",
    "scope": "global",
    "___id": "T000002R005906",
    "___s": true
  },
  {
    "comment": "/**\n   * URLDecoded parameters\n   * @example\n   *      // GET http://host:port/bla-bla?$filter=Name%20eq%20%27John%27\n   *      req.parameters === '$filter=Name%20eq%20%27John%27'\n   *      req.decodedParameters === \"$filter=Name eq 'John'\"\n   *\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        3002,
        3167
      ],
      "filename": "HTTPRequest.js",
      "lineno": 112,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061790",
        "name": "THTTPRequest#decodedParameters",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "URLDecoded parameters",
    "examples": [
      "// GET http://host:port/bla-bla?$filter=Name%20eq%20%27John%27\n     req.parameters === '$filter=Name%20eq%20%27John%27'\n     req.decodedParameters === \"$filter=Name eq 'John'\""
    ],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "decodedParameters",
    "longname": "THTTPRequest#decodedParameters",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005922",
    "___s": true
  },
  {
    "comment": "/**\n   * The same as uri, but URLDecode'd\n   * @example\n   *   //GET http://host:port/ub/rest/TripPinServiceRW/My%20People\"\n   *   req.decodedUri === 'TripPinServiceRW/My People'\n   *\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2182,
        2312
      ],
      "filename": "HTTPRequest.js",
      "lineno": 85,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061748",
        "name": "THTTPRequest#decodedUri",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "The same as uri, but URLDecode'd",
    "examples": [
      "//GET http://host:port/ub/rest/TripPinServiceRW/My%20People\"\n  req.decodedUri === 'TripPinServiceRW/My People'"
    ],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "decodedUri",
    "longname": "THTTPRequest#decodedUri",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005918",
    "___s": true
  },
  {
    "comment": "/**\n   * HTTP request headers\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        981,
        1096
      ],
      "filename": "HTTPRequest.js",
      "lineno": 36,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061664",
        "name": "THTTPRequest#headers",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "HTTP request headers",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "headers",
    "longname": "THTTPRequest#headers",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005910",
    "___s": true
  },
  {
    "comment": "/**\n   * HTTP request method GET|POST|PUT......\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        1190,
        1300
      ],
      "filename": "HTTPRequest.js",
      "lineno": 45,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061685",
        "name": "THTTPRequest#method",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "HTTP request method GET|POST|PUT......",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "method",
    "longname": "THTTPRequest#method",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005912",
    "___s": true
  },
  {
    "comment": "/**\n   * URL parameters. Can be transformed to object using `queryString.parse`\n   * @example\n   *   // GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n   *   req.parameters === 'id=1&param2=asdas'\n   *\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2580,
        2710
      ],
      "filename": "HTTPRequest.js",
      "lineno": 98,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061769",
        "name": "THTTPRequest#parameters",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "URL parameters. Can be transformed to object using <code>queryString.parse</code>",
    "examples": [
      "// GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n  req.parameters === 'id=1&param2=asdas'"
    ],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "parameters",
    "longname": "THTTPRequest#parameters",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005920",
    "___s": true
  },
  {
    "comment": "/**\n * Read from source\n * @param {String} [encoding] Optional encoding of source. Default to 'utf-8'.\n *          If 'bin' - return ArrayBuffer source representation without any conversion.\n *          If 'base64' - transform base64 encoded content of source to ArrayBuffer\n *          If 'bin2base64' - transform content to base64 encoded string\n * @returns {ArrayBuffer|String} Return String in case no encoding passed or ArrayBuffer\n */",
    "meta": {
      "range": [
        3698,
        3746
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 112,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008476",
        "name": "UBReader.prototype.read",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      }
    },
    "description": "Read from source",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional encoding of source. Default to 'utf-8'.\n         If 'bin' - return ArrayBuffer source representation without any conversion.\n         If 'base64' - transform base64 encoded content of source to ArrayBuffer\n         If 'bin2base64' - transform content to base64 encoded string",
        "name": "encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "description": "<p>Return String in case no encoding passed or ArrayBuffer</p>"
      }
    ],
    "name": "read",
    "longname": "THTTPRequest#read",
    "kind": "function",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "implements": [
      "UBReader#read"
    ],
    "___id": "T000002R010880",
    "___s": true
  },
  {
    "comment": "/**\n   * URL WITHOUT appName and endpoint name\n   * @example\n   *   // GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n   *   req.uri === 'doc_document/report'\n   *\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        1857,
        1952
      ],
      "filename": "HTTPRequest.js",
      "lineno": 72,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061727",
        "name": "THTTPRequest#uri",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "URL WITHOUT appName and endpoint name",
    "examples": [
      "// GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n  req.uri === 'doc_document/report'"
    ],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "uri",
    "longname": "THTTPRequest#uri",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005916",
    "___s": true
  },
  {
    "comment": "/**\n   * Full URL\n   * @example\n   *\n   *   // GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n   *   req.url === 'ub/rest/doc_document/report?id=1&param2=asdas'\n   *\n   * @type {string}\n   * @readonly\n   */",
    "meta": {
      "range": [
        1532,
        1627
      ],
      "filename": "HTTPRequest.js",
      "lineno": 59,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061706",
        "name": "THTTPRequest#url",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Full URL",
    "examples": [
      "// GET http://host:port/ub/rest/doc_document/report?id=1&param2=asdas\n  req.url === 'ub/rest/doc_document/report?id=1&param2=asdas'"
    ],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "name": "url",
    "longname": "THTTPRequest#url",
    "kind": "member",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005914",
    "___s": true
  },
  {
    "comment": "/**\n   * Write request body content (as binary) to a file. Return true on success\n   * @param {string} fullFilePath\n   * @return {boolean}\n   */",
    "meta": {
      "range": [
        831,
        904
      ],
      "filename": "HTTPRequest.js",
      "lineno": 27,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061655",
        "name": "THTTPRequest#writeToFile",
        "type": "MethodDefinition",
        "paramnames": [
          "fullFilePath"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write request body content (as binary) to a file. Return true on success",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "fullFilePath"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "writeToFile",
    "longname": "THTTPRequest#writeToFile",
    "kind": "function",
    "memberof": "THTTPRequest",
    "scope": "instance",
    "___id": "T000002R005909",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * This object is created internally by UB server and passed as the second\n * argument to the `endpoint's` methods or as a third argument to the entity level method's called using `rest` endpoint.\n *\n * It represents an in-progress HTTP response.\n * Response body is buffered during calls to {@link THTTPResponse#write write}\n * until {@link THTTPResponse#writeEnd writeEnd} is called.\n * Actual headers and response will be sent after endpoint handler finished.\n *\n * Do not forget to set the {@link THTTPResponse#statusCode statusCode} to 200 on success or use a helper's\n * {@link THTTPResponse#badRequest badRequest} / {@link THTTPResponse#notFound notFound} on errors.\n *\n * TODO To send file content as a response without loading file into memory the following code can be used:\n *\n     // Replace this comments by JSDocs style comment\n     // param {THTTPRequest} req\n     // param {THTTPResponse} resp\n     function getPublicDocument(req, resp){\n       resp.statusCode = 200;\n       resp.writeHead('Content-Type: !STATICFILE\\r\\nContent-Type: text/plain'); // !STATICFILE is a special content type - will be removed from headers by server during sending\n       resp.writeEnd('c:\\\\myFilesWithPasswords.txt');\n     }\n * @class THTTPResponse\n * @implements {UBWriter}\n */",
    "meta": {
      "filename": "HTTPResponse.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {}
    },
    "classdesc": "<p>This object is created internally by UB server and passed as the second\nargument to the <code>endpoint's</code> methods or as a third argument to the entity level method's called using <code>rest</code> endpoint.</p>\n<p>It represents an in-progress HTTP response.\nResponse body is buffered during calls to {@link THTTPResponse#write write}\nuntil {@link THTTPResponse#writeEnd writeEnd} is called.\nActual headers and response will be sent after endpoint handler finished.</p>\n<p>Do not forget to set the {@link THTTPResponse#statusCode statusCode} to 200 on success or use a helper's\n{@link THTTPResponse#badRequest badRequest} / {@link THTTPResponse#notFound notFound} on errors.</p>\n<p>TODO To send file content as a response without loading file into memory the following code can be used:</p>\n<pre class=\"prettyprint source\"><code> // Replace this comments by JSDocs style comment\n // param {THTTPRequest} req\n // param {THTTPResponse} resp\n function getPublicDocument(req, resp){\n   resp.statusCode = 200;\n   resp.writeHead('Content-Type: !STATICFILE\\r\\nContent-Type: text/plain'); // !STATICFILE is a special content type - will be removed from headers by server during sending\n   resp.writeEnd('c:\\\\myFilesWithPasswords.txt');\n }</code></pre>",
    "kind": "class",
    "name": "THTTPResponse",
    "implements": [
      "UBWriter"
    ],
    "longname": "THTTPResponse",
    "scope": "global",
    "___id": "T000002R005933",
    "___s": true
  },
  {
    "comment": "/**\n   * Write a HTTP 400 Bad Request response. Return false\n   * @param {string} [reason] If specified will be written to log as error\n   * @return {boolean}\n   */",
    "meta": {
      "range": [
        3627,
        3843
      ],
      "filename": "HTTPResponse.js",
      "lineno": 105,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061916",
        "name": "THTTPResponse#badRequest",
        "type": "MethodDefinition",
        "paramnames": [
          "reason"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write a HTTP 400 Bad Request response. Return false",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If specified will be written to log as error",
        "name": "reason"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "badRequest",
    "longname": "THTTPResponse#badRequest",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005943",
    "___s": true
  },
  {
    "comment": "/**\n   * For DEBUG PURPOSE ONLY\n   * Retrieve a response body created by writeEnd call\n   * @return {string}\n   */",
    "meta": {
      "range": [
        2877,
        2935
      ],
      "filename": "HTTPResponse.js",
      "lineno": 85,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061902",
        "name": "THTTPResponse#getBodyForDebug",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "For DEBUG PURPOSE ONLY\nRetrieve a response body created by writeEnd call",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "name": "getBodyForDebug",
    "longname": "THTTPResponse#getBodyForDebug",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005941",
    "___s": true
  },
  {
    "comment": "/**\n   * Write a HTTP 404 Not Found response. Return false\n   * @param {string} [reason]  If specified will be written to log as error\n   * @return {boolean}\n   */",
    "meta": {
      "range": [
        4012,
        4222
      ],
      "filename": "HTTPResponse.js",
      "lineno": 117,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061950",
        "name": "THTTPResponse#notFound",
        "type": "MethodDefinition",
        "paramnames": [
          "reason"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write a HTTP 404 Not Found response. Return false",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If specified will be written to log as error",
        "name": "reason"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "notFound",
    "longname": "THTTPResponse#notFound",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005945",
    "___s": true
  },
  {
    "comment": "/**\n   * Write a HTTP 501 'Not Implemented response. Return false\n   * @param {string} [reason]  If specified will be written to log as error\n   * @return {boolean}\n   */",
    "meta": {
      "range": [
        4398,
        4626
      ],
      "filename": "HTTPResponse.js",
      "lineno": 129,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061984",
        "name": "THTTPResponse#notImplemented",
        "type": "MethodDefinition",
        "paramnames": [
          "reason"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write a HTTP 501 'Not Implemented response. Return false",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If specified will be written to log as error",
        "name": "reason"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "name": "notImplemented",
    "longname": "THTTPResponse#notImplemented",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005947",
    "___s": true
  },
  {
    "comment": "/**\n   * @param {number} status\n   */",
    "meta": {
      "range": [
        1700,
        1756
      ],
      "filename": "HTTPResponse.js",
      "lineno": 43,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061853",
        "name": "THTTPResponse#statusCode",
        "type": "MethodDefinition",
        "paramnames": [
          "status"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "status"
      }
    ],
    "name": "statusCode",
    "longname": "THTTPResponse#statusCode",
    "kind": "member",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005936",
    "___s": true
  },
  {
    "comment": "/**\n   * Response HTTP status code\n   * @return {number}\n   */",
    "meta": {
      "range": [
        1605,
        1656
      ],
      "filename": "HTTPResponse.js",
      "lineno": 36,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061846",
        "name": "THTTPResponse#statusCode",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "Response HTTP status code",
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "name": "statusCode",
    "longname": "THTTPResponse#statusCode",
    "kind": "member",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005935",
    "___s": true
  },
  {
    "comment": "/**\n   * ETag based HTTP response caching.\n   * Must be called after writeEnd called and and statusCode is defined.\n   *\n   * In case statusCode === 200 and response body length > 64 will\n   *  - if request contains a IF-NONE-MATCH header, and it value equal to response crc32\n   *  will mutate a statusCode to 304 (not modified) and clear the response body\n   *  - in other case will add a ETag header with value = hex representation of crc32(responseBody).\n   */",
    "meta": {
      "range": [
        3405,
        3457
      ],
      "filename": "HTTPResponse.js",
      "lineno": 97,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061909",
        "name": "THTTPResponse#validateETag",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "description": "<p>ETag based HTTP response caching.\nMust be called after writeEnd called and and statusCode is defined.</p>\n<p>In case statusCode === 200 and response body length &gt; 64 will</p>\n<ul>\n<li>if request contains a IF-NONE-MATCH header, and it value equal to response crc32\nwill mutate a statusCode to 304 (not modified) and clear the response body</li>\n<li>in other case will add a ETag header with value = hex representation of crc32(responseBody).</li>\n</ul>",
    "name": "validateETag",
    "longname": "THTTPResponse#validateETag",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "params": [],
    "___id": "T000002R005942",
    "___s": true
  },
  {
    "comment": "/**\n * Write to source.\n * @param {ArrayBuffer|Object|String} data Data to write. If Object - it stringify before write\n * @param {String} [encoding] Encode data to `encoding` before write. Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *          One of \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        4139,
        4194
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 125,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008489",
        "name": "UBWriter.prototype.write",
        "type": "FunctionExpression",
        "paramnames": [
          "data",
          "encoding"
        ]
      }
    },
    "description": "Write to source.",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. If Object - it stringify before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write. Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n         One of &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "encoding"
      }
    ],
    "name": "write",
    "longname": "THTTPResponse#write",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "implements": [
      "UBWriter#write"
    ],
    "___id": "T000002R010879",
    "___s": true
  },
  {
    "comment": "/**\n  * Write base64 encoded data as a binary representation (will decode from base64 to binary before write to response)\n  * @param {String} base64Data\n  */",
    "meta": {
      "range": [
        2405,
        2480
      ],
      "filename": "HTTPResponse.js",
      "lineno": 67,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061882",
        "name": "THTTPResponse#writeBinaryBase64",
        "type": "MethodDefinition",
        "paramnames": [
          "base64Data"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write base64 encoded data as a binary representation (will decode from base64 to binary before write to response)",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "base64Data"
      }
    ],
    "name": "writeBinaryBase64",
    "longname": "THTTPResponse#writeBinaryBase64",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005939",
    "___s": true
  },
  {
    "comment": "/**\n   * Write to internal buffer and set buffer content as HTTP response.\n   * See {UBWriter.wrote} for parameter details\n   * @param {ArrayBuffer|Object|String} data\n   * @param {String} [encoding]\n   */",
    "meta": {
      "range": [
        2691,
        2756
      ],
      "filename": "HTTPResponse.js",
      "lineno": 76,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061891",
        "name": "THTTPResponse#writeEnd",
        "type": "MethodDefinition",
        "paramnames": [
          "data",
          "encoding"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Write to internal buffer and set buffer content as HTTP response.\nSee {UBWriter.wrote} for parameter details",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "name": "data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "encoding"
      }
    ],
    "name": "writeEnd",
    "longname": "THTTPResponse#writeEnd",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005940",
    "___s": true
  },
  {
    "comment": "/**\n   * Add response header(s). Can be called several times for DIFFERENT header.\n   * Can write several headers at once - in this case usa `\\r\\n` as separator\n   *@example\n   *    resp.writeHead('Content-Type: text/css; charset=UTF-8\\r\\nOther-header: value')\n   *\n   * @param {String} header One header or `\\r\\n` separated headers\n   */",
    "meta": {
      "range": [
        2100,
        2151
      ],
      "filename": "HTTPResponse.js",
      "lineno": 54,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100061862",
        "name": "THTTPResponse#writeHead",
        "type": "MethodDefinition",
        "paramnames": [
          "header"
        ]
      },
      "vars": {
        "": null
      }
    },
    "description": "Add response header(s). Can be called several times for DIFFERENT header.\nCan write several headers at once - in this case usa <code>\\r\\n</code> as separator",
    "examples": [
      "resp.writeHead('Content-Type: text/css; charset=UTF-8\\r\\nOther-header: value')"
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "One header or <code>\\r\\n</code> separated headers",
        "name": "header"
      }
    ],
    "name": "writeHead",
    "longname": "THTTPResponse#writeHead",
    "kind": "function",
    "memberof": "THTTPResponse",
    "scope": "instance",
    "___id": "T000002R005937",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Implements Materialized path.\n * Will add mi_treePath to entity attribute and store where current row Materialized path - a string\n * representing row hierarchy rootID/textLevelID/.../currentRowID\n *\n * @mixin\n */",
    "meta": {
      "range": [
        7785,
        7796
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 301,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008845",
        "name": "tree",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin. Implements Materialized path.\nWill add mi_treePath to entity attribute and store where current row Materialized path - a string\nrepresenting row hierarchy rootID/textLevelID/.../currentRowID",
    "kind": "mixin",
    "name": "tree",
    "longname": "tree",
    "scope": "global",
    "params": [],
    "___id": "T000002R000870",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Class for execution of an ORM/SQL queries on the server side.\n * Contains several data collection stored in the heap of ub application (i.e not use a JS engine memory and since not a subject of GC)\n *\n * Use it to:\n *  - execute any entity method using {@link class:TubDataStore#run TubDataStore.run}\n *  - execute any SQL statement using {@link class:TubDataStore#runSQL TubDataStore.runSQL} or {@link class:TubDataStore#execSQL TubDataStore.execSQL} (we strongly recommend usage of ORM instead SQL)\n *  - store several named data collection using {@link class:TubDataStore#currentDataName TubDataStore.currentDataName} (data stored inside server memory, not in JS, this is very good for GC)\n *  - iterate other collection rows using {@link class:TubDataStore#next TubDataStore.next}, eof, e.t.c and retrieve row data using {@link class:TubDataStore#get TubDataStore.get}\n *  - serialize data to XML {@link class:TubDataStore#asXMLPersistent TubDataStore.asXMLPersistent} or JSON in array-of-array {@link class:TubDataStore#asJSONArray TubDataStore.asJSONArray} on array-of-object {@link class:TubDataStore#asJSONObject TubDataStore.asJSONObject} format\n *\n *  To retrieve data from database using build-in ORM (execute entity `select` method) preferred way is\n *  to use {@link module:@unitybase/ub#Repository UB.Repository} fabric function.\n *\n * @class TubDataStore\n */",
    "meta": {
      "filename": "TubDataStore.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "classdesc": "<p>Class for execution of an ORM/SQL queries on the server side.\nContains several data collection stored in the heap of ub application (i.e not use a JS engine memory and since not a subject of GC)</p>\n<p>Use it to:</p>\n<ul>\n<li>execute any entity method using {@link class:TubDataStore#run TubDataStore.run}</li>\n<li>execute any SQL statement using {@link class:TubDataStore#runSQL TubDataStore.runSQL} or {@link class:TubDataStore#execSQL TubDataStore.execSQL} (we strongly recommend usage of ORM instead SQL)</li>\n<li>store several named data collection using {@link class:TubDataStore#currentDataName TubDataStore.currentDataName} (data stored inside server memory, not in JS, this is very good for GC)</li>\n<li>iterate other collection rows using {@link class:TubDataStore#next TubDataStore.next}, eof, e.t.c and retrieve row data using {@link class:TubDataStore#get TubDataStore.get}</li>\n<li><p>serialize data to XML {@link class:TubDataStore#asXMLPersistent TubDataStore.asXMLPersistent} or JSON in array-of-array {@link class:TubDataStore#asJSONArray TubDataStore.asJSONArray} on array-of-object {@link class:TubDataStore#asJSONObject TubDataStore.asJSONObject} format</p>\n<p>To retrieve data from database using build-in ORM (execute entity <code>select</code> method) preferred way is\nto use {@link module:@unitybase/ub#Repository UB.Repository} fabric function.</p>\n</li>\n</ul>",
    "kind": "class",
    "name": "TubDataStore",
    "longname": "TubDataStore",
    "scope": "global",
    "___id": "T000002R004486",
    "___s": true
  },
  {
    "comment": "/**\n *  Active dataset name we work with\n *  @example\n *    let store = ctx.dataStore\n *    let prevData = store.currentDataName\n *    try {\n *      store.currentDataName = TubDataStore.DATA_NAMES.BEFORE_UPDATE\n *      let valueBeforeUpdate = store.get('code')\n *    } finally {\n *      store.currentDataName = prevData\n *    }\n *\n * @member DATA_NAMES\n * @memberOf TubDataStore\n */",
    "meta": {
      "filename": "TubDataStore.js",
      "lineno": 173,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "description": "Active dataset name we work with",
    "examples": [
      "let store = ctx.dataStore\n   let prevData = store.currentDataName\n   try {\n     store.currentDataName = TubDataStore.DATA_NAMES.BEFORE_UPDATE\n     let valueBeforeUpdate = store.get('code')\n   } finally {\n     store.currentDataName = prevData\n   }"
    ],
    "kind": "member",
    "name": "DATA_NAMES",
    "memberof": "TubDataStore",
    "scope": "static",
    "longname": "TubDataStore.DATA_NAMES",
    "___id": "T000002R004525",
    "___s": true
  },
  {
    "comment": "/**\n *  Initialize DataStore from one of supported source formats:\n *\n *   - Flatten(fastest): <pre>{fieldCount: K, rowCount: Z, values: [field1Name, ..., fieldKName, row1field1Value,  ..., row1fieldKValue, row2field1Value,..]}</pre>\n *   - Array-of-array  : <pre>[[row1field1Value,  ..., row1fieldKValue], ..., [rowZfield1Value, ... rowZfieldKValue]</pre>\n *   - Array-of-object : <pre>[{field1Name: row1field1Value, ..., fieldKName: row1fieldKValue}, ....]</pre>\n *\n *  Can (optionally) convert source field names to new names using keyMap array.\n *  @example\n *\n\n const UB = require('@unitybase/ub')\n var ds = UB.DataStore('my_entity')\n\n // init empty (rowCount=0) dataStore with provided fields.\n // In case keyMap is omitted we consider it contain one attribute 'ID'\n ds.initialize([]) // the same as ds.initialize([], ['ID'])\n ds.initialize([], ['ID', 'name', {from: 'AGE', to: 'age'}])\n\n // Initialize dataStore from array-of-object representation\n // Resulting datstore will contain 3 field: ID, nam, age (in order, they listen in keyMap array).\n // During initialization we convert fiend name 'AGE' -> age;\n ds.initialize([\n     {ID: 10, name: 'Jon', AGE: 10},\n     {ID: 20, name: 'Smith', AGE: 63}\n   ],\n   ['ID', 'name', {from: 'AGE', to: 'age'}]\n )\n\n //the same, but do not convert AGE->age. Result dataset field order is unknown\n ds.initialize([\n   {ID: 10, name: 'Jon', AGE: 10},\n   {ID: 20, name: 'Smith', AGE: 63}\n ])\n\n //result dataset will contain only two field 'ID' & 'age'\n ds.initialize([\n     {ID: 10, name: 'Jon', AGE: 10},\n     {ID: 20, name: 'Smith', AGE: 63}\n   ],\n   ['ID', {from: 'AGE', to: 'age'}]\n )\n\n // Initialize dataStore from Array-of-array data\n // in this case keyMap is mandatory.\n // In case of mapping from is zero-based index of source element in row array\n ds.initialize(\n   [[10, 'Jon', 10], [20, 'Smith', 63]],\n   ['ID', 'name', 'age']\n )\n // or use mapping\n ds.initialize([[10, 'Jon', 10], [20, 'Smith', 63]],\n    ['ID', {from: 2, to: 'age'}, {from: 1, to: 'name'}])\n\n * @method initialize\n * @memberOf TubDataStore\n * @param {Object|Array} source\n * @param {Array.<String|Object>} [keyMap] Optional mapping of source field names to new field names\n * @returns {TubDataStore}\n */",
    "meta": {
      "filename": "TubDataStore.js",
      "lineno": 23,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "description": "<p>Initialize DataStore from one of supported source formats:</p>\n<ul>\n<li>Flatten(fastest): <pre>{fieldCount: K, rowCount: Z, values: [field1Name, ..., fieldKName, row1field1Value,  ..., row1fieldKValue, row2field1Value,..]}</pre></li>\n<li>Array-of-array  : <pre>[[row1field1Value,  ..., row1fieldKValue], ..., [rowZfield1Value, ... rowZfieldKValue]</pre></li>\n<li><p>Array-of-object : <pre>[{field1Name: row1field1Value, ..., fieldKName: row1fieldKValue}, ....]</pre></p>\n<p>Can (optionally) convert source field names to new names using keyMap array.</p>\n</li>\n</ul>",
    "examples": [
      "const UB = require('@unitybase/ub')\n var ds = UB.DataStore('my_entity')\n\n // init empty (rowCount=0) dataStore with provided fields.\n // In case keyMap is omitted we consider it contain one attribute 'ID'\n ds.initialize([]) // the same as ds.initialize([], ['ID'])\n ds.initialize([], ['ID', 'name', {from: 'AGE', to: 'age'}])\n\n // Initialize dataStore from array-of-object representation\n // Resulting datstore will contain 3 field: ID, nam, age (in order, they listen in keyMap array).\n // During initialization we convert fiend name 'AGE' -> age;\n ds.initialize([\n     {ID: 10, name: 'Jon', AGE: 10},\n     {ID: 20, name: 'Smith', AGE: 63}\n   ],\n   ['ID', 'name', {from: 'AGE', to: 'age'}]\n )\n\n //the same, but do not convert AGE->age. Result dataset field order is unknown\n ds.initialize([\n   {ID: 10, name: 'Jon', AGE: 10},\n   {ID: 20, name: 'Smith', AGE: 63}\n ])\n\n //result dataset will contain only two field 'ID' & 'age'\n ds.initialize([\n     {ID: 10, name: 'Jon', AGE: 10},\n     {ID: 20, name: 'Smith', AGE: 63}\n   ],\n   ['ID', {from: 'AGE', to: 'age'}]\n )\n\n // Initialize dataStore from Array-of-array data\n // in this case keyMap is mandatory.\n // In case of mapping from is zero-based index of source element in row array\n ds.initialize(\n   [[10, 'Jon', 10], [20, 'Smith', 63]],\n   ['ID', 'name', 'age']\n )\n // or use mapping\n ds.initialize([[10, 'Jon', 10], [20, 'Smith', 63]],\n    ['ID', {from: 2, to: 'age'}, {from: 1, to: 'name'}])"
    ],
    "kind": "function",
    "name": "initialize",
    "memberof": "TubDataStore",
    "params": [
      {
        "type": {
          "names": [
            "Object",
            "Array"
          ]
        },
        "name": "source"
      },
      {
        "type": {
          "names": [
            "Array.<(String|Object)>"
          ]
        },
        "optional": true,
        "description": "Optional mapping of source field names to new field names",
        "name": "keyMap"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TubDataStore"
          ]
        }
      }
    ],
    "scope": "static",
    "longname": "TubDataStore.initialize",
    "___id": "T000002R004487",
    "___s": true
  },
  {
    "comment": "/**\n * Return string representation of Instance in `Array of array` format\n * @member {String} asJSONArray\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 484,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return string representation of Instance in <code>Array of array</code> format",
    "kind": "member",
    "name": "asJSONArray",
    "type": {
      "names": [
        "String"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#asJSONArray",
    "scope": "instance",
    "___id": "T000002R000907",
    "___s": true
  },
  {
    "comment": "/**\n * Return string representation of Instance in format `[{attr1: value1, attr2: value2},... ]`\n * @member {String} asJSONObject\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 478,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return string representation of Instance in format <code>[{attr1: value1, attr2: value2},... ]</code>",
    "kind": "member",
    "name": "asJSONObject",
    "type": {
      "names": [
        "String"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#asJSONObject",
    "scope": "instance",
    "___id": "T000002R000905",
    "___s": true
  },
  {
    "comment": "/**\n * Return XML representation of Instance in MS DataSet format\n * @member {String} asXMLPersistent\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 490,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return XML representation of Instance in MS DataSet format",
    "kind": "member",
    "name": "asXMLPersistent",
    "type": {
      "names": [
        "String"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#asXMLPersistent",
    "scope": "instance",
    "___id": "T000002R000909",
    "___s": true
  },
  {
    "comment": "/**\n * Indicate current position in data collection is on the beginning of collection\n * @member {Boolean} bof\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 453,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Indicate current position in data collection is on the beginning of collection",
    "kind": "member",
    "name": "bof",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#bof",
    "scope": "instance",
    "___id": "T000002R000897",
    "___s": true
  },
  {
    "comment": "/**\n * Active dataset name we work with. There is some predefined\n * dataNames - see {@link TubDataStore#DATA_NAMES TubDataStore.DATA_NAMES}\n * @member {String} currentDataName\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 496,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Active dataset name we work with. There is some predefined\ndataNames - see {@link TubDataStore#DATA_NAMES TubDataStore.DATA_NAMES}",
    "kind": "member",
    "name": "currentDataName",
    "type": {
      "names": [
        "String"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#currentDataName",
    "scope": "instance",
    "___id": "T000002R000911",
    "___s": true
  },
  {
    "comment": "/**\n * Entity metadata\n * @member {UBEntity} entity\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "TubDataStore.js",
      "lineno": 161,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {}
    },
    "description": "Entity metadata",
    "kind": "member",
    "name": "entity",
    "type": {
      "names": [
        "UBEntity"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#entity",
    "scope": "instance",
    "___id": "T000002R004522",
    "___s": true
  },
  {
    "comment": "/**\n * Indicate current position in data collection is on the end of collection.\n * @member {Boolean} eof\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 459,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Indicate current position in data collection is on the end of collection.",
    "kind": "member",
    "name": "eof",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#eof",
    "scope": "instance",
    "___id": "T000002R000899",
    "___s": true
  },
  {
    "comment": "/**\n * Execute SQL with parameters. Not wait result data\n * @param {String} sql SQL statement to run\n * @param {Object|TubList} params SQL parameters list\n * @memberOf TubDataStore.prototype\n * @method execSQL\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 381,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Execute SQL with parameters. Not wait result data",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "SQL statement to run",
        "name": "sql"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "SQL parameters list",
        "name": "params"
      }
    ],
    "memberof": "TubDataStore",
    "kind": "function",
    "name": "execSQL",
    "longname": "TubDataStore#execSQL",
    "scope": "instance",
    "___id": "T000002R000881",
    "___s": true
  },
  {
    "comment": "/**\n * Return zero based index of fieldName from current data store (-1 if not found)\n * @example\n\n let r = UB.Repository('cdn_organization').attrs(['ID', 'mi_owner.name'])\n   .where('[ID]', '=', 3000000002801)\n   .select()\n console.log(r.fieldIndexByName('mi_owner.name')) // 1\n console.log(r.fieldIndexByName('unexistedAttr')) // -1\n\n * @method fieldIndexByName\n * @memberOf TubDataStore.prototype\n * @param {String} fieldName\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 335,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return zero based index of fieldName from current data store (-1 if not found)",
    "examples": [
      "let r = UB.Repository('cdn_organization').attrs(['ID', 'mi_owner.name'])\n   .where('[ID]', '=', 3000000002801)\n   .select()\n console.log(r.fieldIndexByName('mi_owner.name')) // 1\n console.log(r.fieldIndexByName('unexistedAttr')) // -1"
    ],
    "kind": "function",
    "name": "fieldIndexByName",
    "memberof": "TubDataStore",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "fieldName"
      }
    ],
    "longname": "TubDataStore#fieldIndexByName",
    "scope": "instance",
    "___id": "T000002R000875",
    "___s": true
  },
  {
    "comment": "/**\n * Move first\n * @method first\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 441,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Move first",
    "kind": "function",
    "name": "first",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#first",
    "scope": "instance",
    "___id": "T000002R000893",
    "___s": true
  },
  {
    "comment": "/**\n * Release all internal resources. Store became unusable after call to `freeNative()`\n * @method freeNative\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 522,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Release all internal resources. Store became unusable after call to <code>freeNative()</code>",
    "kind": "function",
    "name": "freeNative",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#freeNative",
    "scope": "instance",
    "___id": "T000002R000919",
    "___s": true
  },
  {
    "comment": "/**\n * Generate a new identifier (int64)\n * @return {Number}\n * @method generateID\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 465,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Generate a new identifier (int64)",
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "kind": "function",
    "name": "generateID",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#generateID",
    "scope": "instance",
    "___id": "T000002R000901",
    "___s": true
  },
  {
    "comment": "/**\n * Return value of attribute.\n *\n * In case store initialized using TubDataStore.run style we can return Number or String type,\n * but in case it initialized using runSQL columns data types is unknown and you must cast value do required type directly.\n *\n * @param {Number|String} attrib attribute index or name. Index is faster but less readable.\n * @return {Number|String}\n * @method get\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 406,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return value of attribute.</p>\n<p>In case store initialized using TubDataStore.run style we can return Number or String type,\nbut in case it initialized using runSQL columns data types is unknown and you must cast value do required type directly.",
    "params": [
      {
        "type": {
          "names": [
            "Number",
            "String"
          ]
        },
        "description": "attribute index or name. Index is faster but less readable.",
        "name": "attrib"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number",
            "String"
          ]
        }
      }
    ],
    "kind": "function",
    "name": "get",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#get",
    "scope": "instance",
    "___id": "T000002R000885",
    "___s": true
  },
  {
    "comment": "/**\n * Return value of attribute as ArrayBuffer.\n *\n * You can apply this method to blob fields only\n *\n * @param {Number|String} attrib attribute index or name. Index is faster but less readable.\n * @return {ArrayBuffer}\n * @method getAsBuffer\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 418,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Return value of attribute as ArrayBuffer.</p>\n<p>You can apply this method to blob fields only",
    "params": [
      {
        "type": {
          "names": [
            "Number",
            "String"
          ]
        },
        "description": "attribute index or name. Index is faster but less readable.",
        "name": "attrib"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer"
          ]
        }
      }
    ],
    "kind": "function",
    "name": "getAsBuffer",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#getAsBuffer",
    "scope": "instance",
    "___id": "T000002R000887",
    "___s": true
  },
  {
    "comment": "/**\n * init dataStore content from JSON string.\n * WARNING!!! during initFromJSON UnityBase determinate field types from vield values,\n *  so if some data column contain only numeric values it becode Number (even if in source it String).\n * @example\n\nconst UB = require('@unitybase/ub')\nlet ds = UB.DataStore('myEntityCode')\nds.initFromJSON({\"fieldCount\":1,\"values\":[\"ID\"],\"rowCount\":0});\nconsole.log(ds.initialized); // TRUE\n\n * @deprecated Use `TubDataStore.initialize` instead\n * @param source\n * @method initFromJSON\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 389,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "init dataStore content from JSON string.\nWARNING!!! during initFromJSON UnityBase determinate field types from vield values,\n so if some data column contain only numeric values it becode Number (even if in source it String).",
    "examples": [
      "const UB = require('@unitybase/ub')\nlet ds = UB.DataStore('myEntityCode')\nds.initFromJSON({\"fieldCount\":1,\"values\":[\"ID\"],\"rowCount\":0});\nconsole.log(ds.initialized); // TRUE"
    ],
    "deprecated": "Use `TubDataStore.initialize` instead",
    "params": [
      {
        "name": "source"
      }
    ],
    "kind": "function",
    "name": "initFromJSON",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#initFromJSON",
    "scope": "instance",
    "___id": "T000002R000883",
    "___s": true
  },
  {
    "comment": "/**\n * Is store initialized\n * @member {Boolean} initialized\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 472,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Is store initialized",
    "kind": "member",
    "name": "initialized",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#initialized",
    "scope": "instance",
    "___id": "T000002R000903",
    "___s": true
  },
  {
    "comment": "/**\n * Move last\n * @method last\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 447,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Move last",
    "kind": "function",
    "name": "last",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#last",
    "scope": "instance",
    "___id": "T000002R000895",
    "___s": true
  },
  {
    "comment": "/**\n * Move next\n * @method next\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 429,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Move next",
    "kind": "function",
    "name": "next",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#next",
    "scope": "instance",
    "___id": "T000002R000889",
    "___s": true
  },
  {
    "comment": "/**\n * Move prev\n * @method prev\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 435,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Move prev",
    "kind": "function",
    "name": "prev",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#prev",
    "scope": "instance",
    "___id": "T000002R000891",
    "___s": true
  },
  {
    "comment": "/**\n * Record count. If DataStore is not initialized or empty will return 0.\n * @member {Number} rowCount\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 503,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Record count. If DataStore is not initialized or empty will return 0.",
    "kind": "member",
    "name": "rowCount",
    "type": {
      "names": [
        "Number"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#rowCount",
    "scope": "instance",
    "___id": "T000002R000913",
    "___s": true
  },
  {
    "comment": "/**\n * Row position inside currentDataName dataset. Read/write\n * @member {Number} rowPos\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 516,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Row position inside currentDataName dataset. Read/write",
    "kind": "member",
    "name": "rowPos",
    "type": {
      "names": [
        "Number"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#rowPos",
    "scope": "instance",
    "___id": "T000002R000917",
    "___s": true
  },
  {
    "comment": "/**\n * Run any entity method.\n * @example\n\nlet store = new TubDataStore('doc_attachment');\nstore.run('update', {\n  execParams: {\n    ID: 1,\n    approved: 0\n  }\n})\nstore.run('anyEntityMethod', {param1: 'valueOfParam1', ...})\n\n * @param {String} methodName\n * @param {Object|TubList} params\n * @return {Boolean} True in case of success, else raise exception\n * @method run\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 350,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Run any entity method.",
    "examples": [
      "let store = new TubDataStore('doc_attachment');\nstore.run('update', {\n  execParams: {\n    ID: 1,\n    approved: 0\n  }\n})\nstore.run('anyEntityMethod', {param1: 'valueOfParam1', ...})"
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "methodName"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "name": "params"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>True in case of success, else raise exception</p>"
      }
    ],
    "kind": "function",
    "name": "run",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#run",
    "scope": "instance",
    "___id": "T000002R000877",
    "___s": true
  },
  {
    "comment": "/**\n * Execute SQL with parameters and place result into dataStore. This method expect SQL statement have **result**.\n *\n * To execute SQL statement without result (`insert` for example) - use TubDataStore.execSQL instead.\n *\n * @param {String} sql SQL statement to run\n * @param {Object|TubList} params SQL parameters list\n * @method runSQL\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 370,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Execute SQL with parameters and place result into dataStore. This method expect SQL statement have <strong>result</strong>.</p>\n<p>To execute SQL statement without result (<code>insert</code> for example) - use TubDataStore.execSQL instead.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "SQL statement to run",
        "name": "sql"
      },
      {
        "type": {
          "names": [
            "Object",
            "TubList"
          ]
        },
        "description": "SQL parameters list",
        "name": "params"
      }
    ],
    "kind": "function",
    "name": "runSQL",
    "memberof": "TubDataStore",
    "longname": "TubDataStore#runSQL",
    "scope": "instance",
    "___id": "T000002R000879",
    "___s": true
  },
  {
    "comment": "/**\n * Total record count if store are filled with {@link class:CustomRepository#withTotal Repository.withTotal()} option.\n * If DataStore is not initialized or empty or initialized without withTotal() will return -1.\n * @member {Number} totalRowCount\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 509,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Total record count if store are filled with {@link class:CustomRepository#withTotal Repository.withTotal()} option.\nIf DataStore is not initialized or empty or initialized without withTotal() will return -1.",
    "kind": "member",
    "name": "totalRowCount",
    "type": {
      "names": [
        "Number"
      ]
    },
    "memberof": "TubDataStore",
    "longname": "TubDataStore#totalRowCount",
    "scope": "instance",
    "___id": "T000002R000915",
    "___s": true
  },
  {
    "comment": "/**\n * If have attributes of type `Document` and it values changed then\n * for each changed attribute:\n *  - call a BLOB store implementation method `moveToPermanent`\n * @param {ubMethodParams} ctx\n * @param {Boolean} isUpdate\n * @return {Boolean} True in case some of document type attributes actually changed\n * @memberOf TubDataStore.prototype\n */",
    "meta": {
      "range": [
        8308,
        10461
      ],
      "filename": "TubDataStore.js",
      "lineno": 211,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ub",
      "code": {
        "id": "astnode100050673",
        "name": "TubDataStore.commitBLOBStores",
        "type": "FunctionExpression",
        "paramnames": [
          "ctx",
          "isUpdate"
        ]
      },
      "vars": {
        "entity": "TubDataStore#TubDataStore.commitBLOBStores~entity",
        "execParams": "TubDataStore#TubDataStore.commitBLOBStores~execParams",
        "modifiedBlobs": "TubDataStore#TubDataStore.commitBLOBStores~modifiedBlobs",
        "i": "TubDataStore#TubDataStore.commitBLOBStores~i",
        "L": "TubDataStore#TubDataStore.commitBLOBStores~L",
        "blobAttr": "TubDataStore#TubDataStore.commitBLOBStores~blobAttr",
        "newVal": "TubDataStore#TubDataStore.commitBLOBStores~newVal",
        "store": "TubDataStore#TubDataStore.commitBLOBStores~store",
        "prevDataName": "TubDataStore#TubDataStore.commitBLOBStores~prevDataName",
        "store.currentDataName": "TubDataStore#TubDataStore.commitBLOBStores~store.currentDataName",
        "modifiedBlob": "TubDataStore#TubDataStore.commitBLOBStores~modifiedBlob",
        "oldVal": "TubDataStore#TubDataStore.commitBLOBStores~oldVal",
        "modifiedBlob.oldVal": "TubDataStore#TubDataStore.commitBLOBStores~modifiedBlob.oldVal",
        "ID": "TubDataStore#TubDataStore.commitBLOBStores~ID",
        "newMeta": "TubDataStore#TubDataStore.commitBLOBStores~newMeta",
        "execParams[undefined]": "TubDataStore#TubDataStore.commitBLOBStores~execParams.undefined]"
      }
    },
    "description": "<p>If have attributes of type <code>Document</code> and it values changed then\nfor each changed attribute:</p>\n<ul>\n<li>call a BLOB store implementation method <code>moveToPermanent</code></li>\n</ul>",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "name": "isUpdate"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>True in case some of document type attributes actually changed</p>"
      }
    ],
    "memberof": "TubDataStore#TubDataStore",
    "name": "commitBLOBStores",
    "longname": "TubDataStore#TubDataStore.commitBLOBStores",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R004535",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n *  Named collection of parameters.\n *\n *  Think of it as an pain JavaScript object with property values that are stored in the `native` code,\n *  not inside a JavaScript runtime\n * @extends {TubNamedCollection}\n * @class TubList\n */",
    "meta": {
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 127,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "classdesc": "<p>Named collection of parameters.</p>\n<p> Think of it as an pain JavaScript object with property values that are stored in the <code>native</code> code,\n not inside a JavaScript runtime</p>",
    "augments": [
      "TubNamedCollection"
    ],
    "kind": "class",
    "name": "TubList",
    "longname": "TubList",
    "scope": "global",
    "___id": "T000002R000802",
    "___s": true
  },
  {
    "comment": "/**\n   * Stringified JSON representation of named collection\n   * @type {String}\n   */",
    "meta": {
      "range": [
        855,
        865
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 30,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008697",
        "name": "asJSON",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Stringified JSON representation of named collection",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "asJSON",
    "longname": "TubList#asJSON",
    "kind": "member",
    "memberof": "TubList",
    "scope": "instance",
    "inherits": "TubNamedCollection#asJSON",
    "inherited": true,
    "___id": "T000002R010792",
    "___s": true
  },
  {
    "comment": "/**\n   * Get list element by name\n   * @param name\n   * @returns {Number|String|TubList}\n   */",
    "meta": {
      "range": [
        735,
        761
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008693",
        "name": "byName",
        "type": "FunctionExpression"
      }
    },
    "description": "Get list element by name",
    "params": [
      {
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number",
            "String",
            "TubList"
          ]
        }
      }
    ],
    "name": "byName",
    "longname": "TubList#byName",
    "kind": "function",
    "memberof": "TubList",
    "scope": "instance",
    "inherits": "TubNamedCollection#byName",
    "inherited": true,
    "___id": "T000002R010791",
    "___s": true
  },
  {
    "comment": "/**\n * Delete all elements from list\n */",
    "meta": {
      "range": [
        4513,
        4553
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 141,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008503",
        "name": "TubList.prototype.clear",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Delete all elements from list",
    "name": "clear",
    "longname": "TubList#clear",
    "kind": "function",
    "memberof": "TubList",
    "scope": "instance",
    "___id": "T000002R000804",
    "___s": true
  },
  {
    "comment": "/**\n   * Number of named collection items\n   * @type {Number}\n   */",
    "meta": {
      "range": [
        939,
        947
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 35,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008699",
        "name": "count",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Number of named collection items",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "count",
    "longname": "TubList#count",
    "kind": "member",
    "memberof": "TubList",
    "scope": "instance",
    "inherits": "TubNamedCollection#count",
    "inherited": true,
    "___id": "T000002R010793",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of collection items\n   * @type {Array}\n   */",
    "meta": {
      "range": [
        1013,
        1022
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 40,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008701",
        "name": "items",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "Array of collection items",
    "type": {
      "names": [
        "Array"
      ]
    },
    "name": "items",
    "longname": "TubList#items",
    "kind": "member",
    "memberof": "TubList",
    "scope": "instance",
    "inherits": "TubNamedCollection#items",
    "inherited": true,
    "___id": "T000002R010794",
    "___s": true
  },
  {
    "comment": "/**\n * Add parameter with name paramName, set it type to `Blob` and value to `data`. In case parameter with same name exists - replace it.\n *\n * After call content of JavaScript variable is copied to server memory, so to avoid memory overflow developer can\n * set JS variable to NULL to allow GC to free memory.\n *\n * Use this feature to pass BLOB's as database operation parameter value.\n * @example\n\n var\n    store = new TubDataStore('tst_blob'),\n    l = new TubList(),\n    fs = require('fs'),\n    arr;\n arr = fs.readFileSync(process.binPath + 'UB.exe', {encoding: 'bin'}); // get content of binary file as array buffer\n l.ID = store.generateID();\n l.description = 'test1';\n l.setBLOBValue('blb', arr); // set BLOB type parameter value.\n // in case we sure arr is === ArrayBuffer can be simplified to: l.blb = arr;\n arr = null; // give a GC chance to release array memory\n store.execSQL('insert into tst_blob(id, description, blb) values(:ID:, :description:, :blb:)', l);\n\n * @param {String} paramName Name of a parameter to add BLOB to\n * @param {ArrayBuffer|Object|String} data Data to write. If Object - it stringify before write\n * @param {String} [encoding] Encode data to `encoding` before write. Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *                              One of \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        5914,
        5986
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 170,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008512",
        "name": "TubList.prototype.setBLOBValue",
        "type": "FunctionExpression",
        "paramnames": [
          "paramName",
          "data",
          "encoding"
        ]
      }
    },
    "description": "Add parameter with name paramName, set it type to <code>Blob</code> and value to <code>data</code>. In case parameter with same name exists - replace it.</p>\n<p>After call content of JavaScript variable is copied to server memory, so to avoid memory overflow developer can\nset JS variable to NULL to allow GC to free memory.</p>\n<p>Use this feature to pass BLOB's as database operation parameter value.",
    "examples": [
      "var\n    store = new TubDataStore('tst_blob'),\n    l = new TubList(),\n    fs = require('fs'),\n    arr;\n arr = fs.readFileSync(process.binPath + 'UB.exe', {encoding: 'bin'}); // get content of binary file as array buffer\n l.ID = store.generateID();\n l.description = 'test1';\n l.setBLOBValue('blb', arr); // set BLOB type parameter value.\n // in case we sure arr is === ArrayBuffer can be simplified to: l.blb = arr;\n arr = null; // give a GC chance to release array memory\n store.execSQL('insert into tst_blob(id, description, blb) values(:ID:, :description:, :blb:)', l);"
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Name of a parameter to add BLOB to",
        "name": "paramName"
      },
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. If Object - it stringify before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write. Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n                             One of &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "encoding"
      }
    ],
    "name": "setBLOBValue",
    "longname": "TubList#setBLOBValue",
    "kind": "function",
    "memberof": "TubList",
    "scope": "instance",
    "___id": "T000002R000805",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of collection item names\n   * @type {Array}\n   */",
    "meta": {
      "range": [
        1093,
        1104
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 45,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008703",
        "name": "strings",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "Array of collection item names",
    "type": {
      "names": [
        "Array"
      ]
    },
    "name": "strings",
    "longname": "TubList#strings",
    "kind": "member",
    "memberof": "TubList",
    "scope": "instance",
    "inherits": "TubNamedCollection#strings",
    "inherited": true,
    "___id": "T000002R010795",
    "___s": true
  },
  {
    "comment": "/**\n * Collection of named items\n * @class TubNamedCollection\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 13,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "description": "Collection of named items",
    "kind": "class",
    "name": "TubNamedCollection",
    "longname": "TubNamedCollection",
    "scope": "global",
    "___id": "T000002R000828",
    "___s": true
  },
  {
    "comment": "/**\n   * Stringified JSON representation of named collection\n   * @type {String}\n   */",
    "meta": {
      "range": [
        855,
        865
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 30,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008697",
        "name": "asJSON",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Stringified JSON representation of named collection",
    "type": {
      "names": [
        "String"
      ]
    },
    "name": "asJSON",
    "longname": "TubNamedCollection#asJSON",
    "kind": "member",
    "memberof": "TubNamedCollection",
    "scope": "instance",
    "___id": "T000002R000831",
    "___s": true
  },
  {
    "comment": "/**\n   * Get list element by name\n   * @param name\n   * @returns {Number|String|TubList}\n   */",
    "meta": {
      "range": [
        735,
        761
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 24,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008693",
        "name": "byName",
        "type": "FunctionExpression"
      }
    },
    "description": "Get list element by name",
    "params": [
      {
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number",
            "String",
            "TubList"
          ]
        }
      }
    ],
    "name": "byName",
    "longname": "TubNamedCollection#byName",
    "kind": "function",
    "memberof": "TubNamedCollection",
    "scope": "instance",
    "___id": "T000002R000830",
    "___s": true
  },
  {
    "comment": "/**\n   * Number of named collection items\n   * @type {Number}\n   */",
    "meta": {
      "range": [
        939,
        947
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 35,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008699",
        "name": "count",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Number of named collection items",
    "type": {
      "names": [
        "Number"
      ]
    },
    "name": "count",
    "longname": "TubNamedCollection#count",
    "kind": "member",
    "memberof": "TubNamedCollection",
    "scope": "instance",
    "___id": "T000002R000832",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of collection items\n   * @type {Array}\n   */",
    "meta": {
      "range": [
        1013,
        1022
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 40,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008701",
        "name": "items",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "Array of collection items",
    "type": {
      "names": [
        "Array"
      ]
    },
    "name": "items",
    "longname": "TubNamedCollection#items",
    "kind": "member",
    "memberof": "TubNamedCollection",
    "scope": "instance",
    "___id": "T000002R000833",
    "___s": true
  },
  {
    "comment": "/**\n   * Array of collection item names\n   * @type {Array}\n   */",
    "meta": {
      "range": [
        1093,
        1104
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 45,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008703",
        "name": "strings",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "Array of collection item names",
    "type": {
      "names": [
        "Array"
      ]
    },
    "name": "strings",
    "longname": "TubNamedCollection#strings",
    "kind": "member",
    "memberof": "TubNamedCollection",
    "scope": "instance",
    "___id": "T000002R000834",
    "___s": true
  },
  {
    "comment": "/**\n * @class TubZipReader\n * Class for read zip archives. Can read from file name or from TubBuffer\n * @param {String|TubBuffer} from fileName or TubBuffer object to read zip archive from\n * @constructor\n */",
    "meta": {
      "range": [
        6909,
        6940
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 199,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008543",
        "name": "TubZipReader",
        "type": "FunctionDeclaration",
        "paramnames": [
          "from"
        ]
      }
    },
    "kind": "class",
    "classdesc": "<p>TubZipReader\nClass for read zip archives. Can read from file name or from TubBuffer</p>",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "TubBuffer"
          ]
        },
        "description": "fileName or TubBuffer object to read zip archive from",
        "name": "from"
      }
    ],
    "name": "TubZipReader",
    "longname": "TubZipReader",
    "scope": "global",
    "___id": "T000002R000809",
    "___s": true
  },
  {
    "comment": "/**\n * Read only file count inside archive\n * @type {number}\n */",
    "meta": {
      "range": [
        7117,
        7153
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 209,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008556",
        "name": "TubZipReader.prototype.fileCount",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Read only file count inside archive",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "fileCount",
    "longname": "TubZipReader#fileCount",
    "kind": "member",
    "memberof": "TubZipReader",
    "scope": "instance",
    "___id": "T000002R000811",
    "___s": true
  },
  {
    "comment": "/**\n * Read only array of file names inside archive\n * @type {Array}\n */",
    "meta": {
      "range": [
        7014,
        7051
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 204,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008548",
        "name": "TubZipReader.prototype.fileNames",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Read only array of file names inside archive",
    "type": {
      "names": [
        "Array"
      ]
    },
    "name": "fileNames",
    "longname": "TubZipReader#fileNames",
    "kind": "member",
    "memberof": "TubZipReader",
    "scope": "instance",
    "___id": "T000002R000810",
    "___s": true
  },
  {
    "comment": "/**\n * Unzip all files to specified folder.\n * @param {String} dirName directory name to unzip files to\n * @returns {Boolean} Success\n */",
    "meta": {
      "range": [
        7864,
        7937
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 229,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008590",
        "name": "TubZipReader.prototype.unZipAllToDir",
        "type": "FunctionExpression",
        "paramnames": [
          "dirName"
        ]
      }
    },
    "description": "Unzip all files to specified folder.",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "directory name to unzip files to",
        "name": "dirName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>Success</p>"
      }
    ],
    "name": "unZipAllToDir",
    "longname": "TubZipReader#unZipAllToDir",
    "kind": "function",
    "memberof": "TubZipReader",
    "scope": "instance",
    "___id": "T000002R000814",
    "___s": true
  },
  {
    "comment": "/**\n * Unzip specified file and append to existed TubBuffer.\n * @param {Number} fileIndex index of file to unzip\n * @param {TubBuffer} dest buffer to append unzipped data\n * @returns {number} Unzipped bytes count\n */",
    "meta": {
      "range": [
        7371,
        7449
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 216,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008564",
        "name": "TubZipReader.prototype.unZipToBuffer",
        "type": "FunctionExpression",
        "paramnames": [
          "fileIndex",
          "dest"
        ]
      }
    },
    "description": "Unzip specified file and append to existed TubBuffer.",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "index of file to unzip",
        "name": "fileIndex"
      },
      {
        "type": {
          "names": [
            "TubBuffer"
          ]
        },
        "description": "buffer to append unzipped data",
        "name": "dest"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Unzipped bytes count</p>"
      }
    ],
    "name": "unZipToBuffer",
    "longname": "TubZipReader#unZipToBuffer",
    "kind": "function",
    "memberof": "TubZipReader",
    "scope": "instance",
    "___id": "T000002R000812",
    "___s": true
  },
  {
    "comment": "/**\n * Unzip specified file to specified folder.\n * @param {Number} fileIndex index of file to unzip\n * @param {String} dirName directory name to unzip file to\n * @returns {Boolean} Success\n */",
    "meta": {
      "range": [
        7644,
        7725
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 223,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008577",
        "name": "TubZipReader.prototype.unZipToDir",
        "type": "FunctionExpression",
        "paramnames": [
          "fileIndex",
          "dirName"
        ]
      }
    },
    "description": "Unzip specified file to specified folder.",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "index of file to unzip",
        "name": "fileIndex"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "directory name to unzip file to",
        "name": "dirName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>Success</p>"
      }
    ],
    "name": "unZipToDir",
    "longname": "TubZipReader#unZipToDir",
    "kind": "function",
    "memberof": "TubZipReader",
    "scope": "instance",
    "___id": "T000002R000813",
    "___s": true
  },
  {
    "comment": "/**\n * @class TubZipWriter\n * Create zip archive. After finish working with archive creator must call freeNative() method to close file handel\n * @param fileName name of zip archive file\n * @constructor\n */",
    "meta": {
      "range": [
        8146,
        8181
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 237,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008601",
        "name": "TubZipWriter",
        "type": "FunctionDeclaration",
        "paramnames": [
          "fileName"
        ]
      }
    },
    "kind": "class",
    "classdesc": "<p>TubZipWriter\nCreate zip archive. After finish working with archive creator must call freeNative() method to close file handel</p>",
    "params": [
      {
        "description": "name of zip archive file",
        "name": "fileName"
      }
    ],
    "name": "TubZipWriter",
    "longname": "TubZipWriter",
    "scope": "global",
    "___id": "T000002R000815",
    "___s": true
  },
  {
    "comment": "/**\n * Add byteCount bytes from source to archive as fleName\n * @param {String} fileName name of file inside archive\n * @param {Number} byteCount number of bytes to add starting from buffer position\n * @param {TubBuffer} source\n */",
    "meta": {
      "range": [
        8414,
        8490
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 244,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008606",
        "name": "TubZipWriter.prototype.addBuffer",
        "type": "FunctionExpression",
        "paramnames": [
          "fileName",
          "byteCount",
          "source"
        ]
      }
    },
    "description": "Add byteCount bytes from source to archive as fleName",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "name of file inside archive",
        "name": "fileName"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "number of bytes to add starting from buffer position",
        "name": "byteCount"
      },
      {
        "type": {
          "names": [
            "TubBuffer"
          ]
        },
        "name": "source"
      }
    ],
    "name": "addBuffer",
    "longname": "TubZipWriter#addBuffer",
    "kind": "function",
    "memberof": "TubZipWriter",
    "scope": "instance",
    "___id": "T000002R000816",
    "___s": true
  },
  {
    "comment": "/**\n * Add specified file to archive\n * @param fileName\n */",
    "meta": {
      "range": [
        8551,
        8606
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 249,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008618",
        "name": "TubZipWriter.prototype.addFile",
        "type": "FunctionExpression",
        "paramnames": [
          "fileName"
        ]
      }
    },
    "description": "Add specified file to archive",
    "params": [
      {
        "name": "fileName"
      }
    ],
    "name": "addFile",
    "longname": "TubZipWriter#addFile",
    "kind": "function",
    "memberof": "TubZipWriter",
    "scope": "instance",
    "___id": "T000002R000817",
    "___s": true
  },
  {
    "comment": "/**\n * Close writer\n */",
    "meta": {
      "range": [
        8631,
        8681
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 253,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008628",
        "name": "TubZipWriter.prototype.freeNative",
        "type": "FunctionExpression",
        "paramnames": []
      }
    },
    "description": "Close writer",
    "name": "freeNative",
    "longname": "TubZipWriter#freeNative",
    "kind": "function",
    "memberof": "TubZipWriter",
    "scope": "instance",
    "___id": "T000002R000818",
    "___s": true
  },
  {
    "comment": "/**\n * Save one ALS row. If case unique row \"entity+attribute+state+roleName\" is found in the database then\n * row will be update, else will be inserted\n *\n * @method save\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n * @memberOf uba_als_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "filename": "uba_als.js",
      "lineno": 7,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Save one ALS row. If case unique row &quot;entity+attribute+state+roleName&quot; is found in the database then\nrow will be update, else will be inserted",
    "kind": "function",
    "name": "save",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "memberof": "module:@unitybase/uba~uba_als_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "longname": "uba_als_ns#save",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R004930",
    "___s": true
  },
  {
    "comment": "/**\n * Save an audit events from the secure browser (UnityBase defense edition)\n * @param {ubMethodParams} ctx\n * @param {string} ctx.mParams.reason\n * @param {string} ctx.mParams.action\n * @memberOf uba_audit_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "range": [
        1353,
        1798
      ],
      "filename": "uba_audit.js",
      "lineno": 43,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100053290",
        "name": "secureBrowserEvent",
        "type": "FunctionDeclaration",
        "paramnames": [
          "ctx"
        ]
      },
      "vars": {
        "params": "uba_audit_ns#secureBrowserEvent~params",
        "action": "uba_audit_ns#secureBrowserEvent~action",
        "reason": "uba_audit_ns#secureBrowserEvent~reason"
      }
    },
    "description": "Save an audit events from the secure browser (UnityBase defense edition)",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ctx.mParams.reason"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ctx.mParams.action"
      }
    ],
    "memberof": "module:@unitybase/uba~uba_audit_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "name": "secureBrowserEvent",
    "longname": "uba_audit_ns#secureBrowserEvent",
    "kind": "function",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R004958",
    "___s": true
  },
  {
    "comment": "/**\n * Switch session to user from OTP or execute callback in session of user from OTP\n *\n * @param {string} otp\n * @param {string} otpKind\n * @param {Function} [fCheckUData] function for check OTP from uData\n * @param {Object} [checkData] value for check OTP from uData\n * @param {Function} [call] This function will be called in user's session. If defined then restore original user session after call it.\n * @returns {Boolean}\n * @method auth\n * @deprecated use authAndExecute instead\n * @memberOf uba_otp_ns.prototype\n * @memberOfModule @unitybase/uba\n * @public\n */",
    "meta": {
      "filename": "uba_otp.js",
      "lineno": 55,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Switch session to user from OTP or execute callback in session of user from OTP",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "otp"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "otpKind"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "function for check OTP from uData",
        "name": "fCheckUData"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "value for check OTP from uData",
        "name": "checkData"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "This function will be called in user's session. If defined then restore original user session after call it.",
        "name": "call"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "kind": "function",
    "name": "auth",
    "deprecated": "use authAndExecute instead",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      }
    ],
    "access": "public",
    "longname": "uba_otp_ns#auth",
    "scope": "instance",
    "___id": "T000002R005173",
    "___s": true
  },
  {
    "comment": "/**\n * Check given otp, and in case it is correct run callback\n *\n * @example\n  // generation otp\n  var userID = 100000000122,\n     uData = {size: {width: 100, height: 50}};\n  var otp = uba_otp.generateOtp('EMail', userID, uData);\n  // send this otp via EMail\n  //............................\n  // after receiving this otp\n  var isOtpCorrect =  uba_otp.authAndExecute('EMail', otp, function(uData){\n     var params = JSON.parse(uData);\n     console.log('user ID is', Session.userID);//'user ID is 100000000122';\n     console.log('width is', params.width);//'width is 100';\n  }));\n\n * @param {string} otp\n * @param {string} otpKind\n * @param {Function} callBack This function will be called in user's session with uData parameter from otp if otp is correct.\n * @returns {Boolean} Is otp correct\n * @method authAndExecute\n * @memberOf uba_otp_ns.prototype\n * @memberOfModule @unitybase/uba\n * @public\n */",
    "meta": {
      "filename": "uba_otp.js",
      "lineno": 96,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Check given otp, and in case it is correct run callback",
    "examples": [
      "// generation otp\n  var userID = 100000000122,\n     uData = {size: {width: 100, height: 50}};\n  var otp = uba_otp.generateOtp('EMail', userID, uData);\n  // send this otp via EMail\n  //............................\n  // after receiving this otp\n  var isOtpCorrect =  uba_otp.authAndExecute('EMail', otp, function(uData){\n     var params = JSON.parse(uData);\n     console.log('user ID is', Session.userID);//'user ID is 100000000122';\n     console.log('width is', params.width);//'width is 100';\n  }));"
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "otp"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "otpKind"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "This function will be called in user's session with uData parameter from otp if otp is correct.",
        "name": "callBack"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>Is otp correct</p>"
      }
    ],
    "kind": "function",
    "name": "authAndExecute",
    "memberof": "module:@unitybase/uba~uba_otp_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      }
    ],
    "access": "public",
    "longname": "uba_otp_ns#authAndExecute",
    "scope": "instance",
    "___id": "T000002R005181",
    "___s": true
  },
  {
    "comment": "/**\n * Generate one-time-password (OTP), insert record into table and returns new OTP\n *\n * @param {string} otpKind Must be one of 'EMail' or 'SMS'\n * @param {Number} userID\n * @param {Object} [uData]\n * @param {Number} [lifeTime] life time of otp in seconds\n * @return {string}\n * @memberOf uba_otp_ns.prototype\n * @memberOfModule @unitybase/uba\n * @public\n */",
    "meta": {
      "range": [
        536,
        1447
      ],
      "filename": "uba_otp.js",
      "lineno": 21,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100054816",
        "name": "me.generateOtp",
        "type": "FunctionExpression",
        "paramnames": [
          "otpKind",
          "userID",
          "uData",
          "lifeTime"
        ]
      },
      "vars": {
        "lifeTimeOfEMail": "uba_otp_ns#me.generateOtp~lifeTimeOfEMail",
        "lifeTimeOfSMS": "uba_otp_ns#me.generateOtp~lifeTimeOfSMS",
        "expiredDate": "uba_otp_ns#me.generateOtp~expiredDate",
        "otp": "uba_otp_ns#me.generateOtp~otp",
        "lifeTime": "uba_otp_ns#me.generateOtp~lifeTime",
        "uDataStr": "uba_otp_ns#me.generateOtp~uDataStr",
        "inst": "uba_otp_ns#me.generateOtp~inst",
        "res": "uba_otp_ns#me.generateOtp~res"
      }
    },
    "description": "Generate one-time-password (OTP), insert record into table and returns new OTP",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Must be one of 'EMail' or 'SMS'",
        "name": "otpKind"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "userID"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "name": "uData"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "life time of otp in seconds",
        "name": "lifeTime"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "memberof": "module:@unitybase/uba~uba_otp_ns#me",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      }
    ],
    "access": "public",
    "name": "generateOtp",
    "longname": "uba_otp_ns#me.generateOtp",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R005155",
    "___s": true
  },
  {
    "comment": "/**\n * Change (or set) current user language.\n * After call to this method UI must logout user and reload itself.\n *\n * @param {ubMethodParams} ctxt\n * @param {String} ctxt.mParams.newLang new user language\n * @memberOf uba_user_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "range": [
        8945,
        9332
      ],
      "filename": "uba_user.js",
      "lineno": 280,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100056786",
        "name": "changeLanguage",
        "type": "FunctionDeclaration",
        "paramnames": [
          "ctxt"
        ]
      },
      "vars": {
        "params": "uba_user_ns#changeLanguage~params",
        "newLang": "uba_user_ns#changeLanguage~newLang",
        "supportedLangs": "uba_user_ns#changeLanguage~supportedLangs"
      }
    },
    "description": "Change (or set) current user language.\nAfter call to this method UI must logout user and reload itself.",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "new user language",
        "name": "ctxt.mParams.newLang"
      }
    ],
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "name": "changeLanguage",
    "longname": "uba_user_ns#changeLanguage",
    "kind": "function",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R005353",
    "___s": true
  },
  {
    "comment": "/**\n * Change user password\n * @param {Number} userID\n * @param {String} userName Either userName or userID must be specified\n * @param  {String} password\n * @param {Boolean} [needChangePassword=false] If true the password will by expired\n * @param {String} [oldPwd] Optional for optimisation\n * @method changePassword\n * @memberOf uba_user_ns.prototype\n * @memberOfModule @unitybase/uba\n * @public\n */",
    "meta": {
      "filename": "uba_user.js",
      "lineno": 63,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Change user password",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "userID"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Either userName or userID must be specified",
        "name": "userName"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "password"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "If true the password will by expired",
        "name": "needChangePassword"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional for optimisation",
        "name": "oldPwd"
      }
    ],
    "kind": "function",
    "name": "changePassword",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      }
    ],
    "access": "public",
    "longname": "uba_user_ns#changePassword",
    "scope": "instance",
    "___id": "T000002R005287",
    "___s": true
  },
  {
    "comment": "/**\n * Two-step new user public registration **rest** endpoint. Optionaly can use google Re-captcha.\n * To enable re-captcha on server side provide a valid [re-captcha SECRET](https://www.google.com/recaptcha/admin#list)\n *  in `serverConfig.application.customSettings.reCAPTCHA.secretKey` application config.\n *\n * 1-st step: web page pass a registration parameters as JSON:\n *\n *      POST /rest/uba_user/publicRegistration\n *      {email: \"<email>\", phone: \"\", utmSource: '', utmCampaign: '', recaptca: \"googleRecaptchaValue\"}\n *\n *\n * Server will:\n *\n *  - create a new uba_user (in pending state isPending===true) and generate a password for user\n *  - generate OTP, and put a optional `utmSource` and `utmCampaign` parameters to the OTP uData\n *  - create a e-mail using using report code, provided by `uba.user.publicRegistrationReportCode` ubs_setting key.\n *    Report take a parameters {login, password, activateUrl, appConfig}\n *  - schedule a confirmation e-mail for user\n *\n * 2-nd step: user follow the link from e-mail\n *\n *      GET /rest/uba_user/publicRegistration?otp=<one time pwd value>&login=<user_login>\n *\n * Server will:\n *\n *  - check the provided OTP and if it is valud\n *  - remove a `pending` from uba_user row\n *  - fire a `registration` event for {@link Session}\n *\n * Access to endpoint is restricted by default. To enable public registration developer should grant ELS access for\n * `uba_user.publicRegistration` method to `Anonymous` role.\n *\n * @param fake\n * @param {THTTPRequest} req\n * @param {THTTPResponse} resp\n * @method publicRegistration\n * @memberOf uba_user_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "filename": "uba_user.js",
      "lineno": 559,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Two-step new user public registration <strong>rest</strong> endpoint. Optionaly can use google Re-captcha.\nTo enable re-captcha on server side provide a valid <a href=\"https://www.google.com/recaptcha/admin#list\">re-captcha SECRET</a>\n in <code>serverConfig.application.customSettings.reCAPTCHA.secretKey</code> application config.</p>\n<p>1-st step: web page pass a registration parameters as JSON:</p>\n<pre class=\"prettyprint source\"><code> POST /rest/uba_user/publicRegistration\n {email: &quot;&lt;email>&quot;, phone: &quot;&quot;, utmSource: '', utmCampaign: '', recaptca: &quot;googleRecaptchaValue&quot;}</code></pre><p>Server will:</p>\n<ul>\n<li>create a new uba_user (in pending state isPending===true) and generate a password for user</li>\n<li>generate OTP, and put a optional <code>utmSource</code> and <code>utmCampaign</code> parameters to the OTP uData</li>\n<li>create a e-mail using using report code, provided by <code>uba.user.publicRegistrationReportCode</code> ubs_setting key.\nReport take a parameters {login, password, activateUrl, appConfig}</li>\n<li>schedule a confirmation e-mail for user</li>\n</ul>\n<p>2-nd step: user follow the link from e-mail</p>\n<pre class=\"prettyprint source\"><code> GET /rest/uba_user/publicRegistration?otp=&lt;one time pwd value>&login=&lt;user_login></code></pre><p>Server will:</p>\n<ul>\n<li>check the provided OTP and if it is valud</li>\n<li>remove a <code>pending</code> from uba_user row</li>\n<li>fire a <code>registration</code> event for {@link Session}</li>\n</ul>\n<p>Access to endpoint is restricted by default. To enable public registration developer should grant ELS access for\n<code>uba_user.publicRegistration</code> method to <code>Anonymous</code> role.",
    "params": [
      {
        "name": "fake"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "name": "resp"
      }
    ],
    "kind": "function",
    "name": "publicRegistration",
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "longname": "uba_user_ns#publicRegistration",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R005471",
    "___s": true
  },
  {
    "comment": "/**\n * Set key value inside `uba_user.uData` and store new JSON do DB.\n * All other uData JSON keys will remain unchanged.\n *\n * **WARNING** - overall length of uba_user.uData is 2000 characters, so only short values should be stored there\n *\n * @param {ubMethodParams} ctxt\n * @param {String} ctxt.mParams.key key to change\n * @param {String} ctxt.mParams.value new value\n * @memberOf uba_user_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "range": [
        9829,
        10108
      ],
      "filename": "uba_user.js",
      "lineno": 309,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {
        "id": "astnode100056847",
        "name": "setUDataKey",
        "type": "FunctionDeclaration",
        "paramnames": [
          "ctxt"
        ]
      },
      "vars": {
        "params": "uba_user_ns#setUDataKey~params",
        "key": "uba_user_ns#setUDataKey~key",
        "value": "uba_user_ns#setUDataKey~value"
      }
    },
    "description": "Set key value inside <code>uba_user.uData</code> and store new JSON do DB.\nAll other uData JSON keys will remain unchanged.</p>\n<p><strong>WARNING</strong> - overall length of uba_user.uData is 2000 characters, so only short values should be stored there",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "key to change",
        "name": "ctxt.mParams.key"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "new value",
        "name": "ctxt.mParams.value"
      }
    ],
    "memberof": "module:@unitybase/uba~uba_user_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "name": "setUDataKey",
    "longname": "uba_user_ns#setUDataKey",
    "kind": "function",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R005358",
    "___s": true
  },
  {
    "comment": "/**\n * Retrieve certificate as base64 encoded string\n *\n * @param {ubMethodParams} ctxt\n * @param {number} ctxt.mParams.ID\n * @method getCertificate\n * @memberOf uba_usercertificate_ns.prototype\n * @memberOfModule @unitybase/uba\n * @published\n */",
    "meta": {
      "filename": "uba_usercertificate.js",
      "lineno": 30,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/uba",
      "code": {}
    },
    "description": "Retrieve certificate as base64 encoded string",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctxt.mParams.ID"
      }
    ],
    "kind": "function",
    "name": "getCertificate",
    "memberof": "module:@unitybase/uba~uba_usercertificate_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/uba",
        "value": "@unitybase/uba"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "longname": "uba_usercertificate_ns#getCertificate",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R005527",
    "___s": true
  },
  {
    "comment": "/**\n * Check ID is unique and perform insertion\n * @method insert\n * @memberOf ubm_diagram_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_diagram.js",
      "lineno": 244,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "description": "Check ID is unique and perform insertion",
    "kind": "function",
    "name": "insert",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_diagram_ns#insert",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009307",
    "___s": true
  },
  {
    "comment": "/**\n * @method select\n * @memberOf ubm_diagram_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctx\n * @param {UBQL} ctx.mParams ORM query in UBQL format\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubm_diagram.js",
      "lineno": 126,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "kind": "function",
    "name": "select",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubm_diagram_ns#select",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009265",
    "___s": true
  },
  {
    "comment": "/**\n * @method update\n * @memberOf ubm_diagram_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_diagram.js",
      "lineno": 222,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "kind": "function",
    "name": "update",
    "memberof": "module:@unitybase/ubm~ubm_diagram_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_diagram_ns#update",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009300",
    "___s": true
  },
  {
    "comment": "/**\n * New form\n * @method addNew\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_form.js",
      "lineno": 400,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "description": "New form",
    "kind": "function",
    "name": "addNew",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#addNew",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009490",
    "___s": true
  },
  {
    "comment": "/**\n * New report\n * @method addNew\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubs_report.js",
      "lineno": 392,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "New report",
    "kind": "function",
    "name": "addNew",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#addNew",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008409",
    "___s": true
  },
  {
    "comment": "/**\n * New diagram\n * @method addNew\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_diagram.js",
      "lineno": 270,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "description": "New diagram",
    "kind": "function",
    "name": "addNew",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#addNew",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009316",
    "___s": true
  },
  {
    "comment": "/**\n * Check ID is unique and perform insertion\n * @method insert\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_form.js",
      "lineno": 373,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "description": "Check ID is unique and perform insertion",
    "kind": "function",
    "name": "insert",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#insert",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009483",
    "___s": true
  },
  {
    "comment": "/**\n * @method select\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctx\n * @param {UBQL} ctx.mParams ORM query in UBQL format\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubm_form.js",
      "lineno": 159,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "kind": "function",
    "name": "select",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#select",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009394",
    "___s": true
  },
  {
    "comment": "/**\n * @method update\n * @memberOf ubm_form_ns.prototype\n * @memberOfModule @unitybase/ubm\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubm_form.js",
      "lineno": 344,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubm",
      "code": {}
    },
    "kind": "function",
    "name": "update",
    "memberof": "module:@unitybase/ubm~ubm_form_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubm",
        "value": "@unitybase/ubm"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubm_form_ns#update",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R009476",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * Structure passed as a parameter for all entity level scripting methods\n * @class ubMethodParams\n */",
    "meta": {
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 48,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {}
    },
    "classdesc": "<p>Structure passed as a parameter for all entity level scripting methods</p>",
    "kind": "class",
    "name": "ubMethodParams",
    "longname": "ubMethodParams",
    "scope": "global",
    "___id": "T000002R000835",
    "___s": true
  },
  {
    "comment": "/**\n   * Data Store associated with current method execution context. If initialized - will be added to client response\n   * @type {TubDataStore}\n   * @readonly\n   */",
    "meta": {
      "range": [
        1998,
        2013
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 73,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008719",
        "name": "dataStore",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Data Store associated with current method execution context. If initialized - will be added to client response",
    "type": {
      "names": [
        "TubDataStore"
      ]
    },
    "readonly": true,
    "name": "dataStore",
    "longname": "ubMethodParams#dataStore",
    "kind": "member",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000839",
    "___s": true
  },
  {
    "comment": "/**\n   * Indicate current method execution initiated by external caller (client). If false - this method is called from server.\n   * @type {Boolean}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2522,
        2540
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 90,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008725",
        "name": "externalCall",
        "type": "Literal",
        "value": true
      }
    },
    "description": "Indicate current method execution initiated by external caller (client). If false - this method is called from server.",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "readonly": true,
    "name": "externalCall",
    "longname": "ubMethodParams#externalCall",
    "kind": "member",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000842",
    "___s": true
  },
  {
    "comment": "/**\n   * In/Out method parameters. All parameters added or modified in this object is passed back to client\n   * In case method is called from client `mParams` is a serialized request body\n   * @type {TubList}\n   */",
    "meta": {
      "range": [
        2333,
        2346
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 84,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008723",
        "name": "mParams",
        "type": "Literal",
        "value": null
      }
    },
    "description": "In/Out method parameters. All parameters added or modified in this object is passed back to client\nIn case method is called from client <code>mParams</code> is a serialized request body",
    "type": {
      "names": [
        "TubList"
      ]
    },
    "name": "mParams",
    "longname": "ubMethodParams#mParams",
    "kind": "member",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000841",
    "___s": true
  },
  {
    "comment": "/**\n   * Params caller pass to HTTP request.\n   * @type {TubList}\n   */",
    "meta": {
      "range": [
        2091,
        2111
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 78,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008721",
        "name": "originalParams",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Params caller pass to HTTP request.",
    "type": {
      "names": [
        "TubList"
      ]
    },
    "name": "originalParams",
    "longname": "ubMethodParams#originalParams",
    "kind": "member",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000840",
    "___s": true
  },
  {
    "comment": "/**\n   * Do not call methods of other mixins with <b>the same method name</b>.\n   * This mean if preventDefault() is called in the overridden `beforeselect`, only `beforeselect` of mixin method will not be called.\n   * Useful if we want to override original method implementation by our own implementation.\n   *\n   * See ubm_form.update implementation for usage sample.\n   */",
    "meta": {
      "range": [
        1668,
        1698
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 62,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008714",
        "name": "preventDefault",
        "type": "FunctionExpression"
      }
    },
    "description": "Do not call methods of other mixins with <b>the same method name</b>.\nThis mean if preventDefault() is called in the overridden <code>beforeselect</code>, only <code>beforeselect</code> of mixin method will not be called.\nUseful if we want to override original method implementation by our own implementation.</p>\n<p>See ubm_form.update implementation for usage sample.",
    "name": "preventDefault",
    "longname": "ubMethodParams#preventDefault",
    "kind": "function",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000837",
    "___s": true
  },
  {
    "comment": "/**\n   * Do not check row modification date while execute statement.\n   * @type {Boolean}\n   */",
    "meta": {
      "range": [
        1800,
        1825
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 67,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008717",
        "name": "skipOptimisticLock",
        "type": "Literal",
        "value": false
      }
    },
    "description": "Do not check row modification date while execute statement.",
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "name": "skipOptimisticLock",
    "longname": "ubMethodParams#skipOptimisticLock",
    "kind": "member",
    "memberof": "ubMethodParams",
    "scope": "instance",
    "___id": "T000002R000838",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} UBNotificationMixin\n * @property {string} [topic] Main topic to use for entity notifications.  If not specified, will use model name.\n */",
    "meta": {
      "filename": "notificationMixin.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "kind": "typedef",
    "name": "UBNotificationMixin",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Main topic to use for entity notifications.  If not specified, will use model name.</p>",
        "name": "topic"
      }
    ],
    "longname": "UBNotificationMixin",
    "scope": "global",
    "___id": "T000002R010272",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} UBNotifyEntityEventOptions\n * @property {string} [topic] Optional topic.  By default takes Model name (calculated using entity name).\n * @property {string} [subTopic] Optional sub-topic.\n * @property {number|number[]} [additionalRecipients] If specified, allows to send the same message to inbox topics to\n *   the specified recipients (user / group / staff unit / etc).\n */",
    "meta": {
      "filename": "userNotifier.js",
      "lineno": 103,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "kind": "typedef",
    "name": "UBNotifyEntityEventOptions",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Optional topic.  By default takes Model name (calculated using entity name).</p>",
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Optional sub-topic.</p>",
        "name": "subTopic"
      },
      {
        "type": {
          "names": [
            "number",
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "<p>If specified, allows to send the same message to inbox topics to\n  the specified recipients (user / group / staff unit / etc).</p>",
        "name": "additionalRecipients"
      }
    ],
    "longname": "UBNotifyEntityEventOptions",
    "scope": "global",
    "___id": "T000002R010338",
    "___s": true
  },
  {
    "comment": "/**\n * @typedef {object} UBNotifyParticipantsOptions\n * @property {string} [topic] Optional topic.  By default takes Model name (calculated using entity name).\n * @property {string} [subTopic] Optional sub-topic.\n * @property {number|number[]} [additionalRecipients] If specified, allows to send the same message to inbox topics to\n *   the specified recipients (user / group / staff unit / etc).\n */",
    "meta": {
      "filename": "userNotifier.js",
      "lineno": 157,
      "columnno": 0,
      "path": "/home/andrey/dev/bpm/packages/messaging/notification",
      "code": {}
    },
    "kind": "typedef",
    "name": "UBNotifyParticipantsOptions",
    "type": {
      "names": [
        "object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Optional topic.  By default takes Model name (calculated using entity name).</p>",
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>Optional sub-topic.</p>",
        "name": "subTopic"
      },
      {
        "type": {
          "names": [
            "number",
            "Array.<number>"
          ]
        },
        "optional": true,
        "description": "<p>If specified, allows to send the same message to inbox topics to\n  the specified recipients (user / group / staff unit / etc).</p>",
        "name": "additionalRecipients"
      }
    ],
    "longname": "UBNotifyParticipantsOptions",
    "scope": "global",
    "___id": "T000002R010349",
    "___s": true
  },
  {
    "comment": "/**\n * Add item to queue.\n *\n * Used by server FTS mixin - do not remove\n * @method addqueue\n * @param {ubMethodParams} ctxt\n * @param {String} ctxt.mParams.queueCode Queue code to add a item to\n * @param {String} ctxt.mParams.msgCmd Command\n * @param {String} ctxt.mParams.msgData Additional command data\n * @param {Number} [ctxt.mParams.msgPriority=0] Priority\n * @published\n * @memberOf ubq_messages_ns.prototype\n * @memberOfModule @unitybase/ubq\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubq_messages.js",
      "lineno": 32,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "Add item to queue.</p>\n<p>Used by server FTS mixin - do not remove",
    "kind": "function",
    "name": "addqueue",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Queue code to add a item to",
        "name": "ctxt.mParams.queueCode"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Command",
        "name": "ctxt.mParams.msgCmd"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Additional command data",
        "name": "ctxt.mParams.msgData"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 0,
        "description": "Priority",
        "name": "ctxt.mParams.msgPriority"
      }
    ],
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      },
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubq",
        "value": "@unitybase/ubq"
      }
    ],
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubq_messages_ns#addqueue",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R007720",
    "___s": true
  },
  {
    "comment": "/**\n * REST endpoint for executing a scheduler task.\n * Queue worker will sent the tasks in async mode to this endpoint according to a schedulers.\n * Endpoint wait a POST requests from a local IP with JSON in body:\n *\n *      {\n *        schedulerName: cfg.name, command: cfg.command, module: cfg.module,\n *        singleton: cfg.singleton !== false, logSuccessful: cfg.logSuccessful\n *      }\n *\n * `command` must be a function name (may including namespace), for example `UB.UBQ.sendQueueMail` or `ubs_message_edit.notifyAllRecipients`\n * in case `command` not passed `module` must be a module what export default a function, for example module: '@unitybase/myModule/schedTask'\n * and  in schedTask.js `module exports = function() {...}`\n *\n * In case `singleton` parameter is missing or === false scheduler can run a multiple instances of the same task,\n * otherwise - if previous task with the same name not finished yet current task will not be executed\n *\n * - If command executed success, record with resultError===0 will be written to `ubq_runstat` entity.\n * - If command executed **with exception**, record with resultError===1 will be written to `ubq_runstat` entity,\n * Exception text will be written written to `ubq_runstat.resultErrorMsg`.\n *\n * @method executeSchedulerTask\n * @param {null} nullCtxt\n * @param {THTTPRequest} req Name of a scheduler item\n * @param {THTTPResponse} resp Command to execute\n * @memberOf ubq_messages_ns.prototype\n * @memberOfModule @unitybase/ubq\n * @published\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubq_messages.js",
      "lineno": 99,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "<p>REST endpoint for executing a scheduler task.\nQueue worker will sent the tasks in async mode to this endpoint according to a schedulers.\nEndpoint wait a POST requests from a local IP with JSON in body:</p>\n<pre class=\"prettyprint source\"><code> {\n   schedulerName: cfg.name, command: cfg.command, module: cfg.module,\n   singleton: cfg.singleton !== false, logSuccessful: cfg.logSuccessful\n }</code></pre><p><code>command</code> must be a function name (may including namespace), for example <code>UB.UBQ.sendQueueMail</code> or <code>ubs_message_edit.notifyAllRecipients</code>\nin case <code>command</code> not passed <code>module</code> must be a module what export default a function, for example module: '@unitybase/myModule/schedTask'\nand  in schedTask.js <code>module exports = function() {...}</code></p>\n<p>In case <code>singleton</code> parameter is missing or === false scheduler can run a multiple instances of the same task,\notherwise - if previous task with the same name not finished yet current task will not be executed</p>\n<ul>\n<li>If command executed success, record with resultError===0 will be written to <code>ubq_runstat</code> entity.</li>\n<li>If command executed <strong>with exception</strong>, record with resultError===1 will be written to <code>ubq_runstat</code> entity,\nException text will be written written to <code>ubq_runstat.resultErrorMsg</code>.</li>\n</ul>",
    "kind": "function",
    "name": "executeSchedulerTask",
    "params": [
      {
        "type": {
          "names": [
            "null"
          ]
        },
        "name": "nullCtxt"
      },
      {
        "type": {
          "names": [
            "THTTPRequest"
          ]
        },
        "description": "Name of a scheduler item",
        "name": "req"
      },
      {
        "type": {
          "names": [
            "THTTPResponse"
          ]
        },
        "description": "Command to execute",
        "name": "resp"
      }
    ],
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubq",
        "value": "@unitybase/ubq"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubq_messages_ns#executeSchedulerTask",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R007743",
    "___s": true
  },
  {
    "comment": "/**\n * Mark queue task as successfully executed\n * @method success\n * @param {ubMethodParams} ctxt\n * @param {Number} ctxt.mParams.ID\n * @published\n * @memberOf ubq_messages_ns.prototype\n * @memberOfModule @unitybase/ubq\n */",
    "meta": {
      "filename": "ubq_messages.js",
      "lineno": 18,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "Mark queue task as successfully executed",
    "kind": "function",
    "name": "success",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ctxt.mParams.ID"
      }
    ],
    "tags": [
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      },
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubq",
        "value": "@unitybase/ubq"
      }
    ],
    "memberof": "module:@unitybase/ubq~ubq_messages_ns",
    "longname": "ubq_messages_ns#success",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R007716",
    "___s": true
  },
  {
    "comment": "/**\n * Virtual `select` implementation. Actual data are stored in `_schedulers.json` files from models folders\n * @method select\n * @param {ubMethodParams} ctx\n * @param {UBQL} ctx.mParams ORM query in UBQL format\n * @return {Boolean}\n * @memberOf ubq_scheduler_ns.prototype\n * @memberOfModule @unitybase/ubq\n * @published\n */",
    "meta": {
      "filename": "ubq_scheduler.js",
      "lineno": 120,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubq",
      "code": {}
    },
    "description": "Virtual <code>select</code> implementation. Actual data are stored in <code>_schedulers.json</code> files from models folders",
    "kind": "function",
    "name": "select",
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "memberof": "module:@unitybase/ubq~ubq_scheduler_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubq",
        "value": "@unitybase/ubq"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "longname": "ubq_scheduler_ns#select",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R007822",
    "___s": true
  },
  {
    "comment": "/**\n * @classdesc\n * UnityBase Query Language formal definition. **Recommended way** to create a UBQL is {@link class:ClientRepository ClientRepository}.\n *\n * UBQL JSON representation can be retrieved from Repository using {@link class:ClientRepository#ubql ClientRepository.ubql()}\n * @class UBQL\n * @extends UBQLItem\n */",
    "meta": {
      "filename": "_UBQL.js",
      "lineno": 64,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "classdesc": "<p>UnityBase Query Language formal definition. <strong>Recommended way</strong> to create a UBQL is {@link class:ClientRepository ClientRepository}.</p>\n<p>UBQL JSON representation can be retrieved from Repository using {@link class:ClientRepository#ubql ClientRepository.ubql()}</p>",
    "kind": "class",
    "name": "UBQL",
    "augments": [
      "UBQLItem"
    ],
    "longname": "UBQL",
    "scope": "global",
    "___id": "T000002R004096",
    "___s": true
  },
  {
    "comment": "/**\n     * Entity name\n     * @type {string}\n     */",
    "meta": {
      "range": [
        231,
        247
      ],
      "filename": "_UBQL.js",
      "lineno": 14,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046213",
        "name": "this.entity",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity name",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "entity",
    "longname": "UBQL#entity",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "inherits": "UBQLItem#entity",
    "inherited": true,
    "___id": "T000002R010796",
    "___s": true
  },
  {
    "comment": "/**\n     * Attributes array\n     * @type {Array<string>}\n     */",
    "meta": {
      "range": [
        1647,
        1666
      ],
      "filename": "_UBQL.js",
      "lineno": 85,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046286",
        "name": "this.fieldList",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Attributes array",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "name": "fieldList",
    "longname": "UBQL#fieldList",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004100",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional array of attributes names to use in group by clause\n     * @type {Array<string>}\n     */",
    "meta": {
      "range": [
        2333,
        2350
      ],
      "filename": "_UBQL.js",
      "lineno": 110,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046316",
        "name": "this.groupBy",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Optional array of attributes names to use in group by clause",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "name": "groupBy",
    "longname": "UBQL#groupBy",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004105",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional ID. If exists then this is equal to adding a where condition `ID = IDValue` but bypass\n     * cache for cached entities\n     * @type {number}\n     */",
    "meta": {
      "range": [
        1562,
        1573
      ],
      "filename": "_UBQL.js",
      "lineno": 80,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046280",
        "name": "this.ID",
        "type": "Literal",
        "value": 0,
        "paramnames": []
      }
    },
    "description": "Optional ID. If exists then this is equal to adding a where condition <code>ID = IDValue</code> but bypass\ncache for cached entities",
    "type": {
      "names": [
        "number"
      ]
    },
    "name": "ID",
    "longname": "UBQL#ID",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004099",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional array of condition names to use in join clause instead of where clause of result SQL\n     * @type {Array<string>}\n     */",
    "meta": {
      "range": [
        2199,
        2215
      ],
      "filename": "_UBQL.js",
      "lineno": 105,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046310",
        "name": "this.joinAs",
        "type": "ArrayExpression",
        "value": "[]",
        "paramnames": []
      }
    },
    "description": "Optional array of condition names to use in join clause instead of where clause of result SQL",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "name": "joinAs",
    "longname": "UBQL#joinAs",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004104",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional logical concatenation of WHERE conditions\n     * @type {string}\n     */",
    "meta": {
      "range": [
        2021,
        2048
      ],
      "filename": "_UBQL.js",
      "lineno": 100,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046304",
        "name": "this.logicalPredicates",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Optional logical concatenation of WHERE conditions",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "logicalPredicates",
    "longname": "UBQL#logicalPredicates",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004103",
    "___s": true
  },
  {
    "comment": "/**\n     * Method name\n     * @type {string}\n     */",
    "meta": {
      "range": [
        309,
        325
      ],
      "filename": "_UBQL.js",
      "lineno": 19,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046219",
        "name": "this.method",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Method name",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "method",
    "longname": "UBQL#method",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "inherits": "UBQLItem#method",
    "inherited": true,
    "___id": "T000002R010797",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional options for building SQL. See {@link CustomRepository#misc CustomRepository.misc} documentation for possible values\n     * @type {Object}\n     */",
    "meta": {
      "range": [
        2525,
        2542
      ],
      "filename": "_UBQL.js",
      "lineno": 115,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046322",
        "name": "this.options",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Optional options for building SQL. See {@link CustomRepository#misc CustomRepository.misc} documentation for possible values",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "options",
    "longname": "UBQL#options",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004106",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional order by\n     * @type {Object.<string, UBQLOrderItem>}\n     */",
    "meta": {
      "range": [
        1903,
        1920
      ],
      "filename": "_UBQL.js",
      "lineno": 95,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046298",
        "name": "this.orderBy",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Optional order by",
    "type": {
      "names": [
        "Object.<string, UBQLOrderItem>"
      ]
    },
    "name": "orderBy",
    "longname": "UBQL#orderBy",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004102",
    "___s": true
  },
  {
    "comment": "/**\n     * Optional named conditions. Object keys is condition name\n     * @type {Object<string, UBQLWhere>}\n     */",
    "meta": {
      "range": [
        1792,
        1811
      ],
      "filename": "_UBQL.js",
      "lineno": 90,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046292",
        "name": "this.whereList",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Optional named conditions. Object keys is condition name",
    "type": {
      "names": [
        "Object.<string, UBQLWhere>"
      ]
    },
    "name": "whereList",
    "longname": "UBQL#whereList",
    "kind": "member",
    "memberof": "UBQL",
    "scope": "instance",
    "___id": "T000002R004101",
    "___s": true
  },
  {
    "comment": "/**\n * @class UBQLItem\n */",
    "meta": {
      "filename": "_UBQL.js",
      "lineno": 5,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "class",
    "name": "UBQLItem",
    "longname": "UBQLItem",
    "scope": "global",
    "___id": "T000002R004080",
    "___s": true
  },
  {
    "comment": "/**\n     * Entity name\n     * @type {string}\n     */",
    "meta": {
      "range": [
        231,
        247
      ],
      "filename": "_UBQL.js",
      "lineno": 14,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046213",
        "name": "this.entity",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity name",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "entity",
    "longname": "UBQLItem#entity",
    "kind": "member",
    "memberof": "UBQLItem",
    "scope": "instance",
    "___id": "T000002R004083",
    "___s": true
  },
  {
    "comment": "/**\n     * Method name\n     * @type {string}\n     */",
    "meta": {
      "range": [
        309,
        325
      ],
      "filename": "_UBQL.js",
      "lineno": 19,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046219",
        "name": "this.method",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Method name",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "method",
    "longname": "UBQLItem#method",
    "kind": "member",
    "memberof": "UBQLItem",
    "scope": "instance",
    "___id": "T000002R004084",
    "___s": true
  },
  {
    "comment": "/**\n * @class UBQLOrderItem\n */",
    "meta": {
      "filename": "_UBQL.js",
      "lineno": 46,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "class",
    "name": "UBQLOrderItem",
    "longname": "UBQLOrderItem",
    "scope": "global",
    "___id": "T000002R004091",
    "___s": true
  },
  {
    "comment": "/**\n     * Attribute name of valid expression for ordering\n     * @type {string}\n     */",
    "meta": {
      "range": [
        866,
        886
      ],
      "filename": "_UBQL.js",
      "lineno": 55,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046257",
        "name": "this.expression",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Attribute name of valid expression for ordering",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "expression",
    "longname": "UBQLOrderItem#expression",
    "kind": "member",
    "memberof": "UBQLOrderItem",
    "scope": "instance",
    "___id": "T000002R004094",
    "___s": true
  },
  {
    "comment": "/**\n     * Order direction. Either 'asc' or 'desc'\n     * @type {string}\n     */",
    "meta": {
      "range": [
        976,
        991
      ],
      "filename": "_UBQL.js",
      "lineno": 60,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046263",
        "name": "this.order",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Order direction. Either 'asc' or 'desc'",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "order",
    "longname": "UBQLOrderItem#order",
    "kind": "member",
    "memberof": "UBQLOrderItem",
    "scope": "instance",
    "___id": "T000002R004095",
    "___s": true
  },
  {
    "comment": "/**\n * @class UBQLWhere\n */",
    "meta": {
      "filename": "_UBQL.js",
      "lineno": 23,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {}
    },
    "kind": "class",
    "name": "UBQLWhere",
    "longname": "UBQLWhere",
    "scope": "global",
    "___id": "T000002R004085",
    "___s": true
  },
  {
    "comment": "/**\n     * Where condition\n     * @type {WhereCondition}\n     */",
    "meta": {
      "range": [
        580,
        599
      ],
      "filename": "_UBQL.js",
      "lineno": 37,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046238",
        "name": "this.condition",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Where condition",
    "type": {
      "names": [
        "WhereCondition"
      ]
    },
    "name": "condition",
    "longname": "UBQLWhere#condition",
    "kind": "member",
    "memberof": "UBQLWhere",
    "scope": "instance",
    "___id": "T000002R004089",
    "___s": true
  },
  {
    "comment": "/**\n     * Entity attribute or a valid expression\n     * @type {string}\n     */",
    "meta": {
      "range": [
        486,
        506
      ],
      "filename": "_UBQL.js",
      "lineno": 32,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046232",
        "name": "this.expression",
        "type": "Literal",
        "value": "",
        "paramnames": []
      }
    },
    "description": "Entity attribute or a valid expression",
    "type": {
      "names": [
        "string"
      ]
    },
    "name": "expression",
    "longname": "UBQLWhere#expression",
    "kind": "member",
    "memberof": "UBQLWhere",
    "scope": "instance",
    "___id": "T000002R004088",
    "___s": true
  },
  {
    "comment": "/**\n     * Left side of condition\n     * @type {Object}\n     */",
    "meta": {
      "range": [
        672,
        688
      ],
      "filename": "_UBQL.js",
      "lineno": 42,
      "columnno": 4,
      "path": "/home/andrey/dev/ubjs/packages/cs-shared",
      "code": {
        "id": "astnode100046244",
        "name": "this.values",
        "type": "ObjectExpression",
        "value": "{}",
        "paramnames": []
      }
    },
    "description": "Left side of condition",
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "values",
    "longname": "UBQLWhere#values",
    "kind": "member",
    "memberof": "UBQLWhere",
    "scope": "instance",
    "___id": "T000002R004090",
    "___s": true
  },
  {
    "comment": "/**\n * Reader interface.\n * @interface\n */",
    "meta": {
      "range": [
        3233,
        3256
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 103,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008472",
        "name": "UBReader",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Reader interface.",
    "kind": "interface",
    "name": "UBReader",
    "longname": "UBReader",
    "scope": "global",
    "params": [],
    "___id": "T000002R000798",
    "___s": true
  },
  {
    "comment": "/**\n * Read from source\n * @param {String} [encoding] Optional encoding of source. Default to 'utf-8'.\n *          If 'bin' - return ArrayBuffer source representation without any conversion.\n *          If 'base64' - transform base64 encoded content of source to ArrayBuffer\n *          If 'bin2base64' - transform content to base64 encoded string\n * @returns {ArrayBuffer|String} Return String in case no encoding passed or ArrayBuffer\n */",
    "meta": {
      "range": [
        3698,
        3746
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 112,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008476",
        "name": "UBReader.prototype.read",
        "type": "FunctionExpression",
        "paramnames": [
          "encoding"
        ]
      }
    },
    "description": "Read from source",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Optional encoding of source. Default to 'utf-8'.\n         If 'bin' - return ArrayBuffer source representation without any conversion.\n         If 'base64' - transform base64 encoded content of source to ArrayBuffer\n         If 'bin2base64' - transform content to base64 encoded string",
        "name": "encoding"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "String"
          ]
        },
        "description": "<p>Return String in case no encoding passed or ArrayBuffer</p>"
      }
    ],
    "name": "read",
    "longname": "UBReader#read",
    "kind": "function",
    "memberof": "UBReader",
    "scope": "instance",
    "___id": "T000002R000799",
    "___s": true
  },
  {
    "comment": "/**\n * Used in RLS to filter by owner == Session.userID\n * @method byOwner\n * @memberOf ubs_filter_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @protected\n * @return {string}\n */",
    "meta": {
      "filename": "ubs_filter.js",
      "lineno": 17,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Used in RLS to filter by owner == Session.userID",
    "kind": "function",
    "name": "byOwner",
    "memberof": "module:@unitybase/ubs~ubs_filter_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "access": "protected",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "longname": "ubs_filter_ns#byOwner",
    "scope": "instance",
    "___id": "T000002R008065",
    "___s": true
  },
  {
    "comment": "/**\n * Read only access to server-side global cache\n * @method select\n * @memberOf ubs_globalCache_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @param {UBQL} ctx.mParams ORM query in UBQL format\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubs_globalCache.js",
      "lineno": 7,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Read only access to server-side global cache",
    "kind": "function",
    "name": "select",
    "memberof": "module:@unitybase/ubs~ubs_globalCache_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubs_globalCache_ns#select",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008069",
    "___s": true
  },
  {
    "comment": "/**\n * Send a WS command `ubs_message` to all recipient of message with ID `messageID`\n * @method notifyAllMessageRecipients\n * @memberOf ubs_message_edit_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @public\n * @param {Number} messageID\n */",
    "meta": {
      "filename": "ubs_message_edit.js",
      "lineno": 33,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Send a WS command <code>ubs_message</code> to all recipient of message with ID <code>messageID</code>",
    "kind": "function",
    "name": "notifyAllMessageRecipients",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "access": "public",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "messageID"
      }
    ],
    "longname": "ubs_message_edit_ns#notifyAllMessageRecipients",
    "scope": "instance",
    "___id": "T000002R008115",
    "___s": true
  },
  {
    "comment": "/**\n * Send a WS command `ubs_message` to all recipient who are ready to send unaccepted messages.\n * To be user in scheduler for sending notification\n * @method notifyAllRecipients\n * @memberOf ubs_message_edit_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @public\n */",
    "meta": {
      "filename": "ubs_message_edit.js",
      "lineno": 61,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Send a WS command <code>ubs_message</code> to all recipient who are ready to send unaccepted messages.\nTo be user in scheduler for sending notification",
    "kind": "function",
    "name": "notifyAllRecipients",
    "memberof": "module:@unitybase/ubs~ubs_message_edit_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "access": "public",
    "longname": "ubs_message_edit_ns#notifyAllRecipients",
    "scope": "instance",
    "___id": "T000002R008124",
    "___s": true
  },
  {
    "comment": "/**\n * If something changes in ubs_messages from a last call - return a messages.\n * @method getCached\n * @memberOf ubs_message_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubs_message.js",
      "lineno": 10,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "If something changes in ubs_messages from a last call - return a messages.",
    "kind": "function",
    "name": "getCached",
    "memberof": "module:@unitybase/ubs~ubs_message_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubs_message_ns#getCached",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008076",
    "___s": true
  },
  {
    "comment": "/**\n * Mark message with specified ID as read by recipient (current logged in user)\n * @method accept\n * @memberOf ubs_message_recipient_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @param {Number} ctx.mParams.execParams.ID\n */",
    "meta": {
      "filename": "ubs_message_recipient.js",
      "lineno": 9,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Mark message with specified ID as read by recipient (current logged in user)",
    "kind": "function",
    "name": "accept",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "ctx.mParams.execParams.ID"
      }
    ],
    "longname": "ubs_message_recipient_ns#accept",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008134",
    "___s": true
  },
  {
    "comment": "/**\n * Add all users with roles `roles` to a message recipient list\n * @method addRoles\n * @memberOf ubs_message_recipient_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @param {number} ctx.mParams.execParams.messageID\n * @param {string} ctx.mParams.execParams.roles Comma separated role list\n */",
    "meta": {
      "filename": "ubs_message_recipient.js",
      "lineno": 37,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Add all users with roles <code>roles</code> to a message recipient list",
    "kind": "function",
    "name": "addRoles",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctx.mParams.execParams.messageID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Comma separated role list",
        "name": "ctx.mParams.execParams.roles"
      }
    ],
    "longname": "ubs_message_recipient_ns#addRoles",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008146",
    "___s": true
  },
  {
    "comment": "/**\n * Add all users with roles `roles` to a message recipient list\n * @method removeRoles\n * @memberOf ubs_message_recipient_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @param {number} ctx.mParams.execParams.messageID\n * @param {string} ctx.mParams.execParams.roles Comma separated role list\n */",
    "meta": {
      "filename": "ubs_message_recipient.js",
      "lineno": 102,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Add all users with roles <code>roles</code> to a message recipient list",
    "kind": "function",
    "name": "removeRoles",
    "memberof": "module:@unitybase/ubs~ubs_message_recipient_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctx.mParams.execParams.messageID"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Comma separated role list",
        "name": "ctx.mParams.execParams.roles"
      }
    ],
    "longname": "ubs_message_recipient_ns#removeRoles",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008171",
    "___s": true
  },
  {
    "comment": "/**\n * Generate auto incremental code for specified entity attribute in case\n * attribute value in execParams is empty or equal to attribute default value,\n * specified in meta file.\n *\n * Will create a numcounter with code === entity.name and 1 as initial value.\n *\n * Result value will be left padded by '0' to the length specified in ubs_settings\n * To be used in `insert:before` handler as\n * @example\n\nconst me = cdn_profession\nme.on('insert:before', generateAutoIncrementalCode)\n\nfunction generateAutoIncrementalCode (ctx) {\n  ubs_numcounter.generateAutoIncrementalCode(ctx, 'code')\n}\n\n//or even simple if attribute name is `code`\nme.on('insert:before', ubs_numcounter.generateAutoIncrementalCode)\n\n * @method generateAutoIncrementalCode\n * @memberOf ubs_numcounter_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {ubMethodParams} ctx\n * @param {string} ctx.mParams.entity\n * @param {TubList|Object} ctx.mParams.execParams\n * @param {string} [forAttribute='code'] Code of attribute for number generation\n */",
    "meta": {
      "filename": "ubs_numcounter.js",
      "lineno": 78,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Generate auto incremental code for specified entity attribute in case\nattribute value in execParams is empty or equal to attribute default value,\nspecified in meta file.</p>\n<p>Will create a numcounter with code === entity.name and 1 as initial value.</p>\n<p>Result value will be left padded by '0' to the length specified in ubs_settings\nTo be used in <code>insert:before</code> handler as",
    "examples": [
      "const me = cdn_profession\nme.on('insert:before', generateAutoIncrementalCode)\n\nfunction generateAutoIncrementalCode (ctx) {\n  ubs_numcounter.generateAutoIncrementalCode(ctx, 'code')\n}\n\n//or even simple if attribute name is `code`\nme.on('insert:before', ubs_numcounter.generateAutoIncrementalCode)"
    ],
    "kind": "function",
    "name": "generateAutoIncrementalCode",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ctx.mParams.entity"
      },
      {
        "type": {
          "names": [
            "TubList",
            "Object"
          ]
        },
        "name": "ctx.mParams.execParams"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'code'",
        "description": "Code of attribute for number generation",
        "name": "forAttribute"
      }
    ],
    "longname": "ubs_numcounter_ns#generateAutoIncrementalCode",
    "scope": "instance",
    "___id": "T000002R008212",
    "___s": true
  },
  {
    "comment": "/**\n * Return counter number by mask\n * @method getRegnum\n * @memberOf ubs_numcounter_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {String} regKeyValue Registration key mask\n * @param {Number} [startNum] The starting counter value in case mask not exists\n * @param {Boolean} [skipReservedNumber=false] When \"true\" skip loading number from reserve and calculate new number by mask\n * @return {Number} Next number for this mask\n */",
    "meta": {
      "filename": "ubs_numcounter.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Return counter number by mask",
    "kind": "function",
    "name": "getRegnum",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Registration key mask",
        "name": "regKeyValue"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "description": "The starting counter value in case mask not exists",
        "name": "startNum"
      },
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "When &quot;true&quot; skip loading number from reserve and calculate new number by mask",
        "name": "skipReservedNumber"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "<p>Next number for this mask</p>"
      }
    ],
    "longname": "ubs_numcounter_ns#getRegnum",
    "scope": "instance",
    "___id": "T000002R008187",
    "___s": true
  },
  {
    "comment": "/**\n * Get counter value by registration key\n * @method getRegnumCounter\n * @memberOf ubs_numcounter_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctxt\n * @param {string} ctxt.mParams.execParams.regkey\n * @param {boolean} ctxt.mParams.execParams.skipReservedNumber Skip loading number from reserve and calculate new number by mask\n */",
    "meta": {
      "filename": "ubs_numcounter.js",
      "lineno": 121,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Get counter value by registration key",
    "kind": "function",
    "name": "getRegnumCounter",
    "memberof": "module:@unitybase/ubs~ubs_numcounter_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ctxt.mParams.execParams.regkey"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Skip loading number from reserve and calculate new number by mask",
        "name": "ctxt.mParams.execParams.skipReservedNumber"
      }
    ],
    "longname": "ubs_numcounter_ns#getRegnumCounter",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008223",
    "___s": true
  },
  {
    "comment": "/**\n * Get first reserved number for `regKey` and remove returned number from reservation entity.\n * Actual result returned as `mParams.getReservedRC`\n *\n * @method getReservedRC\n * @memberOf ubs_numcounterreserv_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctxt\n * @param ctxt.mParams.execParams.regKey\n * @returns {boolean}\n */",
    "meta": {
      "filename": "ubs_numcounterreserv.js",
      "lineno": 101,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Get first reserved number for <code>regKey</code> and remove returned number from reservation entity.\nActual result returned as <code>mParams.getReservedRC</code>",
    "kind": "function",
    "name": "getReservedRC",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "name": "ctxt.mParams.execParams.regKey"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubs_numcounterreserv_ns#getReservedRC",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008257",
    "___s": true
  },
  {
    "comment": "/**\n * Gets first reserved number for regkey and remove returned number from reservation entity\n * @method getReservedRegnum\n * @memberOf ubs_numcounterreserv_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {string} regKey  Registration Key\n * @return {number} Reserved number\n */",
    "meta": {
      "filename": "ubs_numcounterreserv.js",
      "lineno": 68,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Gets first reserved number for regkey and remove returned number from reservation entity",
    "kind": "function",
    "name": "getReservedRegnum",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Registration Key",
        "name": "regKey"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>Reserved number</p>"
      }
    ],
    "longname": "ubs_numcounterreserv_ns#getReservedRegnum",
    "scope": "instance",
    "___id": "T000002R008248",
    "___s": true
  },
  {
    "comment": "/**\n * Reserves some numbers for future use\n * @method reserveRC\n * @memberOf ubs_numcounterreserv_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctxt\n * @param {string} ctxt.mParams.execParams.regkey\n * @param {number} ctxt.mParams.execParams.regNum\n * @param {Date} ctxt.mParams.execParams.reservedDate\n * @param {string} [ctxt.mParams.execParams.note]\n * @returns {Boolean}\n */",
    "meta": {
      "filename": "ubs_numcounterreserv.js",
      "lineno": 46,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Reserves some numbers for future use",
    "kind": "function",
    "name": "reserveRC",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "ctxt.mParams.execParams.regkey"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "ctxt.mParams.execParams.regNum"
      },
      {
        "type": {
          "names": [
            "Date"
          ]
        },
        "name": "ctxt.mParams.execParams.reservedDate"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "name": "ctxt.mParams.execParams.note"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubs_numcounterreserv_ns#reserveRC",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008241",
    "___s": true
  },
  {
    "comment": "/**\n * Reserves numbers for future use\n * @method reserveRegnum\n * @memberOf ubs_numcounterreserv_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {String} regkey Registration key\n * @param {Number} regNum  Number to reserve\n * @param {Date} [reservedDate]  Date for reserve\n * @param {string} [note]  Note of reserve\n * @return {Boolean} success\n */",
    "meta": {
      "filename": "ubs_numcounterreserv.js",
      "lineno": 8,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Reserves numbers for future use",
    "kind": "function",
    "name": "reserveRegnum",
    "memberof": "module:@unitybase/ubs~ubs_numcounterreserv_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "description": "Registration key",
        "name": "regkey"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "Number to reserve",
        "name": "regNum"
      },
      {
        "type": {
          "names": [
            "Date"
          ]
        },
        "optional": true,
        "description": "Date for reserve",
        "name": "reservedDate"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Note of reserve",
        "name": "note"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        },
        "description": "<p>success</p>"
      }
    ],
    "longname": "ubs_numcounterreserv_ns#reserveRegnum",
    "scope": "instance",
    "___id": "T000002R008230",
    "___s": true
  },
  {
    "comment": "/**\n * Check ID is unique and perform insertion\n * @method insert\n * @memberOf ubs_report_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubs_report.js",
      "lineno": 336,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Check ID is unique and perform insertion",
    "kind": "function",
    "name": "insert",
    "memberof": "module:@unitybase/ubs~ubs_report_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubs_report_ns#insert",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008393",
    "___s": true
  },
  {
    "comment": "/**\n * @method select\n * @memberOf ubs_report_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctx\n * @param {UBQL} ctx.mParams ORM query in UBQL format\n * @return {Boolean}\n */",
    "meta": {
      "filename": "ubs_report.js",
      "lineno": 183,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "kind": "function",
    "name": "select",
    "memberof": "module:@unitybase/ubs~ubs_report_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctx"
      },
      {
        "type": {
          "names": [
            "UBQL"
          ]
        },
        "description": "ORM query in UBQL format",
        "name": "ctx.mParams"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Boolean"
          ]
        }
      }
    ],
    "longname": "ubs_report_ns#select",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008334",
    "___s": true
  },
  {
    "comment": "/**\n * @method update\n * @memberOf ubs_report_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @published\n * @param {ubMethodParams} ctxt\n * @return {boolean}\n */",
    "meta": {
      "filename": "ubs_report.js",
      "lineno": 311,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "kind": "function",
    "name": "update",
    "memberof": "module:@unitybase/ubs~ubs_report_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      },
      {
        "originalTitle": "published",
        "title": "published",
        "text": ""
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubMethodParams"
          ]
        },
        "name": "ctxt"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubs_report_ns#update",
    "scope": "instance",
    "access": "published",
    "___id": "T000002R008386",
    "___s": true
  },
  {
    "comment": "/**\n * Create a new Key or set value for existing key\n * @method addOrUpdateKey\n * @memberOf ubs_settings_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {ubs_settings_ns} keyData\n */",
    "meta": {
      "filename": "ubs_settings.js",
      "lineno": 90,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Create a new Key or set value for existing key",
    "kind": "function",
    "name": "addOrUpdateKey",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "ubs_settings_ns"
          ]
        },
        "name": "keyData"
      }
    ],
    "longname": "ubs_settings_ns#addOrUpdateKey",
    "scope": "instance",
    "___id": "T000002R008428",
    "___s": true
  },
  {
    "comment": "/**\n * Alias for a loadKey\n * @deprecated Use ubs_setting.loadKey instead\n * @method getSettingValue\n * @memberOf ubs_settings_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {String} settingKey\n * @param {String|Boolean|Number|null} [defaultValue=null] The value returned if setting key not fount\n * @returns {String|Boolean|Number|null}\n */",
    "meta": {
      "filename": "ubs_settings.js",
      "lineno": 115,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Alias for a loadKey",
    "deprecated": "Use ubs_setting.loadKey instead",
    "kind": "function",
    "name": "getSettingValue",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "settingKey"
      },
      {
        "type": {
          "names": [
            "String",
            "Boolean",
            "Number",
            "null"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "The value returned if setting key not fount",
        "name": "defaultValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "String",
            "Boolean",
            "Number",
            "null"
          ]
        }
      }
    ],
    "longname": "ubs_settings_ns#getSettingValue",
    "scope": "instance",
    "___id": "T000002R008436",
    "___s": true
  },
  {
    "comment": "/**\n * Load a single configuration value.\n * @method loadKey\n * @memberOf ubs_settings_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {string} settingKey\n * @param {String|Boolean|Number|null} [defaultValue=null] The value returned if setting key not fount\n * @returns {null|number|string|boolean}\n */",
    "meta": {
      "filename": "ubs_settings.js",
      "lineno": 28,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Load a single configuration value.",
    "kind": "function",
    "name": "loadKey",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "settingKey"
      },
      {
        "type": {
          "names": [
            "String",
            "Boolean",
            "Number",
            "null"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "The value returned if setting key not fount",
        "name": "defaultValue"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "null",
            "number",
            "string",
            "boolean"
          ]
        }
      }
    ],
    "longname": "ubs_settings_ns#loadKey",
    "scope": "instance",
    "___id": "T000002R008415",
    "___s": true
  },
  {
    "comment": "/**\n * Load a configuration object for number of keys.\n * @method loadKeys\n * @memberOf ubs_settings_ns.prototype\n * @memberOfModule @unitybase/ubs\n * @param {Array<string>|string} settingKeys   A mask or array of keys.\n * @returns {object}\n */",
    "meta": {
      "filename": "ubs_settings.js",
      "lineno": 56,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/ubs",
      "code": {}
    },
    "description": "Load a configuration object for number of keys.",
    "kind": "function",
    "name": "loadKeys",
    "memberof": "module:@unitybase/ubs~ubs_settings_ns",
    "tags": [
      {
        "originalTitle": "memberOfModule",
        "title": "memberofmodule",
        "text": "@unitybase/ubs",
        "value": "@unitybase/ubs"
      }
    ],
    "params": [
      {
        "type": {
          "names": [
            "Array.<string>",
            "string"
          ]
        },
        "description": "A mask or array of keys.",
        "name": "settingKeys"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        }
      }
    ],
    "longname": "ubs_settings_ns#loadKeys",
    "scope": "instance",
    "___id": "T000002R008419",
    "___s": true
  },
  {
    "comment": "/**\n * Writer interface.\n * @interface\n */",
    "meta": {
      "range": [
        3791,
        3814
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 118,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008485",
        "name": "UBWriter",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Writer interface.",
    "kind": "interface",
    "name": "UBWriter",
    "longname": "UBWriter",
    "scope": "global",
    "params": [],
    "___id": "T000002R000800",
    "___s": true
  },
  {
    "comment": "/**\n * Write to source.\n * @param {ArrayBuffer|Object|String} data Data to write. If Object - it stringify before write\n * @param {String} [encoding] Encode data to `encoding` before write. Default to `utf-8` in case data is String or `bin` in case data is ArrayBuffer.\n *          One of \"utf-8\"|\"ucs2\"|\"bin\"|\"base64\".\n */",
    "meta": {
      "range": [
        4139,
        4194
      ],
      "filename": "_UBCommonGlobals-stub.js",
      "lineno": 125,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008489",
        "name": "UBWriter.prototype.write",
        "type": "FunctionExpression",
        "paramnames": [
          "data",
          "encoding"
        ]
      }
    },
    "description": "Write to source.",
    "params": [
      {
        "type": {
          "names": [
            "ArrayBuffer",
            "Object",
            "String"
          ]
        },
        "description": "Data to write. If Object - it stringify before write",
        "name": "data"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "description": "Encode data to <code>encoding</code> before write. Default to <code>utf-8</code> in case data is String or <code>bin</code> in case data is ArrayBuffer.\n         One of &quot;utf-8&quot;|&quot;ucs2&quot;|&quot;bin&quot;|&quot;base64&quot;.",
        "name": "encoding"
      }
    ],
    "name": "write",
    "longname": "UBWriter#write",
    "kind": "function",
    "memberof": "UBWriter",
    "scope": "instance",
    "___id": "T000002R000801",
    "___s": true
  },
  {
    "comment": "/**\n * Mixin. Implements inheritance for ORM. Override `insert`, `update` and `delete` methods and\n * synchronize content of current entity attributes subset (defined in `unity.attributeList` config)\n * with entity specified in `unity.entity` mixin configuration parameter.\n *\n * Configuration can accept optional `unity.mapping` and `unity.defaults`\n * @mixin\n */",
    "meta": {
      "range": [
        5418,
        5430
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 191,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008789",
        "name": "unity",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Mixin. Implements inheritance for ORM. Override <code>insert</code>, <code>update</code> and <code>delete</code> methods and\nsynchronize content of current entity attributes subset (defined in <code>unity.attributeList</code> config)\nwith entity specified in <code>unity.entity</code> mixin configuration parameter.</p>\n<p>Configuration can accept optional <code>unity.mapping</code> and <code>unity.defaults</code>",
    "kind": "mixin",
    "name": "unity",
    "longname": "unity",
    "scope": "global",
    "params": [],
    "___id": "T000002R000856",
    "___s": true
  },
  {
    "comment": "/**\n * Structure for calling WebSocket handlers\n * @class\n */",
    "meta": {
      "range": [
        2606,
        2640
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 97,
      "columnno": 0,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008727",
        "name": "WebSocketConnection",
        "type": "FunctionDeclaration",
        "paramnames": []
      }
    },
    "description": "Structure for calling WebSocket handlers",
    "kind": "class",
    "name": "WebSocketConnection",
    "longname": "WebSocketConnection",
    "scope": "global",
    "params": [],
    "___id": "T000002R000843",
    "___s": true
  },
  {
    "comment": "/**\n   * Close caller connection\n   * @param {String} [reason]\n   */",
    "meta": {
      "range": [
        2962,
        2989
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 114,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008742",
        "name": "close",
        "type": "FunctionExpression"
      }
    },
    "description": "Close caller connection",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "name": "reason"
      }
    ],
    "name": "close",
    "longname": "WebSocketConnection#close",
    "kind": "function",
    "memberof": "WebSocketConnection",
    "scope": "instance",
    "___id": "T000002R000846",
    "___s": true
  },
  {
    "comment": "/**\n   * Send message to caller\n   * @param {String|Object|ArrayBuffer} data\n   */",
    "meta": {
      "range": [
        2863,
        2887
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 109,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008738",
        "name": "send",
        "type": "FunctionExpression"
      }
    },
    "description": "Send message to caller",
    "params": [
      {
        "type": {
          "names": [
            "String",
            "Object",
            "ArrayBuffer"
          ]
        },
        "name": "data"
      }
    ],
    "name": "send",
    "longname": "WebSocketConnection#send",
    "kind": "function",
    "memberof": "WebSocketConnection",
    "scope": "instance",
    "___id": "T000002R000845",
    "___s": true
  },
  {
    "comment": "/**\n   * Current logged in user session\n   * @type {Session}\n   * @readonly\n   */",
    "meta": {
      "range": [
        2761,
        2774
      ],
      "filename": "_UBServerThreadGlobals-stub.js",
      "lineno": 104,
      "columnno": 2,
      "path": "/home/andrey/dev/ubjs/packages/stubs",
      "code": {
        "id": "astnode100008736",
        "name": "session",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Current logged in user session",
    "type": {
      "names": [
        "Session"
      ]
    },
    "readonly": true,
    "name": "session",
    "longname": "WebSocketConnection#session",
    "kind": "member",
    "memberof": "WebSocketConnection",
    "scope": "instance",
    "___id": "T000002R000844",
    "___s": true
  },
  {
    "comment": "/**\n       * Returns the IDs of all the sessions with established WebSocket connections\n       * @memberOf WebSocketTransport\n       * @param {Number} userID uba_user identifier\n       * @return {Array<Number>}\n       */",
    "meta": {
      "range": [
        2049,
        2169
      ],
      "filename": "web-sockets.js",
      "lineno": 55,
      "columnno": 6,
      "path": "/home/andrey/dev/ubjs/packages/ub/modules",
      "code": {
        "id": "astnode100066774",
        "name": "wsProtocol.getUserSessions",
        "type": "FunctionExpression",
        "funcscope": "module:@unitybase/ub.module:web-sockets~WebSocketTransport",
        "paramnames": [
          "userID"
        ]
      }
    },
    "description": "Returns the IDs of all the sessions with established WebSocket connections",
    "memberof": "WebSocketTransport",
    "params": [
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "description": "uba_user identifier",
        "name": "userID"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Number>"
          ]
        }
      }
    ],
    "name": "wsProtocol.getUserSessions",
    "longname": "WebSocketTransport.wsProtocol.getUserSessions",
    "kind": "function",
    "scope": "static",
    "___id": "T000002R006393",
    "___s": true
  }
]